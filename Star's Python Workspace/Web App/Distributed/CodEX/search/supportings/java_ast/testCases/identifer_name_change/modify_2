//modify 1d3782fcd0ab033cab83cf054d788a84
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.hadoop.conf;

import org.apache.hadoop.classification.InterfaceAudience;
import org.apache.hadoop.classification.InterfaceStability;
import org.apache.hadoop.conf.ReconfigurationUtil.PropertyChange;

import java.util.Map;
import java.util.Optional;

@InterfaceAudience.LimitedPrivate({"HDFS", "Management Tools"})
@InterfaceStability.Unstable
public class modify_class {
  long st;
  long ed;
  final Map<ReconfigurationUtil.PropertyChange, Optional<String>> status;

  public modify_class(long st, long ed,
      Map<ReconfigurationUtil.PropertyChange, Optional<String>> status) {
    this.st = st;
    this.ed = ed;
    this.status = status;
  }

  /**
   * Return true if
   *   - A reconfiguration task has finished or
   *   - an active reconfiguration task is running
   */
  public boolean modify_method1() {
    return st > 0;
  }

  /**
   * Return true if the latest reconfiguration task has finished and there is
   * no another active task running.
   */
  public boolean modify_method2() {
    return ed > 0;
  }

  public long modify_method3() {
    return st;
  }

  public long modify_method4() {
    return ed;
  }

  public final Map<PropertyChange, Optional<String>> modify_method5() {
    return status;
  }
}



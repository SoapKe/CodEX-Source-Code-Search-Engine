{"author": "tornadoweb", "code": "\n\n\n\nimport logging\n\ntry:\n    from urllib.parse import unquote\nexcept ImportError:\n    \n    from urllib import unquote\n\nimport tornado.ioloop\nimport tornado.web\nfrom tornado import options\n\n\nclass POSTHandler(tornado.web.RequestHandler):\n    def post(self):\n        for field_name, files in self.request.files.items():\n            for info in files:\n                filename, content_type = info['filename'], info['content_type']\n                body = info['body']\n                logging.info('POST \"%s\" \"%s\" %d bytes',\n                             filename, content_type, len(body))\n\n        self.write('OK')\n\n\n@tornado.web.stream_request_body\nclass PUTHandler(tornado.web.RequestHandler):\n    def initialize(self):\n        self.bytes_read = 0\n\n    def data_received(self, chunk):\n        self.bytes_read += len(chunk)\n\n    def put(self, filename):\n        filename = unquote(filename)\n        mtype = self.request.headers.get('Content-Type')\n        logging.info('PUT \"%s\" \"%s\" %d bytes', filename, mtype, self.bytes_read)\n        self.write('OK')\n\n\ndef make_app():\n    return tornado.web.Application([\n        (r\"/post\", POSTHandler),\n        (r\"/(.*)\", PUTHandler),\n    ])\n\n\nif __name__ == \"__main__\":\n    \n    options.parse_command_line()\n    app = make_app()\n    app.listen(8888)\n    tornado.ioloop.IOLoop.current().start()\n", "comments": "   usage  python file receiver py  demonstrates server receives multipart form encoded set files http post  streams raw data single file http put   see file uploader py directory code uploads files format          usr bin env python    python 2     tornado configures logging  ", "content": "#!/usr/bin/env python\n\n\"\"\"Usage: python file_receiver.py\n\nDemonstrates a server that receives a multipart-form-encoded set of files in an\nHTTP POST, or streams in the raw data of a single file in an HTTP PUT.\n\nSee file_uploader.py in this directory for code that uploads files in this format.\n\"\"\"\n\nimport logging\n\ntry:\n    from urllib.parse import unquote\nexcept ImportError:\n    # Python 2.\n    from urllib import unquote\n\nimport tornado.ioloop\nimport tornado.web\nfrom tornado import options\n\n\nclass POSTHandler(tornado.web.RequestHandler):\n    def post(self):\n        for field_name, files in self.request.files.items():\n            for info in files:\n                filename, content_type = info['filename'], info['content_type']\n                body = info['body']\n                logging.info('POST \"%s\" \"%s\" %d bytes',\n                             filename, content_type, len(body))\n\n        self.write('OK')\n\n\n@tornado.web.stream_request_body\nclass PUTHandler(tornado.web.RequestHandler):\n    def initialize(self):\n        self.bytes_read = 0\n\n    def data_received(self, chunk):\n        self.bytes_read += len(chunk)\n\n    def put(self, filename):\n        filename = unquote(filename)\n        mtype = self.request.headers.get('Content-Type')\n        logging.info('PUT \"%s\" \"%s\" %d bytes', filename, mtype, self.bytes_read)\n        self.write('OK')\n\n\ndef make_app():\n    return tornado.web.Application([\n        (r\"/post\", POSTHandler),\n        (r\"/(.*)\", PUTHandler),\n    ])\n\n\nif __name__ == \"__main__\":\n    # Tornado configures logging.\n    options.parse_command_line()\n    app = make_app()\n    app.listen(8888)\n    tornado.ioloop.IOLoop.current().start()\n", "description": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "file_name": "file_receiver.py", "id": "1b22616ee0e0cb5f6fef5c294cca3f69", "language": "Python", "project_name": "tornado", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tornadoweb-tornado/tornadoweb-tornado-9a97ffb/demos/file_upload/file_receiver.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:52:45Z", "url": "https://github.com/tornadoweb/tornado", "wiki": true}
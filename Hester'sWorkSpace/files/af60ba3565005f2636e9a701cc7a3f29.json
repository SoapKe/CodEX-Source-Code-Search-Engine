{"author": "keon", "code": "\"\"\"\nReverse a singly linked list.\n\"\"\"\n\n\n\n Iterative solution\n T(n)- O(n)\n\ndef reverse_list(head):\n    \"\"\"\n    :type head: ListNode\n    :rtype: ListNode\n    \"\"\"\n    if not head or not head.next:\n        return head\n    prev = None\n    while head:\n        current = head\n        head = head.next\n        current.next = prev\n        prev = current\n    return prev\n\n\n\n Recursive solution\n T(n)- O(n)\n\ndef reverse_list_recursive(head):\n    \"\"\"\n    :type head: ListNode\n    :rtype: ListNode\n    \"\"\"\n    if head is None or head.next is None:\n        return head\n    p = head.next\n    head.next = None\n    revrest = self.reverse(p)\n    p.next = head\n    return revrest\n", "comments": "    reverse singly linked list            iterative solution   t(n)  o(n)   def reverse list(head)               type head  listnode      rtype  listnode             head head next          return head     prev   none     head          current   head         head   head next         current next   prev         prev   current     return prev       recursive solution   t(n)  o(n)   def reverse list recursive(head)               type head  listnode      rtype  listnode               iterative solution    t(n)  o(n)          recursive solution    t(n)  o(n)    ", "content": "\"\"\"\nReverse a singly linked list.\n\"\"\"\n\n\n#\n# Iterative solution\n# T(n)- O(n)\n#\ndef reverse_list(head):\n    \"\"\"\n    :type head: ListNode\n    :rtype: ListNode\n    \"\"\"\n    if not head or not head.next:\n        return head\n    prev = None\n    while head:\n        current = head\n        head = head.next\n        current.next = prev\n        prev = current\n    return prev\n\n\n#\n# Recursive solution\n# T(n)- O(n)\n#\ndef reverse_list_recursive(head):\n    \"\"\"\n    :type head: ListNode\n    :rtype: ListNode\n    \"\"\"\n    if head is None or head.next is None:\n        return head\n    p = head.next\n    head.next = None\n    revrest = self.reverse(p)\n    p.next = head\n    return revrest\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "reverse.py", "id": "af60ba3565005f2636e9a701cc7a3f29", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/linkedlist/reverse.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
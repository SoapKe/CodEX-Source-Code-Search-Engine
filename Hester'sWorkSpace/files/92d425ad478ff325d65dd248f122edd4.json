{"author": "jakubroztocil", "code": "import pytest\n\nfrom httpie.compat import is_windows\nfrom httpie.output.streams import BINARY_SUPPRESSED_NOTICE\nfrom utils import http, MockEnvironment\nfrom fixtures import BIN_FILE_CONTENT, BIN_FILE_PATH\n\n\n\n\n\n@pytest.mark.skipif(is_windows,\n                    reason='Pretty redirect not supported under Windows')\ndef test_pretty_redirected_stream(httpbin):\n    \n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(stdout_isatty=False,\n                              stdin_isatty=False,\n                              stdin=f)\n        r = http('--pretty=none', '--stream', '--verbose', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BIN_FILE_CONTENT in r\n", "comments": "Test that --stream works with prettified redirected output.\"\"\"\n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(colors=256, stdin=f,\n                              stdin_isatty=False,\n                              stdout_isatty=False)\n        r = http('--verbose', '--pretty=all', '--stream', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BINARY_SUPPRESSED_NOTICE.decode() in r\n\n\ndef test_encoded_stream(httpbin):\n    \"\"\"Test that --stream works with non-prettified\n    redirected terminal output.\"\"\"\n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(stdin=f, stdin_isatty=False)\n        r = http('--pretty=none', '--stream', '--verbose', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BINARY_SUPPRESSED_NOTICE.decode() in r\n\n\ndef test_redirected_stream(httpbin):\n    \"\"\"Test that --stream works with non-prettified\n    redirected terminal output.\n.\n# GET because httpbin 500s with binary POST body.\n", "content": "import pytest\n\nfrom httpie.compat import is_windows\nfrom httpie.output.streams import BINARY_SUPPRESSED_NOTICE\nfrom utils import http, MockEnvironment\nfrom fixtures import BIN_FILE_CONTENT, BIN_FILE_PATH\n\n\n# GET because httpbin 500s with binary POST body.\n\n\n@pytest.mark.skipif(is_windows,\n                    reason='Pretty redirect not supported under Windows')\ndef test_pretty_redirected_stream(httpbin):\n    \"\"\"Test that --stream works with prettified redirected output.\"\"\"\n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(colors=256, stdin=f,\n                              stdin_isatty=False,\n                              stdout_isatty=False)\n        r = http('--verbose', '--pretty=all', '--stream', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BINARY_SUPPRESSED_NOTICE.decode() in r\n\n\ndef test_encoded_stream(httpbin):\n    \"\"\"Test that --stream works with non-prettified\n    redirected terminal output.\"\"\"\n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(stdin=f, stdin_isatty=False)\n        r = http('--pretty=none', '--stream', '--verbose', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BINARY_SUPPRESSED_NOTICE.decode() in r\n\n\ndef test_redirected_stream(httpbin):\n    \"\"\"Test that --stream works with non-prettified\n    redirected terminal output.\"\"\"\n    with open(BIN_FILE_PATH, 'rb') as f:\n        env = MockEnvironment(stdout_isatty=False,\n                              stdin_isatty=False,\n                              stdin=f)\n        r = http('--pretty=none', '--stream', '--verbose', 'GET',\n                 httpbin.url + '/get', env=env)\n    assert BIN_FILE_CONTENT in r\n", "description": "Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://httpie.org", "file_name": "test_stream.py", "language": "Python", "project_name": "httpie", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jakubroztocil_httpie/jakubroztocil-httpie-0f4dce9/tests/test_stream.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:20:06Z", "url": "https://github.com/jakubroztocil/httpie", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass EchoMskIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?echo\\.msk\\.ru/sounds/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.echo.msk.ru/sounds/1464134.html',\n        'md5': '2e44b3b78daff5b458e4dbc37f191f7c',\n        'info_dict': {\n            'id': '1464134',\n            'ext': 'mp3',\n            'title': '\u041e\u0441\u043e\u0431\u043e\u0435 \u043c\u043d\u0435\u043d\u0438\u0435 - 29 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 2014, 19:08',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        audio_url = self._search_regex(\n            r'<a rel=\"mp3\" href=\"([^\"]+)\">', webpage, 'audio URL')\n\n        title = self._html_search_regex(\n            r'<a href=\"/programs/[^\"]+\" target=\"_blank\">([^<]+)</a>',\n            webpage, 'title')\n\n        air_date = self._html_search_regex(\n            r'(?s)<div class=\"date\">(.+?)</div>',\n            webpage, 'date', fatal=False, default=None)\n\n        if air_date:\n            air_date = re.sub(r'(\\s)\\1+', r'\\1', air_date)\n            if air_date:\n                title = '%s - %s' % (title, air_date)\n\n        return {\n            'id': video_id,\n            'url': audio_url,\n            'title': title,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass EchoMskIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?echo\\.msk\\.ru/sounds/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.echo.msk.ru/sounds/1464134.html',\n        'md5': '2e44b3b78daff5b458e4dbc37f191f7c',\n        'info_dict': {\n            'id': '1464134',\n            'ext': 'mp3',\n            'title': '\u041e\u0441\u043e\u0431\u043e\u0435 \u043c\u043d\u0435\u043d\u0438\u0435 - 29 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 2014, 19:08',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        audio_url = self._search_regex(\n            r'<a rel=\"mp3\" href=\"([^\"]+)\">', webpage, 'audio URL')\n\n        title = self._html_search_regex(\n            r'<a href=\"/programs/[^\"]+\" target=\"_blank\">([^<]+)</a>',\n            webpage, 'title')\n\n        air_date = self._html_search_regex(\n            r'(?s)<div class=\"date\">(.+?)</div>',\n            webpage, 'date', fatal=False, default=None)\n\n        if air_date:\n            air_date = re.sub(r'(\\s)\\1+', r'\\1', air_date)\n            if air_date:\n                title = '%s - %s' % (title, air_date)\n\n        return {\n            'id': video_id,\n            'url': audio_url,\n            'title': title,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "echomsk.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/echomsk.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "donnemartin", "code": "import sys\n\n\nclass PriorityQueueNode(object):\n\n    def __init__(self, obj, key):\n        self.obj = obj\n        self.key = key\n\n    def __repr__(self):\n        return str(self.obj) + ': ' + str(self.key)\n\n\nclass PriorityQueue(object):\n\n    def __init__(self):\n        self.array = []\n\n    def __len__(self):\n        return len(self.array)\n\n    def insert(self, node):\n        self.array.append(node)\n        return self.array[-1]\n\n    def extract_min(self):\n        if not self.array:\n            return None\n        minimum = sys.maxsize\n        for index, node in enumerate(self.array):\n            if node.key < minimum:\n                minimum = node.key\n                minimum_index = index\n        return self.array.pop(minimum_index)\n\n    def decrease_key(self, obj, new_key):\n        for node in self.array:\n            if node.obj is obj:\n                node.key = new_key\n                return node\n        return None", "comments": "", "content": "import sys\n\n\nclass PriorityQueueNode(object):\n\n    def __init__(self, obj, key):\n        self.obj = obj\n        self.key = key\n\n    def __repr__(self):\n        return str(self.obj) + ': ' + str(self.key)\n\n\nclass PriorityQueue(object):\n\n    def __init__(self):\n        self.array = []\n\n    def __len__(self):\n        return len(self.array)\n\n    def insert(self, node):\n        self.array.append(node)\n        return self.array[-1]\n\n    def extract_min(self):\n        if not self.array:\n            return None\n        minimum = sys.maxsize\n        for index, node in enumerate(self.array):\n            if node.key < minimum:\n                minimum = node.key\n                minimum_index = index\n        return self.array.pop(minimum_index)\n\n    def decrease_key(self, obj, new_key):\n        for node in self.array:\n            if node.obj is obj:\n                node.key = new_key\n                return node\n        return None", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "priority_queue.py", "id": "76f5f8513530622acb9d5c8c35a14d11", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/arrays_strings/priority_queue/priority_queue.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
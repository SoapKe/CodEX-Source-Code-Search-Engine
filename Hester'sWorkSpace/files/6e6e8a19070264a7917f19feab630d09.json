{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\nr\"\"\"Code to extract a tensorflow checkpoint from a bundle file.\n\nTo run this code on your local machine:\n$ bazel run magenta/scripts:unpack_bundle -- \\\n--bundle_path 'path' --checkpoint_path 'path'\n\"\"\"\n\n internal imports\nimport tensorflow as tf\n\nfrom magenta.music import sequence_generator_bundle\n\nFLAGS = tf.app.flags.FLAGS\ntf.app.flags.DEFINE_string('bundle_path', '',\n                           'Path to .mag file containing the bundle')\ntf.app.flags.DEFINE_string('checkpoint_path', '/tmp/model.ckpt',\n                           'Path where the extracted checkpoint should'\n                           'be saved')\n\n\ndef main(_):\n  bundle_file = FLAGS.bundle_path\n  checkpoint_file = FLAGS.checkpoint_path\n  metagraph_filename = checkpoint_file + '.meta'\n\n  bundle = sequence_generator_bundle.read_bundle_file(bundle_file)\n\n  with tf.gfile.Open(checkpoint_file, 'wb') as f:\n    f.write(bundle.checkpoint_file[0])\n\n  with tf.gfile.Open(metagraph_filename, 'wb') as f:\n    f.write(bundle.metagraph_file)\n\nif __name__ == '__main__':\n  tf.app.run()\n", "comments": "   code extract tensorflow checkpoint bundle file   to run code local machine    bazel run magenta scripts unpack bundle        bundle path  path    checkpoint path  path         copyright 2016 google inc  all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license          http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license     internal imports ", "content": "# Copyright 2016 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nr\"\"\"Code to extract a tensorflow checkpoint from a bundle file.\n\nTo run this code on your local machine:\n$ bazel run magenta/scripts:unpack_bundle -- \\\n--bundle_path 'path' --checkpoint_path 'path'\n\"\"\"\n\n# internal imports\nimport tensorflow as tf\n\nfrom magenta.music import sequence_generator_bundle\n\nFLAGS = tf.app.flags.FLAGS\ntf.app.flags.DEFINE_string('bundle_path', '',\n                           'Path to .mag file containing the bundle')\ntf.app.flags.DEFINE_string('checkpoint_path', '/tmp/model.ckpt',\n                           'Path where the extracted checkpoint should'\n                           'be saved')\n\n\ndef main(_):\n  bundle_file = FLAGS.bundle_path\n  checkpoint_file = FLAGS.checkpoint_path\n  metagraph_filename = checkpoint_file + '.meta'\n\n  bundle = sequence_generator_bundle.read_bundle_file(bundle_file)\n\n  with tf.gfile.Open(checkpoint_file, 'wb') as f:\n    f.write(bundle.checkpoint_file[0])\n\n  with tf.gfile.Open(metagraph_filename, 'wb') as f:\n    f.write(bundle.metagraph_file)\n\nif __name__ == '__main__':\n  tf.app.run()\n", "description": "Magenta: Music and Art Generation with Machine Intelligence", "file_name": "unpack_bundle.py", "id": "6e6e8a19070264a7917f19feab630d09", "language": "Python", "project_name": "magenta", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tensorflow-magenta/tensorflow-magenta-ca73164/magenta/scripts/unpack_bundle.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:00:14Z", "url": "https://github.com/tensorflow/magenta", "wiki": false}
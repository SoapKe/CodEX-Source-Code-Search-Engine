{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\nfrom odoo.addons import decimal_precision as dp\n\n\nclass StockChangeStandardPrice(models.TransientModel):\n    _name = \"stock.change.standard.price\"\n    _description = \"Change Standard Price\"\n\n    new_price = fields.Float(\n        'Price', digits=dp.get_precision('Product Price'),  required=True,\n        help=\"If cost price is increased, stock variation account will be debited \"\n             \"and stock output account will be credited with the value = (difference of amount * quantity available).\\n\"\n             \"If cost price is decreased, stock variation account will be creadited and stock input account will be debited.\")\n    counterpart_account_id = fields.Many2one(\n        'account.account', string=\"Counter-Part Account\",\n        domain=[('deprecated', '=', False)])\n    counterpart_account_id_required = fields.Boolean(string=\"Counter-Part Account Required\")\n\n    @api.model\n    def default_get(self, fields):\n        res = super(StockChangeStandardPrice, self).default_get(fields)\n\n        product_or_template = self.env[self._context['active_model']].browse(self._context['active_id'])\n        if 'new_price' in fields and 'new_price' not in res:\n            res['new_price'] = product_or_template.standard_price\n        if 'counterpart_account_id' in fields and 'counterpart_account_id' not in res:\n            res['counterpart_account_id'] = product_or_template.property_account_expense_id.id or product_or_template.categ_id.property_account_expense_categ_id.id\n        res['counterpart_account_id_required'] = bool(product_or_template.valuation == 'real_time')\n        return res\n\n    @api.multi\n    def change_price(self):\n        \n        self.ensure_one()\n        if self._context['active_model'] == 'product.template':\n            products = self.env['product.template'].browse(self._context['active_id']).product_variant_ids\n        else:\n            products = self.env['product.product'].browse(self._context['active_id'])\n\n        products.do_change_standard_price(self.new_price, self.counterpart_account_id.id)\n        return {'type': 'ir.actions.act_window_close'}\n", "comments": "    changes standard price product creates account move accordingly             coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\nfrom odoo.addons import decimal_precision as dp\n\n\nclass StockChangeStandardPrice(models.TransientModel):\n    _name = \"stock.change.standard.price\"\n    _description = \"Change Standard Price\"\n\n    new_price = fields.Float(\n        'Price', digits=dp.get_precision('Product Price'),  required=True,\n        help=\"If cost price is increased, stock variation account will be debited \"\n             \"and stock output account will be credited with the value = (difference of amount * quantity available).\\n\"\n             \"If cost price is decreased, stock variation account will be creadited and stock input account will be debited.\")\n    counterpart_account_id = fields.Many2one(\n        'account.account', string=\"Counter-Part Account\",\n        domain=[('deprecated', '=', False)])\n    counterpart_account_id_required = fields.Boolean(string=\"Counter-Part Account Required\")\n\n    @api.model\n    def default_get(self, fields):\n        res = super(StockChangeStandardPrice, self).default_get(fields)\n\n        product_or_template = self.env[self._context['active_model']].browse(self._context['active_id'])\n        if 'new_price' in fields and 'new_price' not in res:\n            res['new_price'] = product_or_template.standard_price\n        if 'counterpart_account_id' in fields and 'counterpart_account_id' not in res:\n            res['counterpart_account_id'] = product_or_template.property_account_expense_id.id or product_or_template.categ_id.property_account_expense_categ_id.id\n        res['counterpart_account_id_required'] = bool(product_or_template.valuation == 'real_time')\n        return res\n\n    @api.multi\n    def change_price(self):\n        \"\"\" Changes the Standard Price of Product and creates an account move accordingly. \"\"\"\n        self.ensure_one()\n        if self._context['active_model'] == 'product.template':\n            products = self.env['product.template'].browse(self._context['active_id']).product_variant_ids\n        else:\n            products = self.env['product.product'].browse(self._context['active_id'])\n\n        products.do_change_standard_price(self.new_price, self.counterpart_account_id.id)\n        return {'type': 'ir.actions.act_window_close'}\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "stock_change_standard_price.py", "id": "97f6b9b83040468eebfdc6c94b82b386", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/stock_account/wizard/stock_change_standard_price.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
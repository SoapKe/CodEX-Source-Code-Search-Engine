{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    try_get,\n    unified_timestamp,\n)\n\n\nclass VootIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?voot\\.com/(?:[^/]+/)+(?P<id>\\d+)'\n    _GEO_COUNTRIES = ['IN']\n    _TESTS = [{\n        'url': 'https://www.voot.com/shows/ishq-ka-rang-safed/1/360558/is-this-the-end-of-kamini-/441353',\n        'info_dict': {\n            'id': '0_8ledb18o',\n            'ext': 'mp4',\n            'title': 'Ishq Ka Rang Safed - Season 01 - Episode 340',\n            'description': 'md5:06291fbbbc4dcbe21235c40c262507c1',\n            'timestamp': 1472162937,\n            'upload_date': '20160825',\n            'duration': 1146,\n            'series': 'Ishq Ka Rang Safed',\n            'season_number': 1,\n            'episode': 'Is this the end of Kamini?',\n            'episode_number': 340,\n            'view_count': int,\n            'like_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'expected_warnings': ['Failed to download m3u8 information'],\n    }, {\n        'url': 'https://www.voot.com/kids/characters/mighty-cat-masked-niyander-e-/400478/school-bag-disappears/440925',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.voot.com/movies/pandavas-5/424627',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        media_info = self._download_json(\n            'https://wapi.voot.com/ws/ott/getMediaInfo.json', video_id,\n            query={\n                'platform': 'Web',\n                'pId': 2,\n                'mediaId': video_id,\n            })\n\n        status_code = try_get(media_info, lambda x: x['status']['code'], int)\n        if status_code != 0:\n            raise ExtractorError(media_info['status']['message'], expected=True)\n\n        media = media_info['assets']\n\n        entry_id = media['EntryId']\n        title = media['MediaName']\n        formats = self._extract_m3u8_formats(\n            'https://cdnapisec.kaltura.com/p/1982551/playManifest/pt/https/f/applehttp/t/web/e/' + entry_id,\n            video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        description, series, season_number, episode, episode_number = [None] * 5\n\n        for meta in try_get(media, lambda x: x['Metas'], list) or []:\n            key, value = meta.get('Key'), meta.get('Value')\n            if not key or not value:\n                continue\n            if key == 'ContentSynopsis':\n                description = value\n            elif key == 'RefSeriesTitle':\n                series = value\n            elif key == 'RefSeriesSeason':\n                season_number = int_or_none(value)\n            elif key == 'EpisodeMainTitle':\n                episode = value\n            elif key == 'EpisodeNo':\n                episode_number = int_or_none(value)\n\n        return {\n            'extractor_key': 'Kaltura',\n            'id': entry_id,\n            'title': title,\n            'description': description,\n            'series': series,\n            'season_number': season_number,\n            'episode': episode,\n            'episode_number': episode_number,\n            'timestamp': unified_timestamp(media.get('CreationDate')),\n            'duration': int_or_none(media.get('Duration')),\n            'view_count': int_or_none(media.get('ViewCounter')),\n            'like_count': int_or_none(media.get('like_counter')),\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    try_get,\n    unified_timestamp,\n)\n\n\nclass VootIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?voot\\.com/(?:[^/]+/)+(?P<id>\\d+)'\n    _GEO_COUNTRIES = ['IN']\n    _TESTS = [{\n        'url': 'https://www.voot.com/shows/ishq-ka-rang-safed/1/360558/is-this-the-end-of-kamini-/441353',\n        'info_dict': {\n            'id': '0_8ledb18o',\n            'ext': 'mp4',\n            'title': 'Ishq Ka Rang Safed - Season 01 - Episode 340',\n            'description': 'md5:06291fbbbc4dcbe21235c40c262507c1',\n            'timestamp': 1472162937,\n            'upload_date': '20160825',\n            'duration': 1146,\n            'series': 'Ishq Ka Rang Safed',\n            'season_number': 1,\n            'episode': 'Is this the end of Kamini?',\n            'episode_number': 340,\n            'view_count': int,\n            'like_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'expected_warnings': ['Failed to download m3u8 information'],\n    }, {\n        'url': 'https://www.voot.com/kids/characters/mighty-cat-masked-niyander-e-/400478/school-bag-disappears/440925',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.voot.com/movies/pandavas-5/424627',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        media_info = self._download_json(\n            'https://wapi.voot.com/ws/ott/getMediaInfo.json', video_id,\n            query={\n                'platform': 'Web',\n                'pId': 2,\n                'mediaId': video_id,\n            })\n\n        status_code = try_get(media_info, lambda x: x['status']['code'], int)\n        if status_code != 0:\n            raise ExtractorError(media_info['status']['message'], expected=True)\n\n        media = media_info['assets']\n\n        entry_id = media['EntryId']\n        title = media['MediaName']\n        formats = self._extract_m3u8_formats(\n            'https://cdnapisec.kaltura.com/p/1982551/playManifest/pt/https/f/applehttp/t/web/e/' + entry_id,\n            video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        description, series, season_number, episode, episode_number = [None] * 5\n\n        for meta in try_get(media, lambda x: x['Metas'], list) or []:\n            key, value = meta.get('Key'), meta.get('Value')\n            if not key or not value:\n                continue\n            if key == 'ContentSynopsis':\n                description = value\n            elif key == 'RefSeriesTitle':\n                series = value\n            elif key == 'RefSeriesSeason':\n                season_number = int_or_none(value)\n            elif key == 'EpisodeMainTitle':\n                episode = value\n            elif key == 'EpisodeNo':\n                episode_number = int_or_none(value)\n\n        return {\n            'extractor_key': 'Kaltura',\n            'id': entry_id,\n            'title': title,\n            'description': description,\n            'series': series,\n            'season_number': season_number,\n            'episode': episode,\n            'episode_number': episode_number,\n            'timestamp': unified_timestamp(media.get('CreationDate')),\n            'duration': int_or_none(media.get('Duration')),\n            'view_count': int_or_none(media.get('ViewCounter')),\n            'like_count': int_or_none(media.get('like_counter')),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "voot.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/voot.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
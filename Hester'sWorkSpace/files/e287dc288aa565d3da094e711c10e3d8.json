{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    xpath_element,\n    xpath_text,\n)\n\n\nclass VideomoreIE(InfoExtractor):\n    IE_NAME = 'videomore'\n    _VALID_URL = r'videomore:(?P<sid>\\d+)$|https?://videomore\\.ru/(?:(?:embed|[^/]+/[^/]+)/|[^/]+\\?.*\\btrack_id=)(?P<id>\\d+)(?:[/?\n    _TESTS = [{\n        'url': 'http://videomore.ru/kino_v_detalayah/5_sezon/367617',\n        'md5': '44455a346edc0d509ac5b5a5b531dc35',\n        'info_dict': {\n            'id': '367617',\n            'ext': 'flv',\n            'title': '\u041a\u0438\u043d\u043e \u0432 \u0434\u0435\u0442\u0430\u043b\u044f\u0445 5 \u0441\u0435\u0437\u043e\u043d \u0412 \u0433\u043e\u0441\u0442\u044f\u0445 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0427\u0443\u043c\u0430\u043a\u043e\u0432 \u0438 \u042e\u043b\u0438\u044f \u041a\u043e\u0432\u0430\u043b\u044c\u0447\u0443\u043a',\n            'series': '\u041a\u0438\u043d\u043e \u0432 \u0434\u0435\u0442\u0430\u043b\u044f\u0445',\n            'episode': '\u0412 \u0433\u043e\u0441\u0442\u044f\u0445 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0427\u0443\u043c\u0430\u043a\u043e\u0432 \u0438 \u042e\u043b\u0438\u044f \u041a\u043e\u0432\u0430\u043b\u044c\u0447\u0443\u043a',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 2910,\n            'view_count': int,\n            'comment_count': int,\n            'age_limit': 16,\n        },\n    }, {\n        'url': 'http://videomore.ru/embed/259974',\n        'info_dict': {\n            'id': '259974',\n            'ext': 'flv',\n            'title': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430 2 \u0441\u0435\u0437\u043e\u043d 40 \u0441\u0435\u0440\u0438\u044f',\n            'series': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430',\n            'episode': '40 \u0441\u0435\u0440\u0438\u044f',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 2809,\n            'view_count': int,\n            'comment_count': int,\n            'age_limit': 16,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://videomore.ru/molodezhka/sezon_promo/341073',\n        'info_dict': {\n            'id': '341073',\n            'ext': 'flv',\n            'title': '\u041f\u0440\u043e\u043c\u043e \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0430 \u0438\u0437-\u0437\u0430 \u0411\u0430\u043a\u0438\u043d\u0430?',\n            'episode': '\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0430 \u0438\u0437-\u0437\u0430 \u0411\u0430\u043a\u0438\u043d\u0430?',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 29,\n            'age_limit': 16,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://videomore.ru/elki_3?track_id=364623',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/embed/364623',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/364623.xml',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/364623.json',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/158031/quotes/33248',\n        'only_matching': True,\n    }, {\n        'url': 'videomore:367617',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<object[^>]+data=([\"\\'])https?://videomore\\.ru/player\\.swf\\?.*config=(?P<url>https?://videomore\\.ru/(?:[^/]+/)+\\d+\\.xml).*\\1',\n            webpage)\n        if not mobj:\n            mobj = re.search(\n                r'<iframe[^>]+src=([\\'\"])(?P<url>https?://videomore\\.ru/embed/\\d+)',\n                webpage)\n\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('sid') or mobj.group('id')\n\n        video = self._download_xml(\n            'http://videomore.ru/video/tracks/%s.xml' % video_id,\n            video_id, 'Downloading video XML')\n\n        item = xpath_element(video, './/playlist/item', fatal=True)\n\n        title = xpath_text(\n            item, ('./title', './episode_name'), 'title', fatal=True)\n\n        video_url = xpath_text(item, './video_url', 'video url', fatal=True)\n        formats = self._extract_f4m_formats(video_url, video_id, f4m_id='hds')\n        self._sort_formats(formats)\n\n        thumbnail = xpath_text(item, './thumbnail_url')\n        duration = int_or_none(xpath_text(item, './duration'))\n        view_count = int_or_none(xpath_text(item, './views'))\n        comment_count = int_or_none(xpath_text(item, './count_comments'))\n        age_limit = int_or_none(xpath_text(item, './min_age'))\n\n        series = xpath_text(item, './project_name')\n        episode = xpath_text(item, './episode_name')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'series': series,\n            'episode': episode,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n\n\nclass VideomoreVideoIE(InfoExtractor):\n    IE_NAME = 'videomore:video'\n    _VALID_URL = r'https?://videomore\\.ru/(?:(?:[^/]+/){2})?(?P<id>[^/?\n    _TESTS = [{\n        \n        'url': 'http://videomore.ru/elki_3',\n        'info_dict': {\n            'id': '364623',\n            'ext': 'flv',\n            'title': '\u0401\u043b\u043a\u0438 3',\n            'description': '',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 5579,\n            'age_limit': 6,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://videomore.ru/poslednii_ment/1_sezon/14_seriya',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/sejchas_v_seti/serii_221-240/226_vypusk',\n        'only_matching': True,\n    }, {\n        \n        'url': 'http://videomore.ru/marin_i_ego_druzya',\n        'info_dict': {\n            'id': '359073',\n            'ext': 'flv',\n            'title': '1 \u0441\u0435\u0440\u0438\u044f. \u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439, \u0410\u043a\u0432\u0430\u0432\u0438\u043b\u043b\u044c!',\n            'description': 'md5:c6003179538b5d353e7bcd5b1372b2d7',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 754,\n            'age_limit': 6,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return False if VideomoreIE.suitable(url) else super(VideomoreVideoIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        video_url = self._og_search_property(\n            'video:iframe', webpage, 'video url', default=None)\n\n        if not video_url:\n            video_id = self._search_regex(\n                (r'config\\s*:\\s*[\"\\']https?://videomore\\.ru/video/tracks/(\\d+)\\.xml',\n                 r'track-id=[\"\\'](\\d+)',\n                 r'xcnt_product_id\\s*=\\s*(\\d+)'), webpage, 'video id')\n            video_url = 'videomore:%s' % video_id\n\n        return self.url_result(video_url, VideomoreIE.ie_key())\n\n\nclass VideomoreSeasonIE(InfoExtractor):\n    IE_NAME = 'videomore:season'\n    _VALID_URL = r'https?://videomore\\.ru/(?!embed)(?P<id>[^/]+/[^/?\n    _TESTS = [{\n        'url': 'http://videomore.ru/molodezhka/sezon_promo',\n        'info_dict': {\n            'id': 'molodezhka/sezon_promo',\n            'title': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430 \u041f\u0440\u043e\u043c\u043e',\n        },\n        'playlist_mincount': 12,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = self._og_search_title(webpage)\n\n        entries = [\n            self.url_result(item) for item in re.findall(\n                r'<a[^>]+href=\"((?:https?:)?//videomore\\.ru/%s/[^/]+)\"[^>]+class=\"widget-item-desc\"'\n                % display_id, webpage)]\n\n        return self.playlist_result(entries, display_id, title)\n", "comments": "# coding: utf-8\n#&]|\\.(?:xml|json)|$)'\n#&]+)[/?#&]*$'\n# single video with og:video:iframe\n# season single series with og:video:iframe\n# single video without og:video:iframe\n#&]+)[/?#&]*$'\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    xpath_element,\n    xpath_text,\n)\n\n\nclass VideomoreIE(InfoExtractor):\n    IE_NAME = 'videomore'\n    _VALID_URL = r'videomore:(?P<sid>\\d+)$|https?://videomore\\.ru/(?:(?:embed|[^/]+/[^/]+)/|[^/]+\\?.*\\btrack_id=)(?P<id>\\d+)(?:[/?#&]|\\.(?:xml|json)|$)'\n    _TESTS = [{\n        'url': 'http://videomore.ru/kino_v_detalayah/5_sezon/367617',\n        'md5': '44455a346edc0d509ac5b5a5b531dc35',\n        'info_dict': {\n            'id': '367617',\n            'ext': 'flv',\n            'title': '\u041a\u0438\u043d\u043e \u0432 \u0434\u0435\u0442\u0430\u043b\u044f\u0445 5 \u0441\u0435\u0437\u043e\u043d \u0412 \u0433\u043e\u0441\u0442\u044f\u0445 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0427\u0443\u043c\u0430\u043a\u043e\u0432 \u0438 \u042e\u043b\u0438\u044f \u041a\u043e\u0432\u0430\u043b\u044c\u0447\u0443\u043a',\n            'series': '\u041a\u0438\u043d\u043e \u0432 \u0434\u0435\u0442\u0430\u043b\u044f\u0445',\n            'episode': '\u0412 \u0433\u043e\u0441\u0442\u044f\u0445 \u0410\u043b\u0435\u043a\u0441\u0435\u0439 \u0427\u0443\u043c\u0430\u043a\u043e\u0432 \u0438 \u042e\u043b\u0438\u044f \u041a\u043e\u0432\u0430\u043b\u044c\u0447\u0443\u043a',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 2910,\n            'view_count': int,\n            'comment_count': int,\n            'age_limit': 16,\n        },\n    }, {\n        'url': 'http://videomore.ru/embed/259974',\n        'info_dict': {\n            'id': '259974',\n            'ext': 'flv',\n            'title': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430 2 \u0441\u0435\u0437\u043e\u043d 40 \u0441\u0435\u0440\u0438\u044f',\n            'series': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430',\n            'episode': '40 \u0441\u0435\u0440\u0438\u044f',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 2809,\n            'view_count': int,\n            'comment_count': int,\n            'age_limit': 16,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://videomore.ru/molodezhka/sezon_promo/341073',\n        'info_dict': {\n            'id': '341073',\n            'ext': 'flv',\n            'title': '\u041f\u0440\u043e\u043c\u043e \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0430 \u0438\u0437-\u0437\u0430 \u0411\u0430\u043a\u0438\u043d\u0430?',\n            'episode': '\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0430 \u0438\u0437-\u0437\u0430 \u0411\u0430\u043a\u0438\u043d\u0430?',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 29,\n            'age_limit': 16,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://videomore.ru/elki_3?track_id=364623',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/embed/364623',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/364623.xml',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/364623.json',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/video/tracks/158031/quotes/33248',\n        'only_matching': True,\n    }, {\n        'url': 'videomore:367617',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<object[^>]+data=([\"\\'])https?://videomore\\.ru/player\\.swf\\?.*config=(?P<url>https?://videomore\\.ru/(?:[^/]+/)+\\d+\\.xml).*\\1',\n            webpage)\n        if not mobj:\n            mobj = re.search(\n                r'<iframe[^>]+src=([\\'\"])(?P<url>https?://videomore\\.ru/embed/\\d+)',\n                webpage)\n\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('sid') or mobj.group('id')\n\n        video = self._download_xml(\n            'http://videomore.ru/video/tracks/%s.xml' % video_id,\n            video_id, 'Downloading video XML')\n\n        item = xpath_element(video, './/playlist/item', fatal=True)\n\n        title = xpath_text(\n            item, ('./title', './episode_name'), 'title', fatal=True)\n\n        video_url = xpath_text(item, './video_url', 'video url', fatal=True)\n        formats = self._extract_f4m_formats(video_url, video_id, f4m_id='hds')\n        self._sort_formats(formats)\n\n        thumbnail = xpath_text(item, './thumbnail_url')\n        duration = int_or_none(xpath_text(item, './duration'))\n        view_count = int_or_none(xpath_text(item, './views'))\n        comment_count = int_or_none(xpath_text(item, './count_comments'))\n        age_limit = int_or_none(xpath_text(item, './min_age'))\n\n        series = xpath_text(item, './project_name')\n        episode = xpath_text(item, './episode_name')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'series': series,\n            'episode': episode,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n\n\nclass VideomoreVideoIE(InfoExtractor):\n    IE_NAME = 'videomore:video'\n    _VALID_URL = r'https?://videomore\\.ru/(?:(?:[^/]+/){2})?(?P<id>[^/?#&]+)[/?#&]*$'\n    _TESTS = [{\n        # single video with og:video:iframe\n        'url': 'http://videomore.ru/elki_3',\n        'info_dict': {\n            'id': '364623',\n            'ext': 'flv',\n            'title': '\u0401\u043b\u043a\u0438 3',\n            'description': '',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 5579,\n            'age_limit': 6,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # season single series with og:video:iframe\n        'url': 'http://videomore.ru/poslednii_ment/1_sezon/14_seriya',\n        'only_matching': True,\n    }, {\n        'url': 'http://videomore.ru/sejchas_v_seti/serii_221-240/226_vypusk',\n        'only_matching': True,\n    }, {\n        # single video without og:video:iframe\n        'url': 'http://videomore.ru/marin_i_ego_druzya',\n        'info_dict': {\n            'id': '359073',\n            'ext': 'flv',\n            'title': '1 \u0441\u0435\u0440\u0438\u044f. \u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439, \u0410\u043a\u0432\u0430\u0432\u0438\u043b\u043b\u044c!',\n            'description': 'md5:c6003179538b5d353e7bcd5b1372b2d7',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 754,\n            'age_limit': 6,\n            'view_count': int,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return False if VideomoreIE.suitable(url) else super(VideomoreVideoIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        video_url = self._og_search_property(\n            'video:iframe', webpage, 'video url', default=None)\n\n        if not video_url:\n            video_id = self._search_regex(\n                (r'config\\s*:\\s*[\"\\']https?://videomore\\.ru/video/tracks/(\\d+)\\.xml',\n                 r'track-id=[\"\\'](\\d+)',\n                 r'xcnt_product_id\\s*=\\s*(\\d+)'), webpage, 'video id')\n            video_url = 'videomore:%s' % video_id\n\n        return self.url_result(video_url, VideomoreIE.ie_key())\n\n\nclass VideomoreSeasonIE(InfoExtractor):\n    IE_NAME = 'videomore:season'\n    _VALID_URL = r'https?://videomore\\.ru/(?!embed)(?P<id>[^/]+/[^/?#&]+)[/?#&]*$'\n    _TESTS = [{\n        'url': 'http://videomore.ru/molodezhka/sezon_promo',\n        'info_dict': {\n            'id': 'molodezhka/sezon_promo',\n            'title': '\u041c\u043e\u043b\u043e\u0434\u0435\u0436\u043a\u0430 \u041f\u0440\u043e\u043c\u043e',\n        },\n        'playlist_mincount': 12,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = self._og_search_title(webpage)\n\n        entries = [\n            self.url_result(item) for item in re.findall(\n                r'<a[^>]+href=\"((?:https?:)?//videomore\\.ru/%s/[^/]+)\"[^>]+class=\"widget-item-desc\"'\n                % display_id, webpage)]\n\n        return self.playlist_result(entries, display_id, title)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "videomore.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/videomore.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
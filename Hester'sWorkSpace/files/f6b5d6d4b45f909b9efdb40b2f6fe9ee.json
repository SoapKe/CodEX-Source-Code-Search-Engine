{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n ==============================================================================\n\nfrom datetime import datetime\nimport json\nimport logging\nimport os\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n\ndef prepare_dirs_and_logger(config):\n  formatter = logging.Formatter('%(asctime)s:%(levelname)s::%(message)s')\n  logger = logging.getLogger('tensorflow')\n\n  for hdlr in logger.handlers:\n    logger.removeHandler(hdlr)\n\n  handler = logging.StreamHandler()\n  handler.setFormatter(formatter)\n\n  logger.addHandler(handler)\n  logger.setLevel(tf.logging.INFO)\n\n  config.log_dir = os.path.join(config.exp_dir, config.log_dir,\n                                config.train_tag)\n  config.model_dir = os.path.join(config.exp_dir, config.model_dir,\n                                  config.train_tag)\n  config.output_dir = os.path.join(config.exp_dir, config.output_dir,\n                                   config.train_tag)\n\n  for path in [\n    config.log_dir, config.model_dir, config.output_dir\n  ]:\n    if not os.path.exists(path):\n      os.makedirs(path)\n\n  config.data_files = {\n    'train': os.path.join(config.data_dir, config.train_data_file),\n    'dev': os.path.join(config.data_dir, config.dev_data_file),\n    'test': os.path.join(config.data_dir, config.test_data_file)\n  }\n\n  return config\n\n\ndef get_time():\n  return datetime.now().strftime('%Y-%m-%d_%H-%M-%S')\n\n\ndef show_all_variables():\n  model_vars = tf.trainable_variables()\n  slim.model_analyzer.analyze_vars(model_vars, print_info=True)\n\n\ndef save_config(config):\n  param_path = os.path.join(config.model_dir, 'params.json')\n\n  tf.logging.info('log dir: %s' % config.log_dir)\n  tf.logging.info('model dir: %s' % config.model_dir)\n  tf.logging.info('param path: %s' % param_path)\n  tf.logging.info('output dir: %s' % config.output_dir)\n\n  with open(param_path, 'w') as f:\n    f.write(json.dumps(config.__dict__, indent=4, sort_keys=True))\n", "comments": "  copyright 2017 the tensorflow authors all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license           http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license                                                                                    ", "content": "# Copyright 2017 The TensorFlow Authors All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\nfrom datetime import datetime\nimport json\nimport logging\nimport os\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n\ndef prepare_dirs_and_logger(config):\n  formatter = logging.Formatter('%(asctime)s:%(levelname)s::%(message)s')\n  logger = logging.getLogger('tensorflow')\n\n  for hdlr in logger.handlers:\n    logger.removeHandler(hdlr)\n\n  handler = logging.StreamHandler()\n  handler.setFormatter(formatter)\n\n  logger.addHandler(handler)\n  logger.setLevel(tf.logging.INFO)\n\n  config.log_dir = os.path.join(config.exp_dir, config.log_dir,\n                                config.train_tag)\n  config.model_dir = os.path.join(config.exp_dir, config.model_dir,\n                                  config.train_tag)\n  config.output_dir = os.path.join(config.exp_dir, config.output_dir,\n                                   config.train_tag)\n\n  for path in [\n    config.log_dir, config.model_dir, config.output_dir\n  ]:\n    if not os.path.exists(path):\n      os.makedirs(path)\n\n  config.data_files = {\n    'train': os.path.join(config.data_dir, config.train_data_file),\n    'dev': os.path.join(config.data_dir, config.dev_data_file),\n    'test': os.path.join(config.data_dir, config.test_data_file)\n  }\n\n  return config\n\n\ndef get_time():\n  return datetime.now().strftime('%Y-%m-%d_%H-%M-%S')\n\n\ndef show_all_variables():\n  model_vars = tf.trainable_variables()\n  slim.model_analyzer.analyze_vars(model_vars, print_info=True)\n\n\ndef save_config(config):\n  param_path = os.path.join(config.model_dir, 'params.json')\n\n  tf.logging.info('log dir: %s' % config.log_dir)\n  tf.logging.info('model dir: %s' % config.model_dir)\n  tf.logging.info('param path: %s' % param_path)\n  tf.logging.info('output dir: %s' % config.output_dir)\n\n  with open(param_path, 'w') as f:\n    f.write(json.dumps(config.__dict__, indent=4, sort_keys=True))\n", "description": "Models and examples built with TensorFlow", "file_name": "misc.py", "id": "f6b5d6d4b45f909b9efdb40b2f6fe9ee", "language": "Python", "project_name": "models", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/tensorflow-models/tensorflow-models-086d914/research/qa_kg/util/misc.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:59:19Z", "url": "https://github.com/tensorflow/models", "wiki": true}
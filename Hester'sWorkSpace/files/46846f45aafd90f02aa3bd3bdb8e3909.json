{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestRemoveDupes(object):\n\n    def test_remove_dupes(self, linked_list):\n        print('Test: Empty list')\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [])\n\n        print('Test: One element list')\n        linked_list.insert_to_front(2)\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [2])\n\n        print('Test: General case, duplicates')\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(3)\n        linked_list.insert_to_front(2)\n        linked_list.insert_to_front(3)\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(1)\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [1, 3, 2])\n\n        print('Test: General case, no duplicates')\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [1, 3, 2])\n\n        print('Success: test_remove_dupes\\n')\n\n\ndef main():\n    test = TestRemoveDupes()\n    linked_list = MyLinkedList(None)\n    test.test_remove_dupes(linked_list)\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestRemoveDupes(object):\n\n    def test_remove_dupes(self, linked_list):\n        print('Test: Empty list')\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [])\n\n        print('Test: One element list')\n        linked_list.insert_to_front(2)\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [2])\n\n        print('Test: General case, duplicates')\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(3)\n        linked_list.insert_to_front(2)\n        linked_list.insert_to_front(3)\n        linked_list.insert_to_front(1)\n        linked_list.insert_to_front(1)\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [1, 3, 2])\n\n        print('Test: General case, no duplicates')\n        linked_list.remove_dupes()\n        assert_equal(linked_list.get_all_data(), [1, 3, 2])\n\n        print('Success: test_remove_dupes\\n')\n\n\ndef main():\n    test = TestRemoveDupes()\n    linked_list = MyLinkedList(None)\n    test.test_remove_dupes(linked_list)\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_remove_duplicates.py", "id": "46846f45aafd90f02aa3bd3bdb8e3909", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/linked_lists/remove_duplicates/test_remove_duplicates.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
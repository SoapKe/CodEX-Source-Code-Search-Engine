{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    extract_attributes,\n)\n\n\nclass BostonGlobeIE(InfoExtractor):\n    _VALID_URL = r'(?i)https?://(?:www\\.)?bostonglobe\\.com/.*/(?P<id>[^/]+)/\\w+(?:\\.html)?'\n    _TESTS = [\n        {\n            'url': 'http://www.bostonglobe.com/metro/2017/02/11/tree-finally-succumbs-disease-leaving-hole-neighborhood/h1b4lviqzMTIn9sVy8F3gP/story.html',\n            'md5': '0a62181079c85c2d2b618c9a738aedaf',\n            'info_dict': {\n                'title': 'A tree finally succumbs to disease, leaving a hole in a neighborhood',\n                'id': '5320421710001',\n                'ext': 'mp4',\n                'description': 'It arrived as a sapling when the Back Bay was in its infancy, a spindly American elm tamped down into a square of dirt cut into the brick sidewalk of 1880s Marlborough Street, no higher than the first bay window of the new brownstone behind it.',\n                'timestamp': 1486877593,\n                'upload_date': '20170212',\n                'uploader_id': '245991542',\n            },\n        },\n        {\n            \n            'url': 'https://www.bostonglobe.com/lifestyle/names/2017/02/17/does-ben-affleck-play-matt-damon-favorite-version-batman/ruqkc9VxKBYmh5txn1XhSI/story.html',\n            'md5': '582b40327089d5c0c949b3c54b13c24b',\n            'info_dict': {\n                'title': \"Who Is Matt Damon's Favorite Batman?\",\n                'id': 'ZW1QCnlA6Qc',\n                'ext': 'mp4',\n                'upload_date': '20170217',\n                'description': 'md5:3b3dccb9375867e0b4d527ed87d307cb',\n                'uploader': 'The Late Late Show with James Corden',\n                'uploader_id': 'TheLateLateShow',\n            },\n            'expected_warnings': ['404'],\n        },\n    ]\n\n    def _real_extract(self, url):\n        page_id = self._match_id(url)\n        webpage = self._download_webpage(url, page_id)\n\n        page_title = self._og_search_title(webpage, default=None)\n\n        \n        entries = []\n        for video in re.findall(r'(?i)(<video[^>]+>)', webpage):\n            attrs = extract_attributes(video)\n\n            video_id = attrs.get('data-brightcove-video-id')\n            account_id = attrs.get('data-account')\n            player_id = attrs.get('data-player')\n            embed = attrs.get('data-embed')\n\n            if video_id and account_id and player_id and embed:\n                entries.append(\n                    'http://players.brightcove.net/%s/%s_%s/index.html?videoId=%s'\n                    % (account_id, player_id, embed, video_id))\n\n        if len(entries) == 0:\n            return self.url_result(url, 'Generic')\n        elif len(entries) == 1:\n            return self.url_result(entries[0], 'BrightcoveNew')\n        else:\n            return self.playlist_from_matches(entries, page_id, page_title, ie='BrightcoveNew')\n", "comments": "# coding: utf-8\n# Embedded youtube video; we hand it off to the Generic extractor.\n# <video data-brightcove-video-id=\"5320421710001\" data-account=\"245991542\" data-player=\"SJWAiyYWg\" data-embed=\"default\" class=\"video-js\" controls itemscope itemtype=\"http://schema.org/VideoObject\">\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    extract_attributes,\n)\n\n\nclass BostonGlobeIE(InfoExtractor):\n    _VALID_URL = r'(?i)https?://(?:www\\.)?bostonglobe\\.com/.*/(?P<id>[^/]+)/\\w+(?:\\.html)?'\n    _TESTS = [\n        {\n            'url': 'http://www.bostonglobe.com/metro/2017/02/11/tree-finally-succumbs-disease-leaving-hole-neighborhood/h1b4lviqzMTIn9sVy8F3gP/story.html',\n            'md5': '0a62181079c85c2d2b618c9a738aedaf',\n            'info_dict': {\n                'title': 'A tree finally succumbs to disease, leaving a hole in a neighborhood',\n                'id': '5320421710001',\n                'ext': 'mp4',\n                'description': 'It arrived as a sapling when the Back Bay was in its infancy, a spindly American elm tamped down into a square of dirt cut into the brick sidewalk of 1880s Marlborough Street, no higher than the first bay window of the new brownstone behind it.',\n                'timestamp': 1486877593,\n                'upload_date': '20170212',\n                'uploader_id': '245991542',\n            },\n        },\n        {\n            # Embedded youtube video; we hand it off to the Generic extractor.\n            'url': 'https://www.bostonglobe.com/lifestyle/names/2017/02/17/does-ben-affleck-play-matt-damon-favorite-version-batman/ruqkc9VxKBYmh5txn1XhSI/story.html',\n            'md5': '582b40327089d5c0c949b3c54b13c24b',\n            'info_dict': {\n                'title': \"Who Is Matt Damon's Favorite Batman?\",\n                'id': 'ZW1QCnlA6Qc',\n                'ext': 'mp4',\n                'upload_date': '20170217',\n                'description': 'md5:3b3dccb9375867e0b4d527ed87d307cb',\n                'uploader': 'The Late Late Show with James Corden',\n                'uploader_id': 'TheLateLateShow',\n            },\n            'expected_warnings': ['404'],\n        },\n    ]\n\n    def _real_extract(self, url):\n        page_id = self._match_id(url)\n        webpage = self._download_webpage(url, page_id)\n\n        page_title = self._og_search_title(webpage, default=None)\n\n        # <video data-brightcove-video-id=\"5320421710001\" data-account=\"245991542\" data-player=\"SJWAiyYWg\" data-embed=\"default\" class=\"video-js\" controls itemscope itemtype=\"http://schema.org/VideoObject\">\n        entries = []\n        for video in re.findall(r'(?i)(<video[^>]+>)', webpage):\n            attrs = extract_attributes(video)\n\n            video_id = attrs.get('data-brightcove-video-id')\n            account_id = attrs.get('data-account')\n            player_id = attrs.get('data-player')\n            embed = attrs.get('data-embed')\n\n            if video_id and account_id and player_id and embed:\n                entries.append(\n                    'http://players.brightcove.net/%s/%s_%s/index.html?videoId=%s'\n                    % (account_id, player_id, embed, video_id))\n\n        if len(entries) == 0:\n            return self.url_result(url, 'Generic')\n        elif len(entries) == 1:\n            return self.url_result(entries[0], 'BrightcoveNew')\n        else:\n            return self.playlist_from_matches(entries, page_id, page_title, ie='BrightcoveNew')\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "bostonglobe.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/bostonglobe.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
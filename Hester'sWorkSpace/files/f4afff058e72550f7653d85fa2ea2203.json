{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.addons.project.tests.test_access_rights import TestPortalProjectBase\nfrom odoo.exceptions import AccessError\nfrom odoo.tools import mute_logger\n\n\nclass TestPortalProject(TestPortalProjectBase):\n    @mute_logger('odoo.addons.base.ir.ir_model')\n    def test_portal_project_access_rights(self):\n        pigs = self.project_pigs\n        pigs.write({'privacy_visibility': 'portal'})\n\n        # Do: Alfred reads project -> ok (employee ok public)\n        pigs.sudo(self.user_projectuser).read(['user_id'])\n        \n        tasks = self.env['project.task'].sudo(self.user_projectuser).search([('project_id', '=', pigs.id)])\n        self.assertEqual(tasks, self.task_1 | self.task_2 | self.task_3 | self.task_4 | self.task_5 | self.task_6,\n                         'access rights: project user should see all tasks of a portal project')\n\n        \n        self.assertRaises(AccessError, pigs.sudo(self.user_noone).read, ['user_id'])\n        \n        self.assertRaises(AccessError, self.env['project.task'].sudo(self.user_noone).search, [('project_id', '=', pigs.id)])\n\n        \n        pigs.sudo(self.user_projectmanager).message_subscribe_users(user_ids=[self.user_portal.id])\n        self.task_1.sudo(self.user_projectuser).message_subscribe_users(user_ids=[self.user_portal.id])\n        self.task_3.sudo(self.user_projectuser).message_subscribe_users(user_ids=[self.user_portal.id])\n        # Do: Chell reads project -> ok (portal ok public)\n        pigs.sudo(self.user_portal).read(['user_id'])\n        # Do: Donovan reads project -> ko (public ko portal)\n        self.assertRaises(AccessError, pigs.sudo(self.user_public).read, ['user_id'])\n        \n        self.assertRaises(AccessError, self.env['project.task'].sudo(self.user_public).search, [])\n         cleaning\n        self.task_1.sudo(self.user_projectuser).message_unsubscribe_users(user_ids=[self.user_portal.id])\n        self.task_3.sudo(self.user_projectuser).message_unsubscribe_users(user_ids=[self.user_portal.id])\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     do  alfred reads project    ok (employee ok public)    test  project tasks visible    do  bert reads project    crash  group    test  project task searchable    data  task follower    do  chell reads project    ok (portal ok public)    do  donovan reads project    ko (public ko portal)    test  access right project task    data  task follower cleaning ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.addons.project.tests.test_access_rights import TestPortalProjectBase\nfrom odoo.exceptions import AccessError\nfrom odoo.tools import mute_logger\n\n\nclass TestPortalProject(TestPortalProjectBase):\n    @mute_logger('odoo.addons.base.ir.ir_model')\n    def test_portal_project_access_rights(self):\n        pigs = self.project_pigs\n        pigs.write({'privacy_visibility': 'portal'})\n\n        # Do: Alfred reads project -> ok (employee ok public)\n        pigs.sudo(self.user_projectuser).read(['user_id'])\n        # Test: all project tasks visible\n        tasks = self.env['project.task'].sudo(self.user_projectuser).search([('project_id', '=', pigs.id)])\n        self.assertEqual(tasks, self.task_1 | self.task_2 | self.task_3 | self.task_4 | self.task_5 | self.task_6,\n                         'access rights: project user should see all tasks of a portal project')\n\n        # Do: Bert reads project -> crash, no group\n        self.assertRaises(AccessError, pigs.sudo(self.user_noone).read, ['user_id'])\n        # Test: no project task searchable\n        self.assertRaises(AccessError, self.env['project.task'].sudo(self.user_noone).search, [('project_id', '=', pigs.id)])\n\n        # Data: task follower\n        pigs.sudo(self.user_projectmanager).message_subscribe_users(user_ids=[self.user_portal.id])\n        self.task_1.sudo(self.user_projectuser).message_subscribe_users(user_ids=[self.user_portal.id])\n        self.task_3.sudo(self.user_projectuser).message_subscribe_users(user_ids=[self.user_portal.id])\n        # Do: Chell reads project -> ok (portal ok public)\n        pigs.sudo(self.user_portal).read(['user_id'])\n        # Do: Donovan reads project -> ko (public ko portal)\n        self.assertRaises(AccessError, pigs.sudo(self.user_public).read, ['user_id'])\n        # Test: no access right to project.task\n        self.assertRaises(AccessError, self.env['project.task'].sudo(self.user_public).search, [])\n        # Data: task follower cleaning\n        self.task_1.sudo(self.user_projectuser).message_unsubscribe_users(user_ids=[self.user_portal.id])\n        self.task_3.sudo(self.user_projectuser).message_unsubscribe_users(user_ids=[self.user_portal.id])\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_portal.py", "id": "f4afff058e72550f7653d85fa2ea2203", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/project/tests/test_portal.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
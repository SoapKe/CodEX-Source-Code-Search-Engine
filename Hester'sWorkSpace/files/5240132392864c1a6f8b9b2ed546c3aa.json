{"author": "nvbn", "code": "import pytest\nfrom thefuck.types import Command\nfrom thefuck.rules.git_bisect_usage import match, get_new_command\n\n\n@pytest.fixture\ndef output():\n    return (\"usage: git bisect [help|start|bad|good|new|old\"\n            \"|terms|skip|next|reset|visualize|replay|log|run]\")\n\n\n@pytest.mark.parametrize('script', [\n    'git bisect strt', 'git bisect rset', 'git bisect goood'])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', [\n    'git bisect', 'git bisect start', 'git bisect good'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_cmd, ', [\n    ('git bisect goood', ['good', 'old', 'log']),\n    ('git bisect strt', ['start', 'terms', 'reset']),\n    ('git bisect rset', ['reset', 'next', 'start'])])\ndef test_get_new_command(output, script, new_cmd):\n    new_cmd = ['git bisect %s' % cmd for cmd in new_cmd]\n    assert get_new_command(Command(script, output)) == new_cmd\n", "comments": "", "content": "import pytest\nfrom thefuck.types import Command\nfrom thefuck.rules.git_bisect_usage import match, get_new_command\n\n\n@pytest.fixture\ndef output():\n    return (\"usage: git bisect [help|start|bad|good|new|old\"\n            \"|terms|skip|next|reset|visualize|replay|log|run]\")\n\n\n@pytest.mark.parametrize('script', [\n    'git bisect strt', 'git bisect rset', 'git bisect goood'])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', [\n    'git bisect', 'git bisect start', 'git bisect good'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_cmd, ', [\n    ('git bisect goood', ['good', 'old', 'log']),\n    ('git bisect strt', ['start', 'terms', 'reset']),\n    ('git bisect rset', ['reset', 'next', 'start'])])\ndef test_get_new_command(output, script, new_cmd):\n    new_cmd = ['git bisect %s' % cmd for cmd in new_cmd]\n    assert get_new_command(Command(script, output)) == new_cmd\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_git_bisect_usage.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_git_bisect_usage.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
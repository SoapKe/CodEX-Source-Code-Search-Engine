{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.models import User\nfrom sentry.testutils import TestCase\nfrom sentry.utils.query import merge_into, RangeQuerySetWrapper\n\nfrom six.moves import xrange\n\n\nclass MergeIntoTest(TestCase):\n    def test_all_the_things(self):\n        user_1 = self.create_user('foo@example.com')\n        user_2 = self.create_user('bar@example.com')\n\n        merge_into(user_1, user_2)\n\n        \n        assert User.objects.filter(id=user_1.id).exists()\n\n\nclass RangeQuerySetWrapperTest(TestCase):\n    def test_basic(self):\n        total = 10\n\n        for _ in xrange(total):\n            self.create_user()\n\n        qs = User.objects.all()\n\n        assert len(list(RangeQuerySetWrapper(qs, step=2))) == total\n        assert len(list(RangeQuerySetWrapper(qs, limit=5))) == 5\n\n    def test_loop_and_delete(self):\n        total = 10\n        for _ in xrange(total):\n            self.create_user()\n\n        qs = User.objects.all()\n\n        for user in RangeQuerySetWrapper(qs, step=2):\n            user.delete()\n\n        assert User.objects.all().count() == 0\n", "comments": "  make sure remove instance ", "content": "from __future__ import absolute_import\n\nfrom sentry.models import User\nfrom sentry.testutils import TestCase\nfrom sentry.utils.query import merge_into, RangeQuerySetWrapper\n\nfrom six.moves import xrange\n\n\nclass MergeIntoTest(TestCase):\n    def test_all_the_things(self):\n        user_1 = self.create_user('foo@example.com')\n        user_2 = self.create_user('bar@example.com')\n\n        merge_into(user_1, user_2)\n\n        # make sure we didn't remove the instance\n        assert User.objects.filter(id=user_1.id).exists()\n\n\nclass RangeQuerySetWrapperTest(TestCase):\n    def test_basic(self):\n        total = 10\n\n        for _ in xrange(total):\n            self.create_user()\n\n        qs = User.objects.all()\n\n        assert len(list(RangeQuerySetWrapper(qs, step=2))) == total\n        assert len(list(RangeQuerySetWrapper(qs, limit=5))) == 5\n\n    def test_loop_and_delete(self):\n        total = 10\n        for _ in xrange(total):\n            self.create_user()\n\n        qs = User.objects.all()\n\n        for user in RangeQuerySetWrapper(qs, step=2):\n            user.delete()\n\n        assert User.objects.all().count() == 0\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "tests.py", "id": "21eb8ad5614293bffbc3d05845a295db", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/utils/query/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
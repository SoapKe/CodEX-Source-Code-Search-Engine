{"author": "python-telegram-bot", "code": "\n# -*- coding: utf-8 -*-\n\"\"\"Simple Bot to reply to Telegram messages.\n\nThis is built on the API wrapper, see echobot2.py to see the same example built\non the telegram.ext bot framework.\nThis program is dedicated to the public domain under the CC0 license.\n\"\"\"\nimport logging\nimport telegram\nfrom telegram.error import NetworkError, Unauthorized\nfrom time import sleep\n\n\nupdate_id = None\n\n\ndef main():\n    \"\"\"Run the bot.\"\"\"\n    global update_id\n    \n    bot = telegram.Bot('TOKEN')\n\n    \n    \n    try:\n        update_id = bot.get_updates()[0].update_id\n    except IndexError:\n        update_id = None\n\n    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n    while True:\n        try:\n            echo(bot)\n        except NetworkError:\n            sleep(1)\n        except Unauthorized:\n            \n            update_id += 1\n\n\ndef echo(bot):\n    \"\"\"Echo the message the user sent.\"\"\"\n    global update_id\n    \n    for update in bot.get_updates(offset=update_id, timeout=10):\n        update_id = update.update_id + 1\n\n        if update.message:  \n            \n            update.message.reply_text(update.message.text)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "   simple bot reply telegram messages   this built api wrapper  see echobot2 py see example built telegram ext bot framework  this program dedicated public domain cc0 license      import logging import telegram telegram error import networkerror  unauthorized time import sleep   update id   none   def main()         run bot         global update id       telegram bot authorization token     bot   telegram bot( token )        get first pending update id  skip case       get  unauthorized  exception      try          update id   bot get updates() 0  update id     except indexerror          update id   none      logging basicconfig(format   (asctime)s    (name)s    (levelname)s    (message)s )      true          try              echo(bot)         except networkerror              sleep(1)         except unauthorized                the user removed blocked bot              update id    1   def echo(bot)         echo message user sent         usr bin env python        coding  utf 8        telegram bot authorization token    get first pending update id  skip case    get  unauthorized  exception     the user removed blocked bot     request updates last update id    bot receive updates without messages    reply message ", "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\"\"\"Simple Bot to reply to Telegram messages.\n\nThis is built on the API wrapper, see echobot2.py to see the same example built\non the telegram.ext bot framework.\nThis program is dedicated to the public domain under the CC0 license.\n\"\"\"\nimport logging\nimport telegram\nfrom telegram.error import NetworkError, Unauthorized\nfrom time import sleep\n\n\nupdate_id = None\n\n\ndef main():\n    \"\"\"Run the bot.\"\"\"\n    global update_id\n    # Telegram Bot Authorization Token\n    bot = telegram.Bot('TOKEN')\n\n    # get the first pending update_id, this is so we can skip over it in case\n    # we get an \"Unauthorized\" exception.\n    try:\n        update_id = bot.get_updates()[0].update_id\n    except IndexError:\n        update_id = None\n\n    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\n    while True:\n        try:\n            echo(bot)\n        except NetworkError:\n            sleep(1)\n        except Unauthorized:\n            # The user has removed or blocked the bot.\n            update_id += 1\n\n\ndef echo(bot):\n    \"\"\"Echo the message the user sent.\"\"\"\n    global update_id\n    # Request updates after the last update_id\n    for update in bot.get_updates(offset=update_id, timeout=10):\n        update_id = update.update_id + 1\n\n        if update.message:  # your bot can receive updates without messages\n            # Reply to the message\n            update.message.reply_text(update.message.text)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "We have made you a wrapper you can't refuse", "file_name": "echobot.py", "id": "7cc9e65acfee3a181783cd8c29f0dea0", "language": "Python", "project_name": "python-telegram-bot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/python-telegram-bot-python-telegram-bot/python-telegram-bot-python-telegram-bot-3ccf40e/examples/echobot.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:32:55Z", "url": "https://github.com/python-telegram-bot/python-telegram-bot", "wiki": true}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass TelewebionIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?telewebion\\.com/\n\n    _TEST = {\n        'url': 'http://www.telewebion.com/\n        'info_dict': {\n            'id': '1263668',\n            'ext': 'mp4',\n            'title': '\u0642\u0631\u0639\u0647\\u200c\u06a9\u0634\u06cc \u0644\u06cc\u06af \u0642\u0647\u0631\u0645\u0627\u0646\u0627\u0646 \u0627\u0631\u0648\u067e\u0627',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        secure_token = self._download_webpage(\n            'http://m.s2.telewebion.com/op/op?action=getSecurityToken', video_id)\n        episode_details = self._download_json(\n            'http://m.s2.telewebion.com/op/op', video_id,\n            query={'action': 'getEpisodeDetails', 'episode_id': video_id})\n\n        m3u8_url = 'http://m.s1.telewebion.com/smil/%s.m3u8?filepath=%s&m3u8=1&secure_token=%s' % (\n            video_id, episode_details['file_path'], secure_token)\n        formats = self._extract_m3u8_formats(\n            m3u8_url, video_id, ext='mp4', m3u8_id='hls')\n\n        picture_paths = [\n            episode_details.get('picture_path'),\n            episode_details.get('large_picture_path'),\n        ]\n\n        thumbnails = [{\n            'url': picture_path,\n            'preference': idx,\n        } for idx, picture_path in enumerate(picture_paths) if picture_path is not None]\n\n        return {\n            'id': video_id,\n            'title': episode_details['title'],\n            'formats': formats,\n            'thumbnails': thumbnails,\n            'view_count': episode_details.get('view_count'),\n        }\n", "comments": "# coding: utf-8\n#!/episode/(?P<id>\\d+)'\n#!/episode/1263668/',\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass TelewebionIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?telewebion\\.com/#!/episode/(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://www.telewebion.com/#!/episode/1263668/',\n        'info_dict': {\n            'id': '1263668',\n            'ext': 'mp4',\n            'title': '\u0642\u0631\u0639\u0647\\u200c\u06a9\u0634\u06cc \u0644\u06cc\u06af \u0642\u0647\u0631\u0645\u0627\u0646\u0627\u0646 \u0627\u0631\u0648\u067e\u0627',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        secure_token = self._download_webpage(\n            'http://m.s2.telewebion.com/op/op?action=getSecurityToken', video_id)\n        episode_details = self._download_json(\n            'http://m.s2.telewebion.com/op/op', video_id,\n            query={'action': 'getEpisodeDetails', 'episode_id': video_id})\n\n        m3u8_url = 'http://m.s1.telewebion.com/smil/%s.m3u8?filepath=%s&m3u8=1&secure_token=%s' % (\n            video_id, episode_details['file_path'], secure_token)\n        formats = self._extract_m3u8_formats(\n            m3u8_url, video_id, ext='mp4', m3u8_id='hls')\n\n        picture_paths = [\n            episode_details.get('picture_path'),\n            episode_details.get('large_picture_path'),\n        ]\n\n        thumbnails = [{\n            'url': picture_path,\n            'preference': idx,\n        } for idx, picture_path in enumerate(picture_paths) if picture_path is not None]\n\n        return {\n            'id': video_id,\n            'title': episode_details['title'],\n            'formats': formats,\n            'thumbnails': thumbnails,\n            'view_count': episode_details.get('view_count'),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "telewebion.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/telewebion.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
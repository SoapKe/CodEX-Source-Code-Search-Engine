{"author": "certbot", "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport sys\nimport os\nimport shlex\n\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\n\n\n\nsys.path.insert(0, os.path.abspath(os.path.join(here, '..')))\n\n\n\n\nneeds_sphinx = '1.0'\n\n\n\n\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.intersphinx',\n    'sphinx.ext.todo',\n    'sphinx.ext.coverage',\n    'sphinx.ext.viewcode',\n]\n\nautodoc_member_order = 'bysource'\nautodoc_default_flags = ['show-inheritance', 'private-members']\n\n\ntemplates_path = ['_templates']\n\n\n\n\nsource_suffix = '.rst'\n\n\n\n\n\nmaster_doc = 'index'\n\n\nproject = u'acme-python'\ncopyright = u'2015-2015, Let\\'s Encrypt Project'\nauthor = u'Let\\'s Encrypt Project'\n\n\n\n\n\n\nversion = '0'\n\nrelease = '0'\n\n\n\n\n\n\nlanguage = 'en'\n\n\n\n\n\n\n\n\n\nexclude_patterns = ['_build']\n\n\n\ndefault_role = 'py:obj'\n\n\n\n\n\n\n\n\n\n\n\n\n\npygments_style = 'sphinx'\n\n\n\n\n\n\n\n\ntodo_include_todos = True\n\n\n\n\n\n\n\n\n\non_rtd = os.environ.get('READTHEDOCS', None) == 'True'\nif not on_rtd:  \n    import sphinx_rtd_theme\n    html_theme = 'sphinx_rtd_theme'\n    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml_static_path = ['_static']\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtmlhelp_basename = 'acme-pythondoc'\n\n\n\nlatex_elements = {\n    \n    \n\n    \n    \n\n    \n    \n\n    \n    \n}\n\n\n\n\nlatex_documents = [\n    (master_doc, 'acme-python.tex', u'acme-python Documentation',\n     u'Let\\'s Encrypt Project', 'manual'),\n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nman_pages = [\n    (master_doc, 'acme-python', u'acme-python Documentation',\n     [author], 1),\n    ('man/jws', 'jws', u'jws script documentation', [project], 1),\n]\n\n\n\n\n\n\n\n\n\n\ntexinfo_documents = [\n    (master_doc, 'acme-python', u'acme-python Documentation',\n     author, 'acme-python', 'One line description of project.',\n     'Miscellaneous'),\n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/', None),\n    'josepy': ('https://josepy.readthedocs.io/en/latest/', None),\n}\n", "comments": "-*- coding: utf-8 -*- acme-python documentation build configuration file created sphinx-quickstart sun oct 18 13:38:06 2015 this file execfile()d current directory set containing dir note possible configuration values present autogenerated file all configuration values default; values commented serve show default if extensions (or modules document autodoc) another directory add directories sys.path if directory relative documentation root use os.path.abspath make absolute like shown -- general configuration ------------------------------------------------ if documentation needs minimal sphinx version state add sphinx extension module names strings they extensions coming sphinx (named 'sphinx.ext.*') custom ones add paths contain templates relative directory the suffix(es) source filenames you specify multiple suffix list string: source_suffix = ['.rst' '.md'] the encoding source files source_encoding = 'utf-8-sig' the master toctree document general information project the version info project documenting acts replacement |version| |release| also used various places throughout built documents the short x.y version the full version including alpha/beta/rc tags the language content autogenerated sphinx refer documentation list supported languages this also used content translation via gettext catalogs usually set \"language\" command line cases there two options replacing |today|: either set today non-false value used: today = '' else today_fmt used format strftime call today_fmt = '%b %d %y' list patterns relative source directory match files directories ignore looking source files the rest default role (used markup: `text`) use documents if true '()' appended :func: etc cross-reference text add_function_parentheses = true if true current module name prepended description unit titles (such . function::) add_module_names = true if true sectionauthor moduleauthor directives shown output they ignored default show_authors = false the name pygments (syntax highlighting) style use a list ignored prefixes module index sorting modindex_common_prefix = [] if true keep warnings \"system message\" paragraphs built documents keep_warnings = false if true `todo` `todolist` produce output else produce nothing -- options html output ---------------------------------------------- the theme use html html help pages see documentation list builtin themes http://docs.readthedocs.org/en/latest/theme.html#how-do-i-use-this-locally-and-on-read-the-docs on_rtd whether readthedocs.org import set theme we're building docs locally otherwise readthedocs.org uses theme default need specify theme options theme-specific customize look feel theme for list options available theme see documentation html_theme_options = {} add paths contain custom themes relative directory html_theme_path = [] the name set sphinx documents if none defaults \"<project> v<release> documentation\" html_title = none a shorter title navigation bar default html_title html_short_title = none the name image file (relative directory) place top sidebar html_logo = none the name image file (within static path) use favicon docs this file windows icon file (.ico) 16x16 32x32 pixels large html_favicon = none add paths contain custom static files (such style sheets) relative directory they copied builtin static files file named \"default.css\" overwrite builtin \"default.css\" add extra paths contain custom files (such robots.txt .htaccess) relative directory these files copied directly root documentation html_extra_path = [] if '' 'last updated on:' timestamp inserted every page bottom using given strftime format html_last_updated_fmt = '%b %d %y' if true smartypants used convert quotes dashes typographically correct entities html_use_smartypants = true custom sidebar templates maps document names template names html_sidebars = {} additional templates rendered pages maps page names template names html_additional_pages = {} if false module index generated html_domain_indices = true if false index generated html_use_index = true if true index split individual pages letter html_split_index = false if true links rest sources added pages html_show_sourcelink = true if true \"created using sphinx\" shown html footer default true html_show_sphinx = true if true \"(c) copyright ...\" shown html footer default true html_show_copyright = true if true opensearch description file output pages contain <link> tag referring the value option must base url finished html served html_use_opensearch = '' this file name suffix html files (e.g \".xhtml\") html_file_suffix = none language used generating html full-text search index sphinx supports following languages: 'da' 'de' 'en' 'es' 'fi' 'fr' 'hu' 'it' 'ja' 'nl' 'no' 'pt' 'ro' 'ru' 'sv' 'tr' html_search_language = 'en' a dictionary options search language support empty default now 'ja' uses config value html_search_options = {'type': 'default'} the name javascript file (relative configuration directory) implements search results scorer if empty default used html_search_scorer = 'scorer.js' output file base name html help builder -- options latex output --------------------------------------------- the paper size ('letterpaper' 'a4paper') 'papersize': 'letterpaper' the font size ('10pt' '11pt' '12pt') 'pointsize': '10pt' additional stuff latex preamble 'preamble': '' latex figure (float) alignment 'figure_align': 'htbp' grouping document tree latex files list tuples (source start file target name title author documentclass [howto manual class]) the name image file (relative directory) place top title page latex_logo = none for \"manual\" documents true toplevel headings parts chapters latex_use_parts = false if true show page references internal links latex_show_pagerefs = false if true show url addresses external links latex_show_urls = false documents append appendix manuals latex_appendices = [] if false module index generated latex_domain_indices = true -- options manual page output --------------------------------------- one entry per manual page list tuples (source start file name description authors manual section) if true show url addresses external links man_show_urls = false -- options texinfo output ------------------------------------------- grouping document tree texinfo files list tuples (source start file target name title author dir menu entry description category) documents append appendix manuals texinfo_appendices = [] if false module index generated texinfo_domain_indices = true how display url addresses: 'footnote' 'no' 'inline' texinfo_show_urls = 'footnote' if true generate @detailmenu \"top\" node's menu texinfo_no_detailmenu = false", "content": "# -*- coding: utf-8 -*-\n#\n# acme-python documentation build configuration file, created by\n# sphinx-quickstart on Sun Oct 18 13:38:06 2015.\n#\n# This file is execfile()d with the current directory set to its\n# containing dir.\n#\n# Note that not all possible configuration values are present in this\n# autogenerated file.\n#\n# All configuration values have a default; values that are commented out\n# serve to show the default.\n\nimport sys\nimport os\nimport shlex\n\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\nsys.path.insert(0, os.path.abspath(os.path.join(here, '..')))\n\n# -- General configuration ------------------------------------------------\n\n# If your documentation needs a minimal Sphinx version, state it here.\nneeds_sphinx = '1.0'\n\n# Add any Sphinx extension module names here, as strings. They can be\n# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom\n# ones.\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.intersphinx',\n    'sphinx.ext.todo',\n    'sphinx.ext.coverage',\n    'sphinx.ext.viewcode',\n]\n\nautodoc_member_order = 'bysource'\nautodoc_default_flags = ['show-inheritance', 'private-members']\n\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n\n# The suffix(es) of source filenames.\n# You can specify multiple suffix as a list of string:\n# source_suffix = ['.rst', '.md']\nsource_suffix = '.rst'\n\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# General information about the project.\nproject = u'acme-python'\ncopyright = u'2015-2015, Let\\'s Encrypt Project'\nauthor = u'Let\\'s Encrypt Project'\n\n# The version info for the project you're documenting, acts as replacement for\n# |version| and |release|, also used in various other places throughout the\n# built documents.\n#\n# The short X.Y version.\nversion = '0'\n# The full version, including alpha/beta/rc tags.\nrelease = '0'\n\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#\n# This is also used if you do content translation via gettext catalogs.\n# Usually you set \"language\" from the command line for these cases.\nlanguage = 'en'\n\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n\n# The reST default role (used for this markup: `text`) to use for all\n# documents.\ndefault_role = 'py:obj'\n\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n\n# The name of the Pygments (syntax highlighting) style to use.\npygments_style = 'sphinx'\n\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n\n# If true, keep warnings as \"system message\" paragraphs in the built documents.\n#keep_warnings = False\n\n# If true, `todo` and `todoList` produce output, else they produce nothing.\ntodo_include_todos = True\n\n\n# -- Options for HTML output ----------------------------------------------\n\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\n\n# http://docs.readthedocs.org/en/latest/theme.html#how-do-i-use-this-locally-and-on-read-the-docs\n# on_rtd is whether we are on readthedocs.org\non_rtd = os.environ.get('READTHEDOCS', None) == 'True'\nif not on_rtd:  # only import and set the theme if we're building docs locally\n    import sphinx_rtd_theme\n    html_theme = 'sphinx_rtd_theme'\n    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]\n# otherwise, readthedocs.org uses their theme by default, so no need to specify it\n\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n#html_theme_options = {}\n\n# Add any paths that contain custom themes here, relative to this directory.\n#html_theme_path = []\n\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None\n\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#html_logo = None\n\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n#html_favicon = None\n\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = ['_static']\n\n# Add any extra paths that contain custom files (such as robots.txt or\n# .htaccess) here, relative to this directory. These files are copied\n# directly to the root of the documentation.\n#html_extra_path = []\n\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\n#html_last_updated_fmt = '%b %d, %Y'\n\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n\n# Custom sidebar templates, maps document names to template names.\n#html_sidebars = {}\n\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n\n# If false, no module index is generated.\n#html_domain_indices = True\n\n# If false, no index is generated.\n#html_use_index = True\n\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n\n# This is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = None\n\n# Language to be used for generating the HTML full-text search index.\n# Sphinx supports the following languages:\n#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'\n#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'\n#html_search_language = 'en'\n\n# A dictionary with options for the search language support, empty by default.\n# Now only 'ja' uses this config value\n#html_search_options = {'type': 'default'}\n\n# The name of a javascript file (relative to the configuration directory) that\n# implements a search results scorer. If empty, the default will be used.\n#html_search_scorer = 'scorer.js'\n\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'acme-pythondoc'\n\n# -- Options for LaTeX output ---------------------------------------------\n\nlatex_elements = {\n    # The paper size ('letterpaper' or 'a4paper').\n    #'papersize': 'letterpaper',\n\n    # The font size ('10pt', '11pt' or '12pt').\n    #'pointsize': '10pt',\n\n    # Additional stuff for the LaTeX preamble.\n    #'preamble': '',\n\n    # Latex figure (float) alignment\n    #'figure_align': 'htbp',\n}\n\n# Grouping the document tree into LaTeX files. List of tuples\n# (source start file, target name, title,\n#  author, documentclass [howto, manual, or own class]).\nlatex_documents = [\n    (master_doc, 'acme-python.tex', u'acme-python Documentation',\n     u'Let\\'s Encrypt Project', 'manual'),\n]\n\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#latex_logo = None\n\n# For \"manual\" documents, if this is true, then toplevel headings are parts,\n# not chapters.\n#latex_use_parts = False\n\n# If true, show page references after internal links.\n#latex_show_pagerefs = False\n\n# If true, show URL addresses after external links.\n#latex_show_urls = False\n\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n\n# If false, no module index is generated.\n#latex_domain_indices = True\n\n\n# -- Options for manual page output ---------------------------------------\n\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).\nman_pages = [\n    (master_doc, 'acme-python', u'acme-python Documentation',\n     [author], 1),\n    ('man/jws', 'jws', u'jws script documentation', [project], 1),\n]\n\n# If true, show URL addresses after external links.\n#man_show_urls = False\n\n\n# -- Options for Texinfo output -------------------------------------------\n\n# Grouping the document tree into Texinfo files. List of tuples\n# (source start file, target name, title, author,\n#  dir menu entry, description, category)\ntexinfo_documents = [\n    (master_doc, 'acme-python', u'acme-python Documentation',\n     author, 'acme-python', 'One line description of project.',\n     'Miscellaneous'),\n]\n\n# Documents to append as an appendix to all manuals.\n#texinfo_appendices = []\n\n# If false, no module index is generated.\n#texinfo_domain_indices = True\n\n# How to display URL addresses: 'footnote', 'no', or 'inline'.\n#texinfo_show_urls = 'footnote'\n\n# If true, do not generate a @detailmenu in the \"Top\" node's menu.\n#texinfo_no_detailmenu = False\n\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/', None),\n    'josepy': ('https://josepy.readthedocs.io/en/latest/', None),\n}\n", "description": "Certbot is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.  It can also act as a client for any other CA that uses the ACME protocol.", "file_name": "conf.py", "id": "33c73ae71cc2d76180ebac2383dd55e6", "language": "Python", "project_name": "certbot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/certbot-certbot/certbot-certbot-1d0e3b1/acme/docs/conf.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:23Z", "url": "https://github.com/certbot/certbot", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    parse_iso8601,\n    update_url_query,\n    int_or_none,\n    determine_protocol,\n    unescapeHTML,\n)\n\n\nclass SendtoNewsIE(InfoExtractor):\n    _VALID_URL = r'https?://embed\\.sendtonews\\.com/player2/embedplayer\\.php\\?.*\\bSC=(?P<id>[0-9A-Za-z-]+)'\n\n    _TEST = {\n        \n        'url': 'http://embed.sendtonews.com/player2/embedplayer.php?SC=GxfCe0Zo7D-175909-5588&type=single&autoplay=on&sound=YES',\n        'info_dict': {\n            'id': 'GxfCe0Zo7D-175909-5588'\n        },\n        'playlist_count': 8,\n        \n        'playlist': [{\n            'info_dict': {\n                'id': '240385',\n                'ext': 'mp4',\n                'title': 'Indians introduce Encarnacion',\n                'description': 'Indians president of baseball operations Chris Antonetti and Edwin Encarnacion discuss the slugger\\'s three-year contract with Cleveland',\n                'duration': 137.898,\n                'thumbnail': r're:https?://.*\\.jpg$',\n                'upload_date': '20170105',\n                'timestamp': 1483649762,\n            },\n        }],\n        'params': {\n            \n            'skip_download': True,\n        },\n    }\n\n    _URL_TEMPLATE = '//embed.sendtonews.com/player2/embedplayer.php?SC=%s'\n\n    @classmethod\n    def _extract_url(cls, webpage):\n        mobj = re.search(r, webpage)\n        if mobj:\n            sc = mobj.group('SC')\n            return cls._URL_TEMPLATE % sc\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        data_url = update_url_query(\n            url.replace('embedplayer.php', 'data_read.php'),\n            {'cmd': 'loadInitial'})\n        playlist_data = self._download_json(data_url, playlist_id)\n\n        entries = []\n        for video in playlist_data['playlistData'][0]:\n            info_dict = self._parse_jwplayer_data(\n                video['jwconfiguration'],\n                require_title=False, m3u8_id='hls', rtmp_params={'no_resume': True})\n\n            for f in info_dict['formats']:\n                if f.get('tbr'):\n                    continue\n                tbr = int_or_none(self._search_regex(\n                    r'/(\\d+)k/', f['url'], 'bitrate', default=None))\n                if not tbr:\n                    continue\n                f.update({\n                    'format_id': '%s-%d' % (determine_protocol(f), tbr),\n                    'tbr': tbr,\n                })\n            self._sort_formats(info_dict['formats'], ('tbr', 'height', 'width', 'format_id'))\n\n            thumbnails = []\n            if video.get('thumbnailUrl'):\n                thumbnails.append({\n                    'id': 'normal',\n                    'url': video['thumbnailUrl'],\n                })\n            if video.get('smThumbnailUrl'):\n                thumbnails.append({\n                    'id': 'small',\n                    'url': video['smThumbnailUrl'],\n                })\n            info_dict.update({\n                'title': video['S_headLine'].strip(),\n                'description': unescapeHTML(video.get('S_fullStory')),\n                'thumbnails': thumbnails,\n                'duration': float_or_none(video.get('SM_length')),\n                'timestamp': parse_iso8601(video.get('S_sysDate'), delimiter=' '),\n            })\n            entries.append(info_dict)\n\n        return self.playlist_result(entries, playlist_id)\n", "comments": "(?x)<script[^>]+src=([\\'\"])\n            (?:https?:)?//embed\\.sendtonews\\.com/player/responsiveembed\\.php\\?\n                .*\\bSC=(?P<SC>[0-9a-zA-Z-]+).*\n            \\1>\n>\n# coding: utf-8\n# From http://cleveland.cbslocal.com/2016/05/16/indians-score-season-high-15-runs-in-blowout-win-over-reds-rapid-reaction/\n# test the first video only to prevent lengthy tests\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    parse_iso8601,\n    update_url_query,\n    int_or_none,\n    determine_protocol,\n    unescapeHTML,\n)\n\n\nclass SendtoNewsIE(InfoExtractor):\n    _VALID_URL = r'https?://embed\\.sendtonews\\.com/player2/embedplayer\\.php\\?.*\\bSC=(?P<id>[0-9A-Za-z-]+)'\n\n    _TEST = {\n        # From http://cleveland.cbslocal.com/2016/05/16/indians-score-season-high-15-runs-in-blowout-win-over-reds-rapid-reaction/\n        'url': 'http://embed.sendtonews.com/player2/embedplayer.php?SC=GxfCe0Zo7D-175909-5588&type=single&autoplay=on&sound=YES',\n        'info_dict': {\n            'id': 'GxfCe0Zo7D-175909-5588'\n        },\n        'playlist_count': 8,\n        # test the first video only to prevent lengthy tests\n        'playlist': [{\n            'info_dict': {\n                'id': '240385',\n                'ext': 'mp4',\n                'title': 'Indians introduce Encarnacion',\n                'description': 'Indians president of baseball operations Chris Antonetti and Edwin Encarnacion discuss the slugger\\'s three-year contract with Cleveland',\n                'duration': 137.898,\n                'thumbnail': r're:https?://.*\\.jpg$',\n                'upload_date': '20170105',\n                'timestamp': 1483649762,\n            },\n        }],\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }\n\n    _URL_TEMPLATE = '//embed.sendtonews.com/player2/embedplayer.php?SC=%s'\n\n    @classmethod\n    def _extract_url(cls, webpage):\n        mobj = re.search(r'''(?x)<script[^>]+src=([\\'\"])\n            (?:https?:)?//embed\\.sendtonews\\.com/player/responsiveembed\\.php\\?\n                .*\\bSC=(?P<SC>[0-9a-zA-Z-]+).*\n            \\1>''', webpage)\n        if mobj:\n            sc = mobj.group('SC')\n            return cls._URL_TEMPLATE % sc\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        data_url = update_url_query(\n            url.replace('embedplayer.php', 'data_read.php'),\n            {'cmd': 'loadInitial'})\n        playlist_data = self._download_json(data_url, playlist_id)\n\n        entries = []\n        for video in playlist_data['playlistData'][0]:\n            info_dict = self._parse_jwplayer_data(\n                video['jwconfiguration'],\n                require_title=False, m3u8_id='hls', rtmp_params={'no_resume': True})\n\n            for f in info_dict['formats']:\n                if f.get('tbr'):\n                    continue\n                tbr = int_or_none(self._search_regex(\n                    r'/(\\d+)k/', f['url'], 'bitrate', default=None))\n                if not tbr:\n                    continue\n                f.update({\n                    'format_id': '%s-%d' % (determine_protocol(f), tbr),\n                    'tbr': tbr,\n                })\n            self._sort_formats(info_dict['formats'], ('tbr', 'height', 'width', 'format_id'))\n\n            thumbnails = []\n            if video.get('thumbnailUrl'):\n                thumbnails.append({\n                    'id': 'normal',\n                    'url': video['thumbnailUrl'],\n                })\n            if video.get('smThumbnailUrl'):\n                thumbnails.append({\n                    'id': 'small',\n                    'url': video['smThumbnailUrl'],\n                })\n            info_dict.update({\n                'title': video['S_headLine'].strip(),\n                'description': unescapeHTML(video.get('S_fullStory')),\n                'thumbnails': thumbnails,\n                'duration': float_or_none(video.get('SM_length')),\n                'timestamp': parse_iso8601(video.get('S_sysDate'), delimiter=' '),\n            })\n            entries.append(info_dict)\n\n        return self.playlist_result(entries, playlist_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "sendtonews.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/sendtonews.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
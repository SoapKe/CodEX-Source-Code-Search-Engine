{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestBit(object):\n\n    def test_insert_m_into_n(self):\n        n = int('0000010000111101', base=2)\n        m = int('0000000000010011', base=2)\n        expected = int('0000010001001101', base=2)\n        bits = Bits()\n        assert_equal(bits.insert_m_into_n(m, n, i=2, j=6), expected)\n        print('Success: test_insert_m_into_n')\n\n\ndef main():\n    test = TestBit()\n    test.test_insert_m_into_n()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestBit(object):\n\n    def test_insert_m_into_n(self):\n        n = int('0000010000111101', base=2)\n        m = int('0000000000010011', base=2)\n        expected = int('0000010001001101', base=2)\n        bits = Bits()\n        assert_equal(bits.insert_m_into_n(m, n, i=2, j=6), expected)\n        print('Success: test_insert_m_into_n')\n\n\ndef main():\n    test = TestBit()\n    test.test_insert_m_into_n()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_insert_m_into_n.py", "id": "6e2810dd268cf47dacd410380cd83542", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/bit_manipulation/insert_m_into_n/test_insert_m_into_n.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
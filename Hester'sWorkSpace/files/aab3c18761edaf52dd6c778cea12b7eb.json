{"author": "nvbn", "code": "from io import BytesIO\n\nimport pytest\nfrom thefuck.specific.npm import get_scripts\n\nrun_script_stdout = b\n\n\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_scripts(mocker):\n    patch = mocker.patch('thefuck.specific.npm.Popen')\n    patch.return_value.stdout = BytesIO(run_script_stdout)\n    assert get_scripts() == ['build', 'develop', 'watch-test']\n", "comments": "\nLifecycle scripts included in code-view-web:\n  test\n    jest\n\navailable via `npm run-script`:\n  build\n    cp node_modules/ace-builds/src-min/ -a resources/ace/ && webpack --progress --colors -p --config ./webpack.production.config.js\n  develop\n    cp node_modules/ace-builds/src/ -a resources/ace/ && webpack-dev-server --progress --colors\n  watch-test\n    jest --verbose --watch\n\n\n\n\n", "content": "from io import BytesIO\n\nimport pytest\nfrom thefuck.specific.npm import get_scripts\n\nrun_script_stdout = b'''\nLifecycle scripts included in code-view-web:\n  test\n    jest\n\navailable via `npm run-script`:\n  build\n    cp node_modules/ace-builds/src-min/ -a resources/ace/ && webpack --progress --colors -p --config ./webpack.production.config.js\n  develop\n    cp node_modules/ace-builds/src/ -a resources/ace/ && webpack-dev-server --progress --colors\n  watch-test\n    jest --verbose --watch\n\n'''\n\n\n@pytest.mark.usefixtures('no_memoize')\ndef test_get_scripts(mocker):\n    patch = mocker.patch('thefuck.specific.npm.Popen')\n    patch.return_value.stdout = BytesIO(run_script_stdout)\n    assert get_scripts() == ['build', 'develop', 'watch-test']\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_npm.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/specific/test_npm.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
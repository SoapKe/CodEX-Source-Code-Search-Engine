{"author": "keon", "code": "\"\"\"\nGiven a string, determine if it is a palindrome,\nconsidering only alphanumeric characters and ignoring cases.\n\nFor example,\n\"A man, a plan, a canal: Panama\" is a palindrome.\n\"race a car\" is not a palindrome.\n\nNote:\nHave you consider that the string might be empty?\nThis is a good question to ask during an interview.\n\nFor the purpose of this problem,\nwe define empty string as valid palindrome.\n\"\"\"\n\n\ndef is_palindrome(s):\n    \"\"\"\n    :type s: str\n    :rtype: bool\n    \"\"\"\n    i = 0\n    j = len(s)-1\n    while i < j:\n        while i < j and not s[i].isalnum():\n            i += 1\n        while i < j and not s[j].isalnum():\n            j -= 1\n        if s[i].lower() != s[j].lower():\n            return False\n        i, j = i+1, j-1\n    return True\n", "comments": "    given string  determine palindrome  considering alphanumeric characters ignoring cases   for example   a man  plan  canal  panama  palindrome   race car  palindrome   note  have consider string might empty  this good question ask interview   for purpose problem  define empty string valid palindrome        def palindrome(s)               type  str      rtype  bool         ", "content": "\"\"\"\nGiven a string, determine if it is a palindrome,\nconsidering only alphanumeric characters and ignoring cases.\n\nFor example,\n\"A man, a plan, a canal: Panama\" is a palindrome.\n\"race a car\" is not a palindrome.\n\nNote:\nHave you consider that the string might be empty?\nThis is a good question to ask during an interview.\n\nFor the purpose of this problem,\nwe define empty string as valid palindrome.\n\"\"\"\n\n\ndef is_palindrome(s):\n    \"\"\"\n    :type s: str\n    :rtype: bool\n    \"\"\"\n    i = 0\n    j = len(s)-1\n    while i < j:\n        while i < j and not s[i].isalnum():\n            i += 1\n        while i < j and not s[j].isalnum():\n            j -= 1\n        if s[i].lower() != s[j].lower():\n            return False\n        i, j = i+1, j-1\n    return True\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "is_palindrome.py", "id": "6dc568025baab4d0176220a99369b894", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/strings/is_palindrome.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
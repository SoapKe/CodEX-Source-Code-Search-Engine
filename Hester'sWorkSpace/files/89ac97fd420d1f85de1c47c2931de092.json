{"author": "chiphuyen", "code": "import numpy as np\nimport tensorflow as tf\n\na = np.zeros([3, 3, 3, 3])\na[1, 1, :, :] = 0.25\na[0, 1, :, :] = 0.125\na[1, 0, :, :] = 0.125\na[2, 1, :, :] = 0.125\na[1, 2, :, :] = 0.125\na[0, 0, :, :] = 0.0625\na[0, 2, :, :] = 0.0625\na[2, 0, :, :] = 0.0625\na[2, 2, :, :] = 0.0625\n\nBLUR_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\n# a[1, 1, :, :] = 0.25\n# a[0, 1, :, :] = 0.125\n# a[1, 0, :, :] = 0.125\n# a[2, 1, :, :] = 0.125\n# a[1, 2, :, :] = 0.125\n# a[0, 0, :, :] = 0.0625\n# a[0, 2, :, :] = 0.0625\n# a[2, 0, :, :] = 0.0625\n# a[2, 2, :, :] = 0.0625\na[1, 1, :, :] = 1.0\na[0, 1, :, :] = 1.0\na[1, 0, :, :] = 1.0\na[2, 1, :, :] = 1.0\na[1, 2, :, :] = 1.0\na[0, 0, :, :] = 1.0\na[0, 2, :, :] = 1.0\na[2, 0, :, :] = 1.0\na[2, 2, :, :] = 1.0\nBLUR_FILTER = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[1, 1, :, :] = 5\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[2, 1, :, :] = -1\na[1, 2, :, :] = -1\n\nSHARPEN_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[1, 1, :, :] = 5\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[2, 1, :, :] = -1\na[1, 2, :, :] = -1\n\nSHARPEN_FILTER = tf.constant(a, dtype=tf.float32)\n\n# a = np.zeros([3, 3, 3, 3])\n# a[:, :, :, :] = -1\n# a[1, 1, :, :] = 8\n\n# EDGE_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\nEDGE_FILTER_RGB = tf.constant([\n\t\t\t[[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n            [[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n            [[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]],\n            [[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ 8., 0., 0.], [ 0., 8., 0.], [ 0., 0., 8.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]],\n\t\t\t[[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]]\n])\n\na = np.zeros([3, 3, 1, 1])\n# a[:, :, :, :] = -1\n# a[1, 1, :, :] = 8\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[1, 2, :, :] = -1\na[2, 1, :, :] = -1\na[1, 1, :, :] = 4\n\nEDGE_FILTER = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[0, :, :, :] = 1\na[0, 1, :, :] = 2 \na[2, :, :, :] = -1\na[2, 1, :, :] = -2\n\nTOP_SOBEL_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[0, :, :, :] = 1\na[0, 1, :, :] = 2 \na[2, :, :, :] = -1\na[2, 1, :, :] = -2\n\nTOP_SOBEL = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[0, 0, :, :] = -2\na[0, 1, :, :] = -1 \na[1, 0, :, :] = -1\na[1, 1, :, :] = 1\na[1, 2, :, :] = 1\na[2, 1, :, :] = 1\na[2, 2, :, :] = 2\n\nEMBOSS_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[0, 0, :, :] = -2\na[0, 1, :, :] = -1 \na[1, 0, :, :] = -1\na[1, 1, :, :] = 1\na[1, 2, :, :] = 1\na[2, 1, :, :] = 1\na[2, 2, :, :] = 2\nEMBOSS_FILTER = tf.constant(a, dtype=tf.float32)", "comments": "  1  1          0 25    0  1          0 125    1  0          0 125    2  1          0 125    1  2          0 125    0  0          0 0625    0  2          0 0625    2  0          0 0625    2  2          0 0625      np zeros( 3  3  3  3 )                   1    1  1          8    edge filter rgb   tf constant(a  dtype tf float32)                   1    1  1          8    originally 2    originally 2 ", "content": "import numpy as np\nimport tensorflow as tf\n\na = np.zeros([3, 3, 3, 3])\na[1, 1, :, :] = 0.25\na[0, 1, :, :] = 0.125\na[1, 0, :, :] = 0.125\na[2, 1, :, :] = 0.125\na[1, 2, :, :] = 0.125\na[0, 0, :, :] = 0.0625\na[0, 2, :, :] = 0.0625\na[2, 0, :, :] = 0.0625\na[2, 2, :, :] = 0.0625\n\nBLUR_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\n# a[1, 1, :, :] = 0.25\n# a[0, 1, :, :] = 0.125\n# a[1, 0, :, :] = 0.125\n# a[2, 1, :, :] = 0.125\n# a[1, 2, :, :] = 0.125\n# a[0, 0, :, :] = 0.0625\n# a[0, 2, :, :] = 0.0625\n# a[2, 0, :, :] = 0.0625\n# a[2, 2, :, :] = 0.0625\na[1, 1, :, :] = 1.0\na[0, 1, :, :] = 1.0\na[1, 0, :, :] = 1.0\na[2, 1, :, :] = 1.0\na[1, 2, :, :] = 1.0\na[0, 0, :, :] = 1.0\na[0, 2, :, :] = 1.0\na[2, 0, :, :] = 1.0\na[2, 2, :, :] = 1.0\nBLUR_FILTER = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[1, 1, :, :] = 5\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[2, 1, :, :] = -1\na[1, 2, :, :] = -1\n\nSHARPEN_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[1, 1, :, :] = 5\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[2, 1, :, :] = -1\na[1, 2, :, :] = -1\n\nSHARPEN_FILTER = tf.constant(a, dtype=tf.float32)\n\n# a = np.zeros([3, 3, 3, 3])\n# a[:, :, :, :] = -1\n# a[1, 1, :, :] = 8\n\n# EDGE_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\nEDGE_FILTER_RGB = tf.constant([\n\t\t\t[[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n            [[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n            [[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]],\n            [[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ 8., 0., 0.], [ 0., 8., 0.], [ 0., 0., 8.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]],\n\t\t\t[[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]],\n\t\t\t[[ -1., 0., 0.], [ 0., -1., 0.], [ 0., 0., -1.]]]\n])\n\na = np.zeros([3, 3, 1, 1])\n# a[:, :, :, :] = -1\n# a[1, 1, :, :] = 8\na[0, 1, :, :] = -1\na[1, 0, :, :] = -1\na[1, 2, :, :] = -1\na[2, 1, :, :] = -1\na[1, 1, :, :] = 4\n\nEDGE_FILTER = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[0, :, :, :] = 1\na[0, 1, :, :] = 2 # originally 2\na[2, :, :, :] = -1\na[2, 1, :, :] = -2\n\nTOP_SOBEL_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[0, :, :, :] = 1\na[0, 1, :, :] = 2 # originally 2\na[2, :, :, :] = -1\na[2, 1, :, :] = -2\n\nTOP_SOBEL = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 3, 3])\na[0, 0, :, :] = -2\na[0, 1, :, :] = -1 \na[1, 0, :, :] = -1\na[1, 1, :, :] = 1\na[1, 2, :, :] = 1\na[2, 1, :, :] = 1\na[2, 2, :, :] = 2\n\nEMBOSS_FILTER_RGB = tf.constant(a, dtype=tf.float32)\n\na = np.zeros([3, 3, 1, 1])\na[0, 0, :, :] = -2\na[0, 1, :, :] = -1 \na[1, 0, :, :] = -1\na[1, 1, :, :] = 1\na[1, 2, :, :] = 1\na[2, 1, :, :] = 1\na[2, 2, :, :] = 2\nEMBOSS_FILTER = tf.constant(a, dtype=tf.float32)", "description": "This repository contains code examples for the Stanford's course: TensorFlow for Deep Learning Research. ", "file_name": "kernels.py", "id": "89ac97fd420d1f85de1c47c2931de092", "language": "Python", "project_name": "stanford-tensorflow-tutorials", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/chiphuyen-stanford-tensorflow-tutorials/chiphuyen-stanford-tensorflow-tutorials-54c48f5/examples/kernels.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:38:24Z", "url": "https://github.com/chiphuyen/stanford-tensorflow-tutorials", "wiki": true}
{"author": "ansible", "code": " (c) 2016 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom units.modules.utils import set_module_args\nfrom .iosxr_module import TestIosxrModule, load_fixture\nfrom ansible.modules.network.iosxr import iosxr_system\n\n\nclass TestIosxrSystemModule(TestIosxrModule):\n\n    module = iosxr_system\n\n    def setUp(self):\n        super(TestIosxrSystemModule, self).setUp()\n\n        self.mock_get_config = patch('ansible.modules.network.iosxr.iosxr_system.get_config')\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch('ansible.modules.network.iosxr.iosxr_system.load_config')\n        self.load_config = self.mock_load_config.start()\n\n        self.mock_is_cliconf = patch('ansible.modules.network.iosxr.iosxr_system.is_cliconf')\n        self.is_cliconf = self.mock_is_cliconf.start()\n\n    def tearDown(self):\n        super(TestIosxrSystemModule, self).tearDown()\n\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None):\n        self.get_config.return_value = load_fixture('iosxr_system_config.cfg')\n        self.load_config.return_value = dict(diff=None, session='session')\n        self.is_cliconf.return_value = True\n\n    def test_iosxr_system_hostname_changed(self):\n        set_module_args(dict(hostname='foo'))\n        commands = ['hostname foo', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_domain_name(self):\n        set_module_args(dict(domain_name='test.com'))\n        commands = ['domain name test.com', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_domain_search(self):\n        set_module_args(dict(domain_search=['ansible.com', 'redhat.com']))\n        commands = ['domain list ansible.com', 'no domain list cisco.com', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_lookup_source(self):\n        set_module_args(dict(lookup_source='Ethernet1'))\n        commands = ['domain lookup source-interface Ethernet1', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_lookup_enabled(self):\n        set_module_args(dict(lookup_enabled=True))\n        commands = ['no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_name_servers(self):\n        name_servers = ['8.8.8.8', '8.8.4.4', '1.1.1.1']\n        set_module_args(dict(name_servers=name_servers))\n        commands = ['domain name-server 1.1.1.1', 'no domain name-server 8.8.4.4', 'no domain lookup disable']\n        self.execute_module(changed=True)\n\n    def test_iosxr_system_state_absent(self):\n        set_module_args(dict(state='absent'))\n        commands = [\n            'no hostname',\n            'no domain name',\n            'no domain lookup disable',\n            'no domain lookup source-interface MgmtEth0/0/CPU0/0',\n            'no domain list redhat.com',\n            'no domain list cisco.com',\n            'no domain name-server 8.8.8.8',\n            'no domain name-server 8.8.4.4'\n        ]\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_no_change(self):\n        set_module_args(dict(hostname='iosxr01', domain_name='eng.ansible.com', lookup_enabled=False))\n        self.execute_module()\n", "comments": "  (c) 2016 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish ", "content": "# (c) 2016 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom units.modules.utils import set_module_args\nfrom .iosxr_module import TestIosxrModule, load_fixture\nfrom ansible.modules.network.iosxr import iosxr_system\n\n\nclass TestIosxrSystemModule(TestIosxrModule):\n\n    module = iosxr_system\n\n    def setUp(self):\n        super(TestIosxrSystemModule, self).setUp()\n\n        self.mock_get_config = patch('ansible.modules.network.iosxr.iosxr_system.get_config')\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch('ansible.modules.network.iosxr.iosxr_system.load_config')\n        self.load_config = self.mock_load_config.start()\n\n        self.mock_is_cliconf = patch('ansible.modules.network.iosxr.iosxr_system.is_cliconf')\n        self.is_cliconf = self.mock_is_cliconf.start()\n\n    def tearDown(self):\n        super(TestIosxrSystemModule, self).tearDown()\n\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None):\n        self.get_config.return_value = load_fixture('iosxr_system_config.cfg')\n        self.load_config.return_value = dict(diff=None, session='session')\n        self.is_cliconf.return_value = True\n\n    def test_iosxr_system_hostname_changed(self):\n        set_module_args(dict(hostname='foo'))\n        commands = ['hostname foo', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_domain_name(self):\n        set_module_args(dict(domain_name='test.com'))\n        commands = ['domain name test.com', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_domain_search(self):\n        set_module_args(dict(domain_search=['ansible.com', 'redhat.com']))\n        commands = ['domain list ansible.com', 'no domain list cisco.com', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_lookup_source(self):\n        set_module_args(dict(lookup_source='Ethernet1'))\n        commands = ['domain lookup source-interface Ethernet1', 'no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_lookup_enabled(self):\n        set_module_args(dict(lookup_enabled=True))\n        commands = ['no domain lookup disable']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_name_servers(self):\n        name_servers = ['8.8.8.8', '8.8.4.4', '1.1.1.1']\n        set_module_args(dict(name_servers=name_servers))\n        commands = ['domain name-server 1.1.1.1', 'no domain name-server 8.8.4.4', 'no domain lookup disable']\n        self.execute_module(changed=True)\n\n    def test_iosxr_system_state_absent(self):\n        set_module_args(dict(state='absent'))\n        commands = [\n            'no hostname',\n            'no domain name',\n            'no domain lookup disable',\n            'no domain lookup source-interface MgmtEth0/0/CPU0/0',\n            'no domain list redhat.com',\n            'no domain list cisco.com',\n            'no domain name-server 8.8.8.8',\n            'no domain name-server 8.8.4.4'\n        ]\n        self.execute_module(changed=True, commands=commands)\n\n    def test_iosxr_system_no_change(self):\n        set_module_args(dict(hostname='iosxr01', domain_name='eng.ansible.com', lookup_enabled=False))\n        self.execute_module()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_iosxr_system.py", "id": "9e27f0fcb25180d5787b8a65849c0a48", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/iosxr/test_iosxr_system.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "keon", "code": "\"\"\"\n    Given a linked list, find the first node of a cycle in it.\n    1 -> 2 -> 3 -> 4 -> 5 -> 1  => 1\n    A -> B -> C -> D -> E -> C  => C\n\n    Note: The solution is a direct implementation\n          Floyd's cycle-finding algorithm (Floyd's Tortoise and Hare).\n\"\"\"\n\n\ndef firstCyclicNode(head):\n    \"\"\"\n    :type head: Node\n    :rtype: Node\n    \"\"\"\n    runner = walker = head\n    while runner and runner.next:\n        runner = runner.next.next\n        walker = walker.next\n        if runner is walker:\n            break\n\n    if runner is None or runner.next is None:\n        return None\n\n    walker = head\n    while runner is not walker:\n        runner, walker = runner.next, walker.next\n    return runner\n", "comments": "        given linked list  find first node cycle      1    2    3    4    5    1     1     a    b    c    d    e    c     c      note  the solution direct implementation           floyd cycle finding algorithm (floyd tortoise hare)        def firstcyclicnode(head)               type head  node      rtype  node         ", "content": "\"\"\"\n    Given a linked list, find the first node of a cycle in it.\n    1 -> 2 -> 3 -> 4 -> 5 -> 1  => 1\n    A -> B -> C -> D -> E -> C  => C\n\n    Note: The solution is a direct implementation\n          Floyd's cycle-finding algorithm (Floyd's Tortoise and Hare).\n\"\"\"\n\n\ndef firstCyclicNode(head):\n    \"\"\"\n    :type head: Node\n    :rtype: Node\n    \"\"\"\n    runner = walker = head\n    while runner and runner.next:\n        runner = runner.next.next\n        walker = walker.next\n        if runner is walker:\n            break\n\n    if runner is None or runner.next is None:\n        return None\n\n    walker = head\n    while runner is not walker:\n        runner, walker = runner.next, walker.next\n    return runner\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "first_cyclic_node.py", "id": "5c30487c939be91fdea86b34e73614c9", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/linkedlist/first_cyclic_node.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestShortestPath(object):\n\n    def test_shortest_path(self):\n        nodes = []\n        graph = GraphShortestPath()\n        for id in range(0, 6):\n            nodes.append(graph.add_node(id))\n        graph.add_edge(0, 1)\n        graph.add_edge(0, 4)\n        graph.add_edge(0, 5)\n        graph.add_edge(1, 3)\n        graph.add_edge(1, 4)\n        graph.add_edge(2, 1)\n        graph.add_edge(3, 2)\n        graph.add_edge(3, 4)\n\n        assert_equal(graph.shortest_path(nodes[0].key, nodes[2].key), [0, 1, 3, 2])\n        assert_equal(graph.shortest_path(nodes[0].key, nodes[0].key), [0])\n        assert_equal(graph.shortest_path(nodes[4].key, nodes[5].key), None)\n\n        print('Success: test_shortest_path')\n\n\ndef main():\n    test = TestShortestPath()\n    test.test_shortest_path()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestShortestPath(object):\n\n    def test_shortest_path(self):\n        nodes = []\n        graph = GraphShortestPath()\n        for id in range(0, 6):\n            nodes.append(graph.add_node(id))\n        graph.add_edge(0, 1)\n        graph.add_edge(0, 4)\n        graph.add_edge(0, 5)\n        graph.add_edge(1, 3)\n        graph.add_edge(1, 4)\n        graph.add_edge(2, 1)\n        graph.add_edge(3, 2)\n        graph.add_edge(3, 4)\n\n        assert_equal(graph.shortest_path(nodes[0].key, nodes[2].key), [0, 1, 3, 2])\n        assert_equal(graph.shortest_path(nodes[0].key, nodes[0].key), [0])\n        assert_equal(graph.shortest_path(nodes[4].key, nodes[5].key), None)\n\n        print('Success: test_shortest_path')\n\n\ndef main():\n    test = TestShortestPath()\n    test.test_shortest_path()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_shortest_path.py", "id": "f9f15431e09c0e38c2870652b35c6472", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/graphs_trees/graph_shortest_path_unweighted/test_shortest_path.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
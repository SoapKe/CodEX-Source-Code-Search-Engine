{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.tests import common\n\n\nclass TestHrHolidaysBase(common.TransactionCase):\n\n    def setUp(self):\n        super(TestHrHolidaysBase, self).setUp()\n\n        Users = self.env['res.users'].with_context(no_reset_password=True)\n\n        \n        group_employee_id = self.ref('base.group_user')\n\n        \n        self.user_hruser_id = Users.create({\n            'name': 'Armande HrUser',\n            'login': 'Armande',\n            'email': 'armande.hruser@example.com',\n            'groups_id': [(6, 0, [group_employee_id, self.ref('hr_holidays.group_hr_holidays_user')])]\n        }).id\n        self.user_hrmanager_id = Users.create({\n            'name': 'Bastien HrManager',\n            'login': 'bastien',\n            'email': 'bastien.hrmanager@example.com',\n            'groups_id': [(6, 0, [group_employee_id, self.ref('hr_holidays.group_hr_holidays_manager')])]\n        }).id\n        self.user_employee_id = Users.create({\n            'name': 'David Employee',\n            'login': 'david',\n            'email': 'david.employee@example.com',\n            'groups_id': [(6, 0, [group_employee_id])]\n        }).id\n\n        \n        self.employee_emp_id = self.env['hr.employee'].create({\n            'name': 'David Employee',\n            'user_id': self.user_employee_id,\n        }).id\n        self.employee_hruser_id = self.env['hr.employee'].create({\n            'name': 'Armande HrUser',\n            'user_id': self.user_hruser_id,\n        }).id\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     find employee group    test users use various tests    hr data ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.tests import common\n\n\nclass TestHrHolidaysBase(common.TransactionCase):\n\n    def setUp(self):\n        super(TestHrHolidaysBase, self).setUp()\n\n        Users = self.env['res.users'].with_context(no_reset_password=True)\n\n        # Find Employee group\n        group_employee_id = self.ref('base.group_user')\n\n        # Test users to use through the various tests\n        self.user_hruser_id = Users.create({\n            'name': 'Armande HrUser',\n            'login': 'Armande',\n            'email': 'armande.hruser@example.com',\n            'groups_id': [(6, 0, [group_employee_id, self.ref('hr_holidays.group_hr_holidays_user')])]\n        }).id\n        self.user_hrmanager_id = Users.create({\n            'name': 'Bastien HrManager',\n            'login': 'bastien',\n            'email': 'bastien.hrmanager@example.com',\n            'groups_id': [(6, 0, [group_employee_id, self.ref('hr_holidays.group_hr_holidays_manager')])]\n        }).id\n        self.user_employee_id = Users.create({\n            'name': 'David Employee',\n            'login': 'david',\n            'email': 'david.employee@example.com',\n            'groups_id': [(6, 0, [group_employee_id])]\n        }).id\n\n        # Hr Data\n        self.employee_emp_id = self.env['hr.employee'].create({\n            'name': 'David Employee',\n            'user_id': self.user_employee_id,\n        }).id\n        self.employee_hruser_id = self.env['hr.employee'].create({\n            'name': 'Armande HrUser',\n            'user_id': self.user_hruser_id,\n        }).id\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "common.py", "id": "5e26cbd4980ae48ad0edf30c180c705c", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hr_holidays/tests/common.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
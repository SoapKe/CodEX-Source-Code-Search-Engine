{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\nfrom odoo.tools import float_compare\n\n\nclass StockWarnInsufficientQty(models.AbstractModel):\n    _name = 'stock.warn.insufficient.qty'\n\n    product_id = fields.Many2one('product.product', 'Product', required=True)\n    location_id = fields.Many2one( 'stock.location', 'Location', domain=\"[('usage', '=', 'internal')]\", required=True)\n    quant_ids = fields.Many2many('stock.quant', compute='_compute_quant_ids')\n\n    @api.one\n    @api.depends('product_id')\n    def _compute_quant_ids(self):\n        self.quant_ids = self.env['stock.quant'].search([\n            ('product_id', '=', self.product_id.id),\n            ('location_id.usage', '=', 'internal')\n        ])\n\n    def action_done(self):\n        raise NotImplementedError()\n\n\nclass StockWarnInsufficientQtyScrap(models.TransientModel):\n    _name = 'stock.warn.insufficient.qty.scrap'\n    _inherit = 'stock.warn.insufficient.qty'\n\n    scrap_id = fields.Many2one('stock.scrap', 'Scrap')\n\n    def action_done(self):\n        return self.scrap_id.do_scrap()\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\nfrom odoo.tools import float_compare\n\n\nclass StockWarnInsufficientQty(models.AbstractModel):\n    _name = 'stock.warn.insufficient.qty'\n\n    product_id = fields.Many2one('product.product', 'Product', required=True)\n    location_id = fields.Many2one( 'stock.location', 'Location', domain=\"[('usage', '=', 'internal')]\", required=True)\n    quant_ids = fields.Many2many('stock.quant', compute='_compute_quant_ids')\n\n    @api.one\n    @api.depends('product_id')\n    def _compute_quant_ids(self):\n        self.quant_ids = self.env['stock.quant'].search([\n            ('product_id', '=', self.product_id.id),\n            ('location_id.usage', '=', 'internal')\n        ])\n\n    def action_done(self):\n        raise NotImplementedError()\n\n\nclass StockWarnInsufficientQtyScrap(models.TransientModel):\n    _name = 'stock.warn.insufficient.qty.scrap'\n    _inherit = 'stock.warn.insufficient.qty'\n\n    scrap_id = fields.Many2one('stock.scrap', 'Scrap')\n\n    def action_done(self):\n        return self.scrap_id.do_scrap()\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "stock_warn_insufficient_qty.py", "id": "c14dd04b843e34fb2241fde141f72d7b", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/stock/wizard/stock_warn_insufficient_qty.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
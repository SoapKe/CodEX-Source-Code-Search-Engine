{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_virtualservice\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of VirtualService Avi RESTful Object\ndescription:\n    - This module is used to configure VirtualService object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    active_standby_se_tag:\n        description:\n            - This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled.\n            - This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine.\n            - Virtualservices with different tags will have different active serviceengines.\n            - If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine.\n            - Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers.\n            - Redistribution is based on the auto redistribute property of the serviceenginegroup.\n            - Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2.\n            - Default value when not specified in API or module is interpreted by Avi Controller as ACTIVE_STANDBY_SE_1.\n    analytics_policy:\n        description:\n            - Determines analytics settings for the application.\n    analytics_profile_ref:\n        description:\n            - Specifies settings related to analytics.\n            - It is a reference to an object of type analyticsprofile.\n    application_profile_ref:\n        description:\n            - Enable application layer specific features for the virtual service.\n            - It is a reference to an object of type applicationprofile.\n    auto_allocate_floating_ip:\n        description:\n            - Auto-allocate floating/elastic ip from the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    auto_allocate_ip:\n        description:\n            - Auto-allocate vip from the provided subnet.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    availability_zone:\n        description:\n            - Availability-zone to place the virtual service.\n            - Field deprecated in 17.1.1.\n    avi_allocated_fip:\n        description:\n            - (internal-use) fip allocated by avi in the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    avi_allocated_vip:\n        description:\n            - (internal-use) vip allocated by avi in the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    client_auth:\n        description:\n            - Http authentication configuration for protected resources.\n    close_client_conn_on_config_update:\n        description:\n            - Close client connection on vs config update.\n            - Field introduced in 17.2.4.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.5\"\n        type: bool\n    cloud_config_cksum:\n        description:\n            - Checksum of cloud configuration for vs.\n            - Internally set by cloud connector.\n    cloud_ref:\n        description:\n            - It is a reference to an object of type cloud.\n    cloud_type:\n        description:\n            - Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver, cloud_docker_ucp,\n            - cloud_rancher, cloud_oshift_k8s, cloud_azure.\n            - Default value when not specified in API or module is interpreted by Avi Controller as CLOUD_NONE.\n    connections_rate_limit:\n        description:\n            - Rate limit the incoming connections to this virtual service.\n    content_rewrite:\n        description:\n            - Profile used to match and rewrite strings in request and/or response body.\n    created_by:\n        description:\n            - Creator name.\n    delay_fairness:\n        description:\n            - Select the algorithm for qos fairness.\n            - This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    description:\n        description:\n            - User defined description for the object.\n    discovered_network_ref:\n        description:\n            - (internal-use) discovered networks providing reachability for client facing virtual service ip.\n            - This field is deprecated.\n            - It is a reference to an object of type network.\n            - Field deprecated in 17.1.1.\n    discovered_networks:\n        description:\n            - (internal-use) discovered networks providing reachability for client facing virtual service ip.\n            - This field is used internally by avi, not editable by the user.\n            - Field deprecated in 17.1.1.\n    discovered_subnet:\n        description:\n            - (internal-use) discovered subnets providing reachability for client facing virtual service ip.\n            - This field is deprecated.\n            - Field deprecated in 17.1.1.\n    dns_info:\n        description:\n            - Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record.\n            - Note that only one of fqdn and dns_info setting is allowed.\n    dns_policies:\n        description:\n            - Dns policies applied on the dns traffic of the virtual service.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    east_west_placement:\n        description:\n            - Force placement on all se's in service group (mesos mode only).\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    enable_autogw:\n        description:\n            - Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway.\n            - Default value when not specified in API or module is interpreted by Avi Controller as True.\n        type: bool\n    enable_rhi:\n        description:\n            - Enable route health injection using the bgp config in the vrf context.\n        type: bool\n    enable_rhi_snat:\n        description:\n            - Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context.\n        type: bool\n    enabled:\n        description:\n            - Enable or disable the virtual service.\n            - Default value when not specified in API or module is interpreted by Avi Controller as True.\n        type: bool\n    error_page_profile_ref:\n        description:\n            - Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated by the proxy.\n            - It is a reference to an object of type errorpageprofile.\n            - Field introduced in 17.2.4.\n        version_added: \"2.5\"\n    floating_ip:\n        description:\n            - Floating ip to associate with this virtual service.\n            - Field deprecated in 17.1.1.\n    floating_subnet_uuid:\n        description:\n            - If auto_allocate_floating_ip is true and more than one floating-ip subnets exist, then the subnet for the floating ip address allocation.\n            - This field is applicable only if the virtualservice belongs to an openstack or aws cloud.\n            - In openstack or aws cloud it is required when auto_allocate_floating_ip is selected.\n            - Field deprecated in 17.1.1.\n    flow_dist:\n        description:\n            - Criteria for flow distribution among ses.\n            - Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT.\n            - Default value when not specified in API or module is interpreted by Avi Controller as LOAD_AWARE.\n    flow_label_type:\n        description:\n            - Criteria for flow labelling.\n            - Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL.\n            - Default value when not specified in API or module is interpreted by Avi Controller as NO_LABEL.\n    fqdn:\n        description:\n            - Dns resolvable, fully qualified domain name of the virtualservice.\n            - Only one of 'fqdn' and 'dns_info' configuration is allowed.\n    host_name_xlate:\n        description:\n            - Translate the host name sent to the servers to this value.\n            - Translate the host name sent from servers back to the value used by the client.\n    http_policies:\n        description:\n            - Http policies applied on the data traffic of the virtual service.\n    ign_pool_net_reach:\n        description:\n            - Ignore pool servers network reachability constraints for virtual service placement.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    ip_address:\n        description:\n            - Ip address of the virtual service.\n            - Field deprecated in 17.1.1.\n    ipam_network_subnet:\n        description:\n            - Subnet and/or network for allocating virtualservice ip by ipam provider module.\n            - Field deprecated in 17.1.1.\n    limit_doser:\n        description:\n            - Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    max_cps_per_client:\n        description:\n            - Maximum connections per second per client ip.\n            - Allowed values are 10-1000.\n            - Special values are 0- 'unlimited'.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 0.\n    microservice_ref:\n        description:\n            - Microservice representing the virtual service.\n            - It is a reference to an object of type microservice.\n    name:\n        description:\n            - Name for the virtual service.\n        required: true\n    network_profile_ref:\n        description:\n            - Determines network settings such as protocol, tcp or udp, and related options for the protocol.\n            - It is a reference to an object of type networkprofile.\n    network_ref:\n        description:\n            - Manually override the network on which the virtual service is placed.\n            - It is a reference to an object of type network.\n            - Field deprecated in 17.1.1.\n    network_security_policy_ref:\n        description:\n            - Network security policies for the virtual service.\n            - It is a reference to an object of type networksecuritypolicy.\n    nsx_securitygroup:\n        description:\n            - A list of nsx service groups representing the clients which can access the virtual ip of the virtual service.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    performance_limits:\n        description:\n            - Optional settings that determine performance limits like max connections or bandwdith etc.\n    pool_group_ref:\n        description:\n            - The pool group is an object that contains pools.\n            - It is a reference to an object of type poolgroup.\n    pool_ref:\n        description:\n            - The pool is an object that contains destination servers and related attributes such as load-balancing and persistence.\n            - It is a reference to an object of type pool.\n    port_uuid:\n        description:\n            - (internal-use) network port assigned to the virtual service ip address.\n            - Field deprecated in 17.1.1.\n    remove_listening_port_on_vs_down:\n        description:\n            - Remove listening port if virtualservice is down.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    requests_rate_limit:\n        description:\n            - Rate limit the incoming requests to this virtual service.\n    scaleout_ecmp:\n        description:\n            - Disable re-distribution of flows across service engines for a virtual service.\n            - Enable if the network itself performs flow hashing with ecmp in environments such as gcp.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    se_group_ref:\n        description:\n            - The service engine group to use for this virtual service.\n            - Moving to a new se group is disruptive to existing connections for this vs.\n            - It is a reference to an object of type serviceenginegroup.\n    server_network_profile_ref:\n        description:\n            - Determines the network settings profile for the server side of tcp proxied connections.\n            - Leave blank to use the same settings as the client to vs side of the connection.\n            - It is a reference to an object of type networkprofile.\n    service_metadata:\n        description:\n            - Metadata pertaining to the service provided by this virtual service.\n            - In openshift/kubernetes environments, egress pod info is stored.\n            - Any user input to this field will be overwritten by avi vantage.\n        version_added: \"2.4\"\n    service_pool_select:\n        description:\n            - Select pool based on destination port.\n    services:\n        description:\n            - List of services defined for this virtual service.\n    sideband_profile:\n        description:\n            - Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc.\n        version_added: \"2.4\"\n    snat_ip:\n        description:\n            - Nat'ted floating source ip address(es) for upstream connection to servers.\n    sp_pool_refs:\n        description:\n            - Gslb pools used to manage site-persistence functionality.\n            - Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager.\n            - This is a read-only field for the user.\n            - It is a reference to an object of type pool.\n            - Field introduced in 17.2.2.\n        version_added: \"2.5\"\n    ssl_key_and_certificate_refs:\n        description:\n            - Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections.\n            - It is a reference to an object of type sslkeyandcertificate.\n    ssl_profile_ref:\n        description:\n            - Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections.\n            - It is a reference to an object of type sslprofile.\n    ssl_sess_cache_avg_size:\n        description:\n            - Expected number of ssl session cache entries (may be exceeded).\n            - Allowed values are 1024-16383.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 1024.\n    static_dns_records:\n        description:\n            - List of static dns records applied to this virtual service.\n            - These are static entries and no health monitoring is performed against the ip addresses.\n    subnet:\n        description:\n            - Subnet providing reachability for client facing virtual service ip.\n            - Field deprecated in 17.1.1.\n    subnet_uuid:\n        description:\n            - It represents subnet for the virtual service ip address allocation when auto_allocate_ip is true.it is only applicable in openstack or aws cloud.\n            - This field is required if auto_allocate_ip is true.\n            - Field deprecated in 17.1.1.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    traffic_clone_profile_ref:\n        description:\n            - Server network or list of servers for cloning traffic.\n            - It is a reference to an object of type trafficcloneprofile.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    type:\n        description:\n            - Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service.\n            - Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD.\n            - Default value when not specified in API or module is interpreted by Avi Controller as VS_TYPE_NORMAL.\n    url:\n        description:\n            - Avi controller URL of the object.\n    use_bridge_ip_as_vip:\n        description:\n            - Use bridge ip as vip on each host in mesos deployments.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    use_vip_as_snat:\n        description:\n            - Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine interface ip.\n            - The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode.\n            - Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes.\n            - Field introduced in 17.1.9,17.2.3.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.5\"\n        type: bool\n    uuid:\n        description:\n            - Uuid of the virtualservice.\n    vh_domain_name:\n        description:\n            - The exact name requested from the client's sni-enabled tls hello domain name field.\n            - If this is a match, the parent vs will forward the connection to this child vs.\n    vh_parent_vs_uuid:\n        description:\n            - Specifies the virtual service acting as virtual hosting (sni) parent.\n    vip:\n        description:\n            - List of virtual service ips.\n            - While creating a 'shared vs',please use vsvip_ref to point to the shared entities.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    vrf_context_ref:\n        description:\n            - Virtual routing context that the virtual service is bound to.\n            - This is used to provide the isolation of the set of networks the application is attached to.\n            - It is a reference to an object of type vrfcontext.\n    vs_datascripts:\n        description:\n            - Datascripts applied on the data traffic of the virtual service.\n    vsvip_ref:\n        description:\n            - Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services.\n            - It is a reference to an object of type vsvip.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    waf_policy_ref:\n        description:\n            - Waf policy for the virtual service.\n            - It is a reference to an object of type wafpolicy.\n            - Field introduced in 17.2.1.\n        version_added: \"2.5\"\n    weight:\n        description:\n            - The quality of service weight to assign to traffic transmitted from this virtual service.\n            - A higher weight will prioritize traffic versus other virtual services sharing the same service engines.\n            - Allowed values are 1-128.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 1.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Create SSL Virtual Service using Pool testpool2\n  avi_virtualservice:\n    controller: 10.10.27.90\n    username: admin\n    password: AviNetworks123!\n    name: newtestvs\n    state: present\n    performance_limits:\n    max_concurrent_connections: 1000\n    services:\n        - port: 443\n          enable_ssl: true\n        - port: 80\n    ssl_profile_ref: '/api/sslprofile?name=System-Standard'\n    application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'\n    ssl_key_and_certificate_refs:\n        - '/api/sslkeyandcertificate?name=System-Default-Cert'\n    ip_address:\n    addr: 10.90.131.103\n    type: V4\n    pool_ref: '/api/pool?name=testpool2'\n\"\"\"\n\nRETURN = '''\nobj:\n    description: VirtualService (api/virtualservice) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        active_standby_se_tag=dict(type='str',),\n        analytics_policy=dict(type='dict',),\n        analytics_profile_ref=dict(type='str',),\n        application_profile_ref=dict(type='str',),\n        auto_allocate_floating_ip=dict(type='bool',),\n        auto_allocate_ip=dict(type='bool',),\n        availability_zone=dict(type='str',),\n        avi_allocated_fip=dict(type='bool',),\n        avi_allocated_vip=dict(type='bool',),\n        client_auth=dict(type='dict',),\n        close_client_conn_on_config_update=dict(type='bool',),\n        cloud_config_cksum=dict(type='str',),\n        cloud_ref=dict(type='str',),\n        cloud_type=dict(type='str',),\n        connections_rate_limit=dict(type='dict',),\n        content_rewrite=dict(type='dict',),\n        created_by=dict(type='str',),\n        delay_fairness=dict(type='bool',),\n        description=dict(type='str',),\n        discovered_network_ref=dict(type='list',),\n        discovered_networks=dict(type='list',),\n        discovered_subnet=dict(type='list',),\n        dns_info=dict(type='list',),\n        dns_policies=dict(type='list',),\n        east_west_placement=dict(type='bool',),\n        enable_autogw=dict(type='bool',),\n        enable_rhi=dict(type='bool',),\n        enable_rhi_snat=dict(type='bool',),\n        enabled=dict(type='bool',),\n        error_page_profile_ref=dict(type='str',),\n        floating_ip=dict(type='dict',),\n        floating_subnet_uuid=dict(type='str',),\n        flow_dist=dict(type='str',),\n        flow_label_type=dict(type='str',),\n        fqdn=dict(type='str',),\n        host_name_xlate=dict(type='str',),\n        http_policies=dict(type='list',),\n        ign_pool_net_reach=dict(type='bool',),\n        ip_address=dict(type='dict',),\n        ipam_network_subnet=dict(type='dict',),\n        limit_doser=dict(type='bool',),\n        max_cps_per_client=dict(type='int',),\n        microservice_ref=dict(type='str',),\n        name=dict(type='str', required=True),\n        network_profile_ref=dict(type='str',),\n        network_ref=dict(type='str',),\n        network_security_policy_ref=dict(type='str',),\n        nsx_securitygroup=dict(type='list',),\n        performance_limits=dict(type='dict',),\n        pool_group_ref=dict(type='str',),\n        pool_ref=dict(type='str',),\n        port_uuid=dict(type='str',),\n        remove_listening_port_on_vs_down=dict(type='bool',),\n        requests_rate_limit=dict(type='dict',),\n        scaleout_ecmp=dict(type='bool',),\n        se_group_ref=dict(type='str',),\n        server_network_profile_ref=dict(type='str',),\n        service_metadata=dict(type='str',),\n        service_pool_select=dict(type='list',),\n        services=dict(type='list',),\n        sideband_profile=dict(type='dict',),\n        snat_ip=dict(type='list',),\n        sp_pool_refs=dict(type='list',),\n        ssl_key_and_certificate_refs=dict(type='list',),\n        ssl_profile_ref=dict(type='str',),\n        ssl_sess_cache_avg_size=dict(type='int',),\n        static_dns_records=dict(type='list',),\n        subnet=dict(type='dict',),\n        subnet_uuid=dict(type='str',),\n        tenant_ref=dict(type='str',),\n        traffic_clone_profile_ref=dict(type='str',),\n        type=dict(type='str',),\n        url=dict(type='str',),\n        use_bridge_ip_as_vip=dict(type='bool',),\n        use_vip_as_snat=dict(type='bool',),\n        uuid=dict(type='str',),\n        vh_domain_name=dict(type='list',),\n        vh_parent_vs_uuid=dict(type='str',),\n        vip=dict(type='list',),\n        vrf_context_ref=dict(type='str',),\n        vs_datascripts=dict(type='list',),\n        vsvip_ref=dict(type='str',),\n        waf_policy_ref=dict(type='str',),\n        weight=dict(type='int',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'virtualservice',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  create ssl virtual service using pool testpool2   avi virtualservice      controller  10 10 27 90     username  admin     password  avinetworks123      name  newtestvs     state  present     performance limits      max concurrent connections  1000     services            port  443           enable ssl  true           port  80     ssl profile ref    api sslprofile name system standard      application profile ref    api applicationprofile name system secure http      ssl key certificate refs              api sslkeyandcertificate name system default cert      ip address      addr  10 90 131 103     type  v4     pool ref    api pool name testpool2               module  avi virtualservice author  gaurav rastogi (grastogi avinetworks com)  short description  module setup virtualservice avi restful object description        this module used configure virtualservice object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 3  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       active standby se tag          description                this configuration applies virtualservice legacy active standby ha mode load distribution among active standby enabled                this field used tag virtualservice virtualservices tag share active serviceengine                virtualservices different tags different active serviceengines                if one serviceengine serviceenginegroup fails  virtualservices end using active serviceengine                redistribution virtualservices either manual automated failed serviceengine recovers                redistribution based auto redistribute property serviceenginegroup                enum options   active standby se 1  active standby se 2                default value specified api module interpreted avi controller active standby se 1      analytics policy          description                determines analytics settings application      analytics profile ref          description                specifies settings related analytics                it reference object type analyticsprofile      application profile ref          description                enable application layer specific features virtual service                it reference object type applicationprofile      auto allocate floating ip          description                auto allocate floating elastic ip cloud infrastructure                field deprecated 17 1 1                default value specified api module interpreted avi controller false          type  bool     auto allocate ip          description                auto allocate vip provided subnet                field deprecated 17 1 1                default value specified api module interpreted avi controller false          type  bool     availability zone          description                availability zone place virtual service                field deprecated 17 1 1      avi allocated fip          description                (internal use) fip allocated avi cloud infrastructure                field deprecated 17 1 1                default value specified api module interpreted avi controller false          type  bool     avi allocated vip          description                (internal use) vip allocated avi cloud infrastructure                field deprecated 17 1 1                default value specified api module interpreted avi controller false          type  bool     client auth          description                http authentication configuration protected resources      close client conn config update          description                close client connection vs config update                field introduced 17 2 4                default value specified api module interpreted avi controller false          version added   2 5          type  bool     cloud config cksum          description                checksum cloud configuration vs                internally set cloud connector      cloud ref          description                it reference object type cloud      cloud type          description                enum options   cloud none  cloud vcenter  cloud openstack  cloud aws  cloud vca  cloud apic  cloud mesos  cloud linuxserver  cloud docker ucp                cloud rancher  cloud oshift k8s  cloud azure                default value specified api module interpreted avi controller cloud none      connections rate limit          description                rate limit incoming connections virtual service      content rewrite          description                profile used match rewrite strings request response body      created          description                creator name      delay fairness          description                select algorithm qos fairness                this determines multiple virtual services sharing service engines prioritize traffic congested network                default value specified api module interpreted avi controller false          type  bool     description          description                user defined description object      discovered network ref          description                (internal use) discovered networks providing reachability client facing virtual service ip                this field deprecated                it reference object type network                field deprecated 17 1 1      discovered networks          description                (internal use) discovered networks providing reachability client facing virtual service ip                this field used internally avi  editable user                field deprecated 17 1 1      discovered subnet          description                (internal use) discovered subnets providing reachability client facing virtual service ip                this field deprecated                field deprecated 17 1 1      dns info          description                service discovery specific data including fully qualified domain name  type time live dns record                note one fqdn dns info setting allowed      dns policies          description                dns policies applied dns traffic virtual service                field introduced 17 1 1          version added   2 4      east west placement          description                force placement se service group (mesos mode only)                default value specified api module interpreted avi controller false          type  bool     enable autogw          description                response traffic clients sent back source mac address connection  rather statically sent default gateway                default value specified api module interpreted avi controller true          type  bool     enable rhi          description                enable route health injection using bgp config vrf context          type  bool     enable rhi snat          description                enable route health injection source nat ted floating ip address using bgp config vrf context          type  bool     enabled          description                enable disable virtual service                default value specified api module interpreted avi controller true          type  bool     error page profile ref          description                error page profile used virtualservice profile used send custom error page client generated proxy                it reference object type errorpageprofile                field introduced 17 2 4          version added   2 5      floating ip          description                floating ip associate virtual service                field deprecated 17 1 1      floating subnet uuid          description                if auto allocate floating ip true one floating ip subnets exist  subnet floating ip address allocation                this field applicable virtualservice belongs openstack aws cloud                in openstack aws cloud required auto allocate floating ip selected                field deprecated 17 1 1      flow dist          description                criteria flow distribution among ses                enum options   load aware  consistent hash source ip address  consistent hash source ip address and port                default value specified api module interpreted avi controller load aware      flow label type          description                criteria flow labelling                enum options   no label  application label  service label                default value specified api module interpreted avi controller no label      fqdn          description                dns resolvable  fully qualified domain name virtualservice                only one  fqdn   dns info  configuration allowed      host name xlate          description                translate host name sent servers value                translate host name sent servers back value used client      http policies          description                http policies applied data traffic virtual service      ign pool net reach          description                ignore pool servers network reachability constraints virtual service placement                default value specified api module interpreted avi controller false          type  bool     ip address          description                ip address virtual service                field deprecated 17 1 1      ipam network subnet          description                subnet network allocating virtualservice ip ipam provider module                field deprecated 17 1 1      limit doser          description                limit potential dos attackers exceed max cps per client significantly fraction max cps per client                default value specified api module interpreted avi controller false          type  bool     max cps per client          description                maximum connections per second per client ip                allowed values 10 1000                special values 0   unlimited                 default value specified api module interpreted avi controller 0      microservice ref          description                microservice representing virtual service                it reference object type microservice      name          description                name virtual service          required  true     network profile ref          description                determines network settings protocol  tcp udp  related options protocol                it reference object type networkprofile      network ref          description                manually override network virtual service placed                it reference object type network                field deprecated 17 1 1      network security policy ref          description                network security policies virtual service                it reference object type networksecuritypolicy      nsx securitygroup          description                a list nsx service groups representing clients access virtual ip virtual service                field introduced 17 1 1          version added   2 4      performance limits          description                optional settings determine performance limits like max connections bandwdith etc      pool group ref          description                the pool group object contains pools                it reference object type poolgroup      pool ref          description                the pool object contains destination servers related attributes load balancing persistence                it reference object type pool      port uuid          description                (internal use) network port assigned virtual service ip address                field deprecated 17 1 1      remove listening port vs          description                remove listening port virtualservice                default value specified api module interpreted avi controller false          type  bool     requests rate limit          description                rate limit incoming requests virtual service      scaleout ecmp          description                disable distribution flows across service engines virtual service                enable network performs flow hashing ecmp environments gcp                default value specified api module interpreted avi controller false          type  bool     se group ref          description                the service engine group use virtual service                moving new se group disruptive existing connections vs                it reference object type serviceenginegroup      server network profile ref          description                determines network settings profile server side tcp proxied connections                leave blank use settings client vs side connection                it reference object type networkprofile      service metadata          description                metadata pertaining service provided virtual service                in openshift kubernetes environments  egress pod info stored                any user input field overwritten avi vantage          version added   2 4      service pool select          description                select pool based destination port      services          description                list services defined virtual service      sideband profile          description                sideband configuration used virtualservice used sending traffic sideband vips external inspection etc          version added   2 4      snat ip          description                nat ted floating source ip address(es) upstream connection servers      sp pool refs          description                gslb pools used manage site persistence functionality                each site persistence pool contains virtualservices sites  auto generated gslb manager                this read field user                it reference object type pool                field introduced 17 2 2          version added   2 5      ssl key certificate refs          description                select create one two certificates  ec rsa  presented ssl tls terminated connections                it reference object type sslkeyandcertificate      ssl profile ref          description                determines set ssl versions ciphers accept ssl tls terminated connections                it reference object type sslprofile      ssl sess cache avg size          description                expected number ssl session cache entries (may exceeded)                allowed values 1024 16383                default value specified api module interpreted avi controller 1024      static dns records          description                list static dns records applied virtual service                these static entries health monitoring performed ip addresses      subnet          description                subnet providing reachability client facing virtual service ip                field deprecated 17 1 1      subnet uuid          description                it represents subnet virtual service ip address allocation auto allocate ip true applicable openstack aws cloud                this field required auto allocate ip true                field deprecated 17 1 1      tenant ref          description                it reference object type tenant      traffic clone profile ref          description                server network list servers cloning traffic                it reference object type trafficcloneprofile                field introduced 17 1 1          version added   2 4      type          description                specify normal virtual service  parent child sni enabled virtual hosted virtual service                enum options   vs type normal  vs type vh parent  vs type vh child                default value specified api module interpreted avi controller vs type normal      url          description                avi controller url object      use bridge ip vip          description                use bridge ip vip host mesos deployments                default value specified api module interpreted avi controller false          type  bool     use vip snat          description                use virtual ip snat ip health monitoring sending traffic backend servers instead service engine interface ip                the caveat enabling option virtualservice cannot configued active active ha mode                dns based multi vip solution used ha   non disruptive upgrade purposes                field introduced 17 1 9 17 2 3                default value specified api module interpreted avi controller false          version added   2 5          type  bool     uuid          description                uuid virtualservice      vh domain name          description                the exact name requested client sni enabled tls hello domain name field                if match  parent vs forward connection child vs      vh parent vs uuid          description                specifies virtual service acting virtual hosting (sni) parent      vip          description                list virtual service ips                while creating  shared vs  please use vsvip ref point shared entities                field introduced 17 1 1          version added   2 4      vrf context ref          description                virtual routing context virtual service bound                this used provide isolation set networks application attached                it reference object type vrfcontext      vs datascripts          description                datascripts applied data traffic virtual service      vsvip ref          description                mostly used creation shared vs  field refers entities shared across virtual services                it reference object type vsvip                field introduced 17 1 1          version added   2 4      waf policy ref          description                waf policy virtual service                it reference object type wafpolicy                field introduced 17 2 1          version added   2 5      weight          description                the quality service weight assign traffic transmitted virtual service                a higher weight prioritize traffic versus virtual services sharing service engines                allowed values 1 128                default value specified api module interpreted avi controller 1  extends documentation fragment        avi      examples         name  create ssl virtual service using pool testpool2   avi virtualservice      controller  10 10 27 90     username  admin     password  avinetworks123      name  newtestvs     state  present     performance limits      max concurrent connections  1000     services            port  443           enable ssl  true           port  80     ssl profile ref    api sslprofile name system standard      application profile ref    api applicationprofile name system secure http      ssl key certificate refs              api sslkeyandcertificate name system default cert      ip address      addr  10 90 131 103     type  v4     pool ref    api pool name testpool2       return       obj      description  virtualservice (api virtualservice) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_virtualservice\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of VirtualService Avi RESTful Object\ndescription:\n    - This module is used to configure VirtualService object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    active_standby_se_tag:\n        description:\n            - This configuration only applies if the virtualservice is in legacy active standby ha mode and load distribution among active standby is enabled.\n            - This field is used to tag the virtualservice so that virtualservices with the same tag will share the same active serviceengine.\n            - Virtualservices with different tags will have different active serviceengines.\n            - If one of the serviceengine's in the serviceenginegroup fails, all virtualservices will end up using the same active serviceengine.\n            - Redistribution of the virtualservices can be either manual or automated when the failed serviceengine recovers.\n            - Redistribution is based on the auto redistribute property of the serviceenginegroup.\n            - Enum options - ACTIVE_STANDBY_SE_1, ACTIVE_STANDBY_SE_2.\n            - Default value when not specified in API or module is interpreted by Avi Controller as ACTIVE_STANDBY_SE_1.\n    analytics_policy:\n        description:\n            - Determines analytics settings for the application.\n    analytics_profile_ref:\n        description:\n            - Specifies settings related to analytics.\n            - It is a reference to an object of type analyticsprofile.\n    application_profile_ref:\n        description:\n            - Enable application layer specific features for the virtual service.\n            - It is a reference to an object of type applicationprofile.\n    auto_allocate_floating_ip:\n        description:\n            - Auto-allocate floating/elastic ip from the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    auto_allocate_ip:\n        description:\n            - Auto-allocate vip from the provided subnet.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    availability_zone:\n        description:\n            - Availability-zone to place the virtual service.\n            - Field deprecated in 17.1.1.\n    avi_allocated_fip:\n        description:\n            - (internal-use) fip allocated by avi in the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    avi_allocated_vip:\n        description:\n            - (internal-use) vip allocated by avi in the cloud infrastructure.\n            - Field deprecated in 17.1.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    client_auth:\n        description:\n            - Http authentication configuration for protected resources.\n    close_client_conn_on_config_update:\n        description:\n            - Close client connection on vs config update.\n            - Field introduced in 17.2.4.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.5\"\n        type: bool\n    cloud_config_cksum:\n        description:\n            - Checksum of cloud configuration for vs.\n            - Internally set by cloud connector.\n    cloud_ref:\n        description:\n            - It is a reference to an object of type cloud.\n    cloud_type:\n        description:\n            - Enum options - cloud_none, cloud_vcenter, cloud_openstack, cloud_aws, cloud_vca, cloud_apic, cloud_mesos, cloud_linuxserver, cloud_docker_ucp,\n            - cloud_rancher, cloud_oshift_k8s, cloud_azure.\n            - Default value when not specified in API or module is interpreted by Avi Controller as CLOUD_NONE.\n    connections_rate_limit:\n        description:\n            - Rate limit the incoming connections to this virtual service.\n    content_rewrite:\n        description:\n            - Profile used to match and rewrite strings in request and/or response body.\n    created_by:\n        description:\n            - Creator name.\n    delay_fairness:\n        description:\n            - Select the algorithm for qos fairness.\n            - This determines how multiple virtual services sharing the same service engines will prioritize traffic over a congested network.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    description:\n        description:\n            - User defined description for the object.\n    discovered_network_ref:\n        description:\n            - (internal-use) discovered networks providing reachability for client facing virtual service ip.\n            - This field is deprecated.\n            - It is a reference to an object of type network.\n            - Field deprecated in 17.1.1.\n    discovered_networks:\n        description:\n            - (internal-use) discovered networks providing reachability for client facing virtual service ip.\n            - This field is used internally by avi, not editable by the user.\n            - Field deprecated in 17.1.1.\n    discovered_subnet:\n        description:\n            - (internal-use) discovered subnets providing reachability for client facing virtual service ip.\n            - This field is deprecated.\n            - Field deprecated in 17.1.1.\n    dns_info:\n        description:\n            - Service discovery specific data including fully qualified domain name, type and time-to-live of the dns record.\n            - Note that only one of fqdn and dns_info setting is allowed.\n    dns_policies:\n        description:\n            - Dns policies applied on the dns traffic of the virtual service.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    east_west_placement:\n        description:\n            - Force placement on all se's in service group (mesos mode only).\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    enable_autogw:\n        description:\n            - Response traffic to clients will be sent back to the source mac address of the connection, rather than statically sent to a default gateway.\n            - Default value when not specified in API or module is interpreted by Avi Controller as True.\n        type: bool\n    enable_rhi:\n        description:\n            - Enable route health injection using the bgp config in the vrf context.\n        type: bool\n    enable_rhi_snat:\n        description:\n            - Enable route health injection for source nat'ted floating ip address using the bgp config in the vrf context.\n        type: bool\n    enabled:\n        description:\n            - Enable or disable the virtual service.\n            - Default value when not specified in API or module is interpreted by Avi Controller as True.\n        type: bool\n    error_page_profile_ref:\n        description:\n            - Error page profile to be used for this virtualservice.this profile is used to send the custom error page to the client generated by the proxy.\n            - It is a reference to an object of type errorpageprofile.\n            - Field introduced in 17.2.4.\n        version_added: \"2.5\"\n    floating_ip:\n        description:\n            - Floating ip to associate with this virtual service.\n            - Field deprecated in 17.1.1.\n    floating_subnet_uuid:\n        description:\n            - If auto_allocate_floating_ip is true and more than one floating-ip subnets exist, then the subnet for the floating ip address allocation.\n            - This field is applicable only if the virtualservice belongs to an openstack or aws cloud.\n            - In openstack or aws cloud it is required when auto_allocate_floating_ip is selected.\n            - Field deprecated in 17.1.1.\n    flow_dist:\n        description:\n            - Criteria for flow distribution among ses.\n            - Enum options - LOAD_AWARE, CONSISTENT_HASH_SOURCE_IP_ADDRESS, CONSISTENT_HASH_SOURCE_IP_ADDRESS_AND_PORT.\n            - Default value when not specified in API or module is interpreted by Avi Controller as LOAD_AWARE.\n    flow_label_type:\n        description:\n            - Criteria for flow labelling.\n            - Enum options - NO_LABEL, APPLICATION_LABEL, SERVICE_LABEL.\n            - Default value when not specified in API or module is interpreted by Avi Controller as NO_LABEL.\n    fqdn:\n        description:\n            - Dns resolvable, fully qualified domain name of the virtualservice.\n            - Only one of 'fqdn' and 'dns_info' configuration is allowed.\n    host_name_xlate:\n        description:\n            - Translate the host name sent to the servers to this value.\n            - Translate the host name sent from servers back to the value used by the client.\n    http_policies:\n        description:\n            - Http policies applied on the data traffic of the virtual service.\n    ign_pool_net_reach:\n        description:\n            - Ignore pool servers network reachability constraints for virtual service placement.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    ip_address:\n        description:\n            - Ip address of the virtual service.\n            - Field deprecated in 17.1.1.\n    ipam_network_subnet:\n        description:\n            - Subnet and/or network for allocating virtualservice ip by ipam provider module.\n            - Field deprecated in 17.1.1.\n    limit_doser:\n        description:\n            - Limit potential dos attackers who exceed max_cps_per_client significantly to a fraction of max_cps_per_client for a while.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    max_cps_per_client:\n        description:\n            - Maximum connections per second per client ip.\n            - Allowed values are 10-1000.\n            - Special values are 0- 'unlimited'.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 0.\n    microservice_ref:\n        description:\n            - Microservice representing the virtual service.\n            - It is a reference to an object of type microservice.\n    name:\n        description:\n            - Name for the virtual service.\n        required: true\n    network_profile_ref:\n        description:\n            - Determines network settings such as protocol, tcp or udp, and related options for the protocol.\n            - It is a reference to an object of type networkprofile.\n    network_ref:\n        description:\n            - Manually override the network on which the virtual service is placed.\n            - It is a reference to an object of type network.\n            - Field deprecated in 17.1.1.\n    network_security_policy_ref:\n        description:\n            - Network security policies for the virtual service.\n            - It is a reference to an object of type networksecuritypolicy.\n    nsx_securitygroup:\n        description:\n            - A list of nsx service groups representing the clients which can access the virtual ip of the virtual service.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    performance_limits:\n        description:\n            - Optional settings that determine performance limits like max connections or bandwdith etc.\n    pool_group_ref:\n        description:\n            - The pool group is an object that contains pools.\n            - It is a reference to an object of type poolgroup.\n    pool_ref:\n        description:\n            - The pool is an object that contains destination servers and related attributes such as load-balancing and persistence.\n            - It is a reference to an object of type pool.\n    port_uuid:\n        description:\n            - (internal-use) network port assigned to the virtual service ip address.\n            - Field deprecated in 17.1.1.\n    remove_listening_port_on_vs_down:\n        description:\n            - Remove listening port if virtualservice is down.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    requests_rate_limit:\n        description:\n            - Rate limit the incoming requests to this virtual service.\n    scaleout_ecmp:\n        description:\n            - Disable re-distribution of flows across service engines for a virtual service.\n            - Enable if the network itself performs flow hashing with ecmp in environments such as gcp.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    se_group_ref:\n        description:\n            - The service engine group to use for this virtual service.\n            - Moving to a new se group is disruptive to existing connections for this vs.\n            - It is a reference to an object of type serviceenginegroup.\n    server_network_profile_ref:\n        description:\n            - Determines the network settings profile for the server side of tcp proxied connections.\n            - Leave blank to use the same settings as the client to vs side of the connection.\n            - It is a reference to an object of type networkprofile.\n    service_metadata:\n        description:\n            - Metadata pertaining to the service provided by this virtual service.\n            - In openshift/kubernetes environments, egress pod info is stored.\n            - Any user input to this field will be overwritten by avi vantage.\n        version_added: \"2.4\"\n    service_pool_select:\n        description:\n            - Select pool based on destination port.\n    services:\n        description:\n            - List of services defined for this virtual service.\n    sideband_profile:\n        description:\n            - Sideband configuration to be used for this virtualservice.it can be used for sending traffic to sideband vips for external inspection etc.\n        version_added: \"2.4\"\n    snat_ip:\n        description:\n            - Nat'ted floating source ip address(es) for upstream connection to servers.\n    sp_pool_refs:\n        description:\n            - Gslb pools used to manage site-persistence functionality.\n            - Each site-persistence pool contains the virtualservices in all the other sites, that is auto-generated by the gslb manager.\n            - This is a read-only field for the user.\n            - It is a reference to an object of type pool.\n            - Field introduced in 17.2.2.\n        version_added: \"2.5\"\n    ssl_key_and_certificate_refs:\n        description:\n            - Select or create one or two certificates, ec and/or rsa, that will be presented to ssl/tls terminated connections.\n            - It is a reference to an object of type sslkeyandcertificate.\n    ssl_profile_ref:\n        description:\n            - Determines the set of ssl versions and ciphers to accept for ssl/tls terminated connections.\n            - It is a reference to an object of type sslprofile.\n    ssl_sess_cache_avg_size:\n        description:\n            - Expected number of ssl session cache entries (may be exceeded).\n            - Allowed values are 1024-16383.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 1024.\n    static_dns_records:\n        description:\n            - List of static dns records applied to this virtual service.\n            - These are static entries and no health monitoring is performed against the ip addresses.\n    subnet:\n        description:\n            - Subnet providing reachability for client facing virtual service ip.\n            - Field deprecated in 17.1.1.\n    subnet_uuid:\n        description:\n            - It represents subnet for the virtual service ip address allocation when auto_allocate_ip is true.it is only applicable in openstack or aws cloud.\n            - This field is required if auto_allocate_ip is true.\n            - Field deprecated in 17.1.1.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    traffic_clone_profile_ref:\n        description:\n            - Server network or list of servers for cloning traffic.\n            - It is a reference to an object of type trafficcloneprofile.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    type:\n        description:\n            - Specify if this is a normal virtual service, or if it is the parent or child of an sni-enabled virtual hosted virtual service.\n            - Enum options - VS_TYPE_NORMAL, VS_TYPE_VH_PARENT, VS_TYPE_VH_CHILD.\n            - Default value when not specified in API or module is interpreted by Avi Controller as VS_TYPE_NORMAL.\n    url:\n        description:\n            - Avi controller URL of the object.\n    use_bridge_ip_as_vip:\n        description:\n            - Use bridge ip as vip on each host in mesos deployments.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    use_vip_as_snat:\n        description:\n            - Use the virtual ip as the snat ip for health monitoring and sending traffic to the backend servers instead of the service engine interface ip.\n            - The caveat of enabling this option is that the virtualservice cannot be configued in an active-active ha mode.\n            - Dns based multi vip solution has to be used for ha & non-disruptive upgrade purposes.\n            - Field introduced in 17.1.9,17.2.3.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.5\"\n        type: bool\n    uuid:\n        description:\n            - Uuid of the virtualservice.\n    vh_domain_name:\n        description:\n            - The exact name requested from the client's sni-enabled tls hello domain name field.\n            - If this is a match, the parent vs will forward the connection to this child vs.\n    vh_parent_vs_uuid:\n        description:\n            - Specifies the virtual service acting as virtual hosting (sni) parent.\n    vip:\n        description:\n            - List of virtual service ips.\n            - While creating a 'shared vs',please use vsvip_ref to point to the shared entities.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    vrf_context_ref:\n        description:\n            - Virtual routing context that the virtual service is bound to.\n            - This is used to provide the isolation of the set of networks the application is attached to.\n            - It is a reference to an object of type vrfcontext.\n    vs_datascripts:\n        description:\n            - Datascripts applied on the data traffic of the virtual service.\n    vsvip_ref:\n        description:\n            - Mostly used during the creation of shared vs, this field refers to entities that can be shared across virtual services.\n            - It is a reference to an object of type vsvip.\n            - Field introduced in 17.1.1.\n        version_added: \"2.4\"\n    waf_policy_ref:\n        description:\n            - Waf policy for the virtual service.\n            - It is a reference to an object of type wafpolicy.\n            - Field introduced in 17.2.1.\n        version_added: \"2.5\"\n    weight:\n        description:\n            - The quality of service weight to assign to traffic transmitted from this virtual service.\n            - A higher weight will prioritize traffic versus other virtual services sharing the same service engines.\n            - Allowed values are 1-128.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 1.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Create SSL Virtual Service using Pool testpool2\n  avi_virtualservice:\n    controller: 10.10.27.90\n    username: admin\n    password: AviNetworks123!\n    name: newtestvs\n    state: present\n    performance_limits:\n    max_concurrent_connections: 1000\n    services:\n        - port: 443\n          enable_ssl: true\n        - port: 80\n    ssl_profile_ref: '/api/sslprofile?name=System-Standard'\n    application_profile_ref: '/api/applicationprofile?name=System-Secure-HTTP'\n    ssl_key_and_certificate_refs:\n        - '/api/sslkeyandcertificate?name=System-Default-Cert'\n    ip_address:\n    addr: 10.90.131.103\n    type: V4\n    pool_ref: '/api/pool?name=testpool2'\n\"\"\"\n\nRETURN = '''\nobj:\n    description: VirtualService (api/virtualservice) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        active_standby_se_tag=dict(type='str',),\n        analytics_policy=dict(type='dict',),\n        analytics_profile_ref=dict(type='str',),\n        application_profile_ref=dict(type='str',),\n        auto_allocate_floating_ip=dict(type='bool',),\n        auto_allocate_ip=dict(type='bool',),\n        availability_zone=dict(type='str',),\n        avi_allocated_fip=dict(type='bool',),\n        avi_allocated_vip=dict(type='bool',),\n        client_auth=dict(type='dict',),\n        close_client_conn_on_config_update=dict(type='bool',),\n        cloud_config_cksum=dict(type='str',),\n        cloud_ref=dict(type='str',),\n        cloud_type=dict(type='str',),\n        connections_rate_limit=dict(type='dict',),\n        content_rewrite=dict(type='dict',),\n        created_by=dict(type='str',),\n        delay_fairness=dict(type='bool',),\n        description=dict(type='str',),\n        discovered_network_ref=dict(type='list',),\n        discovered_networks=dict(type='list',),\n        discovered_subnet=dict(type='list',),\n        dns_info=dict(type='list',),\n        dns_policies=dict(type='list',),\n        east_west_placement=dict(type='bool',),\n        enable_autogw=dict(type='bool',),\n        enable_rhi=dict(type='bool',),\n        enable_rhi_snat=dict(type='bool',),\n        enabled=dict(type='bool',),\n        error_page_profile_ref=dict(type='str',),\n        floating_ip=dict(type='dict',),\n        floating_subnet_uuid=dict(type='str',),\n        flow_dist=dict(type='str',),\n        flow_label_type=dict(type='str',),\n        fqdn=dict(type='str',),\n        host_name_xlate=dict(type='str',),\n        http_policies=dict(type='list',),\n        ign_pool_net_reach=dict(type='bool',),\n        ip_address=dict(type='dict',),\n        ipam_network_subnet=dict(type='dict',),\n        limit_doser=dict(type='bool',),\n        max_cps_per_client=dict(type='int',),\n        microservice_ref=dict(type='str',),\n        name=dict(type='str', required=True),\n        network_profile_ref=dict(type='str',),\n        network_ref=dict(type='str',),\n        network_security_policy_ref=dict(type='str',),\n        nsx_securitygroup=dict(type='list',),\n        performance_limits=dict(type='dict',),\n        pool_group_ref=dict(type='str',),\n        pool_ref=dict(type='str',),\n        port_uuid=dict(type='str',),\n        remove_listening_port_on_vs_down=dict(type='bool',),\n        requests_rate_limit=dict(type='dict',),\n        scaleout_ecmp=dict(type='bool',),\n        se_group_ref=dict(type='str',),\n        server_network_profile_ref=dict(type='str',),\n        service_metadata=dict(type='str',),\n        service_pool_select=dict(type='list',),\n        services=dict(type='list',),\n        sideband_profile=dict(type='dict',),\n        snat_ip=dict(type='list',),\n        sp_pool_refs=dict(type='list',),\n        ssl_key_and_certificate_refs=dict(type='list',),\n        ssl_profile_ref=dict(type='str',),\n        ssl_sess_cache_avg_size=dict(type='int',),\n        static_dns_records=dict(type='list',),\n        subnet=dict(type='dict',),\n        subnet_uuid=dict(type='str',),\n        tenant_ref=dict(type='str',),\n        traffic_clone_profile_ref=dict(type='str',),\n        type=dict(type='str',),\n        url=dict(type='str',),\n        use_bridge_ip_as_vip=dict(type='bool',),\n        use_vip_as_snat=dict(type='bool',),\n        uuid=dict(type='str',),\n        vh_domain_name=dict(type='list',),\n        vh_parent_vs_uuid=dict(type='str',),\n        vip=dict(type='list',),\n        vrf_context_ref=dict(type='str',),\n        vs_datascripts=dict(type='list',),\n        vsvip_ref=dict(type='str',),\n        waf_policy_ref=dict(type='str',),\n        weight=dict(type='int',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'virtualservice',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_virtualservice.py", "id": "b8b69985c800a37e7397fccc4fb35e94", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_virtualservice.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
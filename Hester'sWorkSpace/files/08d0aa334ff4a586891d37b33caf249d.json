{"author": "nvbn", "code": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import (for_app, eager, replace_command, replace_argument,\n                           cache, which)\n\nregex = re.compile(r'error Command \"(.*)\" not found.')\n\n\n@for_app('yarn')\ndef match(command):\n    return regex.findall(command.output)\n\n\nnpm_commands = {'require': 'add'}\n\n\n@eager\ndef _get_all_tasks():\n    proc = Popen(['yarn', '--help'], stdout=PIPE)\n    should_yield = False\n    for line in proc.stdout.readlines():\n        line = line.decode().strip()\n\n        if 'Commands:' in line:\n            should_yield = True\n            continue\n\n        if should_yield and '- ' in line:\n            yield line.split(' ')[-1]\n\n\nif which('yarn'):\n    _get_all_tasks = cache(which('yarn'))(_get_all_tasks)\n\n\ndef get_new_command(command):\n    misspelled_task = regex.findall(command.output)[0]\n    if misspelled_task in npm_commands:\n        yarn_command = npm_commands[misspelled_task]\n        return replace_argument(command.script, misspelled_task, yarn_command)\n    else:\n        tasks = _get_all_tasks()\n        return replace_command(command, misspelled_task, tasks)\n", "comments": "", "content": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import (for_app, eager, replace_command, replace_argument,\n                           cache, which)\n\nregex = re.compile(r'error Command \"(.*)\" not found.')\n\n\n@for_app('yarn')\ndef match(command):\n    return regex.findall(command.output)\n\n\nnpm_commands = {'require': 'add'}\n\n\n@eager\ndef _get_all_tasks():\n    proc = Popen(['yarn', '--help'], stdout=PIPE)\n    should_yield = False\n    for line in proc.stdout.readlines():\n        line = line.decode().strip()\n\n        if 'Commands:' in line:\n            should_yield = True\n            continue\n\n        if should_yield and '- ' in line:\n            yield line.split(' ')[-1]\n\n\nif which('yarn'):\n    _get_all_tasks = cache(which('yarn'))(_get_all_tasks)\n\n\ndef get_new_command(command):\n    misspelled_task = regex.findall(command.output)[0]\n    if misspelled_task in npm_commands:\n        yarn_command = npm_commands[misspelled_task]\n        return replace_argument(command.script, misspelled_task, yarn_command)\n    else:\n        tasks = _get_all_tasks()\n        return replace_command(command, misspelled_task, tasks)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "yarn_command_not_found.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/yarn_command_not_found.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "nvbn", "code": "import pytest\n\nfrom thefuck.types import Command\nfrom thefuck.rules.tsuru_not_command import match, get_new_command\n\n\n@pytest.mark.parametrize('command', [\n    Command('tsuru log', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-log\\n'\n        '\\tlogin\\n'\n        '\\tlogout\\n'\n    )),\n    Command('tsuru app-l', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-list\\n'\n        '\\tapp-log\\n'\n    )),\n    Command('tsuru user-list', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tteam-user-list\\n'\n    )),\n    Command('tsuru targetlist', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\ttarget-list\\n'\n    )),\n])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('tsuru tchururu', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n    )),\n    Command('tsuru version', 'tsuru version 0.16.0.'),\n    Command('tsuru help', (\n        'tsuru version 0.16.0.\\n'\n        '\\nUsage: tsuru command [args]\\n'\n    )),\n    Command('tsuru platform-list', (\n        '- java\\n'\n        '- logstashgiro\\n'\n        '- newnode\\n'\n        '- nodejs\\n'\n        '- php\\n'\n        '- python\\n'\n        '- python3\\n'\n        '- ruby\\n'\n        '- ruby20\\n'\n        '- static\\n'\n    )),\n    Command('tsuru env-get', 'Error: App thefuck not found.'),\n])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, new_commands', [\n    (Command('tsuru log', (\n        'tsuru: \"log\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-log\\n'\n        '\\tlogin\\n'\n        '\\tlogout\\n'\n    )), ['tsuru login', 'tsuru logout', 'tsuru app-log']),\n    (Command('tsuru app-l', (\n        'tsuru: \"app-l\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-list\\n'\n        '\\tapp-log\\n'\n    )), ['tsuru app-log', 'tsuru app-list']),\n    (Command('tsuru user-list', (\n        'tsuru: \"user-list\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tteam-user-list\\n'\n    )), ['tsuru team-user-list']),\n    (Command('tsuru targetlist', (\n        'tsuru: \"targetlist\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\ttarget-list\\n'\n    )), ['tsuru target-list']),\n])\ndef test_get_new_command(command, new_commands):\n    assert get_new_command(command) == new_commands\n", "comments": "", "content": "import pytest\n\nfrom thefuck.types import Command\nfrom thefuck.rules.tsuru_not_command import match, get_new_command\n\n\n@pytest.mark.parametrize('command', [\n    Command('tsuru log', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-log\\n'\n        '\\tlogin\\n'\n        '\\tlogout\\n'\n    )),\n    Command('tsuru app-l', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-list\\n'\n        '\\tapp-log\\n'\n    )),\n    Command('tsuru user-list', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tteam-user-list\\n'\n    )),\n    Command('tsuru targetlist', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\ttarget-list\\n'\n    )),\n])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('tsuru tchururu', (\n        'tsuru: \"tchururu\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n    )),\n    Command('tsuru version', 'tsuru version 0.16.0.'),\n    Command('tsuru help', (\n        'tsuru version 0.16.0.\\n'\n        '\\nUsage: tsuru command [args]\\n'\n    )),\n    Command('tsuru platform-list', (\n        '- java\\n'\n        '- logstashgiro\\n'\n        '- newnode\\n'\n        '- nodejs\\n'\n        '- php\\n'\n        '- python\\n'\n        '- python3\\n'\n        '- ruby\\n'\n        '- ruby20\\n'\n        '- static\\n'\n    )),\n    Command('tsuru env-get', 'Error: App thefuck not found.'),\n])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, new_commands', [\n    (Command('tsuru log', (\n        'tsuru: \"log\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-log\\n'\n        '\\tlogin\\n'\n        '\\tlogout\\n'\n    )), ['tsuru login', 'tsuru logout', 'tsuru app-log']),\n    (Command('tsuru app-l', (\n        'tsuru: \"app-l\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tapp-list\\n'\n        '\\tapp-log\\n'\n    )), ['tsuru app-log', 'tsuru app-list']),\n    (Command('tsuru user-list', (\n        'tsuru: \"user-list\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\tteam-user-list\\n'\n    )), ['tsuru team-user-list']),\n    (Command('tsuru targetlist', (\n        'tsuru: \"targetlist\" is not a tsuru command. See \"tsuru help\".\\n'\n        '\\nDid you mean?\\n'\n        '\\ttarget-list\\n'\n    )), ['tsuru target-list']),\n])\ndef test_get_new_command(command, new_commands):\n    assert get_new_command(command) == new_commands\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_tsuru_not_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_tsuru_not_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestBitsScreen(object):\n\n    def test_draw_line(self):\n        bits_screen = BitsScreen()\n        screen = []\n        for _ in range(20):\n            screen.append(int('00000000', base=2))\n        bits_screen.draw_line(screen, width=32, x1=68, x2=80)\n        assert_equal(screen[8], int('00001111', base=2))\n        assert_equal(screen[9], int('11111111', base=2))\n        assert_equal(screen[10], int('10000000', base=2))\n        bits_screen.draw_line(screen, width=32, x1=2, x2=6)\n        assert_equal(screen[0], int('00111110', base=2))\n        bits_screen.draw_line(screen, width=32, x1=10, x2=13)\n        assert_equal(screen[1], int('00111100', base=2))\n        print('Success: test_draw_line')\n\n\ndef main():\n    test = TestBitsScreen()\n    test.test_draw_line()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestBitsScreen(object):\n\n    def test_draw_line(self):\n        bits_screen = BitsScreen()\n        screen = []\n        for _ in range(20):\n            screen.append(int('00000000', base=2))\n        bits_screen.draw_line(screen, width=32, x1=68, x2=80)\n        assert_equal(screen[8], int('00001111', base=2))\n        assert_equal(screen[9], int('11111111', base=2))\n        assert_equal(screen[10], int('10000000', base=2))\n        bits_screen.draw_line(screen, width=32, x1=2, x2=6)\n        assert_equal(screen[0], int('00111110', base=2))\n        bits_screen.draw_line(screen, width=32, x1=10, x2=13)\n        assert_equal(screen[1], int('00111100', base=2))\n        print('Success: test_draw_line')\n\n\ndef main():\n    test = TestBitsScreen()\n    test.test_draw_line()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_draw_line.py", "id": "69b2e38e3af08009053b14f0080cd4ce", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/bit_manipulation/draw_line/test_draw_line.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
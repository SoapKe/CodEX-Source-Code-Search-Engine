{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import UserError\n\n\nclass HrPayslipEmployees(models.TransientModel):\n    _name = 'hr.payslip.employees'\n    _description = 'Generate payslips for all selected employees'\n\n    employee_ids = fields.Many2many('hr.employee', 'hr_employee_group_rel', 'payslip_id', 'employee_id', 'Employees')\n\n    @api.multi\n    def compute_sheet(self):\n        payslips = self.env['hr.payslip']\n        [data] = self.read()\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            [run_data] = self.env['hr.payslip.run'].browse(active_id).read(['date_start', 'date_end', 'credit_note'])\n        from_date = run_data.get('date_start')\n        to_date = run_data.get('date_end')\n        if not data['employee_ids']:\n            raise UserError(_(\"You must select employee(s) to generate payslip(s).\"))\n        for employee in self.env['hr.employee'].browse(data['employee_ids']):\n            slip_data = self.env['hr.payslip'].onchange_employee_id(from_date, to_date, employee.id, contract_id=False)\n            res = {\n                'employee_id': employee.id,\n                'name': slip_data['value'].get('name'),\n                'struct_id': slip_data['value'].get('struct_id'),\n                'contract_id': slip_data['value'].get('contract_id'),\n                'payslip_run_id': active_id,\n                'input_line_ids': [(0, 0, x) for x in slip_data['value'].get('input_line_ids')],\n                'worked_days_line_ids': [(0, 0, x) for x in slip_data['value'].get('worked_days_line_ids')],\n                'date_from': from_date,\n                'date_to': to_date,\n                'credit_note': run_data.get('credit_note'),\n                'company_id': employee.company_id.id,\n            }\n            payslips += self.env['hr.payslip'].create(res)\n        payslips.compute_sheet()\n        return {'type': 'ir.actions.act_window_close'}\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import UserError\n\n\nclass HrPayslipEmployees(models.TransientModel):\n    _name = 'hr.payslip.employees'\n    _description = 'Generate payslips for all selected employees'\n\n    employee_ids = fields.Many2many('hr.employee', 'hr_employee_group_rel', 'payslip_id', 'employee_id', 'Employees')\n\n    @api.multi\n    def compute_sheet(self):\n        payslips = self.env['hr.payslip']\n        [data] = self.read()\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            [run_data] = self.env['hr.payslip.run'].browse(active_id).read(['date_start', 'date_end', 'credit_note'])\n        from_date = run_data.get('date_start')\n        to_date = run_data.get('date_end')\n        if not data['employee_ids']:\n            raise UserError(_(\"You must select employee(s) to generate payslip(s).\"))\n        for employee in self.env['hr.employee'].browse(data['employee_ids']):\n            slip_data = self.env['hr.payslip'].onchange_employee_id(from_date, to_date, employee.id, contract_id=False)\n            res = {\n                'employee_id': employee.id,\n                'name': slip_data['value'].get('name'),\n                'struct_id': slip_data['value'].get('struct_id'),\n                'contract_id': slip_data['value'].get('contract_id'),\n                'payslip_run_id': active_id,\n                'input_line_ids': [(0, 0, x) for x in slip_data['value'].get('input_line_ids')],\n                'worked_days_line_ids': [(0, 0, x) for x in slip_data['value'].get('worked_days_line_ids')],\n                'date_from': from_date,\n                'date_to': to_date,\n                'credit_note': run_data.get('credit_note'),\n                'company_id': employee.company_id.id,\n            }\n            payslips += self.env['hr.payslip'].create(res)\n        payslips.compute_sheet()\n        return {'type': 'ir.actions.act_window_close'}\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "hr_payroll_payslips_by_employees.py", "id": "67c134c49aa0f1b3728f36df00a3e0ea", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hr_payroll/wizard/hr_payroll_payslips_by_employees.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "ansible", "code": "\n -*- coding: utf-8 -*-\n\n Copyright (c) 2016 Red Hat, Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_vms_facts\nshort_description: Retrieve facts about one or more oVirt/RHV virtual machines\nauthor: \"Ondra Machacek (@machacekondra)\"\nversion_added: \"2.3\"\ndescription:\n    - \"Retrieve facts about one or more oVirt/RHV virtual machines.\"\nnotes:\n    - \"This module creates a new top-level C(ovirt_vms) fact, which\n       contains a list of virtual machines.\"\noptions:\n    pattern:\n      description:\n        - \"Search term which is accepted by oVirt/RHV search backend.\"\n        - \"For example to search VM X from cluster Y use following pattern:\n           name=X and cluster=Y\"\n    all_content:\n      description:\n        - \"If I(true) all the attributes of the virtual machines should be\n           included in the response.\"\n    case_sensitive:\n      description:\n        - \"If I(true) performed search will take case into account.\"\n    max:\n      description:\n        - \"The maximum number of results to return.\"\nextends_documentation_fragment: ovirt_facts\n'''\n\nEXAMPLES = '''\n Examples don't contain auth parameter for simplicity,\n look at ovirt_auth module to see how to reuse authentication:\n\n Gather facts about all VMs which names start with C(centos) and\n belong to cluster C(west):\n- ovirt_vms_facts:\n    pattern: name=centos* and cluster=west\n- debug:\n    var: ovirt_vms\n'''\n\nRETURN = '''\novirt_vms:\n    description: \"List of dictionaries describing the VMs. VM attribues are mapped to dictionary keys,\n                  all VMs attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/types/vm.\"\n    returned: On success.\n    type: list\n'''\n\nimport traceback\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    check_sdk,\n    create_connection,\n    get_dict_of_struct,\n    ovirt_facts_full_argument_spec,\n)\n\n\ndef main():\n    argument_spec = ovirt_facts_full_argument_spec(\n        pattern=dict(default='', required=False),\n        all_content=dict(default=False, type='bool'),\n        case_sensitive=dict(default=True, type='bool'),\n        max=dict(default=None, type='int'),\n    )\n    module = AnsibleModule(argument_spec)\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        vms_service = connection.system_service().vms_service()\n        vms = vms_service.list(\n            search=module.params['pattern'],\n            all_content=module.params['all_content'],\n            case_sensitive=module.params['case_sensitive'],\n            max=module.params['max'],\n        )\n        module.exit_json(\n            changed=False,\n            ansible_facts=dict(\n                ovirt_vms=[\n                    get_dict_of_struct(\n                        struct=c,\n                        connection=connection,\n                        fetch_nested=module.params.get('fetch_nested'),\n                        attributes=module.params.get('nested_attributes'),\n                    ) for c in vms\n                ],\n            ),\n        )\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  ovirt vms facts short description  retrieve facts one ovirt rhv virtual machines author   ondra machacek ( machacekondra)  version added   2 3  description         retrieve facts one ovirt rhv virtual machines   notes         this module creates new top level c(ovirt vms) fact         contains list virtual machines   options      pattern        description             search term accepted ovirt rhv search backend              for example search vm x cluster y use following pattern             name x cluster y      content        description             if i(true) attributes virtual machines            included response       case sensitive        description             if i(true) performed search take case account       max        description             the maximum number results return   extends documentation fragment  ovirt facts      examples         examples contain auth parameter simplicity    look ovirt auth module see reuse authentication     gather facts vms names start c(centos)   belong cluster c(west)    ovirt vms facts      pattern  name centos  cluster west   debug      var  ovirt vms      return       ovirt vms      description   list dictionaries describing vms  vm attribues mapped dictionary keys                    vms attributes found following url  http   ovirt github io ovirt engine api model master  types vm       returned  on success      type  list         usr bin python        coding  utf 8           copyright (c) 2016 red hat  inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses          examples contain auth parameter simplicity     look ovirt auth module see reuse authentication     gather facts vms names start c(centos)    belong cluster c(west)    types vm   ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n#\n# Copyright (c) 2016 Red Hat, Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_vms_facts\nshort_description: Retrieve facts about one or more oVirt/RHV virtual machines\nauthor: \"Ondra Machacek (@machacekondra)\"\nversion_added: \"2.3\"\ndescription:\n    - \"Retrieve facts about one or more oVirt/RHV virtual machines.\"\nnotes:\n    - \"This module creates a new top-level C(ovirt_vms) fact, which\n       contains a list of virtual machines.\"\noptions:\n    pattern:\n      description:\n        - \"Search term which is accepted by oVirt/RHV search backend.\"\n        - \"For example to search VM X from cluster Y use following pattern:\n           name=X and cluster=Y\"\n    all_content:\n      description:\n        - \"If I(true) all the attributes of the virtual machines should be\n           included in the response.\"\n    case_sensitive:\n      description:\n        - \"If I(true) performed search will take case into account.\"\n    max:\n      description:\n        - \"The maximum number of results to return.\"\nextends_documentation_fragment: ovirt_facts\n'''\n\nEXAMPLES = '''\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n# Gather facts about all VMs which names start with C(centos) and\n# belong to cluster C(west):\n- ovirt_vms_facts:\n    pattern: name=centos* and cluster=west\n- debug:\n    var: ovirt_vms\n'''\n\nRETURN = '''\novirt_vms:\n    description: \"List of dictionaries describing the VMs. VM attribues are mapped to dictionary keys,\n                  all VMs attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/vm.\"\n    returned: On success.\n    type: list\n'''\n\nimport traceback\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    check_sdk,\n    create_connection,\n    get_dict_of_struct,\n    ovirt_facts_full_argument_spec,\n)\n\n\ndef main():\n    argument_spec = ovirt_facts_full_argument_spec(\n        pattern=dict(default='', required=False),\n        all_content=dict(default=False, type='bool'),\n        case_sensitive=dict(default=True, type='bool'),\n        max=dict(default=None, type='int'),\n    )\n    module = AnsibleModule(argument_spec)\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        vms_service = connection.system_service().vms_service()\n        vms = vms_service.list(\n            search=module.params['pattern'],\n            all_content=module.params['all_content'],\n            case_sensitive=module.params['case_sensitive'],\n            max=module.params['max'],\n        )\n        module.exit_json(\n            changed=False,\n            ansible_facts=dict(\n                ovirt_vms=[\n                    get_dict_of_struct(\n                        struct=c,\n                        connection=connection,\n                        fetch_nested=module.params.get('fetch_nested'),\n                        attributes=module.params.get('nested_attributes'),\n                    ) for c in vms\n                ],\n            ),\n        )\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "ovirt_vms_facts.py", "id": "a0e8f29fdedbace872ff248b924233e5", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/cloud/ovirt/ovirt_vms_facts.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
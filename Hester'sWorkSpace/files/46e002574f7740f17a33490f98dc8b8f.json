{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_system\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage the system attributes on network devices\ndescription:\n  - This module provides declarative management of node system attributes\n    on network devices.  It provides an option to configure host system\n    parameters or remove those parameters from the device active\n    configuration.\noptions:\n  hostname:\n    description:\n      - Configure the device hostname parameter. This option takes an ASCII string value.\n  domain_name:\n    description:\n      - Configure the IP domain name\n        on the remote device to the provided value. Value\n        should be in the dotted name form and will be\n        appended to the C(hostname) to create a fully-qualified\n        domain name.\n  domain_search:\n    description:\n      - Provides the list of domain suffixes to\n        append to the hostname for the purpose of doing name resolution.\n        This argument accepts a list of names and will be reconciled\n        with the current active configuration on the running node.\n  lookup_source:\n    description:\n      - Provides one or more source\n        interfaces to use for performing DNS lookups.  The interface\n        provided in C(lookup_source) must be a valid interface configured\n        on the device.\n  name_servers:\n    description:\n      - List of DNS name servers by IP address to use to perform name resolution\n        lookups.  This argument accepts either a list of DNS servers See\n        examples.\n  state:\n    description:\n      - State of the configuration\n        values in the device's current active configuration.  When set\n        to I(present), the values should be configured in the device active\n        configuration and when set to I(absent) the values should not be\n        in the device active configuration\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure hostname and domain name\n  net_system:\n    hostname: ios01\n    domain_name: test.example.com\n    domain-search:\n      - ansible.com\n      - redhat.com\n      - cisco.com\n\n- name: remove configuration\n  net_system:\n    state: absent\n\n- name: configure DNS lookup sources\n  net_system:\n    lookup_source: MgmtEth0/0/CPU0/0\n\n- name: configure name servers\n  net_system:\n    name_servers:\n      - 8.8.8.8\n      - 8.8.4.4\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - hostname ios01\n    - ip domain name test.example.com\n\"\"\"\n", "comments": "        module  net system version added   2 4  author   ricardo carrillo cruz ( rcarrillocruz)  short description  manage system attributes network devices description      this module provides declarative management node system attributes     network devices   it provides option configure host system     parameters remove parameters device active     configuration  options    hostname      description          configure device hostname parameter  this option takes ascii string value    domain name      description          configure ip domain name         remote device provided value  value         dotted name form         appended c(hostname) create fully qualified         domain name    domain search      description          provides list domain suffixes         append hostname purpose name resolution          this argument accepts list names reconciled         current active configuration running node    lookup source      description          provides one source         interfaces use performing dns lookups   the interface         provided c(lookup source) must valid interface configured         device    name servers      description          list dns name servers ip address use perform name resolution         lookups   this argument accepts either list dns servers see         examples    state      description          state configuration         values device current active configuration   when set         i(present)  values configured device active         configuration set i(absent) values         device active configuration     default  present     choices    present    absent        examples         name  configure hostname domain name   net system      hostname  ios01     domain name  test example com     domain search          ansible com         redhat com         cisco com    name  remove configuration   net system      state  absent    name  configure dns lookup sources   net system      lookup source  mgmteth0 0 cpu0 0    name  configure name servers   net system      name servers          8 8 8 8         8 8 4 4      return       commands    description  the list configuration mode commands send device   returned  always  except platforms use netconf transport manage device    type  list   sample        hostname ios01       ip domain name test example com         usr bin python        coding  utf 8        (c) 2017  ansible red hat  inc    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_system\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage the system attributes on network devices\ndescription:\n  - This module provides declarative management of node system attributes\n    on network devices.  It provides an option to configure host system\n    parameters or remove those parameters from the device active\n    configuration.\noptions:\n  hostname:\n    description:\n      - Configure the device hostname parameter. This option takes an ASCII string value.\n  domain_name:\n    description:\n      - Configure the IP domain name\n        on the remote device to the provided value. Value\n        should be in the dotted name form and will be\n        appended to the C(hostname) to create a fully-qualified\n        domain name.\n  domain_search:\n    description:\n      - Provides the list of domain suffixes to\n        append to the hostname for the purpose of doing name resolution.\n        This argument accepts a list of names and will be reconciled\n        with the current active configuration on the running node.\n  lookup_source:\n    description:\n      - Provides one or more source\n        interfaces to use for performing DNS lookups.  The interface\n        provided in C(lookup_source) must be a valid interface configured\n        on the device.\n  name_servers:\n    description:\n      - List of DNS name servers by IP address to use to perform name resolution\n        lookups.  This argument accepts either a list of DNS servers See\n        examples.\n  state:\n    description:\n      - State of the configuration\n        values in the device's current active configuration.  When set\n        to I(present), the values should be configured in the device active\n        configuration and when set to I(absent) the values should not be\n        in the device active configuration\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure hostname and domain name\n  net_system:\n    hostname: ios01\n    domain_name: test.example.com\n    domain-search:\n      - ansible.com\n      - redhat.com\n      - cisco.com\n\n- name: remove configuration\n  net_system:\n    state: absent\n\n- name: configure DNS lookup sources\n  net_system:\n    lookup_source: MgmtEth0/0/CPU0/0\n\n- name: configure name servers\n  net_system:\n    name_servers:\n      - 8.8.8.8\n      - 8.8.4.4\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - hostname ios01\n    - ip domain name test.example.com\n\"\"\"\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "net_system.py", "id": "46e002574f7740f17a33490f98dc8b8f", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/system/net_system.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
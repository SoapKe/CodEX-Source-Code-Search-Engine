{"author": "python-telegram-bot", "code": "\n\n A library that provides a Python interface to the Telegram Bot API\n Copyright (C) 2015-2018\n Leandro Toledo de Souza <devs@python-telegram-bot.org>\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser Public License for more details.\n\n You should have received a copy of the GNU Lesser Public License\n along with this program.  If not, see [http://www.gnu.org/licenses/].\nfrom telegram import Update\n\nfrom telegram import Sticker\nfrom telegram import User\nfrom telegram.message import Message\nfrom telegram.utils import helpers\n\n\nclass TestHelpers(object):\n    def test_escape_markdown(self):\n        test_str = '*bold*, _italic_, `code`, [text_link](http://github.com/)'\n        expected_str = '\\*bold\\*, \\_italic\\_, \\`code\\`, \\[text\\_link](http://github.com/)'\n\n        assert expected_str == helpers.escape_markdown(test_str)\n\n    def test_effective_message_type(self):\n        test_message = Message(message_id=1,\n                               from_user=None,\n                               date=None,\n                               chat=None)\n\n        test_message.text = 'Test'\n        assert helpers.effective_message_type(test_message) == 'text'\n        test_message.text = None\n\n        test_message.sticker = Sticker('sticker_id', 50, 50)\n        assert helpers.effective_message_type(test_message) == 'sticker'\n        test_message.sticker = None\n\n        test_message.new_chat_members = [User(55, 'new_user', False)]\n        assert helpers.effective_message_type(test_message) == 'new_chat_members'\n\n        test_update = Update(1)\n        test_message.text = 'Test'\n        test_update.message = test_message\n        assert helpers.effective_message_type(test_update) == 'text'\n\n        empty_update = Update(2)\n        assert helpers.effective_message_type(empty_update) is None\n", "comments": "   usr bin env python       a library provides python interface telegram bot api    copyright (c) 2015 2018    leandro toledo de souza  devs python telegram bot org        this program free software  redistribute modify    terms gnu lesser public license published    free software foundation  either version 3 license     (at option) later version        this program distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu lesser public license details        you received copy gnu lesser public license    along program   if  see  http   www gnu org licenses    ", "content": "#!/usr/bin/env python\n#\n# A library that provides a Python interface to the Telegram Bot API\n# Copyright (C) 2015-2018\n# Leandro Toledo de Souza <devs@python-telegram-bot.org>\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Lesser Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Lesser Public License for more details.\n#\n# You should have received a copy of the GNU Lesser Public License\n# along with this program.  If not, see [http://www.gnu.org/licenses/].\nfrom telegram import Update\n\nfrom telegram import Sticker\nfrom telegram import User\nfrom telegram.message import Message\nfrom telegram.utils import helpers\n\n\nclass TestHelpers(object):\n    def test_escape_markdown(self):\n        test_str = '*bold*, _italic_, `code`, [text_link](http://github.com/)'\n        expected_str = '\\*bold\\*, \\_italic\\_, \\`code\\`, \\[text\\_link](http://github.com/)'\n\n        assert expected_str == helpers.escape_markdown(test_str)\n\n    def test_effective_message_type(self):\n        test_message = Message(message_id=1,\n                               from_user=None,\n                               date=None,\n                               chat=None)\n\n        test_message.text = 'Test'\n        assert helpers.effective_message_type(test_message) == 'text'\n        test_message.text = None\n\n        test_message.sticker = Sticker('sticker_id', 50, 50)\n        assert helpers.effective_message_type(test_message) == 'sticker'\n        test_message.sticker = None\n\n        test_message.new_chat_members = [User(55, 'new_user', False)]\n        assert helpers.effective_message_type(test_message) == 'new_chat_members'\n\n        test_update = Update(1)\n        test_message.text = 'Test'\n        test_update.message = test_message\n        assert helpers.effective_message_type(test_update) == 'text'\n\n        empty_update = Update(2)\n        assert helpers.effective_message_type(empty_update) is None\n", "description": "We have made you a wrapper you can't refuse", "file_name": "test_helpers.py", "id": "9cecd7a4be089085b7984e1043893cd5", "language": "Python", "project_name": "python-telegram-bot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/python-telegram-bot-python-telegram-bot/python-telegram-bot-python-telegram-bot-3ccf40e/tests/test_helpers.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:32:55Z", "url": "https://github.com/python-telegram-bot/python-telegram-bot", "wiki": true}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport logging\n\nimport requests\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import UserError\n\n_logger = logging.getLogger(__name__)\n\nTWITTER_EXCEPTION = {\n    304: _('There was no new data to return.'),\n    400: _('The request was invalid or cannot be otherwise served. Requests without authentication are considered invalid and will yield this response.'),\n    401: _('Authentication credentials were missing or incorrect. Maybe screen name tweets are protected.'),\n    403: _('The request is understood, but it has been refused or access is not allowed. Please check your Twitter API Key and Secret.'),\n    429: _('Request cannot be served due to the applications rate limit having been exhausted for the resource.'),\n    500: _('Twitter seems broken. Please retry later. You may consider posting an issue on Twitter forums to get help.'),\n    502: _('Twitter is down or being upgraded.'),\n    503: _('The Twitter servers are up, but overloaded with requests. Try again later.'),\n    504: _('The Twitter servers are up, but the request could not be serviced due to some failure within our stack. Try again later.')\n}\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    twitter_api_key = fields.Char(\n        related='website_id.twitter_api_key',\n        string='API Key',\n        help='Twitter API key you can get it from https://apps.twitter.com/')\n    twitter_api_secret = fields.Char(\n        related='website_id.twitter_api_secret',\n        string='API secret',\n        help='Twitter API secret you can get it from https://apps.twitter.com/')\n    twitter_tutorial = fields.Boolean(string='Show me how to obtain the Twitter API Key and Secret')\n    twitter_screen_name = fields.Char(\n        related='website_id.twitter_screen_name',\n        string='Favorites From',\n        help='Screen Name of the Twitter Account from which you want to load favorites.'\n             'It does not have to match the API Key/Secret.')\n\n    def _get_twitter_exception_message(self, error_code):\n        if error_code in TWITTER_EXCEPTION:\n            return TWITTER_EXCEPTION[error_code]\n        else:\n            return _('HTTP Error: Something is misconfigured')\n\n    def _check_twitter_authorization(self):\n        try:\n            self.website_id.fetch_favorite_tweets()\n\n        except requests.HTTPError as e:\n            _logger.info(\"%s - %s\" % (e.response.status_code, e.response.reason), exc_info=True)\n            raise UserError(\"%s - %s\" % (e.response.status_code, e.response.reason) + ':' + self._get_twitter_exception_message(e.response.status_code))\n        except IOError:\n            _logger.info(_('We failed to reach a twitter server.'), exc_info=True)\n            raise UserError(_('Internet connection refused') + ' ' + _('We failed to reach a twitter server.'))\n        except Exception:\n            _logger.info(_('Please double-check your Twitter API Key and Secret!'), exc_info=True)\n            raise UserError(_('Twitter authorization error!') + ' ' + _('Please double-check your Twitter API Key and Secret!'))\n\n    @api.model\n    def create(self, vals):\n        TwitterConfig = super(ResConfigSettings, self).create(vals)\n        if vals.get('twitter_api_key') or vals.get('twitter_api_secret') or vals.get('twitter_screen_name'):\n            TwitterConfig._check_twitter_authorization()\n        return TwitterConfig\n\n    @api.multi\n    def write(self, vals):\n        TwitterConfig = super(ResConfigSettings, self).write(vals)\n        if vals.get('twitter_api_key') or vals.get('twitter_api_secret') or vals.get('twitter_screen_name'):\n            self._check_twitter_authorization()\n        return TwitterConfig\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport logging\n\nimport requests\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import UserError\n\n_logger = logging.getLogger(__name__)\n\nTWITTER_EXCEPTION = {\n    304: _('There was no new data to return.'),\n    400: _('The request was invalid or cannot be otherwise served. Requests without authentication are considered invalid and will yield this response.'),\n    401: _('Authentication credentials were missing or incorrect. Maybe screen name tweets are protected.'),\n    403: _('The request is understood, but it has been refused or access is not allowed. Please check your Twitter API Key and Secret.'),\n    429: _('Request cannot be served due to the applications rate limit having been exhausted for the resource.'),\n    500: _('Twitter seems broken. Please retry later. You may consider posting an issue on Twitter forums to get help.'),\n    502: _('Twitter is down or being upgraded.'),\n    503: _('The Twitter servers are up, but overloaded with requests. Try again later.'),\n    504: _('The Twitter servers are up, but the request could not be serviced due to some failure within our stack. Try again later.')\n}\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    twitter_api_key = fields.Char(\n        related='website_id.twitter_api_key',\n        string='API Key',\n        help='Twitter API key you can get it from https://apps.twitter.com/')\n    twitter_api_secret = fields.Char(\n        related='website_id.twitter_api_secret',\n        string='API secret',\n        help='Twitter API secret you can get it from https://apps.twitter.com/')\n    twitter_tutorial = fields.Boolean(string='Show me how to obtain the Twitter API Key and Secret')\n    twitter_screen_name = fields.Char(\n        related='website_id.twitter_screen_name',\n        string='Favorites From',\n        help='Screen Name of the Twitter Account from which you want to load favorites.'\n             'It does not have to match the API Key/Secret.')\n\n    def _get_twitter_exception_message(self, error_code):\n        if error_code in TWITTER_EXCEPTION:\n            return TWITTER_EXCEPTION[error_code]\n        else:\n            return _('HTTP Error: Something is misconfigured')\n\n    def _check_twitter_authorization(self):\n        try:\n            self.website_id.fetch_favorite_tweets()\n\n        except requests.HTTPError as e:\n            _logger.info(\"%s - %s\" % (e.response.status_code, e.response.reason), exc_info=True)\n            raise UserError(\"%s - %s\" % (e.response.status_code, e.response.reason) + ':' + self._get_twitter_exception_message(e.response.status_code))\n        except IOError:\n            _logger.info(_('We failed to reach a twitter server.'), exc_info=True)\n            raise UserError(_('Internet connection refused') + ' ' + _('We failed to reach a twitter server.'))\n        except Exception:\n            _logger.info(_('Please double-check your Twitter API Key and Secret!'), exc_info=True)\n            raise UserError(_('Twitter authorization error!') + ' ' + _('Please double-check your Twitter API Key and Secret!'))\n\n    @api.model\n    def create(self, vals):\n        TwitterConfig = super(ResConfigSettings, self).create(vals)\n        if vals.get('twitter_api_key') or vals.get('twitter_api_secret') or vals.get('twitter_screen_name'):\n            TwitterConfig._check_twitter_authorization()\n        return TwitterConfig\n\n    @api.multi\n    def write(self, vals):\n        TwitterConfig = super(ResConfigSettings, self).write(vals)\n        if vals.get('twitter_api_key') or vals.get('twitter_api_secret') or vals.get('twitter_screen_name'):\n            self._check_twitter_authorization()\n        return TwitterConfig\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_config_settings.py", "id": "1185120cae872985091f136cc0caf1dd", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_twitter/models/res_config_settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
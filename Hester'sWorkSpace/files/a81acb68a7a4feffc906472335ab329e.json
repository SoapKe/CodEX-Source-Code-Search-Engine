{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .canvas import CanvasIE\nfrom .common import InfoExtractor\n\n\nclass KetnetIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ketnet\\.be/(?:[^/]+/)*(?P<id>[^/?\n    _TESTS = [{\n        'url': 'https://www.ketnet.be/kijken/zomerse-filmpjes',\n        'md5': '6bdeb65998930251bbd1c510750edba9',\n        'info_dict': {\n            'id': 'zomerse-filmpjes',\n            'ext': 'mp4',\n            'title': 'Gluur mee op de filmset en op Pennenzakkenrock',\n            'description': 'Gluur mee met Ghost Rockers op de filmset',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }, {\n        \n        'url': 'https://www.ketnet.be/kijken/nachtwacht/de-greystook',\n        'md5': '90139b746a0a9bd7bb631283f6e2a64e',\n        'info_dict': {\n            'id': 'md-ast-4ac54990-ce66-4d00-a8ca-9eac86f4c475',\n            'display_id': 'md-ast-4ac54990-ce66-4d00-a8ca-9eac86f4c475',\n            'ext': 'flv',\n            'title': 'Nachtwacht: De Greystook',\n            'description': 'md5:1db3f5dc4c7109c821261e7512975be7',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 1468.03,\n        },\n        'expected_warnings': ['is not a supported codec', 'Unknown MIME type'],\n    }, {\n        'url': 'https://www.ketnet.be/kijken/karrewiet/uitzending-8-september-2016',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.ketnet.be/achter-de-schermen/sien-repeteert-voor-stars-for-life',\n        'only_matching': True,\n    }, {\n        \n        'url': 'https://www.ketnet.be/kijken/nachtwacht/de-bermadoe',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        config = self._parse_json(\n            self._search_regex(\n                r'(?s)playerConfig\\s*=\\s*({.+?})\\s*;', webpage,\n                'player config'),\n            video_id)\n\n        mzid = config.get('mzid')\n        if mzid:\n            return self.url_result(\n                'https://mediazone.vrt.be/api/v1/ketnet/assets/%s' % mzid,\n                CanvasIE.ie_key(), video_id=mzid)\n\n        title = config['title']\n\n        formats = []\n        for source_key in ('', 'mz'):\n            source = config.get('%ssource' % source_key)\n            if not isinstance(source, dict):\n                continue\n            for format_id, format_url in source.items():\n                if format_id == 'hls':\n                    formats.extend(self._extract_m3u8_formats(\n                        format_url, video_id, 'mp4',\n                        entry_protocol='m3u8_native', m3u8_id=format_id,\n                        fatal=False))\n                elif format_id == 'hds':\n                    formats.extend(self._extract_f4m_formats(\n                        format_url, video_id, f4m_id=format_id, fatal=False))\n                else:\n                    formats.append({\n                        'url': format_url,\n                        'format_id': format_id,\n                    })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': config.get('description'),\n            'thumbnail': config.get('image'),\n            'series': config.get('program'),\n            'episode': config.get('episode'),\n            'formats': formats,\n        }\n", "comments": "#&]+)'\n# mzid in playerConfig instead of sources\n# mzsource, geo restricted to Belgium\n", "content": "from __future__ import unicode_literals\n\nfrom .canvas import CanvasIE\nfrom .common import InfoExtractor\n\n\nclass KetnetIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ketnet\\.be/(?:[^/]+/)*(?P<id>[^/?#&]+)'\n    _TESTS = [{\n        'url': 'https://www.ketnet.be/kijken/zomerse-filmpjes',\n        'md5': '6bdeb65998930251bbd1c510750edba9',\n        'info_dict': {\n            'id': 'zomerse-filmpjes',\n            'ext': 'mp4',\n            'title': 'Gluur mee op de filmset en op Pennenzakkenrock',\n            'description': 'Gluur mee met Ghost Rockers op de filmset',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }, {\n        # mzid in playerConfig instead of sources\n        'url': 'https://www.ketnet.be/kijken/nachtwacht/de-greystook',\n        'md5': '90139b746a0a9bd7bb631283f6e2a64e',\n        'info_dict': {\n            'id': 'md-ast-4ac54990-ce66-4d00-a8ca-9eac86f4c475',\n            'display_id': 'md-ast-4ac54990-ce66-4d00-a8ca-9eac86f4c475',\n            'ext': 'flv',\n            'title': 'Nachtwacht: De Greystook',\n            'description': 'md5:1db3f5dc4c7109c821261e7512975be7',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 1468.03,\n        },\n        'expected_warnings': ['is not a supported codec', 'Unknown MIME type'],\n    }, {\n        'url': 'https://www.ketnet.be/kijken/karrewiet/uitzending-8-september-2016',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.ketnet.be/achter-de-schermen/sien-repeteert-voor-stars-for-life',\n        'only_matching': True,\n    }, {\n        # mzsource, geo restricted to Belgium\n        'url': 'https://www.ketnet.be/kijken/nachtwacht/de-bermadoe',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        config = self._parse_json(\n            self._search_regex(\n                r'(?s)playerConfig\\s*=\\s*({.+?})\\s*;', webpage,\n                'player config'),\n            video_id)\n\n        mzid = config.get('mzid')\n        if mzid:\n            return self.url_result(\n                'https://mediazone.vrt.be/api/v1/ketnet/assets/%s' % mzid,\n                CanvasIE.ie_key(), video_id=mzid)\n\n        title = config['title']\n\n        formats = []\n        for source_key in ('', 'mz'):\n            source = config.get('%ssource' % source_key)\n            if not isinstance(source, dict):\n                continue\n            for format_id, format_url in source.items():\n                if format_id == 'hls':\n                    formats.extend(self._extract_m3u8_formats(\n                        format_url, video_id, 'mp4',\n                        entry_protocol='m3u8_native', m3u8_id=format_id,\n                        fatal=False))\n                elif format_id == 'hds':\n                    formats.extend(self._extract_f4m_formats(\n                        format_url, video_id, f4m_id=format_id, fatal=False))\n                else:\n                    formats.append({\n                        'url': format_url,\n                        'format_id': format_id,\n                    })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': config.get('description'),\n            'thumbnail': config.get('image'),\n            'series': config.get('program'),\n            'episode': config.get('episode'),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "ketnet.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/ketnet.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
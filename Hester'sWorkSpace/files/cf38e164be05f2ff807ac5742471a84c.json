{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass DigitekaIE(InfoExtractor):\n    _VALID_URL = r\n    _TESTS = [{\n        \n        'url': 'https://www.ultimedia.com/default/index/videogeneric/id/s8uk0r',\n        'md5': '276a0e49de58c7e85d32b057837952a2',\n        'info_dict': {\n            'id': 's8uk0r',\n            'ext': 'mp4',\n            'title': 'Loi sur la fin de vie: le texte pr\u00e9voit un renforcement des directives anticip\u00e9es',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 74,\n            'upload_date': '20150317',\n            'timestamp': 1426604939,\n            'uploader_id': '3fszv',\n        },\n    }, {\n        \n        'url': 'https://www.ultimedia.com/default/index/videomusic/id/xvpfp8',\n        'md5': '2ea3513813cf230605c7e2ffe7eca61c',\n        'info_dict': {\n            'id': 'xvpfp8',\n            'ext': 'mp4',\n            'title': 'Two - C\\'est La Vie (clip)',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 233,\n            'upload_date': '20150224',\n            'timestamp': 1424760500,\n            'uploader_id': '3rfzk',\n        },\n    }, {\n        'url': 'https://www.digiteka.net/deliver/generic/iframe/mdtk/01637594/src/lqm3kl/zone/1/showtitle/1/autoplay/yes',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<(?:iframe|script)[^>]+src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?ultimedia\\.com/deliver/(?:generic|musique)(?:/[^/]+)*/(?:src|article)/[\\d+a-z]+)',\n            webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        video_type = mobj.group('embed_type') or mobj.group('site_type')\n        if video_type == 'music':\n            video_type = 'musique'\n\n        deliver_info = self._download_json(\n            'http://www.ultimedia.com/deliver/video?video=%s&topic=%s' % (video_id, video_type),\n            video_id)\n\n        yt_id = deliver_info.get('yt_id')\n        if yt_id:\n            return self.url_result(yt_id, 'Youtube')\n\n        jwconf = deliver_info['jwconf']\n\n        formats = []\n        for source in jwconf['playlist'][0]['sources']:\n            formats.append({\n                'url': source['file'],\n                'format_id': source.get('label'),\n            })\n\n        self._sort_formats(formats)\n\n        title = deliver_info['title']\n        thumbnail = jwconf.get('image')\n        duration = int_or_none(deliver_info.get('duration'))\n        timestamp = int_or_none(deliver_info.get('release_time'))\n        uploader_id = deliver_info.get('owner_id')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'timestamp': timestamp,\n            'uploader_id': uploader_id,\n            'formats': formats,\n        }\n", "comments": "(?x)\n        https?://(?:www\\.)?(?:digiteka\\.net|ultimedia\\.com)/\n        (?:\n            deliver/\n            (?P<embed_type>\n                generic|\n                musique\n            )\n            (?:/[^/]+)*/\n            (?:\n                src|\n                article\n            )|\n            default/index/video\n            (?P<site_type>\n                generic|\n                music\n            )\n            /id\n        )/(?P<id>[\\d+a-z]+)\n)\n# coding: utf-8\n# news\n# music\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass DigitekaIE(InfoExtractor):\n    _VALID_URL = r'''(?x)\n        https?://(?:www\\.)?(?:digiteka\\.net|ultimedia\\.com)/\n        (?:\n            deliver/\n            (?P<embed_type>\n                generic|\n                musique\n            )\n            (?:/[^/]+)*/\n            (?:\n                src|\n                article\n            )|\n            default/index/video\n            (?P<site_type>\n                generic|\n                music\n            )\n            /id\n        )/(?P<id>[\\d+a-z]+)'''\n    _TESTS = [{\n        # news\n        'url': 'https://www.ultimedia.com/default/index/videogeneric/id/s8uk0r',\n        'md5': '276a0e49de58c7e85d32b057837952a2',\n        'info_dict': {\n            'id': 's8uk0r',\n            'ext': 'mp4',\n            'title': 'Loi sur la fin de vie: le texte pr\u00e9voit un renforcement des directives anticip\u00e9es',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 74,\n            'upload_date': '20150317',\n            'timestamp': 1426604939,\n            'uploader_id': '3fszv',\n        },\n    }, {\n        # music\n        'url': 'https://www.ultimedia.com/default/index/videomusic/id/xvpfp8',\n        'md5': '2ea3513813cf230605c7e2ffe7eca61c',\n        'info_dict': {\n            'id': 'xvpfp8',\n            'ext': 'mp4',\n            'title': 'Two - C\\'est La Vie (clip)',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'duration': 233,\n            'upload_date': '20150224',\n            'timestamp': 1424760500,\n            'uploader_id': '3rfzk',\n        },\n    }, {\n        'url': 'https://www.digiteka.net/deliver/generic/iframe/mdtk/01637594/src/lqm3kl/zone/1/showtitle/1/autoplay/yes',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<(?:iframe|script)[^>]+src=[\"\\'](?P<url>(?:https?:)?//(?:www\\.)?ultimedia\\.com/deliver/(?:generic|musique)(?:/[^/]+)*/(?:src|article)/[\\d+a-z]+)',\n            webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        video_type = mobj.group('embed_type') or mobj.group('site_type')\n        if video_type == 'music':\n            video_type = 'musique'\n\n        deliver_info = self._download_json(\n            'http://www.ultimedia.com/deliver/video?video=%s&topic=%s' % (video_id, video_type),\n            video_id)\n\n        yt_id = deliver_info.get('yt_id')\n        if yt_id:\n            return self.url_result(yt_id, 'Youtube')\n\n        jwconf = deliver_info['jwconf']\n\n        formats = []\n        for source in jwconf['playlist'][0]['sources']:\n            formats.append({\n                'url': source['file'],\n                'format_id': source.get('label'),\n            })\n\n        self._sort_formats(formats)\n\n        title = deliver_info['title']\n        thumbnail = jwconf.get('image')\n        duration = int_or_none(deliver_info.get('duration'))\n        timestamp = int_or_none(deliver_info.get('release_time'))\n        uploader_id = deliver_info.get('owner_id')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'timestamp': timestamp,\n            'uploader_id': uploader_id,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "digiteka.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/digiteka.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
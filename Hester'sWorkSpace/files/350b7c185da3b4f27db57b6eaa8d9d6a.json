{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestMath(object):\n\n    def test_check_prime(self):\n        math = Math()\n        assert_raises(TypeError, math.check_prime, None)\n        assert_raises(TypeError, math.check_prime, 98.6)\n        assert_equal(math.check_prime(0), False)\n        assert_equal(math.check_prime(1), False)\n        assert_equal(math.check_prime(97), True)\n        print('Success: test_check_prime')\n\n\ndef main():\n    test = TestMath()\n    test.test_check_prime()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestMath(object):\n\n    def test_check_prime(self):\n        math = Math()\n        assert_raises(TypeError, math.check_prime, None)\n        assert_raises(TypeError, math.check_prime, 98.6)\n        assert_equal(math.check_prime(0), False)\n        assert_equal(math.check_prime(1), False)\n        assert_equal(math.check_prime(97), True)\n        print('Success: test_check_prime')\n\n\ndef main():\n    test = TestMath()\n    test.test_check_prime()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_check_prime.py", "id": "350b7c185da3b4f27db57b6eaa8d9d6a", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/math_probability/check_prime/test_check_prime.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
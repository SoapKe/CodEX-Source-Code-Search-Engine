{"author": "nvbn", "code": "import pytest\n\n\n@pytest.fixture\ndef builtins_open(mocker):\n    return mocker.patch('six.moves.builtins.open')\n\n\n@pytest.fixture\ndef isfile(mocker):\n    return mocker.patch('os.path.isfile', return_value=True)\n\n\n@pytest.fixture\n@pytest.mark.usefixtures('isfile')\ndef history_lines(mocker):\n    def aux(lines):\n        mock = mocker.patch('io.open')\n        mock.return_value.__enter__ \\\n            .return_value.readlines.return_value = lines\n\n    return aux\n\n\n@pytest.fixture\ndef config_exists(mocker):\n    path_mock = mocker.patch('thefuck.shells.generic.Path')\n    return path_mock.return_value \\\n        .expanduser.return_value \\\n        .exists\n", "comments": "", "content": "import pytest\n\n\n@pytest.fixture\ndef builtins_open(mocker):\n    return mocker.patch('six.moves.builtins.open')\n\n\n@pytest.fixture\ndef isfile(mocker):\n    return mocker.patch('os.path.isfile', return_value=True)\n\n\n@pytest.fixture\n@pytest.mark.usefixtures('isfile')\ndef history_lines(mocker):\n    def aux(lines):\n        mock = mocker.patch('io.open')\n        mock.return_value.__enter__ \\\n            .return_value.readlines.return_value = lines\n\n    return aux\n\n\n@pytest.fixture\ndef config_exists(mocker):\n    path_mock = mocker.patch('thefuck.shells.generic.Path')\n    return path_mock.return_value \\\n        .expanduser.return_value \\\n        .exists\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "conftest.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/shells/conftest.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
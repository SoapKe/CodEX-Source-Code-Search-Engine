{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urlparse\nfrom .internetvideoarchive import InternetVideoArchiveIE\n\n\nclass VideoDetectiveIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?videodetective\\.com/[^/]+/[^/]+/(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://www.videodetective.com/movies/kick-ass-2/194487',\n        'info_dict': {\n            'id': '194487',\n            'ext': 'mp4',\n            'title': 'KICK-ASS 2',\n            'description': 'md5:c189d5b7280400630a1d3dd17eaa8d8a',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        og_video = self._og_search_video_url(webpage)\n        query = compat_urlparse.urlparse(og_video).query\n        return self.url_result(InternetVideoArchiveIE._build_json_url(query), ie=InternetVideoArchiveIE.ie_key())\n", "comments": "# m3u8 download\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urlparse\nfrom .internetvideoarchive import InternetVideoArchiveIE\n\n\nclass VideoDetectiveIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?videodetective\\.com/[^/]+/[^/]+/(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://www.videodetective.com/movies/kick-ass-2/194487',\n        'info_dict': {\n            'id': '194487',\n            'ext': 'mp4',\n            'title': 'KICK-ASS 2',\n            'description': 'md5:c189d5b7280400630a1d3dd17eaa8d8a',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        og_video = self._og_search_video_url(webpage)\n        query = compat_urlparse.urlparse(og_video).query\n        return self.url_result(InternetVideoArchiveIE._build_json_url(query), ie=InternetVideoArchiveIE.ie_key())\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "videodetective.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/videodetective.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    int_or_none,\n)\n\n\nclass DotsubIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?dotsub\\.com/view/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'https://dotsub.com/view/9c63db2a-fa95-4838-8e6e-13deafe47f09',\n        'md5': '21c7ff600f545358134fea762a6d42b6',\n        'info_dict': {\n            'id': '9c63db2a-fa95-4838-8e6e-13deafe47f09',\n            'ext': 'flv',\n            'title': 'MOTIVATION - \"It\\'s Possible\" Best Inspirational Video Ever',\n            'description': 'md5:41af1e273edbbdfe4e216a78b9d34ac6',\n            'thumbnail': 're:^https?://dotsub.com/media/9c63db2a-fa95-4838-8e6e-13deafe47f09/p',\n            'duration': 198,\n            'uploader': 'liuxt',\n            'timestamp': 1385778501.104,\n            'upload_date': '20131130',\n            'view_count': int,\n        }\n    }, {\n        'url': 'https://dotsub.com/view/747bcf58-bd59-45b7-8c8c-ac312d084ee6',\n        'md5': '2bb4a83896434d5c26be868c609429a3',\n        'info_dict': {\n            'id': '168006778',\n            'ext': 'mp4',\n            'title': 'Apartments and flats in Raipur the white symphony',\n            'description': 'md5:784d0639e6b7d1bc29530878508e38fe',\n            'thumbnail': 're:^https?://dotsub.com/media/747bcf58-bd59-45b7-8c8c-ac312d084ee6/p',\n            'duration': 290,\n            'timestamp': 1476767794.2809999,\n            'upload_date': '20161018',\n            'uploader': 'parthivi001',\n            'uploader_id': 'user52596202',\n            'view_count': int,\n        },\n        'add_ie': ['Vimeo'],\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        info = self._download_json(\n            'https://dotsub.com/api/media/%s/metadata' % video_id, video_id)\n        video_url = info.get('mediaURI')\n\n        if not video_url:\n            webpage = self._download_webpage(url, video_id)\n            video_url = self._search_regex(\n                [r'<source[^>]+src=\"([^\"]+)\"', r'\"file\"\\s*:\\s*\\'([^\\']+)'],\n                webpage, 'video url', default=None)\n            info_dict = {\n                'id': video_id,\n                'url': video_url,\n                'ext': 'flv',\n            }\n\n        if not video_url:\n            setup_data = self._parse_json(self._html_search_regex(\n                r'(?s)data-setup=([\\'\"])(?P<content>(?!\\1).+?)\\1',\n                webpage, 'setup data', group='content'), video_id)\n            info_dict = {\n                '_type': 'url_transparent',\n                'url': setup_data['src'],\n            }\n\n        info_dict.update({\n            'title': info['title'],\n            'description': info.get('description'),\n            'thumbnail': info.get('screenshotURI'),\n            'duration': int_or_none(info.get('duration'), 1000),\n            'uploader': info.get('user'),\n            'timestamp': float_or_none(info.get('dateCreated'), 1000),\n            'view_count': int_or_none(info.get('numberOfViews')),\n        })\n\n        return info_dict\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    int_or_none,\n)\n\n\nclass DotsubIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?dotsub\\.com/view/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'https://dotsub.com/view/9c63db2a-fa95-4838-8e6e-13deafe47f09',\n        'md5': '21c7ff600f545358134fea762a6d42b6',\n        'info_dict': {\n            'id': '9c63db2a-fa95-4838-8e6e-13deafe47f09',\n            'ext': 'flv',\n            'title': 'MOTIVATION - \"It\\'s Possible\" Best Inspirational Video Ever',\n            'description': 'md5:41af1e273edbbdfe4e216a78b9d34ac6',\n            'thumbnail': 're:^https?://dotsub.com/media/9c63db2a-fa95-4838-8e6e-13deafe47f09/p',\n            'duration': 198,\n            'uploader': 'liuxt',\n            'timestamp': 1385778501.104,\n            'upload_date': '20131130',\n            'view_count': int,\n        }\n    }, {\n        'url': 'https://dotsub.com/view/747bcf58-bd59-45b7-8c8c-ac312d084ee6',\n        'md5': '2bb4a83896434d5c26be868c609429a3',\n        'info_dict': {\n            'id': '168006778',\n            'ext': 'mp4',\n            'title': 'Apartments and flats in Raipur the white symphony',\n            'description': 'md5:784d0639e6b7d1bc29530878508e38fe',\n            'thumbnail': 're:^https?://dotsub.com/media/747bcf58-bd59-45b7-8c8c-ac312d084ee6/p',\n            'duration': 290,\n            'timestamp': 1476767794.2809999,\n            'upload_date': '20161018',\n            'uploader': 'parthivi001',\n            'uploader_id': 'user52596202',\n            'view_count': int,\n        },\n        'add_ie': ['Vimeo'],\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        info = self._download_json(\n            'https://dotsub.com/api/media/%s/metadata' % video_id, video_id)\n        video_url = info.get('mediaURI')\n\n        if not video_url:\n            webpage = self._download_webpage(url, video_id)\n            video_url = self._search_regex(\n                [r'<source[^>]+src=\"([^\"]+)\"', r'\"file\"\\s*:\\s*\\'([^\\']+)'],\n                webpage, 'video url', default=None)\n            info_dict = {\n                'id': video_id,\n                'url': video_url,\n                'ext': 'flv',\n            }\n\n        if not video_url:\n            setup_data = self._parse_json(self._html_search_regex(\n                r'(?s)data-setup=([\\'\"])(?P<content>(?!\\1).+?)\\1',\n                webpage, 'setup data', group='content'), video_id)\n            info_dict = {\n                '_type': 'url_transparent',\n                'url': setup_data['src'],\n            }\n\n        info_dict.update({\n            'title': info['title'],\n            'description': info.get('description'),\n            'thumbnail': info.get('screenshotURI'),\n            'duration': int_or_none(info.get('duration'), 1000),\n            'uploader': info.get('user'),\n            'timestamp': float_or_none(info.get('dateCreated'), 1000),\n            'view_count': int_or_none(info.get('numberOfViews')),\n        })\n\n        return info_dict\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "dotsub.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/dotsub.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
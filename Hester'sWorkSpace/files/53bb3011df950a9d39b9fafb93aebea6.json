{"author": "aws", "code": "\n\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest, unittest\nimport sys\nfrom awscli.compat import six\n\n\nclass TestUpdateConfigurationTemplate(BaseAWSCommandParamsTest):\n\n    prefix = 'elasticbeanstalk create-application'\n\n    def test_ascii(self):\n        cmdline = self.prefix\n        cmdline += ' --application-name FooBar'\n        result = {'ApplicationName': 'FooBar',}\n        self.assert_params_for_cmd(cmdline, result)\n\n    @unittest.skipIf(\n        six.PY3, 'Unicode cmd line test only is relevant to python2.')\n    def test_py2_bytestring_unicode(self):\n         In Python2, sys.argv is a list of bytestrings that are encoded\n         in whatever encoding the terminal uses.  We have an extra step\n         where we need to decode the bytestring into unicode.  In\n         python3, sys.argv is a list of unicode objects so this test\n         doesn't make sense for python3.\n        cmdline = self.prefix\n        app_name = u'\\u2713'\n        cmdline += u' --application-name %s' % app_name\n        encoding = getattr(sys.stdin, 'encoding')\n        if encoding is None:\n            encoding = 'utf-8'\n        cmdline = cmdline.encode(encoding)\n        result = {'ApplicationName': u'\\u2713',}\n        self.assert_params_for_cmd(cmdline, result)\n", "comments": "   usr bin env python    copyright 2012 2013 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license     in python2  sys argv list bytestrings encoded    whatever encoding terminal uses   we extra step    need decode bytestring unicode   in    python3  sys argv list unicode objects test    make sense python3  ", "content": "#!/usr/bin/env python\n# Copyright 2012-2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest, unittest\nimport sys\nfrom awscli.compat import six\n\n\nclass TestUpdateConfigurationTemplate(BaseAWSCommandParamsTest):\n\n    prefix = 'elasticbeanstalk create-application'\n\n    def test_ascii(self):\n        cmdline = self.prefix\n        cmdline += ' --application-name FooBar'\n        result = {'ApplicationName': 'FooBar',}\n        self.assert_params_for_cmd(cmdline, result)\n\n    @unittest.skipIf(\n        six.PY3, 'Unicode cmd line test only is relevant to python2.')\n    def test_py2_bytestring_unicode(self):\n        # In Python2, sys.argv is a list of bytestrings that are encoded\n        # in whatever encoding the terminal uses.  We have an extra step\n        # where we need to decode the bytestring into unicode.  In\n        # python3, sys.argv is a list of unicode objects so this test\n        # doesn't make sense for python3.\n        cmdline = self.prefix\n        app_name = u'\\u2713'\n        cmdline += u' --application-name %s' % app_name\n        encoding = getattr(sys.stdin, 'encoding')\n        if encoding is None:\n            encoding = 'utf-8'\n        cmdline = cmdline.encode(encoding)\n        result = {'ApplicationName': u'\\u2713',}\n        self.assert_params_for_cmd(cmdline, result)\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_create_application.py", "id": "53bb3011df950a9d39b9fafb93aebea6", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/functional/elasticbeanstalk/test_create_application.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
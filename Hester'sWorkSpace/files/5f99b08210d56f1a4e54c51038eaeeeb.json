{"author": "odoo", "code": "\n# Copyright 2016 Vauxoo (https://www.vauxoo.com) <info@vauxoo.com>\n# License LGPL-3.0 or later (http://www.gnu.org/licenses/lgpl).\n\nimport re\nfrom odoo import models, api, fields, _\n\n\nclass AccountJournal(models.Model):\n    _inherit = 'account.journal'\n\n    @api.model\n    def _prepare_liquidity_account(self, name, company, currency_id, type):\n        \n        res = super(AccountJournal, self)._prepare_liquidity_account(name, company, currency_id, type)\n        if company.country_id.id == self.env.ref('base.mx').id:\n            mx_tags = self.env['account.account'].mx_search_tags(res.get('code', ''))\n            if mx_tags:\n                res.update({\n                    'tag_ids': [(6, 0, [tag.id for tag in mx_tags])]\n                })\n        return res\n\nclass AccountAccount(models.Model):\n    _inherit = 'account.account'\n\n    @api.model\n    def mx_search_tags(self, code):\n        account_tag = self.env['account.account.tag']\n        \n        re_res = re.search(\n            '^(?P<first>[1-8][0-9][0-9])[,.]'\n            '(?P<second>[0-9][0-9])[,.]'\n            '(?P<third>[0-9]{2,3})$', code)\n        if not re_res:\n            return account_tag\n\n        \n        account = re_res.groups()\n        return account_tag.search([\n            ('name', '=like', \"%s.%s%%\" % (account[0], account[1])),\n            ('color', '=', 4)], limit=1)\n\n    @api.onchange('code')\n    def _onchange_code(self):\n        if self.company_id.country_id.id == self.env.ref('base.mx').id and self.code:\n            tags = self.mx_search_tags(self.code)\n            self.tag_ids = tags\n\n\nclass AccountAccountTag(models.Model):\n    _inherit = 'account.account.tag'\n\n    nature = fields.Selection([\n        ('D', _('Debitable Account')), ('A', _('Creditable Account'))],\n        help='Used in Mexican report of electronic accounting (account nature).')\n", "comments": "            when preparing values use creating default debit credit accounts         liquidity journal  set correct tags mexican localization                 coding  utf 8    copyright 2016 vauxoo (https   www vauxoo com)  info vauxoo com     license lgpl 3 0 later (http   www gnu org licenses lgpl)    search code compliant regexp tags auto assignation   get elements code divided separation declared regexp ", "content": "# coding: utf-8\n# Copyright 2016 Vauxoo (https://www.vauxoo.com) <info@vauxoo.com>\n# License LGPL-3.0 or later (http://www.gnu.org/licenses/lgpl).\n\nimport re\nfrom odoo import models, api, fields, _\n\n\nclass AccountJournal(models.Model):\n    _inherit = 'account.journal'\n\n    @api.model\n    def _prepare_liquidity_account(self, name, company, currency_id, type):\n        '''\n        When preparing the values to use when creating the default debit and credit accounts of a\n        liquidity journal, set the correct tags for the mexican localization.\n        '''\n        res = super(AccountJournal, self)._prepare_liquidity_account(name, company, currency_id, type)\n        if company.country_id.id == self.env.ref('base.mx').id:\n            mx_tags = self.env['account.account'].mx_search_tags(res.get('code', ''))\n            if mx_tags:\n                res.update({\n                    'tag_ids': [(6, 0, [tag.id for tag in mx_tags])]\n                })\n        return res\n\nclass AccountAccount(models.Model):\n    _inherit = 'account.account'\n\n    @api.model\n    def mx_search_tags(self, code):\n        account_tag = self.env['account.account.tag']\n        #search if the code is compliant with the regexp we have for tags auto-assignation\n        re_res = re.search(\n            '^(?P<first>[1-8][0-9][0-9])[,.]'\n            '(?P<second>[0-9][0-9])[,.]'\n            '(?P<third>[0-9]{2,3})$', code)\n        if not re_res:\n            return account_tag\n\n        #get the elements of that code divided with separation declared in the regexp\n        account = re_res.groups()\n        return account_tag.search([\n            ('name', '=like', \"%s.%s%%\" % (account[0], account[1])),\n            ('color', '=', 4)], limit=1)\n\n    @api.onchange('code')\n    def _onchange_code(self):\n        if self.company_id.country_id.id == self.env.ref('base.mx').id and self.code:\n            tags = self.mx_search_tags(self.code)\n            self.tag_ids = tags\n\n\nclass AccountAccountTag(models.Model):\n    _inherit = 'account.account.tag'\n\n    nature = fields.Selection([\n        ('D', _('Debitable Account')), ('A', _('Creditable Account'))],\n        help='Used in Mexican report of electronic accounting (account nature).')\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "account.py", "id": "5f99b08210d56f1a4e54c51038eaeeeb", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_mx/models/account.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "getredash", "code": "from werkzeug.exceptions import BadRequest\n\nfrom redash.handlers.base import paginate\nfrom unittest import TestCase\nfrom mock import MagicMock\n\nclass DummyResults(object):\n    items = [i for i in range(25)]\n\ndummy_results = DummyResults()\n\nclass TestPaginate(TestCase):\n    def setUp(self):\n        self.query_set = MagicMock()\n        self.query_set.count = MagicMock(return_value=102)\n        self.query_set.paginate = MagicMock(return_value=dummy_results)\n\n    def test_returns_paginated_results(self):\n        page = paginate(self.query_set, 1, 25, lambda x: x)\n        self.assertEqual(page['page'], 1)\n        self.assertEqual(page['page_size'], 25)\n        self.assertEqual(page['count'], 102)\n        self.assertEqual(page['results'], dummy_results.items)\n\n    def test_raises_error_for_bad_page(self):\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, -1, 25, lambda x: x))\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 6, 25, lambda x: x))\n\n    def test_raises_error_for_bad_page_size(self):\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 1, 251, lambda x: x))\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 1, -1, lambda x: x))\n\n", "comments": "", "content": "from werkzeug.exceptions import BadRequest\n\nfrom redash.handlers.base import paginate\nfrom unittest import TestCase\nfrom mock import MagicMock\n\nclass DummyResults(object):\n    items = [i for i in range(25)]\n\ndummy_results = DummyResults()\n\nclass TestPaginate(TestCase):\n    def setUp(self):\n        self.query_set = MagicMock()\n        self.query_set.count = MagicMock(return_value=102)\n        self.query_set.paginate = MagicMock(return_value=dummy_results)\n\n    def test_returns_paginated_results(self):\n        page = paginate(self.query_set, 1, 25, lambda x: x)\n        self.assertEqual(page['page'], 1)\n        self.assertEqual(page['page_size'], 25)\n        self.assertEqual(page['count'], 102)\n        self.assertEqual(page['results'], dummy_results.items)\n\n    def test_raises_error_for_bad_page(self):\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, -1, 25, lambda x: x))\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 6, 25, lambda x: x))\n\n    def test_raises_error_for_bad_page_size(self):\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 1, 251, lambda x: x))\n        self.assertRaises(BadRequest, lambda: paginate(self.query_set, 1, -1, lambda x: x))\n\n", "description": "Make Your Company Data Driven. Connect to any data source, easily visualize and share your data.", "file_name": "test_paginate.py", "id": "befee7669a8ede5f46e20e0dd5aea127", "language": "Python", "project_name": "redash", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/getredash-redash/getredash-redash-0410d83/tests/handlers/test_paginate.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:54:55Z", "url": "https://github.com/getredash/redash", "wiki": false}
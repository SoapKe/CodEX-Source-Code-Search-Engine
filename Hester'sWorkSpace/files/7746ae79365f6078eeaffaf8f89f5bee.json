{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass HistoricFilmsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?historicfilms\\.com/(?:tapes/|play)(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.historicfilms.com/tapes/4728',\n        'md5': 'd4a437aec45d8d796a38a215db064e9a',\n        'info_dict': {\n            'id': '4728',\n            'ext': 'mov',\n            'title': 'Historic Films: GP-7',\n            'description': 'md5:1a86a0f3ac54024e419aba97210d959a',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 2096,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        tape_id = self._search_regex(\n            [r'class=\"tapeId\"[^>]*>([^<]+)<', r'tapeId\\s*:\\s*\"([^\"]+)\"'],\n            webpage, 'tape id')\n\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._html_search_meta(\n            'thumbnailUrl', webpage, 'thumbnails') or self._og_search_thumbnail(webpage)\n        duration = parse_duration(self._html_search_meta(\n            'duration', webpage, 'duration'))\n\n        video_url = 'http://www.historicfilms.com/video/%s_%s_web.mov' % (tape_id, video_id)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass HistoricFilmsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?historicfilms\\.com/(?:tapes/|play)(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.historicfilms.com/tapes/4728',\n        'md5': 'd4a437aec45d8d796a38a215db064e9a',\n        'info_dict': {\n            'id': '4728',\n            'ext': 'mov',\n            'title': 'Historic Films: GP-7',\n            'description': 'md5:1a86a0f3ac54024e419aba97210d959a',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 2096,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        tape_id = self._search_regex(\n            [r'class=\"tapeId\"[^>]*>([^<]+)<', r'tapeId\\s*:\\s*\"([^\"]+)\"'],\n            webpage, 'tape id')\n\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._html_search_meta(\n            'thumbnailUrl', webpage, 'thumbnails') or self._og_search_thumbnail(webpage)\n        duration = parse_duration(self._html_search_meta(\n            'duration', webpage, 'duration'))\n\n        video_url = 'http://www.historicfilms.com/video/%s_%s_web.mov' % (tape_id, video_id)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "historicfilms.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/historicfilms.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
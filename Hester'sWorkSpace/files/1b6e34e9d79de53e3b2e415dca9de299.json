{"author": "jwilder", "code": "import os\nimport docker\nimport logging\nimport pytest\nimport re\n\ndef versiontuple(v):\n    \"\"\"\n    >>> versiontuple(\"1.12.3\")\n    (1, 12, 3)\n\n    >>> versiontuple(\"1.13.0\")\n    (1, 13, 0)\n\n    >>> versiontuple(\"17.03.0-ce\")\n    (17, 3, 0)\n\n    >>> versiontuple(\"17.03.0-ce\") < (1, 13)\n    False\n    \"\"\"\n    return tuple(map(int, (v.split('-')[0].split(\".\"))))\n\n\nraw_version = docker.from_env().version()['Version']\npytestmark = pytest.mark.skipif(\n    versiontuple(raw_version) < (1, 13),\n    reason=\"Docker compose syntax v3 requires docker engine v1.13 or later (got %s)\" % raw_version)\n\n\n@pytest.yield_fixture(scope=\"module\")\ndef nginx_tmpl():\n    \"\"\"\n    pytest fixture which extracts the the nginx config template from\n    the jwilder/nginx-proxy:test image\n    \"\"\"\n    script_dir = os.path.dirname(__file__)\n    logging.info(\"extracting nginx.tmpl from jwilder/nginx-proxy:test\")\n    docker_client = docker.from_env()\n    print(docker_client.containers.run(\n        image='jwilder/nginx-proxy:test',\n        remove=True,\n        volumes=['{current_dir}:{current_dir}'.format(current_dir=script_dir)],\n        entrypoint='sh',\n        command='-xc \"cp /app/nginx.tmpl {current_dir} && chmod 777 {current_dir}/nginx.tmpl\"'.format(\n            current_dir=script_dir),\n        stderr=True))\n    yield\n    logging.info(\"removing nginx.tmpl\")\n    os.remove(os.path.join(script_dir, \"nginx.tmpl\"))\n\n\ndef test_unknown_virtual_host_is_503(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://unknown.nginx.container.docker/\")\n    assert r.status_code == 503\n\n\ndef test_forwards_to_whoami(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://whoami.nginx.container.docker/\")\n    assert r.status_code == 200\n    whoami_container = docker_compose.containers.get(\"whoami\")\n    assert r.text == \"I'm %s\\n\" % whoami_container.id[:12]\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n", "comments": "            versiontuple( 1 12 3 )     (1  12  3)          versiontuple( 1 13 0 )     (1  13  0)          versiontuple( 17 03 0 ce )     (17  3  0)          versiontuple( 17 03 0 ce )   (1  13)     false             return tuple(map(int  (v split(   ) 0  split(   ))))   raw version   docker env() version()  version   pytestmark   pytest mark skipif(     versiontuple(raw version)   (1  13)      reason  docker compose syntax v3 requires docker engine v1 13 later (got  s)    raw version)    pytest yield fixture(scope  module ) def nginx tmpl()              pytest fixture extracts nginx config template     jwilder nginx proxy test image         ", "content": "import os\nimport docker\nimport logging\nimport pytest\nimport re\n\ndef versiontuple(v):\n    \"\"\"\n    >>> versiontuple(\"1.12.3\")\n    (1, 12, 3)\n\n    >>> versiontuple(\"1.13.0\")\n    (1, 13, 0)\n\n    >>> versiontuple(\"17.03.0-ce\")\n    (17, 3, 0)\n\n    >>> versiontuple(\"17.03.0-ce\") < (1, 13)\n    False\n    \"\"\"\n    return tuple(map(int, (v.split('-')[0].split(\".\"))))\n\n\nraw_version = docker.from_env().version()['Version']\npytestmark = pytest.mark.skipif(\n    versiontuple(raw_version) < (1, 13),\n    reason=\"Docker compose syntax v3 requires docker engine v1.13 or later (got %s)\" % raw_version)\n\n\n@pytest.yield_fixture(scope=\"module\")\ndef nginx_tmpl():\n    \"\"\"\n    pytest fixture which extracts the the nginx config template from\n    the jwilder/nginx-proxy:test image\n    \"\"\"\n    script_dir = os.path.dirname(__file__)\n    logging.info(\"extracting nginx.tmpl from jwilder/nginx-proxy:test\")\n    docker_client = docker.from_env()\n    print(docker_client.containers.run(\n        image='jwilder/nginx-proxy:test',\n        remove=True,\n        volumes=['{current_dir}:{current_dir}'.format(current_dir=script_dir)],\n        entrypoint='sh',\n        command='-xc \"cp /app/nginx.tmpl {current_dir} && chmod 777 {current_dir}/nginx.tmpl\"'.format(\n            current_dir=script_dir),\n        stderr=True))\n    yield\n    logging.info(\"removing nginx.tmpl\")\n    os.remove(os.path.join(script_dir, \"nginx.tmpl\"))\n\n\ndef test_unknown_virtual_host_is_503(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://unknown.nginx.container.docker/\")\n    assert r.status_code == 503\n\n\ndef test_forwards_to_whoami(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://whoami.nginx.container.docker/\")\n    assert r.status_code == 200\n    whoami_container = docker_compose.containers.get(\"whoami\")\n    assert r.text == \"I'm %s\\n\" % whoami_container.id[:12]\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_dockergen_v3.py", "id": "1b6e34e9d79de53e3b2e415dca9de299", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_dockergen/test_dockergen_v3.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
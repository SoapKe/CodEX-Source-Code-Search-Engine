{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestBits(object):\n\n    def test_flip_bit(self):\n        bits = Bits()\n        assert_raises(TypeError, bits.flip_bit, None)\n        assert_equal(bits.flip_bit(0), 1)\n        assert_equal(bits.flip_bit(-1), bits.MAX_BITS)\n        num = int('00001111110111011110001111110000', base=2)\n        expected = 10\n        assert_equal(bits.flip_bit(num), expected)\n        num = int('00000100111011101111100011111011', base=2)\n        expected = 9\n        assert_equal(bits.flip_bit(num), expected)\n        num = int('00010011101110111110001111101111', base=2)\n        expected = 10\n        assert_equal(bits.flip_bit(num), expected)\n        print('Success: test_print_binary')\n\n\ndef main():\n    test = TestBits()\n    test.test_flip_bit()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestBits(object):\n\n    def test_flip_bit(self):\n        bits = Bits()\n        assert_raises(TypeError, bits.flip_bit, None)\n        assert_equal(bits.flip_bit(0), 1)\n        assert_equal(bits.flip_bit(-1), bits.MAX_BITS)\n        num = int('00001111110111011110001111110000', base=2)\n        expected = 10\n        assert_equal(bits.flip_bit(num), expected)\n        num = int('00000100111011101111100011111011', base=2)\n        expected = 9\n        assert_equal(bits.flip_bit(num), expected)\n        num = int('00010011101110111110001111101111', base=2)\n        expected = 10\n        assert_equal(bits.flip_bit(num), expected)\n        print('Success: test_print_binary')\n\n\ndef main():\n    test = TestBits()\n    test.test_flip_bit()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_flip_bit.py", "id": "7a34ba49cae0eb4ee455b52c2a7c51ae", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/bit_manipulation/flip_bit/test_flip_bit.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
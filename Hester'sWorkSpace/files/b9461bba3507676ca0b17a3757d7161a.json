{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.unsudo import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('output', [\n    'you cannot perform this operation as root'])\ndef test_match(output):\n    assert match(Command('sudo ls', output))\n\n\ndef test_not_match():\n    assert not match(Command('', ''))\n    assert not match(Command('sudo ls', 'Permission denied'))\n    assert not match(Command('ls', 'you cannot perform this operation as root'))\n\n\n@pytest.mark.parametrize('before, after', [\n    ('sudo ls', 'ls'),\n    ('sudo pacaur -S helloworld', 'pacaur -S helloworld')])\ndef test_get_new_command(before, after):\n    assert get_new_command(Command(before, '')) == after\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.unsudo import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('output', [\n    'you cannot perform this operation as root'])\ndef test_match(output):\n    assert match(Command('sudo ls', output))\n\n\ndef test_not_match():\n    assert not match(Command('', ''))\n    assert not match(Command('sudo ls', 'Permission denied'))\n    assert not match(Command('ls', 'you cannot perform this operation as root'))\n\n\n@pytest.mark.parametrize('before, after', [\n    ('sudo ls', 'ls'),\n    ('sudo pacaur -S helloworld', 'pacaur -S helloworld')])\ndef test_get_new_command(before, after):\n    assert get_new_command(Command(before, '')) == after\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_unsudo.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_unsudo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "keon", "code": "\"\"\"\nImplement Flatten Arrays.\nGiven an array that may contain nested arrays,\ngive a single resultant array.\n\nfunction flatten(input){\n}\n\nExample:\n\nInput: var input = [2, 1, [3, [4, 5], 6], 7, [8]];\nflatten(input);\nOutput: [2, 1, 3, 4, 5, 6, 7, 8]\n\"\"\"\nimport collections\n\n\ndef flatten(inputArr, outputArr=None):\n    if not outputArr:\n        outputArr = []\n    for ele in inputArr:\n        if isinstance(ele, collections.Iterable):\n            flatten(ele, outputArr)\n        else:\n            outputArr.append(ele)\n    return outputArr\n", "comments": "    implement flatten arrays  given array may contain nested arrays  give single resultant array   function flatten(input)     example   input  var input    2  1   3   4  5   6   7   8    flatten(input)  output   2  1  3  4  5  6  7  8      ", "content": "\"\"\"\nImplement Flatten Arrays.\nGiven an array that may contain nested arrays,\ngive a single resultant array.\n\nfunction flatten(input){\n}\n\nExample:\n\nInput: var input = [2, 1, [3, [4, 5], 6], 7, [8]];\nflatten(input);\nOutput: [2, 1, 3, 4, 5, 6, 7, 8]\n\"\"\"\nimport collections\n\n\ndef flatten(inputArr, outputArr=None):\n    if not outputArr:\n        outputArr = []\n    for ele in inputArr:\n        if isinstance(ele, collections.Iterable):\n            flatten(ele, outputArr)\n        else:\n            outputArr.append(ele)\n    return outputArr\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "flatten.py", "id": "12a3d9c606277a5583843dd0e5d6b648", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/array/flatten.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
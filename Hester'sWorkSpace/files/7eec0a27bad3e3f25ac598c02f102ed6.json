{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\n\n\nclass TemplatePreview(models.TransientModel):\n    _inherit = \"mail.template\"\n    _name = \"email_template.preview\"\n    _description = \"Email Template Preview\"\n\n    @api.model\n    def _get_records(self):\n        \n        template_id = self._context.get('template_id')\n        default_res_id = self._context.get('default_res_id')\n        if not template_id:\n            return []\n        template = self.env['mail.template'].browse(int(template_id))\n        records = self.env[template.model_id.model].search([], limit=10)\n        records |= records.browse(default_res_id)\n        return records.name_get()\n\n    @api.model\n    def default_get(self, fields):\n        result = super(TemplatePreview, self).default_get(fields)\n\n        if 'res_id' in fields and not result.get('res_id'):\n            records = self._get_records()\n            result['res_id'] = records and records[0][0] or False  \n        if self._context.get('template_id') and 'model_id' in fields and not result.get('model_id'):\n            result['model_id'] = self.env['mail.template'].browse(self._context['template_id']).model_id.id\n        return result\n\n    res_id = fields.Selection(_get_records, 'Sample Document')\n    partner_ids = fields.Many2many('res.partner', string='Recipients')\n\n    @api.onchange('res_id')\n    @api.multi\n    def on_change_res_id(self):\n        mail_values = {}\n        if self.res_id and self._context.get('template_id'):\n            template = self.env['mail.template'].browse(self._context['template_id'])\n            self.name = template.name\n            mail_values = template.generate_email(self.res_id)\n        for field in ['email_from', 'email_to', 'email_cc', 'reply_to', 'subject', 'body_html', 'partner_to', 'partner_ids', 'attachment_ids']:\n            setattr(self, field, mail_values.get(field, False))\n", "comments": "    return records particular email template model            coding  utf 8        part odoo  see license file full copyright licensing details     select first record default ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\n\n\nclass TemplatePreview(models.TransientModel):\n    _inherit = \"mail.template\"\n    _name = \"email_template.preview\"\n    _description = \"Email Template Preview\"\n\n    @api.model\n    def _get_records(self):\n        \"\"\" Return Records of particular Email Template's Model \"\"\"\n        template_id = self._context.get('template_id')\n        default_res_id = self._context.get('default_res_id')\n        if not template_id:\n            return []\n        template = self.env['mail.template'].browse(int(template_id))\n        records = self.env[template.model_id.model].search([], limit=10)\n        records |= records.browse(default_res_id)\n        return records.name_get()\n\n    @api.model\n    def default_get(self, fields):\n        result = super(TemplatePreview, self).default_get(fields)\n\n        if 'res_id' in fields and not result.get('res_id'):\n            records = self._get_records()\n            result['res_id'] = records and records[0][0] or False  # select first record as a Default\n        if self._context.get('template_id') and 'model_id' in fields and not result.get('model_id'):\n            result['model_id'] = self.env['mail.template'].browse(self._context['template_id']).model_id.id\n        return result\n\n    res_id = fields.Selection(_get_records, 'Sample Document')\n    partner_ids = fields.Many2many('res.partner', string='Recipients')\n\n    @api.onchange('res_id')\n    @api.multi\n    def on_change_res_id(self):\n        mail_values = {}\n        if self.res_id and self._context.get('template_id'):\n            template = self.env['mail.template'].browse(self._context['template_id'])\n            self.name = template.name\n            mail_values = template.generate_email(self.res_id)\n        for field in ['email_from', 'email_to', 'email_cc', 'reply_to', 'subject', 'body_html', 'partner_to', 'partner_ids', 'attachment_ids']:\n            setattr(self, field, mail_values.get(field, False))\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "email_template_preview.py", "id": "7eec0a27bad3e3f25ac598c02f102ed6", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/mail/wizard/email_template_preview.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
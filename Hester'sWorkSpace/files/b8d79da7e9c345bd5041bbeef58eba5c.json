{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n ==============================================================================\n\"\"\"Pretrains a recurrent language model.\n\nComputational time:\n  2 days to train 100000 steps on 1 layer 1024 hidden units LSTM,\n  256 embeddings, 400 truncated BP, 256 minibatch and on single GPU (Pascal\n  Titan X, cuDNNv5).\n\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n Dependency imports\n\nimport tensorflow as tf\n\nimport graphs\nimport train_utils\n\nFLAGS = tf.app.flags.FLAGS\n\n\ndef main(_):\n  \"\"\"Trains Language Model.\"\"\"\n  tf.logging.set_verbosity(tf.logging.INFO)\n  with tf.device(tf.train.replica_device_setter(FLAGS.ps_tasks)):\n    model = graphs.get_model()\n    train_op, loss, global_step = model.language_model_training()\n    train_utils.run_training(train_op, loss, global_step)\n\n\nif __name__ == '__main__':\n  tf.app.run()\n", "comments": "   pretrains recurrent language model   computational time    2 days train 100000 steps 1 layer 1024 hidden units lstm    256 embeddings  400 truncated bp  256 minibatch single gpu (pascal   titan x  cudnnv5)        future   import absolute import   future   import division   future   import print function    dependency imports  import tensorflow tf  import graphs import train utils  flags   tf app flags flags   def main( )       trains language model        copyright 2017 google inc  all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license           http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license                                                                                       dependency imports ", "content": "# Copyright 2017 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\"\"\"Pretrains a recurrent language model.\n\nComputational time:\n  2 days to train 100000 steps on 1 layer 1024 hidden units LSTM,\n  256 embeddings, 400 truncated BP, 256 minibatch and on single GPU (Pascal\n  Titan X, cuDNNv5).\n\"\"\"\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n# Dependency imports\n\nimport tensorflow as tf\n\nimport graphs\nimport train_utils\n\nFLAGS = tf.app.flags.FLAGS\n\n\ndef main(_):\n  \"\"\"Trains Language Model.\"\"\"\n  tf.logging.set_verbosity(tf.logging.INFO)\n  with tf.device(tf.train.replica_device_setter(FLAGS.ps_tasks)):\n    model = graphs.get_model()\n    train_op, loss, global_step = model.language_model_training()\n    train_utils.run_training(train_op, loss, global_step)\n\n\nif __name__ == '__main__':\n  tf.app.run()\n", "description": "Models and examples built with TensorFlow", "file_name": "pretrain.py", "id": "b8d79da7e9c345bd5041bbeef58eba5c", "language": "Python", "project_name": "models", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tensorflow-models/tensorflow-models-7e4c66b/research/adversarial_text/pretrain.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:59:36Z", "url": "https://github.com/tensorflow/models", "wiki": true}
{"author": "rg3", "code": "\n\nfrom __future__ import unicode_literals\n\n\nimport os\nimport sys\nimport unittest\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport io\nimport re\nimport string\n\nfrom test.helper import FakeYDL\nfrom youtube_dl.extractor import YoutubeIE\nfrom youtube_dl.compat import compat_str, compat_urlretrieve\n\n_TESTS = [\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vflHOr_nV.js',\n        'js',\n        86,\n        '>=<;:/.-[+*)(\\'&%$\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vfldJ8xgI.js',\n        'js',\n        85,\n        '3456789a0cdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRS[UVWXYZ!\"\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vfle-mVwz.js',\n        'js',\n        90,\n        ']\\\\[@?>=<;:/.-,+*)(\\'&%$\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vfl0Cbn9e.js',\n        'js',\n        84,\n        'O1I3456789abcde0ghijklmnopqrstuvwxyzABCDEFGHfJKLMN2PQRSTUVW@YZ!\"\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflXGBaUN.js',\n        'js',\n        '2ACFC7A61CA478CD21425E5A57EBD73DDC78E22A.2094302436B2D377D14A3BBA23022D023B8BC25AA',\n        'A52CB8B320D22032ABB3A41D773D2B6342034902.A22E87CDD37DBE75A5E52412DC874AC16A7CFCA2',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflBb0OQx.js',\n        'js',\n        84,\n        '123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQ0STUVWXYZ!\"\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vfl9FYC6l.js',\n        'js',\n        83,\n        '123456789abcdefghijklmnopqr0tuvwxyzABCDETGHIJKLMNOPQRS>UVWXYZ!\"\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflCGk6yw/html5player.js',\n        'js',\n        '4646B5181C6C3020DF1D9C7FCFEA.AD80ABF70C39BD369CCCAE780AFBB98FA6B6CB42766249D9488C288',\n        '82C8849D94266724DC6B6AF89BBFA087EACCD963.B93C07FBA084ACAEFCF7C9D1FD0203C6C1815B6B'\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflKjOTVq/html5player.js',\n        'js',\n        '312AA52209E3623129A412D56A40F11CB0AF14AE.3EE09501CB14E3BCDC3B2AE808BF3F1D14E7FBF12',\n        '112AA5220913623229A412D56A40F11CB0AF14AE.3EE0950FCB14EEBCDC3B2AE808BF331D14E7FBF3',\n    )\n]\n\n\nclass TestSignature(unittest.TestCase):\n    def setUp(self):\n        TEST_DIR = os.path.dirname(os.path.abspath(__file__))\n        self.TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')\n        if not os.path.exists(self.TESTDATA_DIR):\n            os.mkdir(self.TESTDATA_DIR)\n\n\ndef make_tfunc(url, stype, sig_input, expected_sig):\n    m = re.match(r'.*-([a-zA-Z0-9_-]+)(?:/watch_as3|/html5player)?\\.[a-z]+$', url)\n    assert m, '%r should follow URL format' % url\n    test_id = m.group(1)\n\n    def test_func(self):\n        basename = 'player-%s.%s' % (test_id, stype)\n        fn = os.path.join(self.TESTDATA_DIR, basename)\n\n        if not os.path.exists(fn):\n            compat_urlretrieve(url, fn)\n\n        ydl = FakeYDL()\n        ie = YoutubeIE(ydl)\n        if stype == 'js':\n            with io.open(fn, encoding='utf-8') as testf:\n                jscode = testf.read()\n            func = ie._parse_sig_js(jscode)\n        else:\n            assert stype == 'swf'\n            with open(fn, 'rb') as testf:\n                swfcode = testf.read()\n            func = ie._parse_sig_swf(swfcode)\n        src_sig = (\n            compat_str(string.printable[:sig_input])\n            if isinstance(sig_input, int) else sig_input)\n        got_sig = func(src_sig)\n        self.assertEqual(got_sig, expected_sig)\n\n    test_func.__name__ = str('test_signature_' + stype + '_' + test_id)\n    setattr(TestSignature, test_func.__name__, test_func)\n\n\nfor test_spec in _TESTS:\n    make_tfunc(*test_spec)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "comments": "#!/usr/bin/env python\n# Allow direct execution\n#\"!ZYX0VUTSRQPONMLKJIHGFEDCBA\\\\yxwvutsrqponmlkjihgfedcba987654321',\n#$%&\\'()*+,-./:;<=>?@',\n#\"hZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjiagfedcb39876',\n#$%&\\'()*+,-./:;<=',\n#$%&\\'()*+,@./:;<=>'\n#$%&\\'()*+,-./:;<=F'\n", "content": "#!/usr/bin/env python\n\nfrom __future__ import unicode_literals\n\n# Allow direct execution\nimport os\nimport sys\nimport unittest\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nimport io\nimport re\nimport string\n\nfrom test.helper import FakeYDL\nfrom youtube_dl.extractor import YoutubeIE\nfrom youtube_dl.compat import compat_str, compat_urlretrieve\n\n_TESTS = [\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vflHOr_nV.js',\n        'js',\n        86,\n        '>=<;:/.-[+*)(\\'&%$#\"!ZYX0VUTSRQPONMLKJIHGFEDCBA\\\\yxwvutsrqponmlkjihgfedcba987654321',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vfldJ8xgI.js',\n        'js',\n        85,\n        '3456789a0cdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRS[UVWXYZ!\"#$%&\\'()*+,-./:;<=>?@',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-vfle-mVwz.js',\n        'js',\n        90,\n        ']\\\\[@?>=<;:/.-,+*)(\\'&%$#\"hZYXWVUTSRQPONMLKJIHGFEDCBAzyxwvutsrqponmlkjiagfedcb39876',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vfl0Cbn9e.js',\n        'js',\n        84,\n        'O1I3456789abcde0ghijklmnopqrstuvwxyzABCDEFGHfJKLMN2PQRSTUVW@YZ!\"#$%&\\'()*+,-./:;<=',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflXGBaUN.js',\n        'js',\n        '2ACFC7A61CA478CD21425E5A57EBD73DDC78E22A.2094302436B2D377D14A3BBA23022D023B8BC25AA',\n        'A52CB8B320D22032ABB3A41D773D2B6342034902.A22E87CDD37DBE75A5E52412DC874AC16A7CFCA2',\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflBb0OQx.js',\n        'js',\n        84,\n        '123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQ0STUVWXYZ!\"#$%&\\'()*+,@./:;<=>'\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vfl9FYC6l.js',\n        'js',\n        83,\n        '123456789abcdefghijklmnopqr0tuvwxyzABCDETGHIJKLMNOPQRS>UVWXYZ!\"#$%&\\'()*+,-./:;<=F'\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflCGk6yw/html5player.js',\n        'js',\n        '4646B5181C6C3020DF1D9C7FCFEA.AD80ABF70C39BD369CCCAE780AFBB98FA6B6CB42766249D9488C288',\n        '82C8849D94266724DC6B6AF89BBFA087EACCD963.B93C07FBA084ACAEFCF7C9D1FD0203C6C1815B6B'\n    ),\n    (\n        'https://s.ytimg.com/yts/jsbin/html5player-en_US-vflKjOTVq/html5player.js',\n        'js',\n        '312AA52209E3623129A412D56A40F11CB0AF14AE.3EE09501CB14E3BCDC3B2AE808BF3F1D14E7FBF12',\n        '112AA5220913623229A412D56A40F11CB0AF14AE.3EE0950FCB14EEBCDC3B2AE808BF331D14E7FBF3',\n    )\n]\n\n\nclass TestSignature(unittest.TestCase):\n    def setUp(self):\n        TEST_DIR = os.path.dirname(os.path.abspath(__file__))\n        self.TESTDATA_DIR = os.path.join(TEST_DIR, 'testdata')\n        if not os.path.exists(self.TESTDATA_DIR):\n            os.mkdir(self.TESTDATA_DIR)\n\n\ndef make_tfunc(url, stype, sig_input, expected_sig):\n    m = re.match(r'.*-([a-zA-Z0-9_-]+)(?:/watch_as3|/html5player)?\\.[a-z]+$', url)\n    assert m, '%r should follow URL format' % url\n    test_id = m.group(1)\n\n    def test_func(self):\n        basename = 'player-%s.%s' % (test_id, stype)\n        fn = os.path.join(self.TESTDATA_DIR, basename)\n\n        if not os.path.exists(fn):\n            compat_urlretrieve(url, fn)\n\n        ydl = FakeYDL()\n        ie = YoutubeIE(ydl)\n        if stype == 'js':\n            with io.open(fn, encoding='utf-8') as testf:\n                jscode = testf.read()\n            func = ie._parse_sig_js(jscode)\n        else:\n            assert stype == 'swf'\n            with open(fn, 'rb') as testf:\n                swfcode = testf.read()\n            func = ie._parse_sig_swf(swfcode)\n        src_sig = (\n            compat_str(string.printable[:sig_input])\n            if isinstance(sig_input, int) else sig_input)\n        got_sig = func(src_sig)\n        self.assertEqual(got_sig, expected_sig)\n\n    test_func.__name__ = str('test_signature_' + stype + '_' + test_id)\n    setattr(TestSignature, test_func.__name__, test_func)\n\n\nfor test_spec in _TESTS:\n    make_tfunc(*test_spec)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "test_youtube_signature.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/test/test_youtube_signature.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
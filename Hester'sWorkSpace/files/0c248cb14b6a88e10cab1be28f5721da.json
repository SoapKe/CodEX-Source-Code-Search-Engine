{"author": "tgalal", "code": "from yowsup.layers.auth import YowAuthenticationProtocolLayer\nfrom yowsup.layers import YowLayerEvent, YowLayerTest\nfrom yowsup.layers.auth.protocolentities import StreamFeaturesProtocolEntity,AuthProtocolEntity, ChallengeProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nfrom yowsup.stacks import YowStack\nimport base64\n\n\n\nclass AuthenticationProtocolLayerTest(YowLayerTest, YowAuthenticationProtocolLayer):\n    def setUp(self):\n        #YowAuthenticatorLayer.__init__(self)\n        super(YowAuthenticationProtocolLayer, self).__init__()\n        dummyStack = YowStack()\n        self.setStack(dummyStack)\n\n        self.credentials =  (\"dummyusername\", bytearray(\"password\", \"latin-1\"))\n        dummyStack.setProp(YowAuthenticationProtocolLayer.PROP_CREDENTIALS, self.credentials)\n        #ticatorLayer.setProp(\"credentials\", self.credentials)\n\n    def test_streamfeatures(self):\n        self._sendFeatures()\n        self.assertEqual(self.lowerSink.pop(), StreamFeaturesProtocolEntity([]).toProtocolTreeNode())\n\n    def test_auth(self):\n        self._sendAuth()\n        self.assertEqual(self.lowerSink.pop(), AuthProtocolEntity(self.credentials[0]).toProtocolTreeNode())\n\n    def test_handle_challenge(self):\n        node = ProtocolTreeNode(\"challenge\", {}, None, \"salt\")\n        self.handleChallenge(node)\n\n\n\n    def test_login_onconnected(self):\n        self.onEvent(YowLayerEvent(\"network.state.connected\"))\n", "comments": "  unittest mock import magicmock   yowauthenticatorlayer   init  (self)   ticatorlayer setprop( credentials   self credentials) ", "content": "from yowsup.layers.auth import YowAuthenticationProtocolLayer\nfrom yowsup.layers import YowLayerEvent, YowLayerTest\nfrom yowsup.layers.auth.protocolentities import StreamFeaturesProtocolEntity,AuthProtocolEntity, ChallengeProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nfrom yowsup.stacks import YowStack\nimport base64\n# from unittest.mock import MagicMock\n\n\nclass AuthenticationProtocolLayerTest(YowLayerTest, YowAuthenticationProtocolLayer):\n    def setUp(self):\n        #YowAuthenticatorLayer.__init__(self)\n        super(YowAuthenticationProtocolLayer, self).__init__()\n        dummyStack = YowStack()\n        self.setStack(dummyStack)\n\n        self.credentials =  (\"dummyusername\", bytearray(\"password\", \"latin-1\"))\n        dummyStack.setProp(YowAuthenticationProtocolLayer.PROP_CREDENTIALS, self.credentials)\n        #ticatorLayer.setProp(\"credentials\", self.credentials)\n\n    def test_streamfeatures(self):\n        self._sendFeatures()\n        self.assertEqual(self.lowerSink.pop(), StreamFeaturesProtocolEntity([]).toProtocolTreeNode())\n\n    def test_auth(self):\n        self._sendAuth()\n        self.assertEqual(self.lowerSink.pop(), AuthProtocolEntity(self.credentials[0]).toProtocolTreeNode())\n\n    def test_handle_challenge(self):\n        node = ProtocolTreeNode(\"challenge\", {}, None, \"salt\")\n        self.handleChallenge(node)\n\n\n\n    def test_login_onconnected(self):\n        self.onEvent(YowLayerEvent(\"network.state.connected\"))\n", "description": "The python WhatsApp library", "file_name": "test_authenticator.py", "id": "0c248cb14b6a88e10cab1be28f5721da", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/auth/test_authenticator.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
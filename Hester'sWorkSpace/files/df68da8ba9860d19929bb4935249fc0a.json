{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSelectionSort(object):\n\n    def test_selection_sort(self, func):\n        print('None input')\n        assert_raises(TypeError, func, None)\n\n        print('Empty input')\n        assert_equal(func([]), [])\n\n        print('One element')\n        assert_equal(func([5]), [5])\n\n        print('Two or more elements')\n        data = [5, 1, 7, 2, 6, -3, 5, 7, -10]\n        assert_equal(func(data), sorted(data))\n\n        print('Success: test_selection_sort\\n')\n\n\ndef main():\n    test = TestSelectionSort()\n    selection_sort = SelectionSort()\n    test.test_selection_sort(selection_sort.sort)\n    try:\n        test.test_selection_sort(selection_sort.sort_recursive)\n        test.test_selection_sort(selection_sort.sor_iterative_alt)\n    except NameError:\n        \n        \n        pass\n\n\nif __name__ == '__main__':\n    main()", "comments": "  alternate solutions defined    solutions file ", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSelectionSort(object):\n\n    def test_selection_sort(self, func):\n        print('None input')\n        assert_raises(TypeError, func, None)\n\n        print('Empty input')\n        assert_equal(func([]), [])\n\n        print('One element')\n        assert_equal(func([5]), [5])\n\n        print('Two or more elements')\n        data = [5, 1, 7, 2, 6, -3, 5, 7, -10]\n        assert_equal(func(data), sorted(data))\n\n        print('Success: test_selection_sort\\n')\n\n\ndef main():\n    test = TestSelectionSort()\n    selection_sort = SelectionSort()\n    test.test_selection_sort(selection_sort.sort)\n    try:\n        test.test_selection_sort(selection_sort.sort_recursive)\n        test.test_selection_sort(selection_sort.sor_iterative_alt)\n    except NameError:\n        # Alternate solutions are only defined\n        # in the solutions file\n        pass\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_selection_sort.py", "id": "df68da8ba9860d19929bb4935249fc0a", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/sorting_searching/selection_sort/test_selection_sort.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
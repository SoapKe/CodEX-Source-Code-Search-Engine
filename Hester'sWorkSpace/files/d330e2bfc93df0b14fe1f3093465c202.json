{"author": "mitmproxy", "code": "import typing\n\nfrom mitmproxy import command\nfrom mitmproxy import ctx\nfrom mitmproxy import flow\nfrom mitmproxy import types\n\n\nclass MyAddon:\n    def __init__(self):\n        self.num = 0\n\n    @command.command(\"myaddon.histogram\")\n    def histogram(\n        self,\n        flows: typing.Sequence[flow.Flow],\n        path: types.Path,\n    ) -> None:\n        totals = {}\n        for f in flows:\n            totals[f.request.host] = totals.setdefault(f.request.host, 0) + 1\n\n        fp = open(path, \"w+\")\n        for cnt, dom in sorted([(v, k) for (k, v) in totals.items()]):\n            fp.write(\"%s: %s\\n\" % (cnt, dom))\n\n        ctx.log.alert(\"done\")\n\n\naddons = [\n    MyAddon()\n]\n", "comments": "", "content": "import typing\n\nfrom mitmproxy import command\nfrom mitmproxy import ctx\nfrom mitmproxy import flow\nfrom mitmproxy import types\n\n\nclass MyAddon:\n    def __init__(self):\n        self.num = 0\n\n    @command.command(\"myaddon.histogram\")\n    def histogram(\n        self,\n        flows: typing.Sequence[flow.Flow],\n        path: types.Path,\n    ) -> None:\n        totals = {}\n        for f in flows:\n            totals[f.request.host] = totals.setdefault(f.request.host, 0) + 1\n\n        fp = open(path, \"w+\")\n        for cnt, dom in sorted([(v, k) for (k, v) in totals.items()]):\n            fp.write(\"%s: %s\\n\" % (cnt, dom))\n\n        ctx.log.alert(\"done\")\n\n\naddons = [\n    MyAddon()\n]\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "commands-paths.py", "id": "d330e2bfc93df0b14fe1f3093465c202", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/docs/src/examples/addons/commands-paths.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
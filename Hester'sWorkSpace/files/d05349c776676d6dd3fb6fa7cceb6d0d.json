{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    qualities,\n)\n\n\nclass CrooksAndLiarsIE(InfoExtractor):\n    _VALID_URL = r'https?://embed\\.crooksandliars\\.com/(?:embed|v)/(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'https://embed.crooksandliars.com/embed/8RUoRhRi',\n        'info_dict': {\n            'id': '8RUoRhRi',\n            'ext': 'mp4',\n            'title': 'Fox & Friends Says Protecting Atheists From Discrimination Is Anti-Christian!',\n            'description': 'md5:e1a46ad1650e3a5ec7196d432799127f',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'timestamp': 1428207000,\n            'upload_date': '20150405',\n            'uploader': 'Heather',\n            'duration': 236,\n        }\n    }, {\n        'url': 'http://embed.crooksandliars.com/v/MTE3MjUtMzQ2MzA',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'http://embed.crooksandliars.com/embed/%s' % video_id, video_id)\n\n        manifest = self._parse_json(\n            self._search_regex(\n                r'var\\s+manifest\\s*=\\s*({.+?})\\n', webpage, 'manifest JSON'),\n            video_id)\n\n        quality = qualities(('webm_low', 'mp4_low', 'webm_high', 'mp4_high'))\n\n        formats = [{\n            'url': item['url'],\n            'format_id': item['type'],\n            'quality': quality(item['type']),\n        } for item in manifest['flavors'] if item['mime'].startswith('video/')]\n        self._sort_formats(formats)\n\n        return {\n            'url': url,\n            'id': video_id,\n            'title': manifest['title'],\n            'description': manifest.get('description'),\n            'thumbnail': self._proto_relative_url(manifest.get('poster')),\n            'timestamp': int_or_none(manifest.get('created')),\n            'uploader': manifest.get('author'),\n            'duration': int_or_none(manifest.get('duration')),\n            'formats': formats,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    qualities,\n)\n\n\nclass CrooksAndLiarsIE(InfoExtractor):\n    _VALID_URL = r'https?://embed\\.crooksandliars\\.com/(?:embed|v)/(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'https://embed.crooksandliars.com/embed/8RUoRhRi',\n        'info_dict': {\n            'id': '8RUoRhRi',\n            'ext': 'mp4',\n            'title': 'Fox & Friends Says Protecting Atheists From Discrimination Is Anti-Christian!',\n            'description': 'md5:e1a46ad1650e3a5ec7196d432799127f',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'timestamp': 1428207000,\n            'upload_date': '20150405',\n            'uploader': 'Heather',\n            'duration': 236,\n        }\n    }, {\n        'url': 'http://embed.crooksandliars.com/v/MTE3MjUtMzQ2MzA',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'http://embed.crooksandliars.com/embed/%s' % video_id, video_id)\n\n        manifest = self._parse_json(\n            self._search_regex(\n                r'var\\s+manifest\\s*=\\s*({.+?})\\n', webpage, 'manifest JSON'),\n            video_id)\n\n        quality = qualities(('webm_low', 'mp4_low', 'webm_high', 'mp4_high'))\n\n        formats = [{\n            'url': item['url'],\n            'format_id': item['type'],\n            'quality': quality(item['type']),\n        } for item in manifest['flavors'] if item['mime'].startswith('video/')]\n        self._sort_formats(formats)\n\n        return {\n            'url': url,\n            'id': video_id,\n            'title': manifest['title'],\n            'description': manifest.get('description'),\n            'thumbnail': self._proto_relative_url(manifest.get('poster')),\n            'timestamp': int_or_none(manifest.get('created')),\n            'uploader': manifest.get('author'),\n            'duration': int_or_none(manifest.get('duration')),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "crooksandliars.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/crooksandliars.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
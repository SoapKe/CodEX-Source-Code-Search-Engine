{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    try_get,\n)\n\n\nclass TwentyMinutenIE(InfoExtractor):\n    IE_NAME = '20min'\n    _VALID_URL = r\n    _TESTS = [{\n        'url': 'http://www.20min.ch/videotv/?vid=469148&cid=2',\n        'md5': 'e7264320db31eed8c38364150c12496e',\n        'info_dict': {\n            'id': '469148',\n            'ext': 'mp4',\n            'title': '85 000 Franken f\u00fcr 15 perfekte Minuten',\n            'thumbnail': r're:https?://.*\\.jpg$',\n        },\n    }, {\n        'url': 'http://www.20min.ch/videoplayer/videoplayer.html?params=client@twentyDE|videoId@523629',\n        'info_dict': {\n            'id': '523629',\n            'ext': 'mp4',\n            'title': 'So kommen Sie bei Eis und Schnee sicher an',\n            'description': 'md5:117c212f64b25e3d95747e5276863f7d',\n            'thumbnail': r're:https?://.*\\.jpg$',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.20min.ch/videotv/?cid=44&vid=468738',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_urls(webpage):\n        return [m.group('url') for m in re.finditer(\n            r'<iframe[^>]+src=([\"\\'])(?P<url>(?:(?:https?:)?//)?(?:www\\.)?20min\\.ch/videoplayer/videoplayer.html\\?.*?\\bvideoId@\\d+.*?)\\1',\n            webpage)]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'http://api.20min.ch/video/%s/show' % video_id,\n            video_id)['content']\n\n        title = video['title']\n\n        formats = [{\n            'format_id': format_id,\n            'url': 'http://podcast.20min-tv.ch/podcast/20min/%s%s.mp4' % (video_id, p),\n            'quality': quality,\n        } for quality, (format_id, p) in enumerate([('sd', ''), ('hd', 'h')])]\n        self._sort_formats(formats)\n\n        description = video.get('lead')\n        thumbnail = video.get('thumbnail')\n\n        def extract_count(kind):\n            return try_get(\n                video,\n                lambda x: int_or_none(x['communityobject']['thumbs_%s' % kind]))\n\n        like_count = extract_count('up')\n        dislike_count = extract_count('down')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'formats': formats,\n        }\n", "comments": "(?x)\n                    https?://\n                        (?:www\\.)?20min\\.ch/\n                        (?:\n                            videotv/*\\?.*?\\bvid=|\n                            videoplayer/videoplayer\\.html\\?.*?\\bvideoId@\n                        )\n                        (?P<id>\\d+)\n                    \n \n# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    try_get,\n)\n\n\nclass TwentyMinutenIE(InfoExtractor):\n    IE_NAME = '20min'\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:www\\.)?20min\\.ch/\n                        (?:\n                            videotv/*\\?.*?\\bvid=|\n                            videoplayer/videoplayer\\.html\\?.*?\\bvideoId@\n                        )\n                        (?P<id>\\d+)\n                    '''\n    _TESTS = [{\n        'url': 'http://www.20min.ch/videotv/?vid=469148&cid=2',\n        'md5': 'e7264320db31eed8c38364150c12496e',\n        'info_dict': {\n            'id': '469148',\n            'ext': 'mp4',\n            'title': '85 000 Franken f\u00fcr 15 perfekte Minuten',\n            'thumbnail': r're:https?://.*\\.jpg$',\n        },\n    }, {\n        'url': 'http://www.20min.ch/videoplayer/videoplayer.html?params=client@twentyDE|videoId@523629',\n        'info_dict': {\n            'id': '523629',\n            'ext': 'mp4',\n            'title': 'So kommen Sie bei Eis und Schnee sicher an',\n            'description': 'md5:117c212f64b25e3d95747e5276863f7d',\n            'thumbnail': r're:https?://.*\\.jpg$',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.20min.ch/videotv/?cid=44&vid=468738',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_urls(webpage):\n        return [m.group('url') for m in re.finditer(\n            r'<iframe[^>]+src=([\"\\'])(?P<url>(?:(?:https?:)?//)?(?:www\\.)?20min\\.ch/videoplayer/videoplayer.html\\?.*?\\bvideoId@\\d+.*?)\\1',\n            webpage)]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'http://api.20min.ch/video/%s/show' % video_id,\n            video_id)['content']\n\n        title = video['title']\n\n        formats = [{\n            'format_id': format_id,\n            'url': 'http://podcast.20min-tv.ch/podcast/20min/%s%s.mp4' % (video_id, p),\n            'quality': quality,\n        } for quality, (format_id, p) in enumerate([('sd', ''), ('hd', 'h')])]\n        self._sort_formats(formats)\n\n        description = video.get('lead')\n        thumbnail = video.get('thumbnail')\n\n        def extract_count(kind):\n            return try_get(\n                video,\n                lambda x: int_or_none(x['communityobject']['thumbs_%s' % kind]))\n\n        like_count = extract_count('up')\n        dislike_count = extract_count('down')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "twentymin.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/twentymin.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    get_element_by_attribute,\n    parse_duration,\n    update_url_query,\n    ExtractorError,\n)\nfrom ..compat import compat_str\n\n\nclass USATodayIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?usatoday\\.com/(?:[^/]+/)*(?P<id>[^?/\n    _TEST = {\n        'url': 'http://www.usatoday.com/media/cinematic/video/81729424/us-france-warn-syrian-regime-ahead-of-new-peace-talks/',\n        'md5': '4d40974481fa3475f8bccfd20c5361f8',\n        'info_dict': {\n            'id': '81729424',\n            'ext': 'mp4',\n            'title': 'US, France warn Syrian regime ahead of new peace talks',\n            'timestamp': 1457891045,\n            'description': 'md5:7e50464fdf2126b0f533748d3c78d58f',\n            'uploader_id': '29906170001',\n            'upload_date': '20160313',\n        }\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/29906170001/38a9eecc-bdd8-42a3-ba14-95397e48b3f8_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(update_url_query(url, {'ajax': 'true'}), display_id)\n        ui_video_data = get_element_by_attribute('class', 'ui-video-data', webpage)\n        if not ui_video_data:\n            raise ExtractorError('no video on the webpage', expected=True)\n        video_data = self._parse_json(ui_video_data, display_id)\n\n        return {\n            '_type': 'url_transparent',\n            'url': self.BRIGHTCOVE_URL_TEMPLATE % video_data['brightcove_id'],\n            'id': compat_str(video_data['id']),\n            'title': video_data['title'],\n            'thumbnail': video_data.get('thumbnail'),\n            'description': video_data.get('description'),\n            'duration': parse_duration(video_data.get('length')),\n            'ie_key': 'BrightcoveNew',\n        }\n", "comments": "# coding: utf-8\n#]+)'\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    get_element_by_attribute,\n    parse_duration,\n    update_url_query,\n    ExtractorError,\n)\nfrom ..compat import compat_str\n\n\nclass USATodayIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?usatoday\\.com/(?:[^/]+/)*(?P<id>[^?/#]+)'\n    _TEST = {\n        'url': 'http://www.usatoday.com/media/cinematic/video/81729424/us-france-warn-syrian-regime-ahead-of-new-peace-talks/',\n        'md5': '4d40974481fa3475f8bccfd20c5361f8',\n        'info_dict': {\n            'id': '81729424',\n            'ext': 'mp4',\n            'title': 'US, France warn Syrian regime ahead of new peace talks',\n            'timestamp': 1457891045,\n            'description': 'md5:7e50464fdf2126b0f533748d3c78d58f',\n            'uploader_id': '29906170001',\n            'upload_date': '20160313',\n        }\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/29906170001/38a9eecc-bdd8-42a3-ba14-95397e48b3f8_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(update_url_query(url, {'ajax': 'true'}), display_id)\n        ui_video_data = get_element_by_attribute('class', 'ui-video-data', webpage)\n        if not ui_video_data:\n            raise ExtractorError('no video on the webpage', expected=True)\n        video_data = self._parse_json(ui_video_data, display_id)\n\n        return {\n            '_type': 'url_transparent',\n            'url': self.BRIGHTCOVE_URL_TEMPLATE % video_data['brightcove_id'],\n            'id': compat_str(video_data['id']),\n            'title': video_data['title'],\n            'thumbnail': video_data.get('thumbnail'),\n            'description': video_data.get('description'),\n            'duration': parse_duration(video_data.get('length')),\n            'ie_key': 'BrightcoveNew',\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "usatoday.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/usatoday.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
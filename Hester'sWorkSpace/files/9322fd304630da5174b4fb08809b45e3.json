{"author": "ansible", "code": "from __future__ import print_function\nimport json\nimport os\n\n\ndef handler(event, context):\n    \"\"\"\n    The handler function is the function which gets called each time\n    the lambda is run.\n    \"\"\"\n    \n    \n    print(\"got event:\\n\" + json.dumps(event))\n\n    \n    \n    \n\n    name = event[\"name\"]\n\n    \n    \n\n    extra = os.environ.get(\"EXTRA_MESSAGE\")\n    if extra is not None and len(extra) > 0:\n        greeting = \"hello {0}. {1}\".format(name, extra)\n    else:\n        greeting = \"hello \" + name\n\n    return {\"message\": greeting}\n\n\ndef main():\n    \"\"\"\n    This main function will normally never be called during normal\n    lambda use.  It is here for testing the lambda program only.\n    \"\"\"\n    event = {\"name\": \"james\"}\n    context = None\n    print(handler(event, context))\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        the handler function function gets called time     lambda run                printing goes cloudwatch log allowing us simply debug lambda find       log entry      print( got event  n    json dumps(event))        name parameter present throw exception       result amazon chosen failure lambda       completely fine       name   event  name          use environment variables part configuration lambda       change behaviour lambda without needing new upload      extra   os environ get( extra message )     extra none len(extra)   0          greeting    hello  0    1   format(name  extra)     else          greeting    hello     name      return   message   greeting    def main()              this main function normally never called normal     lambda use   it testing lambda program             printing goes cloudwatch log allowing us simply debug lambda find    log entry     name parameter present throw exception    result amazon chosen failure lambda    completely fine     use environment variables part configuration lambda    change behaviour lambda without needing new upload ", "content": "from __future__ import print_function\nimport json\nimport os\n\n\ndef handler(event, context):\n    \"\"\"\n    The handler function is the function which gets called each time\n    the lambda is run.\n    \"\"\"\n    # printing goes to the cloudwatch log allowing us to simply debug the lambda if we can find\n    # the log entry.\n    print(\"got event:\\n\" + json.dumps(event))\n\n    # if the name parameter isn't present this can throw an exception\n    # which will result in an amazon chosen failure from the lambda\n    # which can be completely fine.\n\n    name = event[\"name\"]\n\n    # we can use environment variables as part of the configuration of the lambda\n    # which can change the behaviour of the lambda without needing a new upload\n\n    extra = os.environ.get(\"EXTRA_MESSAGE\")\n    if extra is not None and len(extra) > 0:\n        greeting = \"hello {0}. {1}\".format(name, extra)\n    else:\n        greeting = \"hello \" + name\n\n    return {\"message\": greeting}\n\n\ndef main():\n    \"\"\"\n    This main function will normally never be called during normal\n    lambda use.  It is here for testing the lambda program only.\n    \"\"\"\n    event = {\"name\": \"james\"}\n    context = None\n    print(handler(event, context))\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "mini_lambda.py", "id": "9322fd304630da5174b4fb08809b45e3", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/integration/targets/aws_lambda/files/mini_lambda.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.models import Activity\nfrom sentry.tasks.email import process_inbound_email\nfrom sentry.testutils import TestCase\n\n\nclass ProcessInboundEmailTest(TestCase):\n    def test_task_persistent_name(self):\n        assert process_inbound_email.name == 'sentry.tasks.email.process_inbound_email'\n\n    def test_simple(self):\n        group = self.create_group()\n\n        process_inbound_email(\n            mailfrom=self.user.email,\n            group_id=group.id,\n            payload='hello world!',\n        )\n\n        activity = Activity.objects.get(\n            group=group,\n            type=Activity.NOTE,\n        )\n        assert activity.user == self.user\n        assert activity.data['text'] == 'hello world!'\n\n    def test_handle_unknown_address(self):\n        group = self.create_group()\n\n        process_inbound_email(\n            mailfrom='invalid@example.com',\n            group_id=group.id,\n            payload='hello world!',\n        )\n\n        assert not Activity.objects.filter(\n            group=group,\n            type=Activity.NOTE,\n        ).exists()\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.models import Activity\nfrom sentry.tasks.email import process_inbound_email\nfrom sentry.testutils import TestCase\n\n\nclass ProcessInboundEmailTest(TestCase):\n    def test_task_persistent_name(self):\n        assert process_inbound_email.name == 'sentry.tasks.email.process_inbound_email'\n\n    def test_simple(self):\n        group = self.create_group()\n\n        process_inbound_email(\n            mailfrom=self.user.email,\n            group_id=group.id,\n            payload='hello world!',\n        )\n\n        activity = Activity.objects.get(\n            group=group,\n            type=Activity.NOTE,\n        )\n        assert activity.user == self.user\n        assert activity.data['text'] == 'hello world!'\n\n    def test_handle_unknown_address(self):\n        group = self.create_group()\n\n        process_inbound_email(\n            mailfrom='invalid@example.com',\n            group_id=group.id,\n            payload='hello world!',\n        )\n\n        assert not Activity.objects.filter(\n            group=group,\n            type=Activity.NOTE,\n        ).exists()\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_email.py", "id": "f3fe59f3daad4c5d377ef1e486e5a30a", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/tasks/test_email.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "kennethreitz", "code": "# -*- coding: utf-8 -*-\n\n\n\n\nclass Settings(object):\n    _singleton = {}\n\n    \n    __attrs__ = tuple()\n\n    def __init__(self, **kwargs):\n        super(Settings, self).__init__()\n\n        self.__dict__ = self._singleton\n\n    def __call__(self, *args, **kwargs):\n        \n        r = self.__class__()\n\n        \n        r.__cache = self.__dict__.copy()\n        map(self.__cache.setdefault, self.__attrs__)\n\n        \n        self.__dict__.update(*args, **kwargs)\n\n        return r\n\n    def __enter__(self):\n        pass\n\n    def __exit__(self, *args):\n\n        \n        self.__dict__.update(self.__cache.copy())\n        del self.__cache\n\n    def __getattribute__(self, key):\n        if key in object.__getattribute__(self, '__attrs__'):\n            try:\n                return object.__getattribute__(self, key)\n            except AttributeError:\n                return None\n        return object.__getattribute__(self, key)\n\n\nlegit_settings = Settings()\n\nlegit_settings.config_defaults = (\n    ('allow_black_foreground', 'True',\n        'Is the epic black foreground color allowed? Defaults to True.'),\n\n    ('disable_colors', 'False',\n        'Y U NO FUN? Defaults to False.'),\n)\n\n\nlegit_settings.update_url = 'https://api.github.com/repos/kennethreitz/legit/tags'\nlegit_settings.forbidden_branches = ['HEAD']\n", "comments": "    legit config                     this module provides legit settings feature set              coding  utf 8        attributes defaults    new instance class call    cache previous settings   exit      set new settings    restore cached copy ", "content": "# -*- coding: utf-8 -*-\n\n\"\"\"\nlegit.config\n~~~~~~~~~~~~~~~~~~\n\nThis module provides the Legit settings feature set.\n\n\"\"\"\n\n\nclass Settings(object):\n    _singleton = {}\n\n    # attributes with defaults\n    __attrs__ = tuple()\n\n    def __init__(self, **kwargs):\n        super(Settings, self).__init__()\n\n        self.__dict__ = self._singleton\n\n    def __call__(self, *args, **kwargs):\n        # new instance of class to call\n        r = self.__class__()\n\n        # cache previous settings for __exit__\n        r.__cache = self.__dict__.copy()\n        map(self.__cache.setdefault, self.__attrs__)\n\n        # set new settings\n        self.__dict__.update(*args, **kwargs)\n\n        return r\n\n    def __enter__(self):\n        pass\n\n    def __exit__(self, *args):\n\n        # restore cached copy\n        self.__dict__.update(self.__cache.copy())\n        del self.__cache\n\n    def __getattribute__(self, key):\n        if key in object.__getattribute__(self, '__attrs__'):\n            try:\n                return object.__getattribute__(self, key)\n            except AttributeError:\n                return None\n        return object.__getattribute__(self, key)\n\n\nlegit_settings = Settings()\n\nlegit_settings.config_defaults = (\n    ('allow_black_foreground', 'True',\n        'Is the epic black foreground color allowed? Defaults to True.'),\n\n    ('disable_colors', 'False',\n        'Y U NO FUN? Defaults to False.'),\n)\n\n\nlegit_settings.update_url = 'https://api.github.com/repos/kennethreitz/legit/tags'\nlegit_settings.forbidden_branches = ['HEAD']\n", "description": "Git for Humans, Inspired by GitHub for Mac\u2122.", "file_name": "settings.py", "id": "d19b7a795ad5f6ee1d5aba52fe262c6e", "language": "Python", "project_name": "legit", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/kennethreitz-legit/kennethreitz-legit-7345d70/legit/settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:23:57Z", "url": "https://github.com/kennethreitz/legit", "wiki": true}
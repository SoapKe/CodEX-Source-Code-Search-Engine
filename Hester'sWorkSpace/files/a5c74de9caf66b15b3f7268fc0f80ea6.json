{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    float_or_none,\n    xpath_text\n)\n\n\nclass NuevoBaseIE(InfoExtractor):\n    def _extract_nuevo(self, config_url, video_id, headers={}):\n        config = self._download_xml(\n            config_url, video_id, transform_source=lambda s: s.strip(),\n            headers=headers)\n\n        title = xpath_text(config, './title', 'title', fatal=True).strip()\n        video_id = xpath_text(config, './mediaid', default=video_id)\n        thumbnail = xpath_text(config, ['./image', './thumb'])\n        duration = float_or_none(xpath_text(config, './duration'))\n\n        formats = []\n        for element_name, format_id in (('file', 'sd'), ('filehd', 'hd')):\n            video_url = xpath_text(config, element_name)\n            if video_url:\n                formats.append({\n                    'url': video_url,\n                    'format_id': format_id,\n                })\n        self._check_formats(formats, video_id)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    float_or_none,\n    xpath_text\n)\n\n\nclass NuevoBaseIE(InfoExtractor):\n    def _extract_nuevo(self, config_url, video_id, headers={}):\n        config = self._download_xml(\n            config_url, video_id, transform_source=lambda s: s.strip(),\n            headers=headers)\n\n        title = xpath_text(config, './title', 'title', fatal=True).strip()\n        video_id = xpath_text(config, './mediaid', default=video_id)\n        thumbnail = xpath_text(config, ['./image', './thumb'])\n        duration = float_or_none(xpath_text(config, './duration'))\n\n        formats = []\n        for element_name, format_id in (('file', 'sd'), ('filehd', 'hd')):\n            video_url = xpath_text(config, element_name)\n            if video_url:\n                formats.append({\n                    'url': video_url,\n                    'format_id': format_id,\n                })\n        self._check_formats(formats, video_id)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "nuevo.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/nuevo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
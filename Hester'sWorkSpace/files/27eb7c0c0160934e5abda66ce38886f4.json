{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteMail(http.Controller):\n\n    @http.route(['/website_mail/follow'], type='json', auth=\"public\", website=True)\n    def website_message_subscribe(self, id=0, object=None, message_is_follower=\"on\", email=False, **post):\n        \n        res_id = int(id)\n        is_follower = message_is_follower == 'on'\n        record = request.env[object].browse(res_id)\n\n        \n        if request.env.user != request.website.user_id:\n            partner_ids = request.env.user.partner_id.ids\n        else:\n            \n            partner_ids = record.sudo()._find_partner_from_emails([email], check_followers=True)\n            if not partner_ids or not partner_ids[0]:\n                name = email.split('@')[0]\n                partner_ids = request.env['res.partner'].sudo().create({'name': name, 'email': email}).ids\n        \n        if is_follower:\n            record.check_access_rule('read')\n            record.sudo().message_unsubscribe(partner_ids)\n            return False\n        else:\n            record.check_access_rule('read')\n            \n            request.session['partner_id'] = partner_ids[0]\n            record.sudo().message_subscribe(partner_ids)\n            return True\n\n    @http.route(['/website_mail/is_follower'], type='json', auth=\"public\", website=True)\n    def is_follower(self, model, res_id, **post):\n        user = request.env.user\n        partner = None\n        public_user = request.website.user_id\n        if user != public_user:\n            partner = request.env.user.partner_id\n        elif request.session.get('partner_id'):\n            partner = request.env['res.partner'].sudo().browse(request.session.get('partner_id'))\n\n        values = {\n            'is_user': user != public_user,\n            'email': partner.email if partner else \"\",\n            'is_follower': False,\n            'alias_name': False,\n        }\n\n        record = request.env[model].sudo().browse(int(res_id))\n        if record and partner:\n            values['is_follower'] = bool(request.env['mail.followers'].search_count([\n                ('res_model', '=', model),\n                ('res_id', '=', record.id),\n                ('partner_id', '=', partner.id)\n            ]))\n        return values\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     tde fixme  check method new followers    search partner id    mail thread method    add remove follower    add partner session ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteMail(http.Controller):\n\n    @http.route(['/website_mail/follow'], type='json', auth=\"public\", website=True)\n    def website_message_subscribe(self, id=0, object=None, message_is_follower=\"on\", email=False, **post):\n        # TDE FIXME: check this method with new followers\n        res_id = int(id)\n        is_follower = message_is_follower == 'on'\n        record = request.env[object].browse(res_id)\n\n        # search partner_id\n        if request.env.user != request.website.user_id:\n            partner_ids = request.env.user.partner_id.ids\n        else:\n            # mail_thread method\n            partner_ids = record.sudo()._find_partner_from_emails([email], check_followers=True)\n            if not partner_ids or not partner_ids[0]:\n                name = email.split('@')[0]\n                partner_ids = request.env['res.partner'].sudo().create({'name': name, 'email': email}).ids\n        # add or remove follower\n        if is_follower:\n            record.check_access_rule('read')\n            record.sudo().message_unsubscribe(partner_ids)\n            return False\n        else:\n            record.check_access_rule('read')\n            # add partner to session\n            request.session['partner_id'] = partner_ids[0]\n            record.sudo().message_subscribe(partner_ids)\n            return True\n\n    @http.route(['/website_mail/is_follower'], type='json', auth=\"public\", website=True)\n    def is_follower(self, model, res_id, **post):\n        user = request.env.user\n        partner = None\n        public_user = request.website.user_id\n        if user != public_user:\n            partner = request.env.user.partner_id\n        elif request.session.get('partner_id'):\n            partner = request.env['res.partner'].sudo().browse(request.session.get('partner_id'))\n\n        values = {\n            'is_user': user != public_user,\n            'email': partner.email if partner else \"\",\n            'is_follower': False,\n            'alias_name': False,\n        }\n\n        record = request.env[model].sudo().browse(int(res_id))\n        if record and partner:\n            values['is_follower'] = bool(request.env['mail.followers'].search_count([\n                ('res_model', '=', model),\n                ('res_id', '=', record.id),\n                ('partner_id', '=', partner.id)\n            ]))\n        return values\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "27eb7c0c0160934e5abda66ce38886f4", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_mail/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
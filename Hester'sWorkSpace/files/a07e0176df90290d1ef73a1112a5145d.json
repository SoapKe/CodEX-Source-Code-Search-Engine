{"author": "tornadoweb", "code": "\nimport os\nimport sys\nimport time\nsys.path.insert(0, os.path.abspath(\"..\"))\nimport tornado\n\nmaster_doc = \"index\"\n\nproject = \"Tornado\"\ncopyright = \"2009-%s, The Tornado Authors\" % time.strftime(\"%Y\")\n\nversion = release = tornado.version\n\nextensions = [\n    \"sphinx.ext.autodoc\",\n    \"sphinx.ext.coverage\",\n    \"sphinx.ext.doctest\",\n    \"sphinx.ext.intersphinx\",\n    \"sphinx.ext.viewcode\",\n]\n\nprimary_domain = 'py'\ndefault_role = 'py:obj'\n\nautodoc_member_order = \"bysource\"\nautoclass_content = \"both\"\nautodoc_inherit_docstrings = False\n\n\n\n\nautodoc_docstring_signature = False\n\ncoverage_skip_undoc_in_source = True\ncoverage_ignore_modules = [\n    \"tornado.platform.asyncio\",\n    \"tornado.platform.caresresolver\",\n    \"tornado.platform.twisted\",\n]\n\ncoverage_ignore_classes = [\n    \n    \"Runner\",\n\n    \n    \"PollIOLoop\",\n\n    \n    \"ChunkedTransferEncoding\",\n    \"GZipContentEncoding\",\n    \"OutputTransform\",\n    \"TemplateModule\",\n    \"url\",\n\n    socket\n    \"WebSocketProtocol\",\n    \"WebSocketProtocol13\",\n    \"WebSocketProtocol76\",\n]\n\ncoverage_ignore_functions = [\n    \n    \"doctests\",\n    \"main\",\n\n    \n    \n    \n    \"parse_qs_bytes\",\n\n    \n    \"Multi\",\n]\n\nhtml_favicon = 'favicon.ico'\n\nlatex_documents = [\n    ('index', 'tornado.tex', 'Tornado Documentation', 'The Tornado Authors', 'manual', False),\n]\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/3.6/', None),\n}\n\non_rtd = os.environ.get('READTHEDOCS', None) == 'True'\n\n\n\n\nif not on_rtd:\n    import sphinx_rtd_theme\n    html_theme = 'sphinx_rtd_theme'\n    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]\n", "comments": "  ensure get local copy tornado instead standard path    without line sphinx includes copy object   init   docstring    class define   init       https   bitbucket org birkenfeld sphinx issue 1337 autoclass content uses object  init      i wish could go per module file       tornado gen    tornado ioloop    tornado web    tornado websocket    various modules    tornado escape    parse qs bytes probably documented complicated    different implementations py2 py3     tornado gen    on rtd import sphinx rtd theme  applied    default anyway   this block use theme building locally    rtd  ", "content": "# Ensure we get the local copy of tornado instead of what's on the standard path\nimport os\nimport sys\nimport time\nsys.path.insert(0, os.path.abspath(\"..\"))\nimport tornado\n\nmaster_doc = \"index\"\n\nproject = \"Tornado\"\ncopyright = \"2009-%s, The Tornado Authors\" % time.strftime(\"%Y\")\n\nversion = release = tornado.version\n\nextensions = [\n    \"sphinx.ext.autodoc\",\n    \"sphinx.ext.coverage\",\n    \"sphinx.ext.doctest\",\n    \"sphinx.ext.intersphinx\",\n    \"sphinx.ext.viewcode\",\n]\n\nprimary_domain = 'py'\ndefault_role = 'py:obj'\n\nautodoc_member_order = \"bysource\"\nautoclass_content = \"both\"\nautodoc_inherit_docstrings = False\n\n# Without this line sphinx includes a copy of object.__init__'s docstring\n# on any class that doesn't define __init__.\n# https://bitbucket.org/birkenfeld/sphinx/issue/1337/autoclass_content-both-uses-object__init__\nautodoc_docstring_signature = False\n\ncoverage_skip_undoc_in_source = True\ncoverage_ignore_modules = [\n    \"tornado.platform.asyncio\",\n    \"tornado.platform.caresresolver\",\n    \"tornado.platform.twisted\",\n]\n# I wish this could go in a per-module file...\ncoverage_ignore_classes = [\n    # tornado.gen\n    \"Runner\",\n\n    # tornado.ioloop\n    \"PollIOLoop\",\n\n    # tornado.web\n    \"ChunkedTransferEncoding\",\n    \"GZipContentEncoding\",\n    \"OutputTransform\",\n    \"TemplateModule\",\n    \"url\",\n\n    # tornado.websocket\n    \"WebSocketProtocol\",\n    \"WebSocketProtocol13\",\n    \"WebSocketProtocol76\",\n]\n\ncoverage_ignore_functions = [\n    # various modules\n    \"doctests\",\n    \"main\",\n\n    # tornado.escape\n    # parse_qs_bytes should probably be documented but it's complicated by\n    # having different implementations between py2 and py3.\n    \"parse_qs_bytes\",\n\n    # tornado.gen\n    \"Multi\",\n]\n\nhtml_favicon = 'favicon.ico'\n\nlatex_documents = [\n    ('index', 'tornado.tex', 'Tornado Documentation', 'The Tornado Authors', 'manual', False),\n]\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/3.6/', None),\n}\n\non_rtd = os.environ.get('READTHEDOCS', None) == 'True'\n\n# On RTD we can't import sphinx_rtd_theme, but it will be applied by\n# default anyway.  This block will use the same theme when building locally\n# as on RTD.\nif not on_rtd:\n    import sphinx_rtd_theme\n    html_theme = 'sphinx_rtd_theme'\n    html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]\n", "description": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "file_name": "conf.py", "id": "a07e0176df90290d1ef73a1112a5145d", "language": "Python", "project_name": "tornado", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/tornadoweb-tornado/tornadoweb-tornado-62e43f6/docs/conf.py", "save_time": "", "source": "", "update_at": "2018-03-13T23:11:42Z", "url": "https://github.com/tornadoweb/tornado", "wiki": true}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    clean_html,\n    int_or_none,\n    try_get,\n    unified_strdate,\n)\n\n\nclass AmericasTestKitchenIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?americastestkitchen\\.com/(?:episode|videos)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'https://www.americastestkitchen.com/episode/548-summer-dinner-party',\n        'md5': 'b861c3e365ac38ad319cfd509c30577f',\n        'info_dict': {\n            'id': '1_5g5zua6e',\n            'title': 'Summer Dinner Party',\n            'ext': 'mp4',\n            'description': 'md5:858d986e73a4826979b6a5d9f8f6a1ec',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'timestamp': 1497285541,\n            'upload_date': '20170612',\n            'uploader_id': 'roger.metcalf@americastestkitchen.com',\n            'release_date': '20170617',\n            'series': \"America's Test Kitchen\",\n            'season_number': 17,\n            'episode': 'Summer Dinner Party',\n            'episode_number': 24,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'https://www.americastestkitchen.com/videos/3420-pan-seared-salmon',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        partner_id = self._search_regex(\n            r'src=[\"\\'](?:https?:)?//(?:[^/]+\\.)kaltura\\.com/(?:[^/]+/)*(?:p|partner_id)/(\\d+)',\n            webpage, 'kaltura partner id')\n\n        video_data = self._parse_json(\n            self._search_regex(\n                r'window\\.__INITIAL_STATE__\\s*=\\s*({.+?})\\s*;\\s*</script>',\n                webpage, 'initial context'),\n            video_id)\n\n        ep_data = try_get(\n            video_data,\n            (lambda x: x['episodeDetail']['content']['data'],\n             lambda x: x['videoDetail']['content']['data']), dict)\n        ep_meta = ep_data.get('full_video', {})\n        external_id = ep_data.get('external_id') or ep_meta['external_id']\n\n        title = ep_data.get('title') or ep_meta.get('title')\n        description = clean_html(ep_meta.get('episode_description') or ep_data.get(\n            'description') or ep_meta.get('description'))\n        thumbnail = try_get(ep_meta, lambda x: x['photo']['image_url'])\n        release_date = unified_strdate(ep_data.get('aired_at'))\n\n        season_number = int_or_none(ep_meta.get('season_number'))\n        episode = ep_meta.get('title')\n        episode_number = int_or_none(ep_meta.get('episode_number'))\n\n        return {\n            '_type': 'url_transparent',\n            'url': 'kaltura:%s:%s' % (partner_id, external_id),\n            'ie_key': 'Kaltura',\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'release_date': release_date,\n            'series': \"America's Test Kitchen\",\n            'season_number': season_number,\n            'episode': episode,\n            'episode_number': episode_number,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    clean_html,\n    int_or_none,\n    try_get,\n    unified_strdate,\n)\n\n\nclass AmericasTestKitchenIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?americastestkitchen\\.com/(?:episode|videos)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'https://www.americastestkitchen.com/episode/548-summer-dinner-party',\n        'md5': 'b861c3e365ac38ad319cfd509c30577f',\n        'info_dict': {\n            'id': '1_5g5zua6e',\n            'title': 'Summer Dinner Party',\n            'ext': 'mp4',\n            'description': 'md5:858d986e73a4826979b6a5d9f8f6a1ec',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'timestamp': 1497285541,\n            'upload_date': '20170612',\n            'uploader_id': 'roger.metcalf@americastestkitchen.com',\n            'release_date': '20170617',\n            'series': \"America's Test Kitchen\",\n            'season_number': 17,\n            'episode': 'Summer Dinner Party',\n            'episode_number': 24,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'https://www.americastestkitchen.com/videos/3420-pan-seared-salmon',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        partner_id = self._search_regex(\n            r'src=[\"\\'](?:https?:)?//(?:[^/]+\\.)kaltura\\.com/(?:[^/]+/)*(?:p|partner_id)/(\\d+)',\n            webpage, 'kaltura partner id')\n\n        video_data = self._parse_json(\n            self._search_regex(\n                r'window\\.__INITIAL_STATE__\\s*=\\s*({.+?})\\s*;\\s*</script>',\n                webpage, 'initial context'),\n            video_id)\n\n        ep_data = try_get(\n            video_data,\n            (lambda x: x['episodeDetail']['content']['data'],\n             lambda x: x['videoDetail']['content']['data']), dict)\n        ep_meta = ep_data.get('full_video', {})\n        external_id = ep_data.get('external_id') or ep_meta['external_id']\n\n        title = ep_data.get('title') or ep_meta.get('title')\n        description = clean_html(ep_meta.get('episode_description') or ep_data.get(\n            'description') or ep_meta.get('description'))\n        thumbnail = try_get(ep_meta, lambda x: x['photo']['image_url'])\n        release_date = unified_strdate(ep_data.get('aired_at'))\n\n        season_number = int_or_none(ep_meta.get('season_number'))\n        episode = ep_meta.get('title')\n        episode_number = int_or_none(ep_meta.get('episode_number'))\n\n        return {\n            '_type': 'url_transparent',\n            'url': 'kaltura:%s:%s' % (partner_id, external_id),\n            'ie_key': 'Kaltura',\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'release_date': release_date,\n            'series': \"America's Test Kitchen\",\n            'season_number': season_number,\n            'episode': episode,\n            'episode_number': episode_number,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "americastestkitchen.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/americastestkitchen.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
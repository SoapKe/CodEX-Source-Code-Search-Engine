{"author": "ansible", "code": "\n -*- coding: utf-8 -*-\n\n Copyright (c) 2016 Red Hat, Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_tags_facts\nshort_description: Retrieve facts about one or more oVirt/RHV tags\nauthor: \"Ondra Machacek (@machacekondra)\"\nversion_added: \"2.3\"\ndescription:\n    - \"Retrieve facts about one or more oVirt/RHV tags.\"\nnotes:\n    - \"This module creates a new top-level C(ovirt_tags) fact, which\n       contains a list of tags\"\noptions:\n    name:\n      description:\n        - \"Name of the tag which should be listed.\"\n    vm:\n      description:\n        - \"Name of the VM, which tags should be listed.\"\n    host:\n      description:\n        - \"Name of the host, which tags should be listed.\"\nextends_documentation_fragment: ovirt\n'''\n\nEXAMPLES = '''\n Examples don't contain auth parameter for simplicity,\n look at ovirt_auth module to see how to reuse authentication:\n\n Gather facts about all tags, which names start with C(tag):\n- ovirt_tags_facts:\n    name: tag*\n- debug:\n    var: tags\n\n Gather facts about all tags, which are assigned to VM C(postgres):\n- ovirt_tags_facts:\n    vm: postgres\n- debug:\n    var: tags\n\n Gather facts about all tags, which are assigned to host C(west):\n- ovirt_tags_facts:\n    host: west\n- debug:\n    var: tags\n'''\n\nRETURN = '''\novirt_tags:\n    description: \"List of dictionaries describing the tags. Tags attribues are mapped to dictionary keys,\n                  all tags attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/types/tag.\"\n    returned: On success.\n    type: list\n'''\n\nimport fnmatch\nimport traceback\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    check_sdk,\n    create_connection,\n    get_dict_of_struct,\n    ovirt_facts_full_argument_spec,\n    search_by_name,\n)\n\n\ndef main():\n    argument_spec = ovirt_facts_full_argument_spec(\n        name=dict(default=None),\n        host=dict(default=None),\n        vm=dict(default=None),\n    )\n    module = AnsibleModule(argument_spec)\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        tags_service = connection.system_service().tags_service()\n        tags = []\n        all_tags = tags_service.list()\n        if module.params['name']:\n            tags.extend([\n                t for t in all_tags\n                if fnmatch.fnmatch(t.name, module.params['name'])\n            ])\n        if module.params['host']:\n            hosts_service = connection.system_service().hosts_service()\n            host = search_by_name(hosts_service, module.params['host'])\n            if host is None:\n                raise Exception(\"Host '%s' was not found.\" % module.params['host'])\n            tags.extend([\n                tag for tag in hosts_service.host_service(host.id).tags_service().list()\n            ])\n        if module.params['vm']:\n            vms_service = connection.system_service().vms_service()\n            vm = search_by_name(vms_service, module.params['vm'])\n            if vm is None:\n                raise Exception(\"Vm '%s' was not found.\" % module.params['vm'])\n            tags.extend([\n                tag for tag in vms_service.vm_service(vm.id).tags_service().list()\n            ])\n\n        if not (module.params['vm'] or module.params['host'] or module.params['name']):\n            tags = all_tags\n\n        module.exit_json(\n            changed=False,\n            ansible_facts=dict(\n                ovirt_tags=[\n                    get_dict_of_struct(\n                        struct=t,\n                        connection=connection,\n                        fetch_nested=module.params['fetch_nested'],\n                        attributes=module.params['nested_attributes'],\n                    ) for t in tags\n                ],\n            ),\n        )\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  ovirt tags facts short description  retrieve facts one ovirt rhv tags author   ondra machacek ( machacekondra)  version added   2 3  description         retrieve facts one ovirt rhv tags   notes         this module creates new top level c(ovirt tags) fact         contains list tags  options      name        description             name tag listed       vm        description             name vm  tags listed       host        description             name host  tags listed   extends documentation fragment  ovirt      examples         examples contain auth parameter simplicity    look ovirt auth module see reuse authentication     gather facts tags  names start c(tag)    ovirt tags facts      name  tag    debug      var  tags    gather facts tags  assigned vm c(postgres)    ovirt tags facts      vm  postgres   debug      var  tags    gather facts tags  assigned host c(west)    ovirt tags facts      host  west   debug      var  tags      return       ovirt tags      description   list dictionaries describing tags  tags attribues mapped dictionary keys                    tags attributes found following url  http   ovirt github io ovirt engine api model master  types tag       returned  on success      type  list         usr bin python        coding  utf 8           copyright (c) 2016 red hat  inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses          examples contain auth parameter simplicity     look ovirt auth module see reuse authentication     gather facts tags  names start c(tag)     gather facts tags  assigned vm c(postgres)     gather facts tags  assigned host c(west)    types tag   ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n#\n# Copyright (c) 2016 Red Hat, Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_tags_facts\nshort_description: Retrieve facts about one or more oVirt/RHV tags\nauthor: \"Ondra Machacek (@machacekondra)\"\nversion_added: \"2.3\"\ndescription:\n    - \"Retrieve facts about one or more oVirt/RHV tags.\"\nnotes:\n    - \"This module creates a new top-level C(ovirt_tags) fact, which\n       contains a list of tags\"\noptions:\n    name:\n      description:\n        - \"Name of the tag which should be listed.\"\n    vm:\n      description:\n        - \"Name of the VM, which tags should be listed.\"\n    host:\n      description:\n        - \"Name of the host, which tags should be listed.\"\nextends_documentation_fragment: ovirt\n'''\n\nEXAMPLES = '''\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n# Gather facts about all tags, which names start with C(tag):\n- ovirt_tags_facts:\n    name: tag*\n- debug:\n    var: tags\n\n# Gather facts about all tags, which are assigned to VM C(postgres):\n- ovirt_tags_facts:\n    vm: postgres\n- debug:\n    var: tags\n\n# Gather facts about all tags, which are assigned to host C(west):\n- ovirt_tags_facts:\n    host: west\n- debug:\n    var: tags\n'''\n\nRETURN = '''\novirt_tags:\n    description: \"List of dictionaries describing the tags. Tags attribues are mapped to dictionary keys,\n                  all tags attributes can be found at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/tag.\"\n    returned: On success.\n    type: list\n'''\n\nimport fnmatch\nimport traceback\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    check_sdk,\n    create_connection,\n    get_dict_of_struct,\n    ovirt_facts_full_argument_spec,\n    search_by_name,\n)\n\n\ndef main():\n    argument_spec = ovirt_facts_full_argument_spec(\n        name=dict(default=None),\n        host=dict(default=None),\n        vm=dict(default=None),\n    )\n    module = AnsibleModule(argument_spec)\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        tags_service = connection.system_service().tags_service()\n        tags = []\n        all_tags = tags_service.list()\n        if module.params['name']:\n            tags.extend([\n                t for t in all_tags\n                if fnmatch.fnmatch(t.name, module.params['name'])\n            ])\n        if module.params['host']:\n            hosts_service = connection.system_service().hosts_service()\n            host = search_by_name(hosts_service, module.params['host'])\n            if host is None:\n                raise Exception(\"Host '%s' was not found.\" % module.params['host'])\n            tags.extend([\n                tag for tag in hosts_service.host_service(host.id).tags_service().list()\n            ])\n        if module.params['vm']:\n            vms_service = connection.system_service().vms_service()\n            vm = search_by_name(vms_service, module.params['vm'])\n            if vm is None:\n                raise Exception(\"Vm '%s' was not found.\" % module.params['vm'])\n            tags.extend([\n                tag for tag in vms_service.vm_service(vm.id).tags_service().list()\n            ])\n\n        if not (module.params['vm'] or module.params['host'] or module.params['name']):\n            tags = all_tags\n\n        module.exit_json(\n            changed=False,\n            ansible_facts=dict(\n                ovirt_tags=[\n                    get_dict_of_struct(\n                        struct=t,\n                        connection=connection,\n                        fetch_nested=module.params['fetch_nested'],\n                        attributes=module.params['nested_attributes'],\n                    ) for t in tags\n                ],\n            ),\n        )\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "ovirt_tags_facts.py", "id": "642917e5e66f5771887f3d2aa900b2b3", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/cloud/ovirt/ovirt_tags_facts.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "jakubroztocil", "code": "import os\nimport tempfile\n\nimport pytest\nfrom httpie.context import Environment\n\nfrom utils import MockEnvironment, http\nfrom httpie.compat import is_windows\n\n\n@pytest.mark.skipif(not is_windows, reason='windows-only')\nclass TestWindowsOnly:\n\n    @pytest.mark.skipif(True,\n                        reason='this test for some reason kills the process')\n    def test_windows_colorized_output(self, httpbin):\n        \n        http(httpbin.url + '/get', env=Environment())\n\n\nclass TestFakeWindows:\n    def test_output_file_pretty_not_allowed_on_windows(self, httpbin):\n        env = MockEnvironment(is_windows=True)\n        output_file = os.path.join(\n            tempfile.gettempdir(),\n            self.test_output_file_pretty_not_allowed_on_windows.__name__\n        )\n        r = http('--output', output_file,\n                 '--pretty=all', 'GET', httpbin.url + '/get',\n                 env=env, error_exit_ok=True)\n        assert 'Only terminal output can be colorized on Windows' in r.stderr\n", "comments": "  spits colorized output  ", "content": "import os\nimport tempfile\n\nimport pytest\nfrom httpie.context import Environment\n\nfrom utils import MockEnvironment, http\nfrom httpie.compat import is_windows\n\n\n@pytest.mark.skipif(not is_windows, reason='windows-only')\nclass TestWindowsOnly:\n\n    @pytest.mark.skipif(True,\n                        reason='this test for some reason kills the process')\n    def test_windows_colorized_output(self, httpbin):\n        # Spits out the colorized output.\n        http(httpbin.url + '/get', env=Environment())\n\n\nclass TestFakeWindows:\n    def test_output_file_pretty_not_allowed_on_windows(self, httpbin):\n        env = MockEnvironment(is_windows=True)\n        output_file = os.path.join(\n            tempfile.gettempdir(),\n            self.test_output_file_pretty_not_allowed_on_windows.__name__\n        )\n        r = http('--output', output_file,\n                 '--pretty=all', 'GET', httpbin.url + '/get',\n                 env=env, error_exit_ok=True)\n        assert 'Only terminal output can be colorized on Windows' in r.stderr\n", "description": "Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://httpie.org", "file_name": "test_windows.py", "id": "705d53959227b5c7650a6eae43f4e09f", "language": "Python", "project_name": "httpie", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jakubroztocil-httpie/jakubroztocil-httpie-0f4dce9/tests/test_windows.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:48:16Z", "url": "https://github.com/jakubroztocil/httpie", "wiki": false}
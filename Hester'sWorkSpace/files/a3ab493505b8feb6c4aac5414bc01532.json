{"author": "eliangcs", "code": "try:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\nimport codecs\nimport os\nimport re\nimport sys\n\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\n\n?\n\ndef find_version(*file_paths):\n    \n    \n    with codecs.open(os.path.join(here, *file_paths), 'r', 'latin1') as f:\n        version_file = f.read()\n\n    \n    \n    version_match = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n                              version_file, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError('Unable to find version string')\n\n\ndef read_description(filename):\n    with codecs.open(filename, encoding='utf-8') as f:\n        return f.read()\n\n\ndef read_requirements(filename):\n    try:\n        with open(filename) as f:\n            result = [line.rstrip() for line in f]\n    except IOError:\n        raise IOError(os.getcwd())\n    else:\n        \n        \n        if sys.version_info < (2, 7):\n            result.append('ordereddict>=1.1')\n        return result\n\n\nsetup(\n    name='http-prompt',\n    version=find_version('http_prompt', '__init__.py'),\n    url='https://github.com/eliangcs/http-prompt',\n    description='An interactive HTTP command-line client',\n    long_description=read_description('README.rst'),\n    author='Chang-Hung Liang',\n    author_email='eliang.cs@gmail.com',\n    license='MIT',\n    packages=['http_prompt', 'http_prompt.context'],\n    entry_points=\"\"\"\n        [console_scripts]\n        http-prompt=http_prompt.cli:cli\n    \"\"\",\n    install_requires=read_requirements('requirements.txt'),\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: MIT License',\n        'Topic :: Internet :: WWW/HTTP',\n        'Topic :: Software Development',\n        'Topic :: System :: Networking',\n        'Topic :: Terminals',\n        'Topic :: Text Processing',\n        'Topic :: Utilities',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6'\n    ]\n)\n", "comments": "             console scripts          http prompt http prompt cli cli            read version number source file     why read  import     see https   groups google com topic pypa dev 0pkjvpcxtzq discussion    open latin 1 avoid encoding errors     use codecs open python 2 compatibility    the version line must form      version      ver      new version 2 7      https   docs python org 2 library collections html collections ordereddict ", "content": "try:\n    from setuptools import setup\nexcept ImportError:\n    from distutils.core import setup\n\nimport codecs\nimport os\nimport re\nimport sys\n\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\n# Read the version number from a source file.\n# Why read it, and not import?\n# see https://groups.google.com/d/topic/pypa-dev/0PkjVpcxTzQ/discussion\ndef find_version(*file_paths):\n    # Open in Latin-1 so that we avoid encoding errors.\n    # Use codecs.open for Python 2 compatibility\n    with codecs.open(os.path.join(here, *file_paths), 'r', 'latin1') as f:\n        version_file = f.read()\n\n    # The version line must have the form\n    # __version__ = 'ver'\n    version_match = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n                              version_file, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError('Unable to find version string')\n\n\ndef read_description(filename):\n    with codecs.open(filename, encoding='utf-8') as f:\n        return f.read()\n\n\ndef read_requirements(filename):\n    try:\n        with open(filename) as f:\n            result = [line.rstrip() for line in f]\n    except IOError:\n        raise IOError(os.getcwd())\n    else:\n        # \"New in version 2.7.\"\n        # https://docs.python.org/2/library/collections.html#collections.OrderedDict\n        if sys.version_info < (2, 7):\n            result.append('ordereddict>=1.1')\n        return result\n\n\nsetup(\n    name='http-prompt',\n    version=find_version('http_prompt', '__init__.py'),\n    url='https://github.com/eliangcs/http-prompt',\n    description='An interactive HTTP command-line client',\n    long_description=read_description('README.rst'),\n    author='Chang-Hung Liang',\n    author_email='eliang.cs@gmail.com',\n    license='MIT',\n    packages=['http_prompt', 'http_prompt.context'],\n    entry_points=\"\"\"\n        [console_scripts]\n        http-prompt=http_prompt.cli:cli\n    \"\"\",\n    install_requires=read_requirements('requirements.txt'),\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: MIT License',\n        'Topic :: Internet :: WWW/HTTP',\n        'Topic :: Software Development',\n        'Topic :: System :: Networking',\n        'Topic :: Terminals',\n        'Topic :: Text Processing',\n        'Topic :: Utilities',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6'\n    ]\n)\n", "description": "HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting", "file_name": "setup.py", "id": "a3ab493505b8feb6c4aac5414bc01532", "language": "Python", "project_name": "http-prompt", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/eliangcs-http-prompt/eliangcs-http-prompt-87f1e9d/setup.py", "save_time": "", "source": "", "update_at": "2018-03-17T18:26:33Z", "url": "https://github.com/eliangcs/http-prompt", "wiki": true}
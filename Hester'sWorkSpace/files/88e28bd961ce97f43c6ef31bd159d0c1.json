{"author": "ansible", "code": "\n (c) 2016 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.ovs import openvswitch_db\nfrom units.modules.utils import set_module_args\nfrom .ovs_module import TestOpenVSwitchModule, load_fixture\n\ntest_name_side_effect_matrix = {\n    'test_openvswitch_db_absent_idempotent': [\n        (0, 'openvswitch_db_disable_in_band_missing.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_absent_removes_key': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_idempotent': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_adds_key': [\n        (0, 'openvswitch_db_disable_in_band_missing.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_updates_key': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n}\n\n\nclass TestOpenVSwitchDBModule(TestOpenVSwitchModule):\n\n    module = openvswitch_db\n\n    def setUp(self):\n        super(TestOpenVSwitchDBModule, self).setUp()\n\n        self.mock_run_command = (\n            patch('ansible.module_utils.basic.AnsibleModule.run_command'))\n        self.run_command = self.mock_run_command.start()\n        self.mock_get_bin_path = (\n            patch('ansible.module_utils.basic.AnsibleModule.get_bin_path'))\n        self.get_bin_path = self.mock_get_bin_path.start()\n\n    def tearDown(self):\n        super(TestOpenVSwitchDBModule, self).tearDown()\n\n        self.mock_run_command.stop()\n        self.mock_get_bin_path.stop()\n\n    def load_fixtures(self, test_name):\n        test_side_effects = []\n        for s in test_name_side_effect_matrix[test_name]:\n            rc = s[0]\n            out = load_fixture(s[1]) if s[1] else None\n            err = s[2]\n            side_effect_with_fixture_loaded = (rc, out, err)\n            test_side_effects.append(side_effect_with_fixture_loaded)\n        self.run_command.side_effect = test_side_effects\n\n        self.get_bin_path.return_value = '/usr/bin/ovs-vsctl'\n\n    def test_openvswitch_db_absent_idempotent(self):\n        set_module_args(dict(state='absent',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(test_name='test_openvswitch_db_absent_idempotent')\n\n    def test_openvswitch_db_absent_removes_key(self):\n        set_module_args(dict(state='absent',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 remove Bridge test-br other_config'\n                      ' disable-in-band=True'],\n            test_name='test_openvswitch_db_absent_removes_key')\n\n    def test_openvswitch_db_present_idempotent(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(test_name='test_openvswitch_db_present_idempotent')\n\n    def test_openvswitch_db_present_adds_key(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 add Bridge test-br other_config'\n                      ' disable-in-band=True'],\n            test_name='test_openvswitch_db_present_adds_key')\n\n    def test_openvswitch_db_present_updates_key(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='False'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 set Bridge test-br other_config'\n                      ':disable-in-band=False'],\n            test_name='test_openvswitch_db_present_updates_key')\n", "comments": "     (c) 2016 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish ", "content": "#\n# (c) 2016 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.ovs import openvswitch_db\nfrom units.modules.utils import set_module_args\nfrom .ovs_module import TestOpenVSwitchModule, load_fixture\n\ntest_name_side_effect_matrix = {\n    'test_openvswitch_db_absent_idempotent': [\n        (0, 'openvswitch_db_disable_in_band_missing.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_absent_removes_key': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_idempotent': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_adds_key': [\n        (0, 'openvswitch_db_disable_in_band_missing.cfg', None),\n        (0, None, None)],\n    'test_openvswitch_db_present_updates_key': [\n        (0, 'openvswitch_db_disable_in_band_true.cfg', None),\n        (0, None, None)],\n}\n\n\nclass TestOpenVSwitchDBModule(TestOpenVSwitchModule):\n\n    module = openvswitch_db\n\n    def setUp(self):\n        super(TestOpenVSwitchDBModule, self).setUp()\n\n        self.mock_run_command = (\n            patch('ansible.module_utils.basic.AnsibleModule.run_command'))\n        self.run_command = self.mock_run_command.start()\n        self.mock_get_bin_path = (\n            patch('ansible.module_utils.basic.AnsibleModule.get_bin_path'))\n        self.get_bin_path = self.mock_get_bin_path.start()\n\n    def tearDown(self):\n        super(TestOpenVSwitchDBModule, self).tearDown()\n\n        self.mock_run_command.stop()\n        self.mock_get_bin_path.stop()\n\n    def load_fixtures(self, test_name):\n        test_side_effects = []\n        for s in test_name_side_effect_matrix[test_name]:\n            rc = s[0]\n            out = load_fixture(s[1]) if s[1] else None\n            err = s[2]\n            side_effect_with_fixture_loaded = (rc, out, err)\n            test_side_effects.append(side_effect_with_fixture_loaded)\n        self.run_command.side_effect = test_side_effects\n\n        self.get_bin_path.return_value = '/usr/bin/ovs-vsctl'\n\n    def test_openvswitch_db_absent_idempotent(self):\n        set_module_args(dict(state='absent',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(test_name='test_openvswitch_db_absent_idempotent')\n\n    def test_openvswitch_db_absent_removes_key(self):\n        set_module_args(dict(state='absent',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 remove Bridge test-br other_config'\n                      ' disable-in-band=True'],\n            test_name='test_openvswitch_db_absent_removes_key')\n\n    def test_openvswitch_db_present_idempotent(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(test_name='test_openvswitch_db_present_idempotent')\n\n    def test_openvswitch_db_present_adds_key(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='True'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 add Bridge test-br other_config'\n                      ' disable-in-band=True'],\n            test_name='test_openvswitch_db_present_adds_key')\n\n    def test_openvswitch_db_present_updates_key(self):\n        set_module_args(dict(state='present',\n                             table='Bridge', record='test-br',\n                             col='other_config', key='disable-in-band',\n                             value='False'))\n        self.execute_module(\n            changed=True,\n            commands=['/usr/bin/ovs-vsctl -t 5 set Bridge test-br other_config'\n                      ':disable-in-band=False'],\n            test_name='test_openvswitch_db_present_updates_key')\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_openvswitch_db.py", "id": "88e28bd961ce97f43c6ef31bd159d0c1", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/ovs/test_openvswitch_db.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "django", "code": "import random\nimport string\n\nfrom django.db import models\n\n\nclass MyWrapper:\n    def __init__(self, value):\n        self.value = value\n\n    def __repr__(self):\n        return \"<%s: %s>\" % (self.__class__.__name__, self.value)\n\n    def __str__(self):\n        return self.value\n\n    def __eq__(self, other):\n        if isinstance(other, self.__class__):\n            return self.value == other.value\n        return self.value == other\n\n\nclass MyAutoField(models.CharField):\n\n    def __init__(self, *args, **kwargs):\n        kwargs['max_length'] = 10\n        super().__init__(*args, **kwargs)\n\n    def pre_save(self, instance, add):\n        value = getattr(instance, self.attname, None)\n        if not value:\n            value = MyWrapper(''.join(random.sample(string.ascii_lowercase, 10)))\n            setattr(instance, self.attname, value)\n        return value\n\n    def to_python(self, value):\n        if not value:\n            return\n        if not isinstance(value, MyWrapper):\n            value = MyWrapper(value)\n        return value\n\n    def from_db_value(self, value, expression, connection):\n        if not value:\n            return\n        return MyWrapper(value)\n\n    def get_db_prep_save(self, value, connection):\n        if not value:\n            return\n        if isinstance(value, MyWrapper):\n            return str(value)\n        return value\n\n    def get_db_prep_value(self, value, connection, prepared=False):\n        if not value:\n            return\n        if isinstance(value, MyWrapper):\n            return str(value)\n        return value\n", "comments": "", "content": "import random\nimport string\n\nfrom django.db import models\n\n\nclass MyWrapper:\n    def __init__(self, value):\n        self.value = value\n\n    def __repr__(self):\n        return \"<%s: %s>\" % (self.__class__.__name__, self.value)\n\n    def __str__(self):\n        return self.value\n\n    def __eq__(self, other):\n        if isinstance(other, self.__class__):\n            return self.value == other.value\n        return self.value == other\n\n\nclass MyAutoField(models.CharField):\n\n    def __init__(self, *args, **kwargs):\n        kwargs['max_length'] = 10\n        super().__init__(*args, **kwargs)\n\n    def pre_save(self, instance, add):\n        value = getattr(instance, self.attname, None)\n        if not value:\n            value = MyWrapper(''.join(random.sample(string.ascii_lowercase, 10)))\n            setattr(instance, self.attname, value)\n        return value\n\n    def to_python(self, value):\n        if not value:\n            return\n        if not isinstance(value, MyWrapper):\n            value = MyWrapper(value)\n        return value\n\n    def from_db_value(self, value, expression, connection):\n        if not value:\n            return\n        return MyWrapper(value)\n\n    def get_db_prep_save(self, value, connection):\n        if not value:\n            return\n        if isinstance(value, MyWrapper):\n            return str(value)\n        return value\n\n    def get_db_prep_value(self, value, connection, prepared=False):\n        if not value:\n            return\n        if isinstance(value, MyWrapper):\n            return str(value)\n        return value\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "fields.py", "id": "409d9c8e87b4bec49fe454c06b38449b", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/custom_pk/fields.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
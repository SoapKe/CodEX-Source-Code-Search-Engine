{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, models\n\n\nclass FichePayeParser(models.AbstractModel):\n    _name = 'report.l10n_fr_hr_payroll.report_l10n_fr_fiche_paye'\n\n    def get_payslip_lines(self, objs):\n        res = []\n        ids = []\n        for item in objs:\n            if item.appears_on_payslip is True and not item.salary_rule_id.parent_rule_id:\n                ids.append(item.id)\n        if ids:\n            res = self.env['hr.payslip.line'].browse(ids)\n        return res\n\n    def get_total_by_rule_category(self, obj, code):\n        category_total = 0\n        category_id = self.env['hr.salary.rule.category'].search([('code', '=', code)], limit=1).id\n        if category_id:\n            line_ids = self.env['hr.payslip.line'].search([('slip_id', '=', obj.id), ('category_id', 'child_of', category_id)])\n            for line in line_ids:\n                category_total += line.total\n        return category_total\n\n    def get_employer_line(self, obj, parent_line):\n        return self.env['hr.payslip.line'].search([('slip_id', '=', obj.id), ('salary_rule_id.parent_rule_id.id', '=', parent_line.salary_rule_id.id)], limit=1)\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        payslip = self.env['hr.payslip'].browse(docids)\n        return {\n            'doc_ids': docids,\n            'doc_model': 'hr.payslip',\n            'data': data,\n            'docs': payslip,\n            'lang': \"fr_FR\",\n            'get_payslip_lines': self.get_payslip_lines,\n            'get_total_by_rule_category': self.get_total_by_rule_category,\n            'get_employer_line': self.get_employer_line,\n        }\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, models\n\n\nclass FichePayeParser(models.AbstractModel):\n    _name = 'report.l10n_fr_hr_payroll.report_l10n_fr_fiche_paye'\n\n    def get_payslip_lines(self, objs):\n        res = []\n        ids = []\n        for item in objs:\n            if item.appears_on_payslip is True and not item.salary_rule_id.parent_rule_id:\n                ids.append(item.id)\n        if ids:\n            res = self.env['hr.payslip.line'].browse(ids)\n        return res\n\n    def get_total_by_rule_category(self, obj, code):\n        category_total = 0\n        category_id = self.env['hr.salary.rule.category'].search([('code', '=', code)], limit=1).id\n        if category_id:\n            line_ids = self.env['hr.payslip.line'].search([('slip_id', '=', obj.id), ('category_id', 'child_of', category_id)])\n            for line in line_ids:\n                category_total += line.total\n        return category_total\n\n    def get_employer_line(self, obj, parent_line):\n        return self.env['hr.payslip.line'].search([('slip_id', '=', obj.id), ('salary_rule_id.parent_rule_id.id', '=', parent_line.salary_rule_id.id)], limit=1)\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        payslip = self.env['hr.payslip'].browse(docids)\n        return {\n            'doc_ids': docids,\n            'doc_model': 'hr.payslip',\n            'data': data,\n            'docs': payslip,\n            'lang': \"fr_FR\",\n            'get_payslip_lines': self.get_payslip_lines,\n            'get_total_by_rule_category': self.get_total_by_rule_category,\n            'get_employer_line': self.get_employer_line,\n        }\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "fiche_paye.py", "id": "1b1bf356cb26e4b5674b613969b56e49", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_fr_hr_payroll/report/fiche_paye.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
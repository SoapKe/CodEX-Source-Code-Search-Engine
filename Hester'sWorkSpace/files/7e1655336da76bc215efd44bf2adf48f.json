{"author": "mitmproxy", "code": "import requests\nfrom pathod import test\n\n\nclass Test:\n    \n\n    @classmethod\n    def setup_class(cls):\n        cls.d = test.Daemon()\n\n    @classmethod\n    def teardown_class(cls):\n        cls.d.shutdown()\n\n    def setup(self):\n        \n        self.d.clear_log()\n\n    def test_simple(self):\n        \n        url = self.d.p(\"200:b@100\")\n        \n        r = requests.put(url)\n\n        \n        assert r.status_code == 200\n        assert len(r.content) == 100\n\n        \n        log = self.d.last_log()[\"request\"]\n        assert log[\"method\"] == \"PUT\"\n\n    def test_two(self):\n        assert not self.d.log()\n", "comments": "            testing requests module         single pathod instance started         test suite             clear pathod logs tests    get url pathod spec        request    check returned data    check pathod internal log ", "content": "import requests\nfrom pathod import test\n\n\nclass Test:\n    \"\"\"\n        Testing the requests module with\n        a single pathod instance started\n        for the test suite.\n    \"\"\"\n\n    @classmethod\n    def setup_class(cls):\n        cls.d = test.Daemon()\n\n    @classmethod\n    def teardown_class(cls):\n        cls.d.shutdown()\n\n    def setup(self):\n        # Clear the pathod logs between tests\n        self.d.clear_log()\n\n    def test_simple(self):\n        # Get a URL for a pathod spec\n        url = self.d.p(\"200:b@100\")\n        # ... and request it\n        r = requests.put(url)\n\n        # Check the returned data\n        assert r.status_code == 200\n        assert len(r.content) == 100\n\n        # Check pathod's internal log\n        log = self.d.last_log()[\"request\"]\n        assert log[\"method\"] == \"PUT\"\n\n    def test_two(self):\n        assert not self.d.log()\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_setupall.py", "id": "7e1655336da76bc215efd44bf2adf48f", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/docs/src/examples/pathod/test_setupall.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass AcademicEarthCourseIE(InfoExtractor):\n    _VALID_URL = r'^https?://(?:www\\.)?academicearth\\.org/playlists/(?P<id>[^?\n    IE_NAME = 'AcademicEarth:Course'\n    _TEST = {\n        'url': 'http://academicearth.org/playlists/laws-of-nature/',\n        'info_dict': {\n            'id': 'laws-of-nature',\n            'title': 'Laws of Nature',\n            'description': 'Introduce yourself to the laws of nature with these free online college lectures from Yale, Harvard, and MIT.',\n        },\n        'playlist_count': 3,\n    }\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, playlist_id)\n        title = self._html_search_regex(\n            r'<h1 class=\"playlist-name\"[^>]*?>(.*?)</h1>', webpage, 'title')\n        description = self._html_search_regex(\n            r'<p class=\"excerpt\"[^>]*?>(.*?)</p>',\n            webpage, 'description', fatal=False)\n        urls = re.findall(\n            r'<li class=\"lecture-preview\">\\s*?<a target=\"_blank\" href=\"([^\"]+)\">',\n            webpage)\n        entries = [self.url_result(u) for u in urls]\n\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'title': title,\n            'description': description,\n            'entries': entries,\n        }\n", "comments": "#/]+)'\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass AcademicEarthCourseIE(InfoExtractor):\n    _VALID_URL = r'^https?://(?:www\\.)?academicearth\\.org/playlists/(?P<id>[^?#/]+)'\n    IE_NAME = 'AcademicEarth:Course'\n    _TEST = {\n        'url': 'http://academicearth.org/playlists/laws-of-nature/',\n        'info_dict': {\n            'id': 'laws-of-nature',\n            'title': 'Laws of Nature',\n            'description': 'Introduce yourself to the laws of nature with these free online college lectures from Yale, Harvard, and MIT.',\n        },\n        'playlist_count': 3,\n    }\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, playlist_id)\n        title = self._html_search_regex(\n            r'<h1 class=\"playlist-name\"[^>]*?>(.*?)</h1>', webpage, 'title')\n        description = self._html_search_regex(\n            r'<p class=\"excerpt\"[^>]*?>(.*?)</p>',\n            webpage, 'description', fatal=False)\n        urls = re.findall(\n            r'<li class=\"lecture-preview\">\\s*?<a target=\"_blank\" href=\"([^\"]+)\">',\n            webpage)\n        entries = [self.url_result(u) for u in urls]\n\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'title': title,\n            'description': description,\n            'entries': entries,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "academicearth.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/academicearth.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
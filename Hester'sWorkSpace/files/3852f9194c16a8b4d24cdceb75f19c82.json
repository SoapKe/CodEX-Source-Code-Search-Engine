{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: cl_interface\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Configures a front panel port, loopback or\n                  management port on Cumulus Linux.\ndeprecated:\n  removed_in: \"2.5\"\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  alternative: Use M(nclu) instead.\ndescription:\n    - Configures a front panel, sub-interface, SVI, management or loopback port\n      on a Cumulus Linux switch. For bridge ports use the cl_bridge module. For\n      bond ports use the cl_bond module. When configuring bridge related\n      features like the \"vid\" option, please follow the guidelines for\n      configuring \"vlan aware\" bridging. For more details review the Layer2\n      Interface Guide at U(http://docs.cumulusnetworks.com)\noptions:\n    name:\n        description:\n            - Name of the interface.\n        required: true\n    alias_name:\n        description:\n            - Description of the port.\n    ipv4:\n        description:\n            - List of IPv4 addresses to configure on the interface.\n              In the form I(X.X.X.X/YY).\n    ipv6:\n        description:\n            - List of IPv6 addresses to configure on the interface.\n              In the form I(X:X:X::X/YYY).\n    addr_method:\n        description:\n            - Address method.\n        choices:\n            - loopback\n            - dhcp\n    speed:\n        description:\n            - Set speed of the swp(front panel) or management(eth0) interface.\n              speed is in MB.\n    mtu:\n        description:\n            - Set MTU. Configure Jumbo Frame by setting MTU to I(9000).\n    virtual_ip:\n        description:\n            - Define IPv4 virtual IP used by the Cumulus Linux VRR feature.\n    virtual_mac:\n        description:\n            - Define Ethernet mac associated with Cumulus Linux VRR feature.\n    vids:\n        description:\n            - In vlan-aware mode, lists VLANs defined under the interface.\n    mstpctl_bpduguard:\n        description:\n            - Enables BPDU Guard on a port in vlan-aware mode.\n    mstpctl_portnetwork:\n        description:\n            - Enables bridge assurance in vlan-aware mode.\n    mstpctl_portadminedge:\n        description:\n            - Enables admin edge port.\n    clagd_enable:\n        description:\n            - Enables the clagd daemon. This command should only be applied to\n              the clag peerlink interface.\n    clagd_priority:\n        description:\n            - Integer that changes the role the switch has in the clag domain.\n              The lower priority switch will assume the primary role. The number\n              can be between 0 and 65535.\n    clagd_peer_ip:\n        description:\n            - IP address of the directly connected peer switch interface.\n    clagd_sys_mac:\n        description:\n            - Clagd system mac address. Recommended to use the range starting\n              with 44:38:39:ff. Needs to be the same between 2 Clag switches.\n    pvid:\n        description:\n            - In vlan-aware mode, defines vlan that is the untagged vlan.\n    location:\n        description:\n            - Interface directory location\n        default:\n            - '/etc/network/interfaces.d'\n\nrequirements: [ Alternate Debian network interface manager - \\\nifupdown2 @ github.com/CumulusNetworks/ifupdown2 ]\nnotes:\n    - As this module writes the interface directory location, ensure that\n      ``/etc/network/interfaces`` has a 'source /etc/network/interfaces.d/\\*' or\n      whatever path is mentioned in the ``location`` attribute.\n\n    - For the config to be activated, i.e installed in the kernel,\n      \"service networking reload\" needs be be executed. See EXAMPLES section.\n'''\n\nEXAMPLES = '''\n# Options ['virtual_mac', 'virtual_ip'] are required together\n- name: Configure a front panel port with an IP\n  cl_interface:\n    name: swp1\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n- name: Configure front panel to use DHCP\n  cl_interface:\n    name: swp2\n    addr_family: dhcp\n  notify: reload networking\n\n- name: Configure a SVI for vlan 100 interface with an IP\n  cl_interface:\n    name: bridge.100\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n- name: Configure subinterface with an IP\n  cl_interface:\n    name: bond0.100\n    alias_name: my bond\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n\n\n\n- name: Create interfaces\n  cl_interface:\n      name: '{{ item.key }}'\n      ipv4: '{{ item.value.ipv4 | default(omit) }}'\n      ipv6: '{{ item.value.ipv6 | default(omit) }}'\n      alias_name: '{{ item.value.alias_name | default(omit) }}'\n      addr_method: '{{ item.value.addr_method | default(omit) }}'\n      speed: '{{ item.value.link_speed | default(omit) }}'\n      mtu: '{{ item.value.mtu | default(omit) }}'\n      clagd_enable: '{{ item.value.clagd_enable | default(omit) }}'\n      clagd_peer_ip: '{{ item.value.clagd_peer_ip | default(omit) }}'\n      clagd_sys_mac: '{{ item.value.clagd_sys_mac | default(omit) }}'\n      clagd_priority: '{{ item.value.clagd_priority | default(omit) }}'\n      vids: '{{ item.value.vids | default(omit) }}'\n      virtual_ip: '{{ item.value.virtual_ip | default(omit) }}'\n      virtual_mac: '{{ item.value.virtual_mac | default(omit) }}'\n      mstpctl_portnetwork: \"{{ item.value.mstpctl_portnetwork | default('no') }}\"\n      mstpctl_portadminedge: \"{{ item.value.mstpctl_portadminedge | default('no') }}\"\n      mstpctl_bpduguard: \"{{ item.value.mstpctl_bpduguard | default('no') }}\"\n  with_dict: '{{ cl_interfaces }}'\n  notify: reload networking\n\n\n\n---\ncl_interfaces:\n  swp1:\n    alias_name: uplink to isp\n    ipv4: 10.1.1.1/24\n  swp2:\n    alias_name: l2 trunk connection\n    vids:\n      - 1\n      - 50\n  swp3:\n    speed: 1000\n    alias_name: connects to 1G link\n\n\n\n  br0.100:\n    alias_name: SVI for vlan 100\n    ipv4: 10.2.2.2/24\n    ipv6: '10:2:2::2/127'\n    virtual_ip: 10.2.2.254\n    virtual_mac: 00:00:5E:00:10:10\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "comments": "        module  cl interface version added   2 1  author   cumulus networks ( cumulusnetworks)  short description  configures front panel port  loopback                   management port cumulus linux  deprecated    removed   2 5     the m(nclu) module designed easier use individuals new cumulus linux exposing nclu interface automatable way    alternative  use m(nclu) instead  description        configures front panel  sub interface  svi  management loopback port       cumulus linux switch  for bridge ports use cl bridge module  for       bond ports use cl bond module  when configuring bridge related       features like  vid  option  please follow guidelines       configuring  vlan aware  bridging  for details review layer2       interface guide u(http   docs cumulusnetworks com) options      name          description                name interface          required  true     alias name          description                description port      ipv4          description                list ipv4 addresses configure interface                in form i(x x x x yy)      ipv6          description                list ipv6 addresses configure interface                in form i(x x x  x yyy)      addr method          description                address method          choices                loopback               dhcp     speed          description                set speed swp(front panel) management(eth0) interface                speed mb      mtu          description                set mtu  configure jumbo frame setting mtu i(9000)      virtual ip          description                define ipv4 virtual ip used cumulus linux vrr feature      virtual mac          description                define ethernet mac associated cumulus linux vrr feature      vids          description                in vlan aware mode  lists vlans defined interface      mstpctl bpduguard          description                enables bpdu guard port vlan aware mode      mstpctl portnetwork          description                enables bridge assurance vlan aware mode      mstpctl portadminedge          description                enables admin edge port      clagd enable          description                enables clagd daemon  this command applied               clag peerlink interface      clagd priority          description                integer changes role switch clag domain                the lower priority switch assume primary role  the number               0 65535      clagd peer ip          description                ip address directly connected peer switch interface      clagd sys mac          description                clagd system mac address  recommended use range starting               44 38 39 ff  needs 2 clag switches      pvid          description                in vlan aware mode  defines vlan untagged vlan      location          description                interface directory location         default                  etc network interfaces   requirements    alternate debian network interface manager     ifupdown2   github com cumulusnetworks ifupdown2   notes        as module writes interface directory location  ensure          etc network interfaces    source  etc network interfaces           whatever path mentioned   location   attribute         for config activated  e installed kernel         service networking reload  needs executed  see examples section       examples         options   virtual mac    virtual ip   required together   name  configure front panel port ip   cl interface      name  swp1     ipv4  10 1 1 1 24   notify  reload networking    name  configure front panel use dhcp   cl interface      name  swp2     addr family  dhcp   notify  reload networking    name  configure svi vlan 100 interface ip   cl interface      name  bridge 100     ipv4  10 1 1 1 24   notify  reload networking    name  configure subinterface ip   cl interface      name  bond0 100     alias name  bond     ipv4  10 1 1 1 24   notify  reload networking    define cl interfaces tasks   write interfaces variables file   options want    name  create interfaces   cl interface        name      item key           ipv4      item value ipv4   default(omit)           ipv6      item value ipv6   default(omit)           alias name      item value alias name   default(omit)           addr method      item value addr method   default(omit)           speed      item value link speed   default(omit)           mtu      item value mtu   default(omit)           clagd enable      item value clagd enable   default(omit)           clagd peer ip      item value clagd peer ip   default(omit)           clagd sys mac      item value clagd sys mac   default(omit)           clagd priority      item value clagd priority   default(omit)           vids      item value vids   default(omit)           virtual ip      item value virtual ip   default(omit)           virtual mac      item value virtual mac   default(omit)           mstpctl portnetwork      item value mstpctl portnetwork   default( )           mstpctl portadminedge      item value mstpctl portadminedge   default( )           mstpctl bpduguard      item value mstpctl bpduguard   default( )       dict      cl interfaces       notify  reload networking    in vars file                    cl interfaces    swp1      alias name  uplink isp     ipv4  10 1 1 1 24   swp2      alias name  l2 trunk connection     vids          1         50   swp3      speed  1000     alias name  connects 1g link                br0 interface configured cl bridge              br0 100      alias name  svi vlan 100     ipv4  10 2 2 2 24     ipv6   10 2 2  2 127      virtual ip  10 2 2 254     virtual mac  00 00 5e 00 10 10      return       changed      description  whether interface changed     returned  changed     type  bool     sample  true msg      description  human readable report success failure     returned  always     type  string     sample   interface bond0 config updated          usr bin python        coding  utf 8        (c) 2016  cumulus networks  ce ceng cumulusnetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    options   virtual mac    virtual ip   required together    define cl interfaces tasks    write interfaces variables file    options want     in vars file                                  br0 interface configured cl bridge             ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: cl_interface\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Configures a front panel port, loopback or\n                  management port on Cumulus Linux.\ndeprecated:\n  removed_in: \"2.5\"\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  alternative: Use M(nclu) instead.\ndescription:\n    - Configures a front panel, sub-interface, SVI, management or loopback port\n      on a Cumulus Linux switch. For bridge ports use the cl_bridge module. For\n      bond ports use the cl_bond module. When configuring bridge related\n      features like the \"vid\" option, please follow the guidelines for\n      configuring \"vlan aware\" bridging. For more details review the Layer2\n      Interface Guide at U(http://docs.cumulusnetworks.com)\noptions:\n    name:\n        description:\n            - Name of the interface.\n        required: true\n    alias_name:\n        description:\n            - Description of the port.\n    ipv4:\n        description:\n            - List of IPv4 addresses to configure on the interface.\n              In the form I(X.X.X.X/YY).\n    ipv6:\n        description:\n            - List of IPv6 addresses to configure on the interface.\n              In the form I(X:X:X::X/YYY).\n    addr_method:\n        description:\n            - Address method.\n        choices:\n            - loopback\n            - dhcp\n    speed:\n        description:\n            - Set speed of the swp(front panel) or management(eth0) interface.\n              speed is in MB.\n    mtu:\n        description:\n            - Set MTU. Configure Jumbo Frame by setting MTU to I(9000).\n    virtual_ip:\n        description:\n            - Define IPv4 virtual IP used by the Cumulus Linux VRR feature.\n    virtual_mac:\n        description:\n            - Define Ethernet mac associated with Cumulus Linux VRR feature.\n    vids:\n        description:\n            - In vlan-aware mode, lists VLANs defined under the interface.\n    mstpctl_bpduguard:\n        description:\n            - Enables BPDU Guard on a port in vlan-aware mode.\n    mstpctl_portnetwork:\n        description:\n            - Enables bridge assurance in vlan-aware mode.\n    mstpctl_portadminedge:\n        description:\n            - Enables admin edge port.\n    clagd_enable:\n        description:\n            - Enables the clagd daemon. This command should only be applied to\n              the clag peerlink interface.\n    clagd_priority:\n        description:\n            - Integer that changes the role the switch has in the clag domain.\n              The lower priority switch will assume the primary role. The number\n              can be between 0 and 65535.\n    clagd_peer_ip:\n        description:\n            - IP address of the directly connected peer switch interface.\n    clagd_sys_mac:\n        description:\n            - Clagd system mac address. Recommended to use the range starting\n              with 44:38:39:ff. Needs to be the same between 2 Clag switches.\n    pvid:\n        description:\n            - In vlan-aware mode, defines vlan that is the untagged vlan.\n    location:\n        description:\n            - Interface directory location\n        default:\n            - '/etc/network/interfaces.d'\n\nrequirements: [ Alternate Debian network interface manager - \\\nifupdown2 @ github.com/CumulusNetworks/ifupdown2 ]\nnotes:\n    - As this module writes the interface directory location, ensure that\n      ``/etc/network/interfaces`` has a 'source /etc/network/interfaces.d/\\*' or\n      whatever path is mentioned in the ``location`` attribute.\n\n    - For the config to be activated, i.e installed in the kernel,\n      \"service networking reload\" needs be be executed. See EXAMPLES section.\n'''\n\nEXAMPLES = '''\n# Options ['virtual_mac', 'virtual_ip'] are required together\n- name: Configure a front panel port with an IP\n  cl_interface:\n    name: swp1\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n- name: Configure front panel to use DHCP\n  cl_interface:\n    name: swp2\n    addr_family: dhcp\n  notify: reload networking\n\n- name: Configure a SVI for vlan 100 interface with an IP\n  cl_interface:\n    name: bridge.100\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n- name: Configure subinterface with an IP\n  cl_interface:\n    name: bond0.100\n    alias_name: my bond\n    ipv4: 10.1.1.1/24\n  notify: reload networking\n\n# define cl_interfaces once in tasks\n# then write interfaces in variables file\n# with just the options you want.\n- name: Create interfaces\n  cl_interface:\n      name: '{{ item.key }}'\n      ipv4: '{{ item.value.ipv4 | default(omit) }}'\n      ipv6: '{{ item.value.ipv6 | default(omit) }}'\n      alias_name: '{{ item.value.alias_name | default(omit) }}'\n      addr_method: '{{ item.value.addr_method | default(omit) }}'\n      speed: '{{ item.value.link_speed | default(omit) }}'\n      mtu: '{{ item.value.mtu | default(omit) }}'\n      clagd_enable: '{{ item.value.clagd_enable | default(omit) }}'\n      clagd_peer_ip: '{{ item.value.clagd_peer_ip | default(omit) }}'\n      clagd_sys_mac: '{{ item.value.clagd_sys_mac | default(omit) }}'\n      clagd_priority: '{{ item.value.clagd_priority | default(omit) }}'\n      vids: '{{ item.value.vids | default(omit) }}'\n      virtual_ip: '{{ item.value.virtual_ip | default(omit) }}'\n      virtual_mac: '{{ item.value.virtual_mac | default(omit) }}'\n      mstpctl_portnetwork: \"{{ item.value.mstpctl_portnetwork | default('no') }}\"\n      mstpctl_portadminedge: \"{{ item.value.mstpctl_portadminedge | default('no') }}\"\n      mstpctl_bpduguard: \"{{ item.value.mstpctl_bpduguard | default('no') }}\"\n  with_dict: '{{ cl_interfaces }}'\n  notify: reload networking\n\n# In vars file\n# ============\n---\ncl_interfaces:\n  swp1:\n    alias_name: uplink to isp\n    ipv4: 10.1.1.1/24\n  swp2:\n    alias_name: l2 trunk connection\n    vids:\n      - 1\n      - 50\n  swp3:\n    speed: 1000\n    alias_name: connects to 1G link\n##########\n#   br0 interface is configured by cl_bridge\n##########\n  br0.100:\n    alias_name: SVI for vlan 100\n    ipv4: 10.2.2.2/24\n    ipv6: '10:2:2::2/127'\n    virtual_ip: 10.2.2.254\n    virtual_mac: 00:00:5E:00:10:10\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "_cl_interface.py", "id": "3852f9194c16a8b4d24cdceb75f19c82", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/cumulus/_cl_interface.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
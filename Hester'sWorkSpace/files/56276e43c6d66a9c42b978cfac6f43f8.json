{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import qualities\n\n\nclass UnistraIE(InfoExtractor):\n    _VALID_URL = r'https?://utv\\.unistra\\.fr/(?:index|video)\\.php\\?id_video\\=(?P<id>\\d+)'\n\n    _TESTS = [\n        {\n            'url': 'http://utv.unistra.fr/video.php?id_video=154',\n            'md5': '736f605cfdc96724d55bb543ab3ced24',\n            'info_dict': {\n                'id': '154',\n                'ext': 'mp4',\n                'title': 'M!ss Yella',\n                'description': 'md5:104892c71bd48e55d70b902736b81bbf',\n            },\n        },\n        {\n            'url': 'http://utv.unistra.fr/index.php?id_video=437',\n            'md5': '1ddddd6cccaae76f622ce29b8779636d',\n            'info_dict': {\n                'id': '437',\n                'ext': 'mp4',\n                'title': 'Prix Louise Weiss 2014',\n                'description': 'md5:cc3a8735f079f4fb6b0b570fc10c135a',\n            },\n        }\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        files = set(re.findall(r'file\\s*:\\s*\"(/[^\"]+)\"', webpage))\n\n        quality = qualities(['SD', 'HD'])\n        formats = []\n        for file_path in files:\n            format_id = 'HD' if file_path.endswith('-HD.mp4') else 'SD'\n            formats.append({\n                'url': 'http://vod-flash.u-strasbg.fr:8080%s' % file_path,\n                'format_id': format_id,\n                'quality': quality(format_id)\n            })\n        self._sort_formats(formats)\n\n        title = self._html_search_regex(\n            r'<title>UTV - (.*?)</', webpage, 'title')\n        description = self._html_search_regex(\n            r'<meta name=\"Description\" content=\"(.*?)\"', webpage, 'description', flags=re.DOTALL)\n        thumbnail = self._search_regex(\n            r'image: \"(.*?)\"', webpage, 'thumbnail')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'formats': formats\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import qualities\n\n\nclass UnistraIE(InfoExtractor):\n    _VALID_URL = r'https?://utv\\.unistra\\.fr/(?:index|video)\\.php\\?id_video\\=(?P<id>\\d+)'\n\n    _TESTS = [\n        {\n            'url': 'http://utv.unistra.fr/video.php?id_video=154',\n            'md5': '736f605cfdc96724d55bb543ab3ced24',\n            'info_dict': {\n                'id': '154',\n                'ext': 'mp4',\n                'title': 'M!ss Yella',\n                'description': 'md5:104892c71bd48e55d70b902736b81bbf',\n            },\n        },\n        {\n            'url': 'http://utv.unistra.fr/index.php?id_video=437',\n            'md5': '1ddddd6cccaae76f622ce29b8779636d',\n            'info_dict': {\n                'id': '437',\n                'ext': 'mp4',\n                'title': 'Prix Louise Weiss 2014',\n                'description': 'md5:cc3a8735f079f4fb6b0b570fc10c135a',\n            },\n        }\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        files = set(re.findall(r'file\\s*:\\s*\"(/[^\"]+)\"', webpage))\n\n        quality = qualities(['SD', 'HD'])\n        formats = []\n        for file_path in files:\n            format_id = 'HD' if file_path.endswith('-HD.mp4') else 'SD'\n            formats.append({\n                'url': 'http://vod-flash.u-strasbg.fr:8080%s' % file_path,\n                'format_id': format_id,\n                'quality': quality(format_id)\n            })\n        self._sort_formats(formats)\n\n        title = self._html_search_regex(\n            r'<title>UTV - (.*?)</', webpage, 'title')\n        description = self._html_search_regex(\n            r'<meta name=\"Description\" content=\"(.*?)\"', webpage, 'description', flags=re.DOTALL)\n        thumbnail = self._search_regex(\n            r'image: \"(.*?)\"', webpage, 'thumbnail')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'formats': formats\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "unistra.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/unistra.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
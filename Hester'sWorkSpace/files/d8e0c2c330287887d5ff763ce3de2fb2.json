{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n internal imports\n\nimport numpy as np\nimport tensorflow as tf\n\nfrom magenta.models.onsets_frames_transcription import onsets_frames_transcription_create_dataset as create_dataset\nfrom magenta.protobuf import music_pb2\n\n\nclass CreateDatasetTest(tf.test.TestCase):\n\n  def testSplitMidi(self):\n    sequence = music_pb2.NoteSequence()\n    sequence.notes.add(pitch=60, start_time=1.0, end_time=2.9)\n    sequence.notes.add(pitch=60, start_time=8.0, end_time=11.0)\n    sequence.notes.add(pitch=60, start_time=14.0, end_time=17.0)\n    sequence.notes.add(pitch=60, start_time=20.0, end_time=23.0)\n    sequence.total_time = 25.\n\n    sample_rate = 160\n    samples = np.zeros(sample_rate * int(sequence.total_time))\n    splits = create_dataset.find_split_points(sequence, samples,\n                                              sample_rate, 0, 3)\n\n    self.assertEqual(splits, [0., 3., 6., 9., 12., 15., 18., 21., 24., 25.])\n\n    samples[int(8.5 * sample_rate)] = 1\n    samples[int(8.5 * sample_rate) + 1] = -1\n    splits = create_dataset.find_split_points(sequence, samples,\n                                              sample_rate, 0, 3)\n\n    self.assertEqual(splits, [\n        0.0, 3.0, 6.0, 8.50625, 11.50625, 14.50625, 17.50625, 20.50625,\n        23.50625, 25.\n    ])\n\n\nif __name__ == '__main__':\n  tf.test.main()\n", "comments": "   test splitting files   midis        copyright 2017 google inc  all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license          http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license     internal imports ", "content": "# Copyright 2017 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Test for splitting of files / midis.\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\n# internal imports\n\nimport numpy as np\nimport tensorflow as tf\n\nfrom magenta.models.onsets_frames_transcription import onsets_frames_transcription_create_dataset as create_dataset\nfrom magenta.protobuf import music_pb2\n\n\nclass CreateDatasetTest(tf.test.TestCase):\n\n  def testSplitMidi(self):\n    sequence = music_pb2.NoteSequence()\n    sequence.notes.add(pitch=60, start_time=1.0, end_time=2.9)\n    sequence.notes.add(pitch=60, start_time=8.0, end_time=11.0)\n    sequence.notes.add(pitch=60, start_time=14.0, end_time=17.0)\n    sequence.notes.add(pitch=60, start_time=20.0, end_time=23.0)\n    sequence.total_time = 25.\n\n    sample_rate = 160\n    samples = np.zeros(sample_rate * int(sequence.total_time))\n    splits = create_dataset.find_split_points(sequence, samples,\n                                              sample_rate, 0, 3)\n\n    self.assertEqual(splits, [0., 3., 6., 9., 12., 15., 18., 21., 24., 25.])\n\n    samples[int(8.5 * sample_rate)] = 1\n    samples[int(8.5 * sample_rate) + 1] = -1\n    splits = create_dataset.find_split_points(sequence, samples,\n                                              sample_rate, 0, 3)\n\n    self.assertEqual(splits, [\n        0.0, 3.0, 6.0, 8.50625, 11.50625, 14.50625, 17.50625, 20.50625,\n        23.50625, 25.\n    ])\n\n\nif __name__ == '__main__':\n  tf.test.main()\n", "description": "Magenta: Music and Art Generation with Machine Intelligence", "file_name": "onsets_frames_transcription_create_dataset_test.py", "id": "d8e0c2c330287887d5ff763ce3de2fb2", "language": "Python", "project_name": "magenta", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tensorflow-magenta/tensorflow-magenta-ca73164/magenta/models/onsets_frames_transcription/onsets_frames_transcription_create_dataset_test.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:00:14Z", "url": "https://github.com/tensorflow/magenta", "wiki": false}
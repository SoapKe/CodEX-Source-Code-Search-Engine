{"author": "fabric", "code": "\"\"\"\nFabric's own fabfile.\n\"\"\"\n\nfrom __future__ import with_statement\n\nimport nose\n\nfrom fabric.api import task\n\n\n@task(default=True)\ndef test(args=None):\n    \"\"\"\n    Run all unit tests and doctests.\n\n    Specify string argument ``args`` for additional args to ``nosetests``.\n    \"\"\"\n    \n    \n    tests = \"\" if args else \" tests\"\n    default_args = \"-sv --with-doctest --nologcapture --with-color %s\" % tests\n    default_args += (\" \" + args) if args else \"\"\n    nose.core.run_exit(argv=[''] + default_args.split())\n", "comments": "    fabric fabfile         future   import statement  import nose  fabric api import task    task(default true) def test(args none)              run unit tests doctests       specify string argument   args   additional args   nosetests               default explicitly targeting  tests  folder  nothing    overridden  ", "content": "\"\"\"\nFabric's own fabfile.\n\"\"\"\n\nfrom __future__ import with_statement\n\nimport nose\n\nfrom fabric.api import task\n\n\n@task(default=True)\ndef test(args=None):\n    \"\"\"\n    Run all unit tests and doctests.\n\n    Specify string argument ``args`` for additional args to ``nosetests``.\n    \"\"\"\n    # Default to explicitly targeting the 'tests' folder, but only if nothing\n    # is being overridden.\n    tests = \"\" if args else \" tests\"\n    default_args = \"-sv --with-doctest --nologcapture --with-color %s\" % tests\n    default_args += (\" \" + args) if args else \"\"\n    nose.core.run_exit(argv=[''] + default_args.split())\n", "description": "Simple, Pythonic remote execution and deployment.", "file_name": "fabfile.py", "id": "c154f163b147e104dbbae98cb65fe0dc", "language": "Python", "project_name": "fabric", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/fabric-fabric/fabric-fabric-245402e/fabfile.py", "save_time": "", "source": "", "update_at": "2018-03-13T12:02:14Z", "url": "https://github.com/fabric/fabric", "wiki": false}
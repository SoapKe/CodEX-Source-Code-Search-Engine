{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestFib(object):\n\n    def test_fib(self, func):\n        result = []\n        expected = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n        for i in range(len(expected)):\n            result.append(func(i))\n        assert_equal(result, expected)\n        print('Success: test_fib')\n\n\ndef main():\n    test = TestFib()\n    math = Math()\n    test.test_fib(math.fib_recursive)\n    test.test_fib(math.fib_dynamic)\n    test.test_fib(math.fib_iterative)\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestFib(object):\n\n    def test_fib(self, func):\n        result = []\n        expected = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n        for i in range(len(expected)):\n            result.append(func(i))\n        assert_equal(result, expected)\n        print('Success: test_fib')\n\n\ndef main():\n    test = TestFib()\n    math = Math()\n    test.test_fib(math.fib_recursive)\n    test.test_fib(math.fib_dynamic)\n    test.test_fib(math.fib_iterative)\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_fibonacci.py", "id": "d7008acd792ed8d688012d74c4c3b10f", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/recursion_dynamic/fibonacci/test_fibonacci.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
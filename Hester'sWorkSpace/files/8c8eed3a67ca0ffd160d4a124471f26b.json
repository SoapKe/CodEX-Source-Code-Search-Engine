{"author": "tgalal", "code": "import importlib\nimport logging\nlogger = logging.getLogger(__name__)\nfrom contextlib import contextmanager\n\nclass OptionalModule(object):\n    def __init__(self, modulename, failMessage = None, require = False):\n        self.modulename = modulename\n        self.require = require\n        self.failMessage = failMessage\n\n    def __enter__(self):\n        return self.importFn\n\n    def importFn(self, what = None):\n        imp = self.modulename if not what else (\"%s.%s\" % (self.modulename, what))\n        return importlib.import_module(imp)\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if isinstance(exc_val, ImportError):\n            failMessage = self.failMessage if self.failMessage is not None else (\"%s import failed\" % self.modulename)\n            if failMessage:\n                logger.error(failMessage)\n            if self.require:\n                raise\n            return True\n\nclass PILOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(PILOptionalModule, self).__init__(\"PIL\",\n                failMessage= failMessage,\n                require = require)\n\nclass FFVideoOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(FFVideoOptionalModule, self).__init__(\"ffvideo\",\n                failMessage=failMessage,\n                require=require)\n\nclass AxolotlOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(AxolotlOptionalModule, self).__init__(\"axolotl\",\n                failMessage=failMessage,\n                require=require)\n\nif __name__ == \"__main__\":\n    with PILOptionalModule() as imp:\n        imp()\n        print(\"OK\")\n    print(\"DONE\")\n", "comments": "", "content": "import importlib\nimport logging\nlogger = logging.getLogger(__name__)\nfrom contextlib import contextmanager\n\nclass OptionalModule(object):\n    def __init__(self, modulename, failMessage = None, require = False):\n        self.modulename = modulename\n        self.require = require\n        self.failMessage = failMessage\n\n    def __enter__(self):\n        return self.importFn\n\n    def importFn(self, what = None):\n        imp = self.modulename if not what else (\"%s.%s\" % (self.modulename, what))\n        return importlib.import_module(imp)\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        if isinstance(exc_val, ImportError):\n            failMessage = self.failMessage if self.failMessage is not None else (\"%s import failed\" % self.modulename)\n            if failMessage:\n                logger.error(failMessage)\n            if self.require:\n                raise\n            return True\n\nclass PILOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(PILOptionalModule, self).__init__(\"PIL\",\n                failMessage= failMessage,\n                require = require)\n\nclass FFVideoOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(FFVideoOptionalModule, self).__init__(\"ffvideo\",\n                failMessage=failMessage,\n                require=require)\n\nclass AxolotlOptionalModule(OptionalModule):\n    def __init__(self, failMessage = None, require = False):\n        super(AxolotlOptionalModule, self).__init__(\"axolotl\",\n                failMessage=failMessage,\n                require=require)\n\nif __name__ == \"__main__\":\n    with PILOptionalModule() as imp:\n        imp()\n        print(\"OK\")\n    print(\"DONE\")\n", "description": "The python WhatsApp library", "file_name": "optionalmodules.py", "id": "8c8eed3a67ca0ffd160d4a124471f26b", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/common/optionalmodules.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
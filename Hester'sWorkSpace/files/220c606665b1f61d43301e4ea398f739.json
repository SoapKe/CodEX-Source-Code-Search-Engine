{"author": "nvbn", "code": "import pytest\nfrom six import BytesIO\nfrom thefuck.rules.ifconfig_device_not_found import match, get_new_command\nfrom thefuck.types import Command\n\n\noutput = '{}: error fetching interface information: Device not found'\n\nstdout = b\n\n\n@pytest.fixture(autouse=True)\ndef ifconfig(mocker):\n    mock = mocker.patch(\n        'thefuck.rules.ifconfig_device_not_found.subprocess.Popen')\n    mock.return_value.stdout = BytesIO(stdout)\n    return mock\n\n\n@pytest.mark.parametrize('script, output', [\n    ('ifconfig wlan0', output.format('wlan0')),\n    ('ifconfig -s eth0', output.format('eth0')),\n])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('config wlan0',\n     'wlan0: error fetching interface information: Device not found'),\n    ('ifconfig eth0', ''),\n])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('ifconfig wlan0', ['ifconfig wlp2s0']),\n    ('ifconfig -s wlan0', ['ifconfig -s wlp2s0']),\n])\ndef test_get_new_comman(script, result):\n    new_command = get_new_command(\n        Command(script, output.format('wlan0')))\n    assert new_command == result\n", "comments": "\nwlp2s0    Link encap:Ethernet  HWaddr 5c:51:4f:7c:58:5d\n          inet addr:192.168.0.103  Bcast:192.168.0.255  Mask:255.255.255.0\n          inet6 addr: fe80::be23:69b9:96d2:6d39/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:23581604 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:17017655 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:16148429061 (16.1 GB)  TX bytes:7067533695 (7.0 GB)\n\n\n\n", "content": "import pytest\nfrom six import BytesIO\nfrom thefuck.rules.ifconfig_device_not_found import match, get_new_command\nfrom thefuck.types import Command\n\n\noutput = '{}: error fetching interface information: Device not found'\n\nstdout = b'''\nwlp2s0    Link encap:Ethernet  HWaddr 5c:51:4f:7c:58:5d\n          inet addr:192.168.0.103  Bcast:192.168.0.255  Mask:255.255.255.0\n          inet6 addr: fe80::be23:69b9:96d2:6d39/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:23581604 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:17017655 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:16148429061 (16.1 GB)  TX bytes:7067533695 (7.0 GB)\n'''\n\n\n@pytest.fixture(autouse=True)\ndef ifconfig(mocker):\n    mock = mocker.patch(\n        'thefuck.rules.ifconfig_device_not_found.subprocess.Popen')\n    mock.return_value.stdout = BytesIO(stdout)\n    return mock\n\n\n@pytest.mark.parametrize('script, output', [\n    ('ifconfig wlan0', output.format('wlan0')),\n    ('ifconfig -s eth0', output.format('eth0')),\n])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('config wlan0',\n     'wlan0: error fetching interface information: Device not found'),\n    ('ifconfig eth0', ''),\n])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('ifconfig wlan0', ['ifconfig wlp2s0']),\n    ('ifconfig -s wlan0', ['ifconfig -s wlp2s0']),\n])\ndef test_get_new_comman(script, result):\n    new_command = get_new_command(\n        Command(script, output.format('wlan0')))\n    assert new_command == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_ifconfig_device_not_found.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_ifconfig_device_not_found.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
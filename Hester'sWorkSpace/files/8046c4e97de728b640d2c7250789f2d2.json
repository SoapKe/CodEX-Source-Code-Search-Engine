{"author": "django", "code": "from django.db import models\nfrom django.utils.translation import gettext_lazy as _\n\n\nclass Site(models.Model):\n    domain = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.domain\n\n\nclass Article(models.Model):\n    \n    site = models.ForeignKey(Site, models.CASCADE, related_name=\"admin_articles\")\n    title = models.CharField(max_length=100)\n    hist = models.CharField(max_length=100, verbose_name=_(\"History\"))\n    created = models.DateTimeField(null=True)\n\n    def __str__(self):\n        return self.title\n\n    def test_from_model(self):\n        return \"nothing\"\n\n    def test_from_model_with_override(self):\n        return \"nothing\"\n    test_from_model_with_override.short_description = \"not What you Expect\"\n\n\nclass ArticleProxy(Article):\n    class Meta:\n        proxy = True\n\n\nclass Count(models.Model):\n    num = models.PositiveSmallIntegerField()\n    parent = models.ForeignKey('self', models.CASCADE, null=True)\n\n    def __str__(self):\n        return str(self.num)\n\n\nclass Event(models.Model):\n    date = models.DateTimeField(auto_now_add=True)\n\n\nclass Location(models.Model):\n    event = models.OneToOneField(Event, models.CASCADE, verbose_name='awesome event')\n\n\nclass Guest(models.Model):\n    event = models.OneToOneField(Event, models.CASCADE)\n    name = models.CharField(max_length=255)\n\n    class Meta:\n        verbose_name = \"awesome guest\"\n\n\nclass EventGuide(models.Model):\n    event = models.ForeignKey(Event, models.DO_NOTHING)\n\n\nclass Vehicle(models.Model):\n    pass\n\n\nclass VehicleMixin(Vehicle):\n    vehicle = models.OneToOneField(\n        Vehicle,\n        models.CASCADE,\n        parent_link=True,\n        related_name='vehicle_%(app_label)s_%(class)s',\n    )\n\n    class Meta:\n        abstract = True\n\n\nclass Car(VehicleMixin):\n    pass\n", "comments": "        a simple article model testing         ", "content": "from django.db import models\nfrom django.utils.translation import gettext_lazy as _\n\n\nclass Site(models.Model):\n    domain = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.domain\n\n\nclass Article(models.Model):\n    \"\"\"\n    A simple Article model for testing\n    \"\"\"\n    site = models.ForeignKey(Site, models.CASCADE, related_name=\"admin_articles\")\n    title = models.CharField(max_length=100)\n    hist = models.CharField(max_length=100, verbose_name=_(\"History\"))\n    created = models.DateTimeField(null=True)\n\n    def __str__(self):\n        return self.title\n\n    def test_from_model(self):\n        return \"nothing\"\n\n    def test_from_model_with_override(self):\n        return \"nothing\"\n    test_from_model_with_override.short_description = \"not What you Expect\"\n\n\nclass ArticleProxy(Article):\n    class Meta:\n        proxy = True\n\n\nclass Count(models.Model):\n    num = models.PositiveSmallIntegerField()\n    parent = models.ForeignKey('self', models.CASCADE, null=True)\n\n    def __str__(self):\n        return str(self.num)\n\n\nclass Event(models.Model):\n    date = models.DateTimeField(auto_now_add=True)\n\n\nclass Location(models.Model):\n    event = models.OneToOneField(Event, models.CASCADE, verbose_name='awesome event')\n\n\nclass Guest(models.Model):\n    event = models.OneToOneField(Event, models.CASCADE)\n    name = models.CharField(max_length=255)\n\n    class Meta:\n        verbose_name = \"awesome guest\"\n\n\nclass EventGuide(models.Model):\n    event = models.ForeignKey(Event, models.DO_NOTHING)\n\n\nclass Vehicle(models.Model):\n    pass\n\n\nclass VehicleMixin(Vehicle):\n    vehicle = models.OneToOneField(\n        Vehicle,\n        models.CASCADE,\n        parent_link=True,\n        related_name='vehicle_%(app_label)s_%(class)s',\n    )\n\n    class Meta:\n        abstract = True\n\n\nclass Car(VehicleMixin):\n    pass\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "8046c4e97de728b640d2c7250789f2d2", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/admin_utils/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
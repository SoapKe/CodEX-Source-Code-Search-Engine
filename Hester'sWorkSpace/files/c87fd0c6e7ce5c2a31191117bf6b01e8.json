{"author": "eliangcs", "code": "import os\nimport stat\nimport sys\n\nfrom .base import TempAppDirTestCase\nfrom http_prompt import xdg\n\n\nclass TestXDG(TempAppDirTestCase):\n\n    def test_get_app_data_home(self):\n        path = xdg.get_data_dir()\n        expected_path = os.path.join(os.environ[self.homes['data']],\n                                     'http-prompt')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        if sys.platform != 'win32':\n            \n            mask = stat.S_IMODE(os.stat(path).st_mode)\n            self.assertTrue(mask & stat.S_IRWXU)\n            self.assertFalse(mask & stat.S_IRWXG)\n            self.assertFalse(mask & stat.S_IRWXO)\n\n    def test_get_app_config_home(self):\n        path = xdg.get_config_dir()\n        expected_path = os.path.join(os.environ[self.homes['config']],\n                                     'http-prompt')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        if sys.platform != 'win32':\n            \n            mask = stat.S_IMODE(os.stat(path).st_mode)\n            self.assertTrue(mask & stat.S_IRWXU)\n            self.assertFalse(mask & stat.S_IRWXG)\n            self.assertFalse(mask & stat.S_IRWXO)\n\n    def test_get_resource_data_dir(self):\n        path = xdg.get_data_dir('something')\n        expected_path = os.path.join(\n            os.environ[self.homes['data']], 'http-prompt', 'something')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        \n        with open(os.path.join(path, 'test'), 'wb') as f:\n            f.write(b'hello')\n\n    def test_get_resource_config_dir(self):\n        path = xdg.get_config_dir('something')\n        expected_path = os.path.join(\n            os.environ[self.homes['config']], 'http-prompt', 'something')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        \n        with open(os.path.join(path, 'test'), 'wb') as f:\n            f.write(b'hello')\n", "comments": "  make sure permission directory 700    make sure permission directory 700    make sure write file directory    make sure write file directory ", "content": "import os\nimport stat\nimport sys\n\nfrom .base import TempAppDirTestCase\nfrom http_prompt import xdg\n\n\nclass TestXDG(TempAppDirTestCase):\n\n    def test_get_app_data_home(self):\n        path = xdg.get_data_dir()\n        expected_path = os.path.join(os.environ[self.homes['data']],\n                                     'http-prompt')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        if sys.platform != 'win32':\n            # Make sure permission for the directory is 700\n            mask = stat.S_IMODE(os.stat(path).st_mode)\n            self.assertTrue(mask & stat.S_IRWXU)\n            self.assertFalse(mask & stat.S_IRWXG)\n            self.assertFalse(mask & stat.S_IRWXO)\n\n    def test_get_app_config_home(self):\n        path = xdg.get_config_dir()\n        expected_path = os.path.join(os.environ[self.homes['config']],\n                                     'http-prompt')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        if sys.platform != 'win32':\n            # Make sure permission for the directory is 700\n            mask = stat.S_IMODE(os.stat(path).st_mode)\n            self.assertTrue(mask & stat.S_IRWXU)\n            self.assertFalse(mask & stat.S_IRWXG)\n            self.assertFalse(mask & stat.S_IRWXO)\n\n    def test_get_resource_data_dir(self):\n        path = xdg.get_data_dir('something')\n        expected_path = os.path.join(\n            os.environ[self.homes['data']], 'http-prompt', 'something')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        # Make sure we can write a file to the directory\n        with open(os.path.join(path, 'test'), 'wb') as f:\n            f.write(b'hello')\n\n    def test_get_resource_config_dir(self):\n        path = xdg.get_config_dir('something')\n        expected_path = os.path.join(\n            os.environ[self.homes['config']], 'http-prompt', 'something')\n        self.assertEqual(path, expected_path)\n        self.assertTrue(os.path.exists(path))\n\n        # Make sure we can write a file to the directory\n        with open(os.path.join(path, 'test'), 'wb') as f:\n            f.write(b'hello')\n", "description": "HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting", "file_name": "test_xdg.py", "id": "c87fd0c6e7ce5c2a31191117bf6b01e8", "language": "Python", "project_name": "http-prompt", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/eliangcs-http-prompt/eliangcs-http-prompt-87f1e9d/tests/test_xdg.py", "save_time": "", "source": "", "update_at": "2018-03-17T18:26:33Z", "url": "https://github.com/eliangcs/http-prompt", "wiki": true}
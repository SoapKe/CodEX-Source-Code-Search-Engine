{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, models\n\n\nclass SurveyComposeMessage(models.TransientModel):\n\n    _inherit = 'survey.mail.compose.message'\n\n    @api.model\n    def default_get(self, fields):\n        result = super(SurveyComposeMessage, self).default_get(fields)\n        if self._context.get('active_model') == 'crm.lead' and self._context.get('active_ids'):\n            partner_ids = []\n            emails_list = []\n            for lead in self.env['crm.lead'].browse(self._context.get('active_ids')):\n                if lead.partner_id:\n                    partner_ids.append(lead.partner_id.id)\n                else:\n                    email = lead.contact_name and \"%s <%s>\" % (lead.contact_name, lead.email_from or \"\") or lead.email_from or None\n                    if email and email not in emails_list:\n                        emails_list.append(email)\n            multi_email = \"\\n\".join(emails_list)\n\n            result.update({'partner_ids': list(set(partner_ids)), 'multi_email': multi_email})\n        return result\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, models\n\n\nclass SurveyComposeMessage(models.TransientModel):\n\n    _inherit = 'survey.mail.compose.message'\n\n    @api.model\n    def default_get(self, fields):\n        result = super(SurveyComposeMessage, self).default_get(fields)\n        if self._context.get('active_model') == 'crm.lead' and self._context.get('active_ids'):\n            partner_ids = []\n            emails_list = []\n            for lead in self.env['crm.lead'].browse(self._context.get('active_ids')):\n                if lead.partner_id:\n                    partner_ids.append(lead.partner_id.id)\n                else:\n                    email = lead.contact_name and \"%s <%s>\" % (lead.contact_name, lead.email_from or \"\") or lead.email_from or None\n                    if email and email not in emails_list:\n                        emails_list.append(email)\n            multi_email = \"\\n\".join(emails_list)\n\n            result.update({'partner_ids': list(set(partner_ids)), 'multi_email': multi_email})\n        return result\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "survey.py", "id": "bcc0976b11d5cd10a6ddd858f2747a22", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/survey_crm/models/survey.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
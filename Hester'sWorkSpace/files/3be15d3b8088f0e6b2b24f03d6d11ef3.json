{"author": "aws", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import create_clidriver\nfrom awscli.testutils import BaseAWSCommandParamsTest, FileCreator\n\n\nclass TestAPIVersions(BaseAWSCommandParamsTest):\n    def setUp(self):\n        super(TestAPIVersions, self).setUp()\n        self.files = FileCreator()\n         We just pick ec2 because it is a service that actually has\n         multiple api versions.\n        self.service_name = 'ec2'\n        self.api_version = '2014-10-01'\n        config_contents = (\n            '[default]\\n'\n            'api_versions =\\n'\n            '    %s = %s\\n' % (self.service_name, self.api_version)\n        )\n        self.environ['AWS_CONFIG_FILE'] = self.files.create_file(\n            'myconfig', config_contents)\n        self.driver = create_clidriver()\n\n    def tearDown(self):\n        super(TestAPIVersions, self).tearDown()\n        self.files.remove_all()\n\n    def test_command_send_correct_api_version(self):\n        cmdline = 'ec2 describe-instances'\n        self.run_cmd(cmdline)\n         Make sure that the correct api version is used for the client\n         by checking the version that was sent in the request.\n        self.assertEqual(self.last_params['Version'], self.api_version)\n\n    def test_command_interface_reflects_api_version(self):\n         Take an arbitrary command such as describe-nat-gateways that is not\n         in the 2014-10-01 EC2 API version and make sure its CLI command\n         interface is not available as well.\n        cmdline = 'ec2 describe-nat-gateways'\n        _, stderr, _ = self.run_cmd(cmdline, expected_rc=2)\n        self.assertIn(\"Invalid choice: 'describe-nat-gateways'\", stderr)\n", "comments": "  copyright 2016 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license     we pick ec2 service actually    multiple api versions     make sure correct api version used client    checking version sent request     take arbitrary command describe nat gateways    2014 10 01 ec2 api version make sure cli command    interface available well  ", "content": "# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import create_clidriver\nfrom awscli.testutils import BaseAWSCommandParamsTest, FileCreator\n\n\nclass TestAPIVersions(BaseAWSCommandParamsTest):\n    def setUp(self):\n        super(TestAPIVersions, self).setUp()\n        self.files = FileCreator()\n        # We just pick ec2 because it is a service that actually has\n        # multiple api versions.\n        self.service_name = 'ec2'\n        self.api_version = '2014-10-01'\n        config_contents = (\n            '[default]\\n'\n            'api_versions =\\n'\n            '    %s = %s\\n' % (self.service_name, self.api_version)\n        )\n        self.environ['AWS_CONFIG_FILE'] = self.files.create_file(\n            'myconfig', config_contents)\n        self.driver = create_clidriver()\n\n    def tearDown(self):\n        super(TestAPIVersions, self).tearDown()\n        self.files.remove_all()\n\n    def test_command_send_correct_api_version(self):\n        cmdline = 'ec2 describe-instances'\n        self.run_cmd(cmdline)\n        # Make sure that the correct api version is used for the client\n        # by checking the version that was sent in the request.\n        self.assertEqual(self.last_params['Version'], self.api_version)\n\n    def test_command_interface_reflects_api_version(self):\n        # Take an arbitrary command such as describe-nat-gateways that is not\n        # in the 2014-10-01 EC2 API version and make sure its CLI command\n        # interface is not available as well.\n        cmdline = 'ec2 describe-nat-gateways'\n        _, stderr, _ = self.run_cmd(cmdline, expected_rc=2)\n        self.assertIn(\"Invalid choice: 'describe-nat-gateways'\", stderr)\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_api_versions.py", "id": "3be15d3b8088f0e6b2b24f03d6d11ef3", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/functional/test_api_versions.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
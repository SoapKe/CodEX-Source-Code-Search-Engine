{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.fab_command_not_found import match, get_new_command\nfrom thefuck.types import Command\n\noutput = \n\n\n@pytest.mark.parametrize('command', [\n    Command('fab extenson', output),\n    Command('fab deloyp', output),\n    Command('fab extenson deloyp', output)])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('gulp extenson', output),\n    Command('fab deloyp', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('script, result', [\n    ('fab extenson', 'fab prepare_extension'),\n    ('fab extenson:version=2016',\n     'fab prepare_extension:version=2016'),\n    ('fab extenson:version=2016 install_web set_version:val=0.5.0',\n     'fab prepare_extension:version=2016 install_web set_version:val=0.5.0'),\n    ('fab extenson:version=2016 deloyp:beta=true -H the.fuck',\n     'fab prepare_extension:version=2016 deploy:beta=true -H the.fuck'),\n])\ndef test_get_new_command(script, result):\n    command = Command(script, output)\n    assert get_new_command(command) == result\n", "comments": "\nWarning: Command(s) not found:\n    extenson\n    deloyp\n\nAvailable commands:\n\n    update_config\n    prepare_extension\n    Template               A string class for supporting $-substitutions.\n    deploy\n    glob                   Return a list of paths matching a pathname pattern.\n    install_web\n    set_version\n\n\n\n", "content": "import pytest\nfrom thefuck.rules.fab_command_not_found import match, get_new_command\nfrom thefuck.types import Command\n\noutput = '''\nWarning: Command(s) not found:\n    extenson\n    deloyp\n\nAvailable commands:\n\n    update_config\n    prepare_extension\n    Template               A string class for supporting $-substitutions.\n    deploy\n    glob                   Return a list of paths matching a pathname pattern.\n    install_web\n    set_version\n'''\n\n\n@pytest.mark.parametrize('command', [\n    Command('fab extenson', output),\n    Command('fab deloyp', output),\n    Command('fab extenson deloyp', output)])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('gulp extenson', output),\n    Command('fab deloyp', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('script, result', [\n    ('fab extenson', 'fab prepare_extension'),\n    ('fab extenson:version=2016',\n     'fab prepare_extension:version=2016'),\n    ('fab extenson:version=2016 install_web set_version:val=0.5.0',\n     'fab prepare_extension:version=2016 install_web set_version:val=0.5.0'),\n    ('fab extenson:version=2016 deloyp:beta=true -H the.fuck',\n     'fab prepare_extension:version=2016 deploy:beta=true -H the.fuck'),\n])\ndef test_get_new_command(script, result):\n    command = Command(script, output)\n    assert get_new_command(command) == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_fab_command_not_found.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_fab_command_not_found.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "eliangcs", "code": "import sys\n\nimport click\nimport six\n\n\nclass Printer(object):\n    \"\"\"Wrap click.echo_via_pager() so it accepts binary data.\"\"\"\n\n    def write(self, data):\n        if isinstance(data, six.binary_type):\n            data = data.decode('utf-8')\n\n        # echo_via_pager() already appends a '\\n' at the end of text,\n        # so we use rstrip() to remove extra newlines (#89)\n        click.echo_via_pager(data.rstrip())\n\n    def flush(self):\n        pass\n\n    def close(self):\n        pass\n\n    def isatty(self):\n        return True\n\n    def fileno(self):\n        return sys.stdout.fileno()\n\n\nclass TextWriter(object):\n    \"\"\"Wrap a file-like object, opened with 'wb' or 'ab', so it accepts text\n    data.\n    \"\"\"\n    def __init__(self, fp):\n        self.fp = fp\n\n    def write(self, data):\n        if isinstance(data, six.text_type):\n            data = data.encode('utf-8')\n        self.fp.write(data)\n\n    def flush(self):\n        self.fp.flush()\n\n    def close(self):\n        self.fp.close()\n\n    def isatty(self):\n        return self.fp.isatty()\n\n    def fileno(self):\n        return self.fp.fileno()\n", "comments": "   wrap click echo via pager() accepts binary data          def write(self  data)          isinstance(data  six binary type)              data   data decode( utf 8 )            echo via pager() already appends   n  end text            use rstrip() remove extra newlines ( 89)         click echo via pager(data rstrip())      def flush(self)          pass      def close(self)          pass      def isatty(self)          return true      def fileno(self)          return sys stdout fileno()   class textwriter(object)         wrap file like object  opened  wb   ab   accepts text     data             echo via pager() already appends   n  end text     use rstrip() remove extra newlines ( 89) ", "content": "import sys\n\nimport click\nimport six\n\n\nclass Printer(object):\n    \"\"\"Wrap click.echo_via_pager() so it accepts binary data.\"\"\"\n\n    def write(self, data):\n        if isinstance(data, six.binary_type):\n            data = data.decode('utf-8')\n\n        # echo_via_pager() already appends a '\\n' at the end of text,\n        # so we use rstrip() to remove extra newlines (#89)\n        click.echo_via_pager(data.rstrip())\n\n    def flush(self):\n        pass\n\n    def close(self):\n        pass\n\n    def isatty(self):\n        return True\n\n    def fileno(self):\n        return sys.stdout.fileno()\n\n\nclass TextWriter(object):\n    \"\"\"Wrap a file-like object, opened with 'wb' or 'ab', so it accepts text\n    data.\n    \"\"\"\n    def __init__(self, fp):\n        self.fp = fp\n\n    def write(self, data):\n        if isinstance(data, six.text_type):\n            data = data.encode('utf-8')\n        self.fp.write(data)\n\n    def flush(self):\n        self.fp.flush()\n\n    def close(self):\n        self.fp.close()\n\n    def isatty(self):\n        return self.fp.isatty()\n\n    def fileno(self):\n        return self.fp.fileno()\n", "description": "HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting", "file_name": "output.py", "id": "2062fa2b185de60a4f16ed1ebfea2453", "language": "Python", "project_name": "http-prompt", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/eliangcs-http-prompt/eliangcs-http-prompt-87f1e9d/http_prompt/output.py", "save_time": "", "source": "", "update_at": "2018-03-17T18:26:33Z", "url": "https://github.com/eliangcs/http-prompt", "wiki": true}
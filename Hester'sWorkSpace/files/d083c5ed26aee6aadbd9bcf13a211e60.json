{"author": "keon", "code": "\"\"\"\nGiven an array of integers, every element appears\ntwice except for one. Find that single one.\n\nNote:\nYour algorithm should have a linear runtime complexity.\nCould you implement it without using extra memory?\n\"\"\"\n\n\ndef single_number(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: int\n    \"\"\"\n    i = 0\n    for num in nums:\n        i ^= num\n    return i\n", "comments": "    given array integers  every element appears twice except one  find single one   note  your algorithm linear runtime complexity  could implement without using extra memory        def single number(nums)               type nums  list int       rtype  int         ", "content": "\"\"\"\nGiven an array of integers, every element appears\ntwice except for one. Find that single one.\n\nNote:\nYour algorithm should have a linear runtime complexity.\nCould you implement it without using extra memory?\n\"\"\"\n\n\ndef single_number(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: int\n    \"\"\"\n    i = 0\n    for num in nums:\n        i ^= num\n    return i\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "single_number.py", "id": "d083c5ed26aee6aadbd9bcf13a211e60", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/keon-algorithms/keon-algorithms-ea43887/bit/single_number.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:53:29Z", "url": "https://github.com/keon/algorithms", "wiki": true}
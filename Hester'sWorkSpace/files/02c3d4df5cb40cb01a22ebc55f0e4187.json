{"author": "apache", "code": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport os\nimport argparse\nfrom bs4 import BeautifulSoup as bs\n\nparser = argparse.ArgumentParser(description=\"Manipulate index page\",\n                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)\nparser.add_argument('--file_path', type=str, default='mxnet/docs/_build/html/',\n                        help='file to be modified')\nparser.add_argument('--current_version', type=str, default='master',\n                        help='Current version')\nparser.add_argument('--root_url', type=str, default='https://mxnet.incubator.apache.org/',\n                        help='Root URL')\n\nif __name__ == '__main__':\n    args = parser.parse_args()\n\n    root_url = args.root_url\n    tag_list = list()\n    with open('tag_list.txt', 'r') as tag_file:\n        for line in tag_file:\n            tag_list.append(line.lstrip().rstrip())\n        tag_list.append('master')\n\n    version_str = '<span id=\"dropdown-menu-position-anchor-version\" ' \\\n                  'style=\"position: relative\">' \\\n                  '<a href=\"\n                  'role=\"button\" aria-haspopup=\"true\" aria-expanded=\"true\">Versions(%s)<span class=\"caret\">' \\\n                  '</span></a><ul id=\"package-dropdown-menu\" class=\"dropdown-menu\">' % (args.current_version)\n    version_str_mobile = '<li id=\"dropdown-menu-position-anchor-version-mobile\" class=\"dropdown-submenu\" ' \\\n                         'style=\"position: relative\">' \\\n                         '<a href=\"\n    for i, tag in enumerate(tag_list):\n        url = root_url if i == 0 else root_url + 'versions/%s/index.html' % (tag)\n        version_str += '<li><a class=\"main-nav-link\" href=%s>%s</a></li>' % (url, tag)\n        version_str_mobile += '<li><a tabindex=\"-1\" href=%s>%s</a></li>' % (url, tag)\n    version_str += '</ul></span>'\n    version_str_mobile += '</ul></li>'\n\n    for path, subdirs, files in os.walk(args.file_path):\n        for name in files:\n            if not name.endswith('.html'):\n                continue\n            if 'install' in path:\n                print(\"Skipping this path: {}\".format(path))\n                continue\n            with open(os.path.join(path, name), 'r') as html_file:\n                content = bs(html_file, 'html.parser')\n            navbar = content.find(id=\"main-nav\")\n            navbar_mobile = content.find(id=\"burgerMenu\")\n            outstr = str(content)\n            if navbar and navbar_mobile:\n                version_tag = content.find(id=\"dropdown-menu-position-anchor-version\")\n                version_tag_mobile = content.find(id=\"dropdown-menu-position-anchor-version-mobile\")\n                if version_tag:\n                    version_tag.extract()\n                if version_tag_mobile:\n                    version_tag_mobile.extract()\n                navbar.append(version_str)\n                navbar_mobile.append(version_str_mobile)\n                outstr = str(content).replace('&lt;', '<').replace('&gt;', '>')\n            \n            if args.current_version == tag_list[0]:\n                print(\"Fixing \" + os.path.join(path, name))\n                outstr = outstr.replace('https://mxnet.io', 'https://mxnet.incubator.apache.org')\n                outstr = outstr.replace('http://mxnet.io', 'https://mxnet.incubator.apache.org')\n            else:\n                outstr = outstr.replace('https://mxnet.io', 'https://mxnet.incubator.apache.org/'\n                                                                'versions/%s' % (args.current_version))\n                outstr = outstr.replace('http://mxnet.io', 'https://mxnet.incubator.apache.org/'\n                                                               'versions/%s' % (args.current_version))\n\n            \n            pip_pattern = ['', '-cu80', '-cu75', '-cu80mkl', '-cu75mkl', '-mkl']\n            if args.current_version == 'master':\n                outstr = outstr.replace('git clone --recursive https://github.com/dmlc/mxnet',\n                                        'git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet')\n                for trail in pip_pattern:\n                    outstr = outstr.replace('pip install mxnet%s<' % (trail),\n                                            'pip install mxnet%s --pre<' % (trail))\n                    outstr = outstr.replace('pip install mxnet%s\\n<' % (trail),\n                                            'pip install mxnet%s --pre\\n<' % (trail))\n            else:\n                outstr = outstr.replace('git clone --recursive https://github.com/dmlc/mxnet',\n                                        'git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet '\n                                        '--branch %s' % (args.current_version))\n                for trail in pip_pattern:\n                    outstr = outstr.replace('pip install mxnet%s<' % (trail),\n                                            'pip install mxnet%s==%s<' % (trail, args.current_version))\n                    outstr = outstr.replace('pip install mxnet%s\\n<' % (trail),\n                                            'pip install mxnet%s==%s\\n<' % (trail, args.current_version))\n\n            \n            outstr = outstr.replace('https://github.com/apache/incubator-mxnet/tree/master/example',\n                                    'https://github.com/apache/incubator-mxnet/tree/%s/example' %\n                                    (args.current_version))\n\n            with open(os.path.join(path, name), \"w\") as outf:\n                outf.write(outstr)\n\n", "comments": "licensed apache software foundation (asf) one contributor license agreements see notice file distributed work additional information regarding copyright ownership the asf licenses file apache license version 2.0 (the \"license\"); may use file except compliance license you may obtain copy license http://www.apache.org/licenses/license-2.0 unless required applicable law agreed writing software distributed license distributed \"as is\" basis without warranties or conditions of any kind either express implied see license specific language governing permissions limitations license \" class=\"main-nav-link dropdown-toggle\" data-toggle=\"dropdown\" ' \\ \" tabindex=\"-1\">versions(%s)</a><ul class=\"dropdown-menu\">' % (args.current_version) fix link fix git clone pip installation specific tag add tag example link", "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nimport os\nimport argparse\nfrom bs4 import BeautifulSoup as bs\n\nparser = argparse.ArgumentParser(description=\"Manipulate index page\",\n                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)\nparser.add_argument('--file_path', type=str, default='mxnet/docs/_build/html/',\n                        help='file to be modified')\nparser.add_argument('--current_version', type=str, default='master',\n                        help='Current version')\nparser.add_argument('--root_url', type=str, default='https://mxnet.incubator.apache.org/',\n                        help='Root URL')\n\nif __name__ == '__main__':\n    args = parser.parse_args()\n\n    root_url = args.root_url\n    tag_list = list()\n    with open('tag_list.txt', 'r') as tag_file:\n        for line in tag_file:\n            tag_list.append(line.lstrip().rstrip())\n        tag_list.append('master')\n\n    version_str = '<span id=\"dropdown-menu-position-anchor-version\" ' \\\n                  'style=\"position: relative\">' \\\n                  '<a href=\"#\" class=\"main-nav-link dropdown-toggle\" data-toggle=\"dropdown\" ' \\\n                  'role=\"button\" aria-haspopup=\"true\" aria-expanded=\"true\">Versions(%s)<span class=\"caret\">' \\\n                  '</span></a><ul id=\"package-dropdown-menu\" class=\"dropdown-menu\">' % (args.current_version)\n    version_str_mobile = '<li id=\"dropdown-menu-position-anchor-version-mobile\" class=\"dropdown-submenu\" ' \\\n                         'style=\"position: relative\">' \\\n                         '<a href=\"#\" tabindex=\"-1\">Versions(%s)</a><ul class=\"dropdown-menu\">' % (args.current_version)\n    for i, tag in enumerate(tag_list):\n        url = root_url if i == 0 else root_url + 'versions/%s/index.html' % (tag)\n        version_str += '<li><a class=\"main-nav-link\" href=%s>%s</a></li>' % (url, tag)\n        version_str_mobile += '<li><a tabindex=\"-1\" href=%s>%s</a></li>' % (url, tag)\n    version_str += '</ul></span>'\n    version_str_mobile += '</ul></li>'\n\n    for path, subdirs, files in os.walk(args.file_path):\n        for name in files:\n            if not name.endswith('.html'):\n                continue\n            if 'install' in path:\n                print(\"Skipping this path: {}\".format(path))\n                continue\n            with open(os.path.join(path, name), 'r') as html_file:\n                content = bs(html_file, 'html.parser')\n            navbar = content.find(id=\"main-nav\")\n            navbar_mobile = content.find(id=\"burgerMenu\")\n            outstr = str(content)\n            if navbar and navbar_mobile:\n                version_tag = content.find(id=\"dropdown-menu-position-anchor-version\")\n                version_tag_mobile = content.find(id=\"dropdown-menu-position-anchor-version-mobile\")\n                if version_tag:\n                    version_tag.extract()\n                if version_tag_mobile:\n                    version_tag_mobile.extract()\n                navbar.append(version_str)\n                navbar_mobile.append(version_str_mobile)\n                outstr = str(content).replace('&lt;', '<').replace('&gt;', '>')\n            # Fix link\n            if args.current_version == tag_list[0]:\n                print(\"Fixing \" + os.path.join(path, name))\n                outstr = outstr.replace('https://mxnet.io', 'https://mxnet.incubator.apache.org')\n                outstr = outstr.replace('http://mxnet.io', 'https://mxnet.incubator.apache.org')\n            else:\n                outstr = outstr.replace('https://mxnet.io', 'https://mxnet.incubator.apache.org/'\n                                                                'versions/%s' % (args.current_version))\n                outstr = outstr.replace('http://mxnet.io', 'https://mxnet.incubator.apache.org/'\n                                                               'versions/%s' % (args.current_version))\n\n            # Fix git clone and pip installation to specific tag\n            pip_pattern = ['', '-cu80', '-cu75', '-cu80mkl', '-cu75mkl', '-mkl']\n            if args.current_version == 'master':\n                outstr = outstr.replace('git clone --recursive https://github.com/dmlc/mxnet',\n                                        'git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet')\n                for trail in pip_pattern:\n                    outstr = outstr.replace('pip install mxnet%s<' % (trail),\n                                            'pip install mxnet%s --pre<' % (trail))\n                    outstr = outstr.replace('pip install mxnet%s\\n<' % (trail),\n                                            'pip install mxnet%s --pre\\n<' % (trail))\n            else:\n                outstr = outstr.replace('git clone --recursive https://github.com/dmlc/mxnet',\n                                        'git clone --recursive https://github.com/apache/incubator-mxnet.git mxnet '\n                                        '--branch %s' % (args.current_version))\n                for trail in pip_pattern:\n                    outstr = outstr.replace('pip install mxnet%s<' % (trail),\n                                            'pip install mxnet%s==%s<' % (trail, args.current_version))\n                    outstr = outstr.replace('pip install mxnet%s\\n<' % (trail),\n                                            'pip install mxnet%s==%s\\n<' % (trail, args.current_version))\n\n            # Add tag for example link\n            outstr = outstr.replace('https://github.com/apache/incubator-mxnet/tree/master/example',\n                                    'https://github.com/apache/incubator-mxnet/tree/%s/example' %\n                                    (args.current_version))\n\n            with open(os.path.join(path, name), \"w\") as outf:\n                outf.write(outstr)\n\n", "description": "Lightweight, Portable, Flexible Distributed/Mobile Deep Learning with Dynamic, Mutation-aware Dataflow Dep Scheduler; for Python, R, Julia, Scala, Go, Javascript and more", "file_name": "AddVersion.py", "id": "02c3d4df5cb40cb01a22ebc55f0e4187", "language": "Python", "project_name": "incubator-mxnet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/apache-incubator-mxnet/apache-incubator-mxnet-dd1f21b/docs/build_version_doc/AddVersion.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:28:10Z", "url": "https://github.com/apache/incubator-mxnet", "wiki": false}
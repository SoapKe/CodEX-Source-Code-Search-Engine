{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.ag_literal import get_new_command, match\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef output():\n    return ('ERR: Bad regex! pcre_compile() failed at position 1: missing )\\n'\n            'If you meant to search for a literal string, run ag with -Q\\n')\n\n\n@pytest.mark.parametrize('script', ['ag \\('])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', ['ag foo'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_cmd', [\n    ('ag \\(', 'ag -Q \\(')])\ndef test_get_new_command(script, new_cmd, output):\n    assert get_new_command((Command(script, output))) == new_cmd\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.ag_literal import get_new_command, match\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef output():\n    return ('ERR: Bad regex! pcre_compile() failed at position 1: missing )\\n'\n            'If you meant to search for a literal string, run ag with -Q\\n')\n\n\n@pytest.mark.parametrize('script', ['ag \\('])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', ['ag foo'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_cmd', [\n    ('ag \\(', 'ag -Q \\(')])\ndef test_get_new_command(script, new_cmd, output):\n    assert get_new_command((Command(script, output))) == new_cmd\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_ag_literal.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_ag_literal.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom odoo import exceptions\nfrom odoo.http import Controller, request, route\nfrom odoo.addons.bus.models.bus import dispatch\n\nfrom odoo.tools import pycompat\n\n\nclass BusController(Controller):\n    \"\"\" Examples:\n    openerp.jsonRpc('/longpolling/poll','call',{\"channels\":[\"c1\"],last:0}).then(function(r){console.log(r)});\n    openerp.jsonRpc('/longpolling/send','call',{\"channel\":\"c1\",\"message\":\"m1\"});\n    openerp.jsonRpc('/longpolling/send','call',{\"channel\":\"c2\",\"message\":\"m2\"});\n    \"\"\"\n\n    @route('/longpolling/send', type=\"json\", auth=\"public\")\n    def send(self, channel, message):\n        if not isinstance(channel, pycompat.string_types):\n            raise Exception(\"bus.Bus only string channels are allowed.\")\n        return request.env['bus.bus'].sendone(channel, message)\n\n    \n    def _poll(self, dbname, channels, last, options):\n        \n        if request.session.uid and 'bus_inactivity' in options:\n            request.env['bus.presence'].update(options.get('bus_inactivity'))\n        request.cr.close()\n        request._cr = None\n        return dispatch.poll(dbname, channels, last, options)\n\n    @route('/longpolling/poll', type=\"json\", auth=\"public\")\n    def poll(self, channels, last, options=None):\n        if options is None:\n            options = {}\n        if not dispatch:\n            raise Exception(\"bus.Bus unavailable\")\n        if [c for c in channels if not isinstance(c, pycompat.string_types)]:\n            raise Exception(\"bus.Bus only string channels are allowed.\")\n        if request.registry.in_test_mode():\n            raise exceptions.UserError(\"bus.Bus not available in test mode\")\n        return self._poll(request.db, channels, last, options)\n", "comments": "    examples      openerp jsonrpc(  longpolling poll   call    channels    c1   last 0 ) then(function(r) console log(r) )      openerp jsonrpc(  longpolling send   call    channel   c1   message   m1  )      openerp jsonrpc(  longpolling send   call    channel   c2   message   m2  )                 coding  utf 8        override add channels    update user presence ", "content": "# -*- coding: utf-8 -*-\n\nfrom odoo import exceptions\nfrom odoo.http import Controller, request, route\nfrom odoo.addons.bus.models.bus import dispatch\n\nfrom odoo.tools import pycompat\n\n\nclass BusController(Controller):\n    \"\"\" Examples:\n    openerp.jsonRpc('/longpolling/poll','call',{\"channels\":[\"c1\"],last:0}).then(function(r){console.log(r)});\n    openerp.jsonRpc('/longpolling/send','call',{\"channel\":\"c1\",\"message\":\"m1\"});\n    openerp.jsonRpc('/longpolling/send','call',{\"channel\":\"c2\",\"message\":\"m2\"});\n    \"\"\"\n\n    @route('/longpolling/send', type=\"json\", auth=\"public\")\n    def send(self, channel, message):\n        if not isinstance(channel, pycompat.string_types):\n            raise Exception(\"bus.Bus only string channels are allowed.\")\n        return request.env['bus.bus'].sendone(channel, message)\n\n    # override to add channels\n    def _poll(self, dbname, channels, last, options):\n        # update the user presence\n        if request.session.uid and 'bus_inactivity' in options:\n            request.env['bus.presence'].update(options.get('bus_inactivity'))\n        request.cr.close()\n        request._cr = None\n        return dispatch.poll(dbname, channels, last, options)\n\n    @route('/longpolling/poll', type=\"json\", auth=\"public\")\n    def poll(self, channels, last, options=None):\n        if options is None:\n            options = {}\n        if not dispatch:\n            raise Exception(\"bus.Bus unavailable\")\n        if [c for c in channels if not isinstance(c, pycompat.string_types)]:\n            raise Exception(\"bus.Bus only string channels are allowed.\")\n        if request.registry.in_test_mode():\n            raise exceptions.UserError(\"bus.Bus not available in test mode\")\n        return self._poll(request.db, channels, last, options)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "64abb71e759b7a9bb356b054043fff15", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/bus/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
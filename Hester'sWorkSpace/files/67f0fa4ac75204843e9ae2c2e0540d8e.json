{"author": "pallets", "code": "\n\n    login(client, app.config['USERNAME'],\n          app.config['PASSWORD'])\n    rv = client.post('/add', data=dict(\n        title='<Hello>',\n        text='<strong>HTML</strong> allowed here'\n    ), follow_redirects=True)\n    assert b'No entries here so far' not in rv.data\n    assert b'&lt;Hello&gt;' in rv.data\n    assert b'<strong>HTML</strong> allowed here' in rv.data\n", "comments": "\n    Flaskr Tests\n    ~~~~~~~~~~~~\n\n    Tests the Flaskr application.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport os\nimport tempfile\nimport pytest\nfrom flaskr.factory import create_app\nfrom flaskr.blueprints.flaskr import init_db\n\n\n@pytest.fixture\ndef app():\n    db_fd, db_path = tempfile.mkstemp()\n    config = {\n        'DATABASE': db_path,\n        'TESTING': True,\n    }\n    app = create_app(config=config)\n\n    with app.app_context():\n        init_db()\n        yield app\n\n    os.close(db_fd)\n    os.unlink(db_path)\n\n\n@pytest.fixture\ndef client(app):\n    return app.test_client()\n\n\ndef login(client, username, password):\n    return client.post('/login', data=dict(\n        username=username,\n        password=password\n    ), follow_redirects=True)\n\n\ndef logout(client):\n    return client.get('/logout', follow_redirects=True)\n\n\ndef test_empty_db(client):\n    \"\"\"Start with a blank database.\"\"\"\n    rv = client.get('/')\n    assert b'No entries here so far' in rv.data\n\n\ndef test_login_logout(client, app):\n    \"\"\"Make sure login and logout works\"\"\"\n    rv = login(client, app.config['USERNAME'],\n               app.config['PASSWORD'])\n    assert b'You were logged in' in rv.data\n    rv = logout(client)\n    assert b'You were logged out' in rv.data\n    rv = login(client,app.config['USERNAME'] + 'x',\n               app.config['PASSWORD'])\n    assert b'Invalid username' in rv.data\n    rv = login(client, app.config['USERNAME'],\n               app.config['PASSWORD'] + 'x')\n    assert b'Invalid password' in rv.data\n\n\ndef test_messages(client, app):\n    \"\"\"Test that messages work\nk\n# -*- coding: utf-8 -*-\n", "content": "# -*- coding: utf-8 -*-\n\"\"\"\n    Flaskr Tests\n    ~~~~~~~~~~~~\n\n    Tests the Flaskr application.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport os\nimport tempfile\nimport pytest\nfrom flaskr.factory import create_app\nfrom flaskr.blueprints.flaskr import init_db\n\n\n@pytest.fixture\ndef app():\n    db_fd, db_path = tempfile.mkstemp()\n    config = {\n        'DATABASE': db_path,\n        'TESTING': True,\n    }\n    app = create_app(config=config)\n\n    with app.app_context():\n        init_db()\n        yield app\n\n    os.close(db_fd)\n    os.unlink(db_path)\n\n\n@pytest.fixture\ndef client(app):\n    return app.test_client()\n\n\ndef login(client, username, password):\n    return client.post('/login', data=dict(\n        username=username,\n        password=password\n    ), follow_redirects=True)\n\n\ndef logout(client):\n    return client.get('/logout', follow_redirects=True)\n\n\ndef test_empty_db(client):\n    \"\"\"Start with a blank database.\"\"\"\n    rv = client.get('/')\n    assert b'No entries here so far' in rv.data\n\n\ndef test_login_logout(client, app):\n    \"\"\"Make sure login and logout works\"\"\"\n    rv = login(client, app.config['USERNAME'],\n               app.config['PASSWORD'])\n    assert b'You were logged in' in rv.data\n    rv = logout(client)\n    assert b'You were logged out' in rv.data\n    rv = login(client,app.config['USERNAME'] + 'x',\n               app.config['PASSWORD'])\n    assert b'Invalid username' in rv.data\n    rv = login(client, app.config['USERNAME'],\n               app.config['PASSWORD'] + 'x')\n    assert b'Invalid password' in rv.data\n\n\ndef test_messages(client, app):\n    \"\"\"Test that messages work\"\"\"\n    login(client, app.config['USERNAME'],\n          app.config['PASSWORD'])\n    rv = client.post('/add', data=dict(\n        title='<Hello>',\n        text='<strong>HTML</strong> allowed here'\n    ), follow_redirects=True)\n    assert b'No entries here so far' not in rv.data\n    assert b'&lt;Hello&gt;' in rv.data\n    assert b'<strong>HTML</strong> allowed here' in rv.data\n", "description": "The Python micro framework for building web applications.", "file_name": "test_flaskr.py", "language": "Python", "project_name": "flask", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pallets_flask/pallets-flask-a2ea186/examples/flaskr/tests/test_flaskr.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:52:03Z", "url": "https://github.com/pallets/flask", "wiki": false}
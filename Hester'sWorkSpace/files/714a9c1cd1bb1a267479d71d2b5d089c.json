{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_authprofile\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of AuthProfile Avi RESTful Object\ndescription:\n    - This module is used to configure AuthProfile object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    http:\n        description:\n            - Http user authentication params.\n    ldap:\n        description:\n            - Ldap server and directory settings.\n    name:\n        description:\n            - Name of the auth profile.\n        required: true\n    saml:\n        description:\n            - Saml settings.\n            - Field introduced in 17.2.3.\n        version_added: \"2.5\"\n    tacacs_plus:\n        description:\n            - Tacacs+ settings.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of the auth profile.\n            - Enum options - AUTH_PROFILE_LDAP, AUTH_PROFILE_TACACS_PLUS, AUTH_PROFILE_SAML.\n        required: true\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the auth profile.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n  - name: Create user authorization profile based on the LDAP\n    avi_authprofile:\n      controller: '{{ controller }}'\n      password: '{{ password }}'\n      username: '{{ username }}'\n      http:\n        cache_expiration_time: 5\n        group_member_is_full_dn: false\n      ldap:\n        base_dn: dc=avi,dc=local\n        bind_as_administrator: true\n        port: 389\n        security_mode: AUTH_LDAP_SECURE_NONE\n        server:\n        - 10.10.0.100\n        settings:\n          admin_bind_dn: user@avi.local\n          group_filter: (objectClass=*)\n          group_member_attribute: member\n          group_member_is_full_dn: true\n          group_search_dn: dc=avi,dc=local\n          group_search_scope: AUTH_LDAP_SCOPE_SUBTREE\n          ignore_referrals: true\n          password: password\n          user_id_attribute: samAccountname\n          user_search_dn: dc=avi,dc=local\n          user_search_scope: AUTH_LDAP_SCOPE_ONE\n      name: ProdAuth\n      tenant_ref: admin\n      type: AUTH_PROFILE_LDAP\n\"\"\"\n\nRETURN = '''\nobj:\n    description: AuthProfile (api/authprofile) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        http=dict(type='dict',),\n        ldap=dict(type='dict',),\n        name=dict(type='str', required=True),\n        saml=dict(type='dict',),\n        tacacs_plus=dict(type='dict',),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'authprofile',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "        name  create user authorization profile based ldap     avi authprofile        controller      controller           password      password           username      username           http          cache expiration time  5         group member full dn  false       ldap          base dn  dc avi dc local         bind administrator  true         port  389         security mode  auth ldap secure none         server            10 10 0 100         settings            admin bind dn  user avi local           group filter  (objectclass  )           group member attribute  member           group member full dn  true           group search dn  dc avi dc local           group search scope  auth ldap scope subtree           ignore referrals  true           password  password           user id attribute  samaccountname           user search dn  dc avi dc local           user search scope  auth ldap scope one       name  prodauth       tenant ref  admin       type  auth profile ldap              module  avi authprofile author  gaurav rastogi (grastogi avinetworks com)  short description  module setup authprofile avi restful object description        this module used configure authprofile object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 4  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       description          description                user defined description object      http          description                http user authentication params      ldap          description                ldap server directory settings      name          description                name auth profile          required  true     saml          description                saml settings                field introduced 17 2 3          version added   2 5      tacacs plus          description                tacacs  settings      tenant ref          description                it reference object type tenant      type          description                type auth profile                enum options   auth profile ldap  auth profile tacacs plus  auth profile saml          required  true     url          description                avi controller url object      uuid          description                uuid auth profile  extends documentation fragment        avi      examples           name  create user authorization profile based ldap     avi authprofile        controller      controller           password      password           username      username           http          cache expiration time  5         group member full dn  false       ldap          base dn  dc avi dc local         bind administrator  true         port  389         security mode  auth ldap secure none         server            10 10 0 100         settings            admin bind dn  user avi local           group filter  (objectclass  )           group member attribute  member           group member full dn  true           group search dn  dc avi dc local           group search scope  auth ldap scope subtree           ignore referrals  true           password  password           user id attribute  samaccountname           user search dn  dc avi dc local           user search scope  auth ldap scope one       name  prodauth       tenant ref  admin       type  auth profile ldap      return       obj      description  authprofile (api authprofile) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_authprofile\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of AuthProfile Avi RESTful Object\ndescription:\n    - This module is used to configure AuthProfile object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    http:\n        description:\n            - Http user authentication params.\n    ldap:\n        description:\n            - Ldap server and directory settings.\n    name:\n        description:\n            - Name of the auth profile.\n        required: true\n    saml:\n        description:\n            - Saml settings.\n            - Field introduced in 17.2.3.\n        version_added: \"2.5\"\n    tacacs_plus:\n        description:\n            - Tacacs+ settings.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of the auth profile.\n            - Enum options - AUTH_PROFILE_LDAP, AUTH_PROFILE_TACACS_PLUS, AUTH_PROFILE_SAML.\n        required: true\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the auth profile.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n  - name: Create user authorization profile based on the LDAP\n    avi_authprofile:\n      controller: '{{ controller }}'\n      password: '{{ password }}'\n      username: '{{ username }}'\n      http:\n        cache_expiration_time: 5\n        group_member_is_full_dn: false\n      ldap:\n        base_dn: dc=avi,dc=local\n        bind_as_administrator: true\n        port: 389\n        security_mode: AUTH_LDAP_SECURE_NONE\n        server:\n        - 10.10.0.100\n        settings:\n          admin_bind_dn: user@avi.local\n          group_filter: (objectClass=*)\n          group_member_attribute: member\n          group_member_is_full_dn: true\n          group_search_dn: dc=avi,dc=local\n          group_search_scope: AUTH_LDAP_SCOPE_SUBTREE\n          ignore_referrals: true\n          password: password\n          user_id_attribute: samAccountname\n          user_search_dn: dc=avi,dc=local\n          user_search_scope: AUTH_LDAP_SCOPE_ONE\n      name: ProdAuth\n      tenant_ref: admin\n      type: AUTH_PROFILE_LDAP\n\"\"\"\n\nRETURN = '''\nobj:\n    description: AuthProfile (api/authprofile) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        http=dict(type='dict',),\n        ldap=dict(type='dict',),\n        name=dict(type='str', required=True),\n        saml=dict(type='dict',),\n        tacacs_plus=dict(type='dict',),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'authprofile',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_authprofile.py", "id": "714a9c1cd1bb1a267479d71d2b5d089c", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_authprofile.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
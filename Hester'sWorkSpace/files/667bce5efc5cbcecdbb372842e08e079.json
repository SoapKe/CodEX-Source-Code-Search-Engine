{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\n\n\nclass ResConfigSettings(models.TransientModel):\n\n    _inherit = 'res.config.settings'\n\n    group_multi_company = fields.Boolean(\"Manage multiple companies\", implied_group='base.group_multi_company')\n    company_id = fields.Many2one('res.company', string='Company', required=True,\n        default=lambda self: self.env.user.company_id)\n    default_user_rights = fields.Boolean(\"Default Access Rights\")\n    default_external_email_server = fields.Boolean(\"External Email Servers\")\n    module_base_import = fields.Boolean(\"Allow users to import data from CSV/XLS/XLSX/ODS files\")\n    module_google_calendar = fields.Boolean(\n        string='Allow the users to synchronize their calendar  with Google Calendar')\n    module_google_drive = fields.Boolean(\"Attach Google documents to any record\")\n    module_google_spreadsheet = fields.Boolean(\"Google Spreadsheet\")\n    module_auth_oauth = fields.Boolean(\"Use external authentication providers (OAuth)\")\n    module_auth_ldap = fields.Boolean(\"LDAP Authentication\")\n    module_base_gengo = fields.Boolean(\"Translate Your Website with Gengo\")\n    module_inter_company_rules = fields.Boolean(\"Manage Inter Company\")\n    module_pad = fields.Boolean(\"Collaborative Pads\")\n    module_voip = fields.Boolean(\"Asterisk (VoIP)\")\n    company_share_partner = fields.Boolean(string='Share partners to all companies',\n        help=\"Share your partners to all companies defined in your instance.\\n\"\n             \" * Checked : Partners are visible for every companies, even if a company is defined on the partner.\\n\"\n             \" * Unchecked : Each company can see only its partner (partners where company is defined). Partners not related to a company are visible for all companies.\")\n    default_custom_report_footer = fields.Boolean(\"Custom Report Footer\")\n    report_footer = fields.Text(related=\"company_id.report_footer\", string='Custom Report Footer', help=\"Footer text displayed at the bottom of all reports.\")\n    group_multi_currency = fields.Boolean(string='Multi-Currencies',\n            implied_group='base.group_multi_currency',\n            help=\"Allows to work in a multi currency environment\")\n    paperformat_id = fields.Many2one(related=\"company_id.paperformat_id\", string='Paper format')\n    external_report_layout = fields.Selection(related=\"company_id.external_report_layout\")\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        params = self.env['ir.config_parameter'].sudo()\n        default_external_email_server = params.get_param('base_setup.default_external_email_server', default=False)\n        default_user_rights = params.get_param('base_setup.default_user_rights', default=False)\n        default_custom_report_footer = params.get_param('base_setup.default_custom_report_footer', default=False)\n        res.update(\n            default_external_email_server=default_external_email_server,\n            default_user_rights=default_user_rights,\n            default_custom_report_footer=default_custom_report_footer,\n            company_share_partner=not self.env.ref('base.res_partner_rule').active,\n        )\n        return res\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_external_email_server\", self.default_external_email_server)\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_user_rights\", self.default_user_rights)\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_custom_report_footer\", self.default_custom_report_footer)\n        self.env.ref('base.res_partner_rule').write({'active': not self.company_share_partner})\n\n    @api.multi\n    def open_company(self):\n        return {\n            'type': 'ir.actions.act_window',\n            'name': 'My Company',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_model': 'res.company',\n            'res_id': self.env.user.company_id.id,\n            'target': 'current',\n        }\n    @api.multi\n    def open_default_user(self):\n        action = self.env.ref('base.action_res_users').read()[0]\n        action['res_id'] = self.env.ref('base.default_user').id\n        action['views'] = [[self.env.ref('base.view_users_form').id, 'form']]\n        return action\n\n    @api.model\n    def _prepare_report_view_action(self, template):\n        template_id = self.env.ref(template)\n        return {\n            'type': 'ir.actions.act_window',\n            'res_model': 'ir.ui.view',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_id': template_id.id,\n        }\n\n    @api.multi\n    def edit_external_header(self):\n        if not self.external_report_layout:\n            return False\n        return self._prepare_report_view_action('web.external_layout_' + self.external_report_layout)\n\n    @api.multi\n    def change_report_template(self):\n        self.ensure_one()\n        template = self.env.ref('base.view_company_report_form')\n        return {\n            'name': _('Choose Your Document Layout'),\n            'type': 'ir.actions.act_window',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_id': self.env.user.company_id.id,\n            'res_model': 'res.company',\n            'views': [(template.id, 'form')],\n            'view_id': template.id,\n            'target': 'new',\n        }\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\n\n\nclass ResConfigSettings(models.TransientModel):\n\n    _inherit = 'res.config.settings'\n\n    group_multi_company = fields.Boolean(\"Manage multiple companies\", implied_group='base.group_multi_company')\n    company_id = fields.Many2one('res.company', string='Company', required=True,\n        default=lambda self: self.env.user.company_id)\n    default_user_rights = fields.Boolean(\"Default Access Rights\")\n    default_external_email_server = fields.Boolean(\"External Email Servers\")\n    module_base_import = fields.Boolean(\"Allow users to import data from CSV/XLS/XLSX/ODS files\")\n    module_google_calendar = fields.Boolean(\n        string='Allow the users to synchronize their calendar  with Google Calendar')\n    module_google_drive = fields.Boolean(\"Attach Google documents to any record\")\n    module_google_spreadsheet = fields.Boolean(\"Google Spreadsheet\")\n    module_auth_oauth = fields.Boolean(\"Use external authentication providers (OAuth)\")\n    module_auth_ldap = fields.Boolean(\"LDAP Authentication\")\n    module_base_gengo = fields.Boolean(\"Translate Your Website with Gengo\")\n    module_inter_company_rules = fields.Boolean(\"Manage Inter Company\")\n    module_pad = fields.Boolean(\"Collaborative Pads\")\n    module_voip = fields.Boolean(\"Asterisk (VoIP)\")\n    company_share_partner = fields.Boolean(string='Share partners to all companies',\n        help=\"Share your partners to all companies defined in your instance.\\n\"\n             \" * Checked : Partners are visible for every companies, even if a company is defined on the partner.\\n\"\n             \" * Unchecked : Each company can see only its partner (partners where company is defined). Partners not related to a company are visible for all companies.\")\n    default_custom_report_footer = fields.Boolean(\"Custom Report Footer\")\n    report_footer = fields.Text(related=\"company_id.report_footer\", string='Custom Report Footer', help=\"Footer text displayed at the bottom of all reports.\")\n    group_multi_currency = fields.Boolean(string='Multi-Currencies',\n            implied_group='base.group_multi_currency',\n            help=\"Allows to work in a multi currency environment\")\n    paperformat_id = fields.Many2one(related=\"company_id.paperformat_id\", string='Paper format')\n    external_report_layout = fields.Selection(related=\"company_id.external_report_layout\")\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        params = self.env['ir.config_parameter'].sudo()\n        default_external_email_server = params.get_param('base_setup.default_external_email_server', default=False)\n        default_user_rights = params.get_param('base_setup.default_user_rights', default=False)\n        default_custom_report_footer = params.get_param('base_setup.default_custom_report_footer', default=False)\n        res.update(\n            default_external_email_server=default_external_email_server,\n            default_user_rights=default_user_rights,\n            default_custom_report_footer=default_custom_report_footer,\n            company_share_partner=not self.env.ref('base.res_partner_rule').active,\n        )\n        return res\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_external_email_server\", self.default_external_email_server)\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_user_rights\", self.default_user_rights)\n        self.env['ir.config_parameter'].sudo().set_param(\"base_setup.default_custom_report_footer\", self.default_custom_report_footer)\n        self.env.ref('base.res_partner_rule').write({'active': not self.company_share_partner})\n\n    @api.multi\n    def open_company(self):\n        return {\n            'type': 'ir.actions.act_window',\n            'name': 'My Company',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_model': 'res.company',\n            'res_id': self.env.user.company_id.id,\n            'target': 'current',\n        }\n    @api.multi\n    def open_default_user(self):\n        action = self.env.ref('base.action_res_users').read()[0]\n        action['res_id'] = self.env.ref('base.default_user').id\n        action['views'] = [[self.env.ref('base.view_users_form').id, 'form']]\n        return action\n\n    @api.model\n    def _prepare_report_view_action(self, template):\n        template_id = self.env.ref(template)\n        return {\n            'type': 'ir.actions.act_window',\n            'res_model': 'ir.ui.view',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_id': template_id.id,\n        }\n\n    @api.multi\n    def edit_external_header(self):\n        if not self.external_report_layout:\n            return False\n        return self._prepare_report_view_action('web.external_layout_' + self.external_report_layout)\n\n    @api.multi\n    def change_report_template(self):\n        self.ensure_one()\n        template = self.env.ref('base.view_company_report_form')\n        return {\n            'name': _('Choose Your Document Layout'),\n            'type': 'ir.actions.act_window',\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_id': self.env.user.company_id.id,\n            'res_model': 'res.company',\n            'views': [(template.id, 'form')],\n            'view_id': template.id,\n            'target': 'new',\n        }\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_config_settings.py", "id": "667bce5efc5cbcecdbb372842e08e079", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/base_setup/models/res_config_settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
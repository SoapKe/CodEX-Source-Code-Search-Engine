{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    parse_duration,\n)\n\n\nclass KontrTubeIE(InfoExtractor):\n    IE_NAME = 'kontrtube'\n    IE_DESC = 'KontrTube.ru - \u0422\u0440\u0443\u0431\u0430 \u0437\u043e\u0432\u0451\u0442'\n    _VALID_URL = r'https?://(?:www\\.)?kontrtube\\.ru/videos/(?P<id>\\d+)/(?P<display_id>[^/]+)/'\n\n    _TEST = {\n        'url': 'http://www.kontrtube.ru/videos/2678/nad-olimpiyskoy-derevney-v-sochi-podnyat-rossiyskiy-flag/',\n        'md5': '975a991a4926c9a85f383a736a2e6b80',\n        'info_dict': {\n            'id': '2678',\n            'display_id': 'nad-olimpiyskoy-derevney-v-sochi-podnyat-rossiyskiy-flag',\n            'ext': 'mp4',\n            'title': '\u041d\u0430\u0434 \u043e\u043b\u0438\u043c\u043f\u0438\u0439\u0441\u043a\u043e\u0439 \u0434\u0435\u0440\u0435\u0432\u043d\u0435\u0439 \u0432 \u0421\u043e\u0447\u0438 \u043f\u043e\u0434\u043d\u044f\u0442 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0439 \u0444\u043b\u0430\u0433',\n            'description': 'md5:80edc4c613d5887ae8ccf1d59432be41',\n            'thumbnail': 'http://www.kontrtube.ru/contents/videos_screenshots/2000/2678/preview.mp4.jpg',\n            'duration': 270,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(\n            url, display_id, 'Downloading page')\n\n        video_url = self._search_regex(\n            r\"video_url\\s*:\\s*'(.+?)/?',\", webpage, 'video URL')\n        thumbnail = self._search_regex(\n            r\"preview_url\\s*:\\s*'(.+?)/?',\", webpage, 'thumbnail', fatal=False)\n        title = self._html_search_regex(\n            r'(?s)<h2>(.+?)</h2>', webpage, 'title')\n        description = self._html_search_meta(\n            'description', webpage, 'description')\n\n        duration = self._search_regex(\n            r'\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c: <em>([^<]+)</em>', webpage, 'duration', fatal=False)\n        if duration:\n            duration = parse_duration(duration.replace('\u043c\u0438\u043d', 'min').replace('\u0441\u0435\u043a', 'sec'))\n\n        view_count = self._search_regex(\n            r'\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432: <em>([^<]+)</em>',\n            webpage, 'view count', fatal=False)\n        if view_count:\n            view_count = int_or_none(view_count.replace(' ', ''))\n\n        comment_count = int_or_none(self._search_regex(\n            r'\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \\((\\d+)\\)<', webpage, ' comment count', fatal=False))\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'view_count': int_or_none(view_count),\n            'comment_count': int_or_none(comment_count),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    parse_duration,\n)\n\n\nclass KontrTubeIE(InfoExtractor):\n    IE_NAME = 'kontrtube'\n    IE_DESC = 'KontrTube.ru - \u0422\u0440\u0443\u0431\u0430 \u0437\u043e\u0432\u0451\u0442'\n    _VALID_URL = r'https?://(?:www\\.)?kontrtube\\.ru/videos/(?P<id>\\d+)/(?P<display_id>[^/]+)/'\n\n    _TEST = {\n        'url': 'http://www.kontrtube.ru/videos/2678/nad-olimpiyskoy-derevney-v-sochi-podnyat-rossiyskiy-flag/',\n        'md5': '975a991a4926c9a85f383a736a2e6b80',\n        'info_dict': {\n            'id': '2678',\n            'display_id': 'nad-olimpiyskoy-derevney-v-sochi-podnyat-rossiyskiy-flag',\n            'ext': 'mp4',\n            'title': '\u041d\u0430\u0434 \u043e\u043b\u0438\u043c\u043f\u0438\u0439\u0441\u043a\u043e\u0439 \u0434\u0435\u0440\u0435\u0432\u043d\u0435\u0439 \u0432 \u0421\u043e\u0447\u0438 \u043f\u043e\u0434\u043d\u044f\u0442 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0439 \u0444\u043b\u0430\u0433',\n            'description': 'md5:80edc4c613d5887ae8ccf1d59432be41',\n            'thumbnail': 'http://www.kontrtube.ru/contents/videos_screenshots/2000/2678/preview.mp4.jpg',\n            'duration': 270,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(\n            url, display_id, 'Downloading page')\n\n        video_url = self._search_regex(\n            r\"video_url\\s*:\\s*'(.+?)/?',\", webpage, 'video URL')\n        thumbnail = self._search_regex(\n            r\"preview_url\\s*:\\s*'(.+?)/?',\", webpage, 'thumbnail', fatal=False)\n        title = self._html_search_regex(\n            r'(?s)<h2>(.+?)</h2>', webpage, 'title')\n        description = self._html_search_meta(\n            'description', webpage, 'description')\n\n        duration = self._search_regex(\n            r'\u0414\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c: <em>([^<]+)</em>', webpage, 'duration', fatal=False)\n        if duration:\n            duration = parse_duration(duration.replace('\u043c\u0438\u043d', 'min').replace('\u0441\u0435\u043a', 'sec'))\n\n        view_count = self._search_regex(\n            r'\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432: <em>([^<]+)</em>',\n            webpage, 'view count', fatal=False)\n        if view_count:\n            view_count = int_or_none(view_count.replace(' ', ''))\n\n        comment_count = int_or_none(self._search_regex(\n            r'\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \\((\\d+)\\)<', webpage, ' comment count', fatal=False))\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'view_count': int_or_none(view_count),\n            'comment_count': int_or_none(comment_count),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "kontrtube.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/kontrtube.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
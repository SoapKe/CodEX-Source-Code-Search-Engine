{"author": "scikit-learn", "code": "\n\n\nfrom __future__ import print_function\n\nimport json\nimport re\nimport sys\n\ntry:\n    from urllib.request import urlopen\nexcept ImportError:\n    \n    from urllib import urlopen\n\nfrom distutils.version import LooseVersion\n\n\ndef json_urlread(url):\n    try:\n        return json.loads(urlopen(url).read().decode('utf8'))\n    except Exception:\n        print('Error reading', url, file=sys.stderr)\n        raise\n\n\ndef human_readable_data_quantity(quantity, multiple=1024):\n    \n    if quantity == 0:\n        quantity = +0\n    SUFFIXES = [\"B\"] + [i + {1000: \"B\", 1024: \"iB\"}[multiple]\n                        for i in \"KMGTPEZY\"]\n    for suffix in SUFFIXES:\n        if quantity < multiple or suffix == SUFFIXES[-1]:\n            if suffix == SUFFIXES[0]:\n                return \"%d %s\" % (quantity, suffix)\n            else:\n                return \"%.1f %s\" % (quantity, suffix)\n        else:\n            quantity /= multiple\n\n\ndef get_pdf_size(version):\n    api_url = ROOT_URL + '%s/_downloads' % version\n    for path_details in json_urlread(api_url):\n        if path_details['name'] == 'scikit-learn-docs.pdf':\n            return human_readable_data_quantity(path_details['size'], 1000)\n\n\nheading = 'Available documentation for Scikit-learn'\nprint(heading)\nprint('=' * len(heading))\nprint()\nprint('Web-based documentation is available for versions listed below:')\nprint()\n\nROOT_URL = 'https://api.github.com/repos/scikit-learn/scikit-learn.github.io/contents/'  \nRAW_FMT = 'https://raw.githubusercontent.com/scikit-learn/scikit-learn.github.io/master/%s/documentation.html'  \nVERSION_RE = re.compile(r\"\\bVERSION:\\s*'([^']+)'\")\nNAMED_DIRS = ['dev', 'stable']\n\n\ndirs = {}\nsymlinks = {}\nroot_listing = json_urlread(ROOT_URL)\nfor path_details in root_listing:\n    name = path_details['name']\n    if not (name[:1].isdigit() or name in NAMED_DIRS):\n        continue\n    if path_details['type'] == 'dir':\n        html = urlopen(RAW_FMT % name).read().decode('utf8')\n        version_num = VERSION_RE.search(html).group(1)\n        pdf_size = get_pdf_size(name)\n        dirs[name] = (version_num, pdf_size)\n\n    if path_details['type'] == 'symlink':\n        symlinks[name] = json_urlread(path_details['_links']['self'])['target']\n\n\n\nfor src, dst in symlinks.items():\n    if dst in dirs:\n        dirs[src] = dirs[dst]\n\n\nseen = set()\nfor name in (NAMED_DIRS +\n             sorted((k for k in dirs if k[:1].isdigit()),\n                    key=LooseVersion, reverse=True)):\n    version_num, pdf_size = dirs[name]\n    if version_num in seen:\n        \n        continue\n    else:\n        seen.add(version_num)\n    name_display = '' if name[:1].isdigit() else ' (%s)' % name\n    path = 'http://scikit-learn.org/%s' % name\n    out = ('* `Scikit-learn %s%s documentation <%s/documentation.html>`_'\n           % (version_num, name_display, path))\n    if pdf_size is not None:\n        out += (' (`PDF %s <%s/_downloads/scikit-learn-docs.pdf>`_)'\n                % (pdf_size, path))\n    print(out)\n", "comments": "   usr bin env python3    list available versions documentation    python 2    https   stackoverflow com questions 1094841 reusable library get human readable version file size    noqa    noqa    gather data version directory  including symlinks    symlinks data target    output order  dev  stable  decreasing version    symlink came first ", "content": "#!/usr/bin/env python3\n\n# List all available versions of the documentation\nfrom __future__ import print_function\n\nimport json\nimport re\nimport sys\n\ntry:\n    from urllib.request import urlopen\nexcept ImportError:\n    # Python 2\n    from urllib import urlopen\n\nfrom distutils.version import LooseVersion\n\n\ndef json_urlread(url):\n    try:\n        return json.loads(urlopen(url).read().decode('utf8'))\n    except Exception:\n        print('Error reading', url, file=sys.stderr)\n        raise\n\n\ndef human_readable_data_quantity(quantity, multiple=1024):\n    # https://stackoverflow.com/questions/1094841/reusable-library-to-get-human-readable-version-of-file-size\n    if quantity == 0:\n        quantity = +0\n    SUFFIXES = [\"B\"] + [i + {1000: \"B\", 1024: \"iB\"}[multiple]\n                        for i in \"KMGTPEZY\"]\n    for suffix in SUFFIXES:\n        if quantity < multiple or suffix == SUFFIXES[-1]:\n            if suffix == SUFFIXES[0]:\n                return \"%d %s\" % (quantity, suffix)\n            else:\n                return \"%.1f %s\" % (quantity, suffix)\n        else:\n            quantity /= multiple\n\n\ndef get_pdf_size(version):\n    api_url = ROOT_URL + '%s/_downloads' % version\n    for path_details in json_urlread(api_url):\n        if path_details['name'] == 'scikit-learn-docs.pdf':\n            return human_readable_data_quantity(path_details['size'], 1000)\n\n\nheading = 'Available documentation for Scikit-learn'\nprint(heading)\nprint('=' * len(heading))\nprint()\nprint('Web-based documentation is available for versions listed below:')\nprint()\n\nROOT_URL = 'https://api.github.com/repos/scikit-learn/scikit-learn.github.io/contents/'  # noqa\nRAW_FMT = 'https://raw.githubusercontent.com/scikit-learn/scikit-learn.github.io/master/%s/documentation.html'  # noqa\nVERSION_RE = re.compile(r\"\\bVERSION:\\s*'([^']+)'\")\nNAMED_DIRS = ['dev', 'stable']\n\n# Gather data for each version directory, including symlinks\ndirs = {}\nsymlinks = {}\nroot_listing = json_urlread(ROOT_URL)\nfor path_details in root_listing:\n    name = path_details['name']\n    if not (name[:1].isdigit() or name in NAMED_DIRS):\n        continue\n    if path_details['type'] == 'dir':\n        html = urlopen(RAW_FMT % name).read().decode('utf8')\n        version_num = VERSION_RE.search(html).group(1)\n        pdf_size = get_pdf_size(name)\n        dirs[name] = (version_num, pdf_size)\n\n    if path_details['type'] == 'symlink':\n        symlinks[name] = json_urlread(path_details['_links']['self'])['target']\n\n\n# Symlinks should have same data as target\nfor src, dst in symlinks.items():\n    if dst in dirs:\n        dirs[src] = dirs[dst]\n\n# Output in order: dev, stable, decreasing other version\nseen = set()\nfor name in (NAMED_DIRS +\n             sorted((k for k in dirs if k[:1].isdigit()),\n                    key=LooseVersion, reverse=True)):\n    version_num, pdf_size = dirs[name]\n    if version_num in seen:\n        # symlink came first\n        continue\n    else:\n        seen.add(version_num)\n    name_display = '' if name[:1].isdigit() else ' (%s)' % name\n    path = 'http://scikit-learn.org/%s' % name\n    out = ('* `Scikit-learn %s%s documentation <%s/documentation.html>`_'\n           % (version_num, name_display, path))\n    if pdf_size is not None:\n        out += (' (`PDF %s <%s/_downloads/scikit-learn-docs.pdf>`_)'\n                % (pdf_size, path))\n    print(out)\n", "description": "scikit-learn: machine learning in Python", "file_name": "list_versions.py", "id": "c9ef03203facb3c1fc8af0c289bdbe90", "language": "Python", "project_name": "scikit-learn", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/scikit-learn-scikit-learn/scikit-learn-scikit-learn-94ed5a8/build_tools/circle/list_versions.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:58:59Z", "url": "https://github.com/scikit-learn/scikit-learn", "wiki": true}
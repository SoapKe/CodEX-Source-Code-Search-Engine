{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    float_or_none,\n    try_get,\n)\n\n\nclass AliExpressLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://live\\.aliexpress\\.com/live/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://live.aliexpress.com/live/2800002704436634',\n        'md5': 'e729e25d47c5e557f2630eaf99b740a5',\n        'info_dict': {\n            'id': '2800002704436634',\n            'ext': 'mp4',\n            'title': 'CASIMA7.22',\n            'thumbnail': r're:http://.*\\.jpg',\n            'uploader': 'CASIMA Official Store',\n            'timestamp': 1500717600,\n            'upload_date': '20170722',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        data = self._parse_json(\n            self._search_regex(\n                r'(?s)runParams\\s*=\\s*({.+?})\\s*;?\\s*var',\n                webpage, 'runParams'),\n            video_id)\n\n        title = data['title']\n\n        formats = self._extract_m3u8_formats(\n            data['replyStreamUrl'], video_id, 'mp4',\n            entry_protocol='m3u8_native', m3u8_id='hls')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': data.get('coverUrl'),\n            'uploader': try_get(\n                data, lambda x: x['followBar']['name'], compat_str),\n            'timestamp': float_or_none(data.get('startTimeLong'), scale=1000),\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    float_or_none,\n    try_get,\n)\n\n\nclass AliExpressLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://live\\.aliexpress\\.com/live/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://live.aliexpress.com/live/2800002704436634',\n        'md5': 'e729e25d47c5e557f2630eaf99b740a5',\n        'info_dict': {\n            'id': '2800002704436634',\n            'ext': 'mp4',\n            'title': 'CASIMA7.22',\n            'thumbnail': r're:http://.*\\.jpg',\n            'uploader': 'CASIMA Official Store',\n            'timestamp': 1500717600,\n            'upload_date': '20170722',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        data = self._parse_json(\n            self._search_regex(\n                r'(?s)runParams\\s*=\\s*({.+?})\\s*;?\\s*var',\n                webpage, 'runParams'),\n            video_id)\n\n        title = data['title']\n\n        formats = self._extract_m3u8_formats(\n            data['replyStreamUrl'], video_id, 'mp4',\n            entry_protocol='m3u8_native', m3u8_id='hls')\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': data.get('coverUrl'),\n            'uploader': try_get(\n                data, lambda x: x['followBar']['name'], compat_str),\n            'timestamp': float_or_none(data.get('startTimeLong'), scale=1000),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "aliexpress.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/aliexpress.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
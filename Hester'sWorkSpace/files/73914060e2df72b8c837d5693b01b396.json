{"author": "rg3", "code": "\n\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass RadioBremenIE(InfoExtractor):\n    _VALID_URL = r'http?://(?:www\\.)?radiobremen\\.de/mediathek/(?:index\\.html)?\\?id=(?P<id>[0-9]+)'\n    IE_NAME = 'radiobremen'\n\n    _TEST = {\n        'url': 'http://www.radiobremen.de/mediathek/?id=141876',\n        'info_dict': {\n            'id': '141876',\n            'ext': 'mp4',\n            'duration': 178,\n            'width': 512,\n            'title': 'Druck auf Patrick \u00d6zt\u00fcrk',\n            'thumbnail': r're:https?://.*\\.jpg$',\n            'description': 'Gegen den SPD-B\u00fcrgerschaftsabgeordneten Patrick \u00d6zt\u00fcrk wird wegen Beihilfe zum gewerbsm\u00e4\u00dfigen Betrug ermittelt. Am Donnerstagabend sollte er dem Vorstand des SPD-Unterbezirks Bremerhaven dazu Rede und Antwort stehen.',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        meta_url = 'http://www.radiobremen.de/apps/php/mediathek/metadaten.php?id=%s' % video_id\n        meta_doc = self._download_webpage(\n            meta_url, video_id, 'Downloading metadata')\n        title = self._html_search_regex(\n            r'<h1.*>(?P<title>.+)</h1>', meta_doc, 'title')\n        description = self._html_search_regex(\n            r'<p>(?P<description>.*)</p>', meta_doc, 'description', fatal=False)\n        duration = parse_duration(self._html_search_regex(\n            r'L&auml;nge:</td>\\s+<td>(?P<duration>[0-9]+:[0-9]+)</td>',\n            meta_doc, 'duration', fatal=False))\n\n        page_doc = self._download_webpage(\n            url, video_id, 'Downloading video information')\n        mobj = re.search(\n            r\"ardformatplayerclassic\\(\\'playerbereich\\',\\'(?P<width>[0-9]+)\\',\\'.*\\',\\'(?P<video_id>[0-9]+)\\',\\'(?P<secret>[0-9]+)\\',\\'(?P<thumbnail>.+)\\',\\'\\'\\)\",\n            page_doc)\n        video_url = (\n            \"http://dl-ondemand.radiobremen.de/mediabase/%s/%s_%s_%s.mp4\" %\n            (video_id, video_id, mobj.group(\"secret\"), mobj.group('width')))\n\n        formats = [{\n            'url': video_url,\n            'ext': 'mp4',\n            'width': int(mobj.group('width')),\n        }]\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'formats': formats,\n            'thumbnail': mobj.group('thumbnail'),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\n\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass RadioBremenIE(InfoExtractor):\n    _VALID_URL = r'http?://(?:www\\.)?radiobremen\\.de/mediathek/(?:index\\.html)?\\?id=(?P<id>[0-9]+)'\n    IE_NAME = 'radiobremen'\n\n    _TEST = {\n        'url': 'http://www.radiobremen.de/mediathek/?id=141876',\n        'info_dict': {\n            'id': '141876',\n            'ext': 'mp4',\n            'duration': 178,\n            'width': 512,\n            'title': 'Druck auf Patrick \u00d6zt\u00fcrk',\n            'thumbnail': r're:https?://.*\\.jpg$',\n            'description': 'Gegen den SPD-B\u00fcrgerschaftsabgeordneten Patrick \u00d6zt\u00fcrk wird wegen Beihilfe zum gewerbsm\u00e4\u00dfigen Betrug ermittelt. Am Donnerstagabend sollte er dem Vorstand des SPD-Unterbezirks Bremerhaven dazu Rede und Antwort stehen.',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        meta_url = 'http://www.radiobremen.de/apps/php/mediathek/metadaten.php?id=%s' % video_id\n        meta_doc = self._download_webpage(\n            meta_url, video_id, 'Downloading metadata')\n        title = self._html_search_regex(\n            r'<h1.*>(?P<title>.+)</h1>', meta_doc, 'title')\n        description = self._html_search_regex(\n            r'<p>(?P<description>.*)</p>', meta_doc, 'description', fatal=False)\n        duration = parse_duration(self._html_search_regex(\n            r'L&auml;nge:</td>\\s+<td>(?P<duration>[0-9]+:[0-9]+)</td>',\n            meta_doc, 'duration', fatal=False))\n\n        page_doc = self._download_webpage(\n            url, video_id, 'Downloading video information')\n        mobj = re.search(\n            r\"ardformatplayerclassic\\(\\'playerbereich\\',\\'(?P<width>[0-9]+)\\',\\'.*\\',\\'(?P<video_id>[0-9]+)\\',\\'(?P<secret>[0-9]+)\\',\\'(?P<thumbnail>.+)\\',\\'\\'\\)\",\n            page_doc)\n        video_url = (\n            \"http://dl-ondemand.radiobremen.de/mediabase/%s/%s_%s_%s.mp4\" %\n            (video_id, video_id, mobj.group(\"secret\"), mobj.group('width')))\n\n        formats = [{\n            'url': video_url,\n            'ext': 'mp4',\n            'width': int(mobj.group('width')),\n        }]\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'formats': formats,\n            'thumbnail': mobj.group('thumbnail'),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "radiobremen.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/radiobremen.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
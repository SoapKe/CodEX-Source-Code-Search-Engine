{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    unified_strdate,\n    update_url_query,\n    urlencode_postdata,\n)\n\n\nclass MediciIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?medici\\.tv/\n    _TEST = {\n        'url': 'http://www.medici.tv/\n        'md5': '004c21bb0a57248085b6ff3fec72719d',\n        'info_dict': {\n            'id': '3059',\n            'ext': 'flv',\n            'title': 'Daniel Harding conducts the Verbier Festival Music Camp \\u2013 With Frans Helmerson',\n            'description': 'md5:322a1e952bafb725174fd8c1a8212f58',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20170408',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        \n        self._download_webpage(url, video_id)\n\n        MEDICI_URL = 'http://www.medici.tv/'\n\n        data = self._download_json(\n            MEDICI_URL, video_id,\n            data=urlencode_postdata({\n                'json': 'true',\n                'page': '/%s' % video_id,\n                'timezone_offset': -420,\n            }), headers={\n                'X-CSRFToken': self._get_cookies(url)['csrftoken'].value,\n                'X-Requested-With': 'XMLHttpRequest',\n                'Referer': MEDICI_URL,\n                'Content-Type': 'application/x-www-form-urlencoded',\n            })\n\n        video = data['video']['videos']['video1']\n\n        title = video.get('nom') or data['title']\n\n        video_id = video.get('id') or video_id\n        formats = self._extract_f4m_formats(\n            update_url_query(video['url_akamai'], {\n                'hdcore': '3.1.0',\n                'plugin=aasp': '3.1.0.43.124',\n            }), video_id, f4m_id='hds')\n\n        description = data.get('meta_description')\n        thumbnail = video.get('url_thumbnail') or data.get('main_image')\n        upload_date = unified_strdate(data['video'].get('date'))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n#!/(?P<id>[^?#&]+)'\n#!/daniel-harding-frans-helmerson-verbier-festival-music-camp',\n# Sets csrftoken cookie\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    unified_strdate,\n    update_url_query,\n    urlencode_postdata,\n)\n\n\nclass MediciIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?medici\\.tv/#!/(?P<id>[^?#&]+)'\n    _TEST = {\n        'url': 'http://www.medici.tv/#!/daniel-harding-frans-helmerson-verbier-festival-music-camp',\n        'md5': '004c21bb0a57248085b6ff3fec72719d',\n        'info_dict': {\n            'id': '3059',\n            'ext': 'flv',\n            'title': 'Daniel Harding conducts the Verbier Festival Music Camp \\u2013 With Frans Helmerson',\n            'description': 'md5:322a1e952bafb725174fd8c1a8212f58',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20170408',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        # Sets csrftoken cookie\n        self._download_webpage(url, video_id)\n\n        MEDICI_URL = 'http://www.medici.tv/'\n\n        data = self._download_json(\n            MEDICI_URL, video_id,\n            data=urlencode_postdata({\n                'json': 'true',\n                'page': '/%s' % video_id,\n                'timezone_offset': -420,\n            }), headers={\n                'X-CSRFToken': self._get_cookies(url)['csrftoken'].value,\n                'X-Requested-With': 'XMLHttpRequest',\n                'Referer': MEDICI_URL,\n                'Content-Type': 'application/x-www-form-urlencoded',\n            })\n\n        video = data['video']['videos']['video1']\n\n        title = video.get('nom') or data['title']\n\n        video_id = video.get('id') or video_id\n        formats = self._extract_f4m_formats(\n            update_url_query(video['url_akamai'], {\n                'hdcore': '3.1.0',\n                'plugin=aasp': '3.1.0.43.124',\n            }), video_id, f4m_id='hds')\n\n        description = data.get('meta_description')\n        thumbnail = video.get('url_thumbnail') or data.get('main_image')\n        upload_date = unified_strdate(data['video'].get('date'))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "medici.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/medici.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
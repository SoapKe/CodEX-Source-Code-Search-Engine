{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\nimport time\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    HEADRequest,\n)\n\n\nclass CultureUnpluggedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?cultureunplugged\\.com/documentary/watch-online/play/(?P<id>\\d+)(?:/(?P<display_id>[^/]+))?'\n    _TESTS = [{\n        'url': 'http://www.cultureunplugged.com/documentary/watch-online/play/53662/The-Next--Best-West',\n        'md5': 'ac6c093b089f7d05e79934dcb3d228fc',\n        'info_dict': {\n            'id': '53662',\n            'display_id': 'The-Next--Best-West',\n            'ext': 'mp4',\n            'title': 'The Next, Best West',\n            'description': 'md5:0423cd00833dea1519cf014e9d0903b1',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'creator': 'Coldstream Creative',\n            'duration': 2203,\n            'view_count': int,\n        }\n    }, {\n        'url': 'http://www.cultureunplugged.com/documentary/watch-online/play/53662',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id') or video_id\n\n        \n        self._request_webpage(HEADRequest(\n            'http://www.cultureunplugged.com/setClientTimezone.php?timeOffset=%d' % -(time.timezone / 3600)), display_id)\n        movie_data = self._download_json(\n            'http://www.cultureunplugged.com/movie-data/cu-%s.json' % video_id, display_id)\n\n        video_url = movie_data['url']\n        title = movie_data['title']\n\n        description = movie_data.get('synopsis')\n        creator = movie_data.get('producer')\n        duration = int_or_none(movie_data.get('duration'))\n        view_count = int_or_none(movie_data.get('views'))\n\n        thumbnails = [{\n            'url': movie_data['%s_thumb' % size],\n            'id': size,\n            'preference': preference,\n        } for preference, size in enumerate((\n            'small', 'large')) if movie_data.get('%s_thumb' % size)]\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'creator': creator,\n            'duration': duration,\n            'view_count': view_count,\n            'thumbnails': thumbnails,\n        }\n", "comments": "# request setClientTimezone.php to get PHPSESSID cookie which is need to get valid json data in the next request\n", "content": "from __future__ import unicode_literals\n\nimport re\nimport time\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    HEADRequest,\n)\n\n\nclass CultureUnpluggedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?cultureunplugged\\.com/documentary/watch-online/play/(?P<id>\\d+)(?:/(?P<display_id>[^/]+))?'\n    _TESTS = [{\n        'url': 'http://www.cultureunplugged.com/documentary/watch-online/play/53662/The-Next--Best-West',\n        'md5': 'ac6c093b089f7d05e79934dcb3d228fc',\n        'info_dict': {\n            'id': '53662',\n            'display_id': 'The-Next--Best-West',\n            'ext': 'mp4',\n            'title': 'The Next, Best West',\n            'description': 'md5:0423cd00833dea1519cf014e9d0903b1',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'creator': 'Coldstream Creative',\n            'duration': 2203,\n            'view_count': int,\n        }\n    }, {\n        'url': 'http://www.cultureunplugged.com/documentary/watch-online/play/53662',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id') or video_id\n\n        # request setClientTimezone.php to get PHPSESSID cookie which is need to get valid json data in the next request\n        self._request_webpage(HEADRequest(\n            'http://www.cultureunplugged.com/setClientTimezone.php?timeOffset=%d' % -(time.timezone / 3600)), display_id)\n        movie_data = self._download_json(\n            'http://www.cultureunplugged.com/movie-data/cu-%s.json' % video_id, display_id)\n\n        video_url = movie_data['url']\n        title = movie_data['title']\n\n        description = movie_data.get('synopsis')\n        creator = movie_data.get('producer')\n        duration = int_or_none(movie_data.get('duration'))\n        view_count = int_or_none(movie_data.get('views'))\n\n        thumbnails = [{\n            'url': movie_data['%s_thumb' % size],\n            'id': size,\n            'preference': preference,\n        } for preference, size in enumerate((\n            'small', 'large')) if movie_data.get('%s_thumb' % size)]\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'creator': creator,\n            'duration': duration,\n            'view_count': view_count,\n            'thumbnails': thumbnails,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "cultureunplugged.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/cultureunplugged.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
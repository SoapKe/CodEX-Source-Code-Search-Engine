{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_stringgroup\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of StringGroup Avi RESTful Object\ndescription:\n    - This module is used to configure StringGroup object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    kv:\n        description:\n            - Configure key value in the string group.\n    name:\n        description:\n            - Name of the string group.\n        required: true\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of stringgroup.\n            - Enum options - SG_TYPE_STRING, SG_TYPE_KEYVAL.\n            - Default value when not specified in API or module is interpreted by Avi Controller as SG_TYPE_STRING.\n        required: true\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the string group.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: StringGroup (api/stringgroup) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        kv=dict(type='list',),\n        name=dict(type='str', required=True),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'stringgroup',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "        name  create string group configuration     avi stringgroup        controller      controller           password      password           username      username           kv          key  text html         key  text xml         key  text plain         key  text css         key  text javascript         key  application javascript         key  application x javascript         key  application xml         key  application pdf       name  system compressible content types       tenant ref  admin       type  sg type string              module  avi stringgroup author  gaurav rastogi (grastogi avinetworks com)  short description  module setup stringgroup avi restful object description        this module used configure stringgroup object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 4  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       description          description                user defined description object      kv          description                configure key value string group      name          description                name string group          required  true     tenant ref          description                it reference object type tenant      type          description                type stringgroup                enum options   sg type string  sg type keyval                default value specified api module interpreted avi controller sg type string          required  true     url          description                avi controller url object      uuid          description                uuid string group  extends documentation fragment        avi      examples     return       obj      description  stringgroup (api stringgroup) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_stringgroup\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of StringGroup Avi RESTful Object\ndescription:\n    - This module is used to configure StringGroup object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    kv:\n        description:\n            - Configure key value in the string group.\n    name:\n        description:\n            - Name of the string group.\n        required: true\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of stringgroup.\n            - Enum options - SG_TYPE_STRING, SG_TYPE_KEYVAL.\n            - Default value when not specified in API or module is interpreted by Avi Controller as SG_TYPE_STRING.\n        required: true\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the string group.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n  - name: Create a string group configuration\n    avi_stringgroup:\n      controller: '{{ controller }}'\n      password: '{{ password }}'\n      username: '{{ username }}'\n      kv:\n      - key: text/html\n      - key: text/xml\n      - key: text/plain\n      - key: text/css\n      - key: text/javascript\n      - key: application/javascript\n      - key: application/x-javascript\n      - key: application/xml\n      - key: application/pdf\n      name: System-Compressible-Content-Types\n      tenant_ref: admin\n      type: SG_TYPE_STRING\n\"\"\"\n\nRETURN = '''\nobj:\n    description: StringGroup (api/stringgroup) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        kv=dict(type='list',),\n        name=dict(type='str', required=True),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'stringgroup',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_stringgroup.py", "id": "5fb0ed48332db9f3e164426d852ceb8c", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_stringgroup.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "rq", "code": "from rq.cli.helpers import get_redis_from_config\n\nfrom tests import RQTestCase\n\n\nclass TestHelpers(RQTestCase):\n\n    def test_get_redis_from_config(self):\n        \n        settings = {\n            'REDIS_URL': 'redis://localhost:1/1'\n        }\n\n        \n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['db'], 1)\n        self.assertEqual(connection_kwargs['port'], 1)\n\n        settings = {\n            'REDIS_URL': 'redis://localhost:1/1',\n            'REDIS_HOST': 'foo',\n            'REDIS_DB': 2,\n            'REDIS_PORT': 2,\n            'REDIS_PASSWORD': 'bar'\n        }\n\n        \n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['db'], 1)\n        self.assertEqual(connection_kwargs['port'], 1)\n\n        \n        settings['REDIS_URL'] = None\n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['host'], 'foo')\n        self.assertEqual(connection_kwargs['db'], 2)\n        self.assertEqual(connection_kwargs['port'], 2)\n        self.assertEqual(connection_kwargs['password'], 'bar')\n", "comments": "   ensure redis connection params properly parsed       ensure redis url read    ensure redis url preferred    ensure fall back regular connection parameters ", "content": "from rq.cli.helpers import get_redis_from_config\n\nfrom tests import RQTestCase\n\n\nclass TestHelpers(RQTestCase):\n\n    def test_get_redis_from_config(self):\n        \"\"\"Ensure Redis connection params are properly parsed\"\"\"\n        settings = {\n            'REDIS_URL': 'redis://localhost:1/1'\n        }\n\n        # Ensure REDIS_URL is read\n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['db'], 1)\n        self.assertEqual(connection_kwargs['port'], 1)\n\n        settings = {\n            'REDIS_URL': 'redis://localhost:1/1',\n            'REDIS_HOST': 'foo',\n            'REDIS_DB': 2,\n            'REDIS_PORT': 2,\n            'REDIS_PASSWORD': 'bar'\n        }\n\n        # Ensure REDIS_URL is preferred\n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['db'], 1)\n        self.assertEqual(connection_kwargs['port'], 1)\n\n        # Ensure fall back to regular connection parameters\n        settings['REDIS_URL'] = None\n        redis = get_redis_from_config(settings)\n        connection_kwargs = redis.connection_pool.connection_kwargs\n        self.assertEqual(connection_kwargs['host'], 'foo')\n        self.assertEqual(connection_kwargs['db'], 2)\n        self.assertEqual(connection_kwargs['port'], 2)\n        self.assertEqual(connection_kwargs['password'], 'bar')\n", "description": "Simple job queues for Python", "file_name": "test_helpers.py", "id": "311b0b3720c5164a03f3b14045824320", "language": "Python", "project_name": "rq", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rq-rq/rq-rq-936f2f1/tests/test_helpers.py", "save_time": "", "source": "", "update_at": "2018-03-18T06:13:26Z", "url": "https://github.com/rq/rq", "wiki": false}
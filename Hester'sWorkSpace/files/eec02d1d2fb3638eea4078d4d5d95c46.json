{"author": "saltstack", "code": "# -*- coding: utf-8 -*-\n'''\n{{module_name}} state module\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n{{short_description}}\n\n.. versionadded:: {{version}}\n\n:configuration:\n\n    .. code-block:: yaml\n        <your example config>\n\n'''\n\n\nfrom __future__ import absolute_import\nimport logging\n\n\nimport salt.utils.compat\n\n\ntry:\n    \n    {% if depending_libraries %}\n    import {{depending_libraries}}\n    {% endif %}\n    HAS_LIBS = True\n    MISSING_PACKAGE_REASON = None\nexcept ImportError as ie:\n    HAS_LIBS = False\n    MISSING_PACKAGE_REASON = ie.message\n\nlog = logging.getLogger(__name__)\n\n__virtualname__ = '{{virtual_name}}'\n\n\ndef __virtual__():\n    '''\n    Only load this module if dependencies is installed on this minion.\n    '''\n    if HAS_LIBS:\n        return __virtualname__\n    return (False,\n            'The {{module_name}} execution module failed to load:'\n            'import error - {0}.'.format(MISSING_PACKAGE_REASON))\n\n\ndef __init__(opts):\n    \n    salt.utils.compat.pack_dunder(__name__)\n\n\ndef present(name):\n    ret = {'name': name,\n           'changes': {},\n           'result': False,\n           'comment': ''}\n    \n    return ret\n", "comments": "      module name   state module                                       short description       versionadded     version     configuration          code block   yaml          example config          import python libs   future   import absolute import import logging    import salt libs import salt utils compat    import third party libs try         import libs           depending libraries        import   depending libraries          endif        has libs   true     missing package reason   none except importerror ie      has libs   false     missing package reason   ie message  log   logging getlogger(  name  )    virtualname        virtual name      def   virtual  ()              only load module dependencies installed minion                 coding  utf 8        import python libs    import salt libs    import third party libs     import libs        put logic instantiate underlying jobs connections     compare values ", "content": "# -*- coding: utf-8 -*-\n'''\n{{module_name}} state module\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n{{short_description}}\n\n.. versionadded:: {{version}}\n\n:configuration:\n\n    .. code-block:: yaml\n        <your example config>\n\n'''\n\n# Import Python libs\nfrom __future__ import absolute_import\nimport logging\n\n# Import salt libs\nimport salt.utils.compat\n\n# Import third party libs\ntry:\n    #  Import libs...\n    {% if depending_libraries %}\n    import {{depending_libraries}}\n    {% endif %}\n    HAS_LIBS = True\n    MISSING_PACKAGE_REASON = None\nexcept ImportError as ie:\n    HAS_LIBS = False\n    MISSING_PACKAGE_REASON = ie.message\n\nlog = logging.getLogger(__name__)\n\n__virtualname__ = '{{virtual_name}}'\n\n\ndef __virtual__():\n    '''\n    Only load this module if dependencies is installed on this minion.\n    '''\n    if HAS_LIBS:\n        return __virtualname__\n    return (False,\n            'The {{module_name}} execution module failed to load:'\n            'import error - {0}.'.format(MISSING_PACKAGE_REASON))\n\n\ndef __init__(opts):\n    #  Put logic here to instantiate underlying jobs/connections\n    salt.utils.compat.pack_dunder(__name__)\n\n\ndef present(name):\n    ret = {'name': name,\n           'changes': {},\n           'result': False,\n           'comment': ''}\n    #  Compare values\n    return ret\n", "description": "Software to automate the management and configuration of any infrastructure or application at scale. Get access to the Salt software package repository here: ", "file_name": "{{module_name}}.py", "id": "eec02d1d2fb3638eea4078d4d5d95c46", "language": "Python", "project_name": "salt", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/saltstack-salt/saltstack-salt-7dee478/templates/state/salt/states/{{module_name}}.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:15:33Z", "url": "https://github.com/saltstack/salt", "wiki": true}
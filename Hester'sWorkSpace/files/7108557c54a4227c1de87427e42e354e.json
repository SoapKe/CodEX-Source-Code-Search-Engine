{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    unified_timestamp,\n)\n\n\nclass RuvIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ruv\\.is/(?:sarpurinn/[^/]+|node)/(?P<id>[^/]+(?:/\\d+)?)'\n    _TESTS = [{\n        \n        'url': 'http://ruv.is/sarpurinn/ruv-aukaras/fh-valur/20170516',\n        'md5': '66347652f4e13e71936817102acc1724',\n        'info_dict': {\n            'id': '1144499',\n            'display_id': 'fh-valur/20170516',\n            'ext': 'mp4',\n            'title': 'FH - Valur',\n            'description': 'Bein \u00fatsending fr\u00e1 3. leik FH og Vals \u00ed \u00farslitum Ol\u00edsdeildar karla \u00ed handbolta.',\n            'timestamp': 1494963600,\n            'upload_date': '20170516',\n        },\n    }, {\n        \n        'url': 'http://ruv.is/sarpurinn/ras-2/morgunutvarpid/20170619',\n        'md5': '395ea250c8a13e5fdb39d4670ef85378',\n        'info_dict': {\n            'id': '1153630',\n            'display_id': 'morgunutvarpid/20170619',\n            'ext': 'mp3',\n            'title': 'Morgun\u00fatvarpi\u00f0',\n            'description': 'md5:a4cf1202c0a1645ca096b06525915418',\n            'timestamp': 1497855000,\n            'upload_date': '20170619',\n        },\n    }, {\n        'url': 'http://ruv.is/sarpurinn/ruv/frettir/20170614',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ruv.is/node/1151854',\n        'only_matching': True,\n    }, {\n        'url': 'http://ruv.is/sarpurinn/klippa/secret-soltice-hefst-a-morgun',\n        'only_matching': True,\n    }, {\n        'url': 'http://ruv.is/sarpurinn/ras-1/morgunvaktin/20170619',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = self._og_search_title(webpage)\n\n        FIELD_RE = r'video\\.%s\\s*=\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1'\n\n        media_url = self._html_search_regex(\n            FIELD_RE % 'src', webpage, 'video URL', group='url')\n\n        video_id = self._search_regex(\n            r'<link\\b[^>]+\\bhref=[\"\\']https?://www\\.ruv\\.is/node/(\\d+)',\n            webpage, 'video id', default=display_id)\n\n        ext = determine_ext(media_url)\n\n        if ext == 'm3u8':\n            formats = self._extract_m3u8_formats(\n                media_url, video_id, 'mp4', entry_protocol='m3u8_native',\n                m3u8_id='hls')\n        elif ext == 'mp3':\n            formats = [{\n                'format_id': 'mp3',\n                'url': media_url,\n                'vcodec': 'none',\n            }]\n        else:\n            formats = [{\n                'url': media_url,\n            }]\n\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = self._og_search_thumbnail(\n            webpage, default=None) or self._search_regex(\n            FIELD_RE % 'poster', webpage, 'thumbnail', fatal=False)\n        timestamp = unified_timestamp(self._html_search_meta(\n            'article:published_time', webpage, 'timestamp', fatal=False))\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n# m3u8\n# mp3\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    unified_timestamp,\n)\n\n\nclass RuvIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ruv\\.is/(?:sarpurinn/[^/]+|node)/(?P<id>[^/]+(?:/\\d+)?)'\n    _TESTS = [{\n        # m3u8\n        'url': 'http://ruv.is/sarpurinn/ruv-aukaras/fh-valur/20170516',\n        'md5': '66347652f4e13e71936817102acc1724',\n        'info_dict': {\n            'id': '1144499',\n            'display_id': 'fh-valur/20170516',\n            'ext': 'mp4',\n            'title': 'FH - Valur',\n            'description': 'Bein \u00fatsending fr\u00e1 3. leik FH og Vals \u00ed \u00farslitum Ol\u00edsdeildar karla \u00ed handbolta.',\n            'timestamp': 1494963600,\n            'upload_date': '20170516',\n        },\n    }, {\n        # mp3\n        'url': 'http://ruv.is/sarpurinn/ras-2/morgunutvarpid/20170619',\n        'md5': '395ea250c8a13e5fdb39d4670ef85378',\n        'info_dict': {\n            'id': '1153630',\n            'display_id': 'morgunutvarpid/20170619',\n            'ext': 'mp3',\n            'title': 'Morgun\u00fatvarpi\u00f0',\n            'description': 'md5:a4cf1202c0a1645ca096b06525915418',\n            'timestamp': 1497855000,\n            'upload_date': '20170619',\n        },\n    }, {\n        'url': 'http://ruv.is/sarpurinn/ruv/frettir/20170614',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ruv.is/node/1151854',\n        'only_matching': True,\n    }, {\n        'url': 'http://ruv.is/sarpurinn/klippa/secret-soltice-hefst-a-morgun',\n        'only_matching': True,\n    }, {\n        'url': 'http://ruv.is/sarpurinn/ras-1/morgunvaktin/20170619',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = self._og_search_title(webpage)\n\n        FIELD_RE = r'video\\.%s\\s*=\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1'\n\n        media_url = self._html_search_regex(\n            FIELD_RE % 'src', webpage, 'video URL', group='url')\n\n        video_id = self._search_regex(\n            r'<link\\b[^>]+\\bhref=[\"\\']https?://www\\.ruv\\.is/node/(\\d+)',\n            webpage, 'video id', default=display_id)\n\n        ext = determine_ext(media_url)\n\n        if ext == 'm3u8':\n            formats = self._extract_m3u8_formats(\n                media_url, video_id, 'mp4', entry_protocol='m3u8_native',\n                m3u8_id='hls')\n        elif ext == 'mp3':\n            formats = [{\n                'format_id': 'mp3',\n                'url': media_url,\n                'vcodec': 'none',\n            }]\n        else:\n            formats = [{\n                'url': media_url,\n            }]\n\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = self._og_search_thumbnail(\n            webpage, default=None) or self._search_regex(\n            FIELD_RE % 'poster', webpage, 'thumbnail', fatal=False)\n        timestamp = unified_timestamp(self._html_search_meta(\n            'article:published_time', webpage, 'timestamp', fatal=False))\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "ruv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/ruv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
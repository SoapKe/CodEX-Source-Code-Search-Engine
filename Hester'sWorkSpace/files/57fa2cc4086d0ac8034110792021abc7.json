{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestRadixSort(object):\n\n    def test_sort(self):\n        radix_sort = RadixSort()\n        assert_raises(TypeError, radix_sort.sort, None)\n        assert_equal(radix_sort.sort([]), [])\n        array = [128, 256, 164, 8, 2, 148, 212, 242, 244]\n        expected = [2, 8, 128, 148, 164, 212, 242, 244, 256]\n        assert_equal(radix_sort.sort(array), expected)\n        print('Success: test_sort')\n\n\ndef main():\n    test = TestRadixSort()\n    test.test_sort()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestRadixSort(object):\n\n    def test_sort(self):\n        radix_sort = RadixSort()\n        assert_raises(TypeError, radix_sort.sort, None)\n        assert_equal(radix_sort.sort([]), [])\n        array = [128, 256, 164, 8, 2, 148, 212, 242, 244]\n        expected = [2, 8, 128, 148, 164, 212, 242, 244, 256]\n        assert_equal(radix_sort.sort(array), expected)\n        print('Success: test_sort')\n\n\ndef main():\n    test = TestRadixSort()\n    test.test_sort()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_radix_sort.py", "id": "57fa2cc4086d0ac8034110792021abc7", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/sorting_searching/radix_sort/test_radix_sort.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
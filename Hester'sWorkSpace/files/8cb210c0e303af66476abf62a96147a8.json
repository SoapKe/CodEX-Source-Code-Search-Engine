{"author": "odoo", "code": " -*- coding: utf-8 -*-\n\n\n\n Order Point Method:\n    - Order if the virtual stock of today is bellow the min of the defined order point\n\n\nfrom odoo import api, models, tools\n\nimport logging\nimport threading\n\n_logger = logging.getLogger(__name__)\n\n\nclass StockSchedulerCompute(models.TransientModel):\n    _name = 'stock.scheduler.compute'\n    _description = 'Run Scheduler Manually'\n\n    def _procure_calculation_orderpoint(self):\n        with api.Environment.manage():\n             As this function is in a new thread, I need to open a new cursor, because the old one may be closed\n            new_cr = self.pool.cursor()\n            self = self.with_env(self.env(cr=new_cr))\n            scheduler_cron = self.sudo().env.ref('stock.ir_cron_scheduler_action')\n             Avoid to run the scheduler multiple times in the same time\n            try:\n                with tools.mute_logger('odoo.sql_db'):\n                    self._cr.execute(\"SELECT id FROM ir_cron WHERE id = %s FOR UPDATE NOWAIT\", (scheduler_cron.id,))\n            except Exception:\n                _logger.info('Attempt to run procurement scheduler aborted, as already running')\n                self._cr.rollback()\n                self._cr.close()\n                return {}\n\n            for company in self.env.user.company_ids:\n                self.env['procurement.group'].run_scheduler(\n                    use_new_cursor=self._cr.dbname,\n                    company_id=company.id)\n            new_cr.close()\n            return {}\n\n    def procure_calculation(self):\n        threaded_calculation = threading.Thread(target=self._procure_calculation_orderpoint, args=())\n        threaded_calculation.start()\n        return {'type': 'ir.actions.act_window_close'}\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details        order point method          order virtual stock today bellow min defined order point       as function new thread  i need open new cursor  old one may closed    avoid run scheduler multiple times time ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\n#\n# Order Point Method:\n#    - Order if the virtual stock of today is bellow the min of the defined order point\n#\n\nfrom odoo import api, models, tools\n\nimport logging\nimport threading\n\n_logger = logging.getLogger(__name__)\n\n\nclass StockSchedulerCompute(models.TransientModel):\n    _name = 'stock.scheduler.compute'\n    _description = 'Run Scheduler Manually'\n\n    def _procure_calculation_orderpoint(self):\n        with api.Environment.manage():\n            # As this function is in a new thread, I need to open a new cursor, because the old one may be closed\n            new_cr = self.pool.cursor()\n            self = self.with_env(self.env(cr=new_cr))\n            scheduler_cron = self.sudo().env.ref('stock.ir_cron_scheduler_action')\n            # Avoid to run the scheduler multiple times in the same time\n            try:\n                with tools.mute_logger('odoo.sql_db'):\n                    self._cr.execute(\"SELECT id FROM ir_cron WHERE id = %s FOR UPDATE NOWAIT\", (scheduler_cron.id,))\n            except Exception:\n                _logger.info('Attempt to run procurement scheduler aborted, as already running')\n                self._cr.rollback()\n                self._cr.close()\n                return {}\n\n            for company in self.env.user.company_ids:\n                self.env['procurement.group'].run_scheduler(\n                    use_new_cursor=self._cr.dbname,\n                    company_id=company.id)\n            new_cr.close()\n            return {}\n\n    def procure_calculation(self):\n        threaded_calculation = threading.Thread(target=self._procure_calculation_orderpoint, args=())\n        threaded_calculation.start()\n        return {'type': 'ir.actions.act_window_close'}\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "stock_scheduler_compute.py", "id": "8cb210c0e303af66476abf62a96147a8", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/stock/wizard/stock_scheduler_compute.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
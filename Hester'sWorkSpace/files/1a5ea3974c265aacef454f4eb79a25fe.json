{"author": "tgalal", "code": "from .notification_groups import GroupsNotificationProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nclass RemoveGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    \n    TYPE_PARTICIPANT_ADMIN = \"admin\"\n    def __init__(self, _id, _from, timestamp, notify, participant, offline,\n                 subject,\n                 participants):\n        super(RemoveGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant, offline)\n        self.setGroupProps(subject, participants)\n\n    def setGroupProps(self,\n                      subject,\n                      participants):\n\n        assert type(participants) is list, \"Must be a list of jids, got %s instead.\" % type(participants)\n\n        self.subject = subject\n        self.participants = participants\n\n    def getParticipants(self):\n        return self.participants\n\n    def getSubject(self):\n        return self.subject\n\n    def toProtocolTreeNode(self):\n        node = super(RemoveGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        removeNode = ProtocolTreeNode(\"remove\", {\"subject\": self.subject})\n        participants = []\n        for jid in self.getParticipants():\n            pnode = ProtocolTreeNode(\"participant\", {\"jid\": jid})\n            participants.append(pnode)\n\n        removeNode.addChildren(participants)\n        node.addChild(removeNode)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        removeNode = node.getChild(\"remove\")\n        participants = []\n        for p in removeNode.getAllChildren(\"participant\"):\n            participants.append(p[\"jid\"])\n\n        return RemoveGroupsNotificationProtocolEntity(\n            node[\"id\"], node[\"from\"], node[\"t\"], node[\"notify\"], node[\"participant\"], node[\"offline\"],\n            removeNode[\"subject\"], participants\n        )\n", "comments": "     notification notify    notify name    id    id       timestamp    participant    participant jiid       group jid    type  w gp2  mode  none    remove subject    subject      participant jid    participant jid       participant    remove    notification          ", "content": "from .notification_groups import GroupsNotificationProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nclass RemoveGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    '''\n<notification notify=\"{{NOTIFY_NAME}}\" id=\"{{id}}\" t=\"{{TIMESTAMP}}\" participant=\"{{participant_jiid}}\" from=\"{{group_jid}}\" type=\"w:gp2\" mode=\"none\">\n<remove subject=\"{{subject}}\">\n<participant jid=\"{{participant_jid}}\">\n</participant>\n</remove>\n</notification>\n    '''\n    TYPE_PARTICIPANT_ADMIN = \"admin\"\n    def __init__(self, _id, _from, timestamp, notify, participant, offline,\n                 subject,\n                 participants):\n        super(RemoveGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant, offline)\n        self.setGroupProps(subject, participants)\n\n    def setGroupProps(self,\n                      subject,\n                      participants):\n\n        assert type(participants) is list, \"Must be a list of jids, got %s instead.\" % type(participants)\n\n        self.subject = subject\n        self.participants = participants\n\n    def getParticipants(self):\n        return self.participants\n\n    def getSubject(self):\n        return self.subject\n\n    def toProtocolTreeNode(self):\n        node = super(RemoveGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        removeNode = ProtocolTreeNode(\"remove\", {\"subject\": self.subject})\n        participants = []\n        for jid in self.getParticipants():\n            pnode = ProtocolTreeNode(\"participant\", {\"jid\": jid})\n            participants.append(pnode)\n\n        removeNode.addChildren(participants)\n        node.addChild(removeNode)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        removeNode = node.getChild(\"remove\")\n        participants = []\n        for p in removeNode.getAllChildren(\"participant\"):\n            participants.append(p[\"jid\"])\n\n        return RemoveGroupsNotificationProtocolEntity(\n            node[\"id\"], node[\"from\"], node[\"t\"], node[\"notify\"], node[\"participant\"], node[\"offline\"],\n            removeNode[\"subject\"], participants\n        )\n", "description": "The python WhatsApp library", "file_name": "notification_groups_remove.py", "id": "1a5ea3974c265aacef454f4eb79a25fe", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_groups/protocolentities/notification_groups_remove.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
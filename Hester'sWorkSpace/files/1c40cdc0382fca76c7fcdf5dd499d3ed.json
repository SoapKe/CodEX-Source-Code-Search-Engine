{"author": "tensorflow", "code": "\n\n Copyright 2016 Google Inc. All Rights Reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\n\"\"\"Computes Spearman's rho with respect to human judgements.\n\nGiven a set of row (and potentially column) embeddings, this computes Spearman's\nrho between the rank ordering of predicted word similarity and human judgements.\n\nUsage:\n\n  wordim.py --embeddings=<binvecs> --vocab=<vocab> eval1.tab eval2.tab ...\n\nOptions:\n\n  --embeddings=<filename>: the vectors to test\n  --vocab=<filename>: the vocabulary file\n\nEvaluation files are assumed to be tab-separated files with exactly three\ncolumns.  The first two columns contain the words, and the third column contains\nthe scored human judgement.\n\n\"\"\"\n\nfrom __future__ import print_function\nimport scipy.stats\nimport sys\nfrom getopt import GetoptError, getopt\n\nfrom vecs import Vecs\n\ntry:\n  opts, args = getopt(sys.argv[1:], '', ['embeddings=', 'vocab='])\nexcept GetoptError as e:\n  print(e, file=sys.stderr)\n  sys.exit(2)\n\nopt_embeddings = None\nopt_vocab = None\n\nfor o, a in opts:\n  if o == '--embeddings':\n    opt_embeddings = a\n  if o == '--vocab':\n    opt_vocab = a\n\nif not opt_vocab:\n  print('please specify a vocabulary file with \"--vocab\"', file=sys.stderr)\n  sys.exit(2)\n\nif not opt_embeddings:\n  print('please specify the embeddings with \"--embeddings\"', file=sys.stderr)\n  sys.exit(2)\n\ntry:\n  vecs = Vecs(opt_vocab, opt_embeddings)\nexcept IOError as e:\n  print(e, file=sys.stderr)\n  sys.exit(1)\n\n\ndef evaluate(lines):\n  acts, preds = [], []\n\n  with open(filename, 'r') as lines:\n    for line in lines:\n      w1, w2, act = line.strip().split('\\t')\n      pred = vecs.similarity(w1, w2)\n      if pred is None:\n        continue\n\n      acts.append(float(act))\n      preds.append(pred)\n\n  rho, _ = scipy.stats.spearmanr(acts, preds)\n  return rho\n\n\nfor filename in args:\n  with open(filename, 'r') as lines:\n    print('%0.3f %s' % (evaluate(lines), filename))\n", "comments": "   computes spearman rho respect human judgements   given set row (and potentially column) embeddings  computes spearman rho rank ordering predicted word similarity human judgements   usage     wordim py   embeddings  binvecs    vocab  vocab  eval1 tab eval2 tab      options       embeddings  filename   vectors test     vocab  filename   vocabulary file  evaluation files assumed tab separated files exactly three columns   the first two columns contain words  third column contains scored human judgement           usr bin env python       copyright 2016 google inc  all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license           http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license  ", "content": "#!/usr/bin/env python\n#\n# Copyright 2016 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\"\"\"Computes Spearman's rho with respect to human judgements.\n\nGiven a set of row (and potentially column) embeddings, this computes Spearman's\nrho between the rank ordering of predicted word similarity and human judgements.\n\nUsage:\n\n  wordim.py --embeddings=<binvecs> --vocab=<vocab> eval1.tab eval2.tab ...\n\nOptions:\n\n  --embeddings=<filename>: the vectors to test\n  --vocab=<filename>: the vocabulary file\n\nEvaluation files are assumed to be tab-separated files with exactly three\ncolumns.  The first two columns contain the words, and the third column contains\nthe scored human judgement.\n\n\"\"\"\n\nfrom __future__ import print_function\nimport scipy.stats\nimport sys\nfrom getopt import GetoptError, getopt\n\nfrom vecs import Vecs\n\ntry:\n  opts, args = getopt(sys.argv[1:], '', ['embeddings=', 'vocab='])\nexcept GetoptError as e:\n  print(e, file=sys.stderr)\n  sys.exit(2)\n\nopt_embeddings = None\nopt_vocab = None\n\nfor o, a in opts:\n  if o == '--embeddings':\n    opt_embeddings = a\n  if o == '--vocab':\n    opt_vocab = a\n\nif not opt_vocab:\n  print('please specify a vocabulary file with \"--vocab\"', file=sys.stderr)\n  sys.exit(2)\n\nif not opt_embeddings:\n  print('please specify the embeddings with \"--embeddings\"', file=sys.stderr)\n  sys.exit(2)\n\ntry:\n  vecs = Vecs(opt_vocab, opt_embeddings)\nexcept IOError as e:\n  print(e, file=sys.stderr)\n  sys.exit(1)\n\n\ndef evaluate(lines):\n  acts, preds = [], []\n\n  with open(filename, 'r') as lines:\n    for line in lines:\n      w1, w2, act = line.strip().split('\\t')\n      pred = vecs.similarity(w1, w2)\n      if pred is None:\n        continue\n\n      acts.append(float(act))\n      preds.append(pred)\n\n  rho, _ = scipy.stats.spearmanr(acts, preds)\n  return rho\n\n\nfor filename in args:\n  with open(filename, 'r') as lines:\n    print('%0.3f %s' % (evaluate(lines), filename))\n", "description": "Models and examples built with TensorFlow", "file_name": "wordsim.py", "id": "1c40cdc0382fca76c7fcdf5dd499d3ed", "language": "Python", "project_name": "models", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/tensorflow-models/tensorflow-models-086d914/research/swivel/wordsim.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:59:19Z", "url": "https://github.com/tensorflow/models", "wiki": true}
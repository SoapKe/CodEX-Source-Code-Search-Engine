{"author": "mailpile", "code": "import os\nimport email\nimport mailbox\nfrom subprocess import Popen, PIPE\n\ndef getSourceFiles():\n    return os.listdir(\"sources\")\n    \ndef getProcesses():\n    return [\"--armor --sign\", \"--armor --clearsign\", \"--recipient 0x5AB5B329 --armor --encrypt\",\n            \"--sign\", \"--recipient 0x5AB5B329 --encrypt\"]\n\ndef runPGP(input, params):\n    print \"Running PGP\"\n    params = params.split(\" \")\n    params.insert(0, \"../gpg-keyring/\")\n    params.insert(0, \"--home\")\n    params.insert(0, \"gpg\")\n    pr = Popen(params, stdin=PIPE, stdout=PIPE)\n    pr.stdin.write(input)\n    pr.stdin.close()\n    pr.wait()\n    m = pr.stdout.read()\n    return m\n\ndef genExamples():\n    output = mailbox.mbox(\"output.mbox\")\n    for source in getSourceFiles():\n\tcontents = open(\"sources/\" + source, \"r\").read()\n\tlanguage, charset = source.split(\".\")\n        for process in getProcesses():\n            print \"Creating %s mail with %s encoding and %s PGP\" % (language,\n                  charset, process)\n            string = runPGP(contents, process)\n            e = email.message_from_string(string)\n            e.set_charset(charset)\n            e[\"from\"] = \"sender@test.mailpile.is\"\n            e[\"to\"] = \"recipient@test.mailpile.is\"\n            output.add(e)\n\n    output.close()\n\nif __name__ == \"__main__\":\n    genExamples()\n", "comments": "", "content": "import os\nimport email\nimport mailbox\nfrom subprocess import Popen, PIPE\n\ndef getSourceFiles():\n    return os.listdir(\"sources\")\n    \ndef getProcesses():\n    return [\"--armor --sign\", \"--armor --clearsign\", \"--recipient 0x5AB5B329 --armor --encrypt\",\n            \"--sign\", \"--recipient 0x5AB5B329 --encrypt\"]\n\ndef runPGP(input, params):\n    print \"Running PGP\"\n    params = params.split(\" \")\n    params.insert(0, \"../gpg-keyring/\")\n    params.insert(0, \"--home\")\n    params.insert(0, \"gpg\")\n    pr = Popen(params, stdin=PIPE, stdout=PIPE)\n    pr.stdin.write(input)\n    pr.stdin.close()\n    pr.wait()\n    m = pr.stdout.read()\n    return m\n\ndef genExamples():\n    output = mailbox.mbox(\"output.mbox\")\n    for source in getSourceFiles():\n\tcontents = open(\"sources/\" + source, \"r\").read()\n\tlanguage, charset = source.split(\".\")\n        for process in getProcesses():\n            print \"Creating %s mail with %s encoding and %s PGP\" % (language,\n                  charset, process)\n            string = runPGP(contents, process)\n            e = email.message_from_string(string)\n            e.set_charset(charset)\n            e[\"from\"] = \"sender@test.mailpile.is\"\n            e[\"to\"] = \"recipient@test.mailpile.is\"\n            output.add(e)\n\n    output.close()\n\nif __name__ == \"__main__\":\n    genExamples()\n", "description": "A free & open modern, fast email client with user-friendly encryption and privacy features", "file_name": "buildexamples.py", "id": "f41e498a91bc884e729882671e72dbd5", "language": "Python", "project_name": "Mailpile", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mailpile-Mailpile/mailpile-Mailpile-8ebc5fe/testing-data/pgp-data/buildexamples.py", "save_time": "", "source": "", "update_at": "2018-03-17T23:54:52Z", "url": "https://github.com/mailpile/Mailpile", "wiki": true}
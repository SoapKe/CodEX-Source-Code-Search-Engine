{"author": "getredash", "code": "from tests import BaseTestCase\nfrom redash.models import Alert, db\n\n\nclass TestAlertAll(BaseTestCase):\n    def test_returns_all_alerts_for_given_groups(self):\n        ds1 = self.factory.data_source\n        group = self.factory.create_group()\n        ds2 = self.factory.create_data_source(group=group)\n\n        query1 = self.factory.create_query(data_source=ds1)\n        query2 = self.factory.create_query(data_source=ds2)\n\n        alert1 = self.factory.create_alert(query_rel=query1)\n        alert2 = self.factory.create_alert(query_rel=query2)\n        db.session.flush()\n\n        alerts = Alert.all(group_ids=[group.id, self.factory.default_group.id])\n        self.assertIn(alert1, alerts)\n        self.assertIn(alert2, alerts)\n\n        alerts = Alert.all(group_ids=[self.factory.default_group.id])\n        self.assertIn(alert1, alerts)\n        self.assertNotIn(alert2, alerts)\n\n        alerts = Alert.all(group_ids=[group.id])\n        self.assertNotIn(alert1, alerts)\n        self.assertIn(alert2, alerts)\n\n    def test_return_each_alert_only_once(self):\n        group = self.factory.create_group()\n        self.factory.data_source.add_group(group)\n\n        alert = self.factory.create_alert()\n\n        alerts = Alert.all(group_ids=[self.factory.default_group.id, group.id])\n        self.assertEqual(1, len(list(alerts)))\n        self.assertIn(alert, alerts)\n", "comments": "", "content": "from tests import BaseTestCase\nfrom redash.models import Alert, db\n\n\nclass TestAlertAll(BaseTestCase):\n    def test_returns_all_alerts_for_given_groups(self):\n        ds1 = self.factory.data_source\n        group = self.factory.create_group()\n        ds2 = self.factory.create_data_source(group=group)\n\n        query1 = self.factory.create_query(data_source=ds1)\n        query2 = self.factory.create_query(data_source=ds2)\n\n        alert1 = self.factory.create_alert(query_rel=query1)\n        alert2 = self.factory.create_alert(query_rel=query2)\n        db.session.flush()\n\n        alerts = Alert.all(group_ids=[group.id, self.factory.default_group.id])\n        self.assertIn(alert1, alerts)\n        self.assertIn(alert2, alerts)\n\n        alerts = Alert.all(group_ids=[self.factory.default_group.id])\n        self.assertIn(alert1, alerts)\n        self.assertNotIn(alert2, alerts)\n\n        alerts = Alert.all(group_ids=[group.id])\n        self.assertNotIn(alert1, alerts)\n        self.assertIn(alert2, alerts)\n\n    def test_return_each_alert_only_once(self):\n        group = self.factory.create_group()\n        self.factory.data_source.add_group(group)\n\n        alert = self.factory.create_alert()\n\n        alerts = Alert.all(group_ids=[self.factory.default_group.id, group.id])\n        self.assertEqual(1, len(list(alerts)))\n        self.assertIn(alert, alerts)\n", "description": "Make Your Company Data Driven. Connect to any data source, easily visualize and share your data.", "file_name": "test_alerts.py", "id": "00523904592cd793f13564452cdd9817", "language": "Python", "project_name": "redash", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/getredash-redash/getredash-redash-0410d83/tests/models/test_alerts.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:54:55Z", "url": "https://github.com/getredash/redash", "wiki": false}
{"author": "sympy", "code": "from sympy import (Symbol, gamma, expand_func, beta, digamma, diff)\n\n\ndef test_beta():\n    x, y = Symbol('x'), Symbol('y')\n\n    assert isinstance(beta(x, y), beta)\n\n    assert expand_func(beta(x, y)) == gamma(x)*gamma(y)/gamma(x + y)\n    assert expand_func(beta(x, y) - beta(y, x)) == 0  \n    assert expand_func(beta(x, y)) == expand_func(beta(x, y + 1) + beta(x + 1, y)).simplify()\n\n    assert diff(beta(x, y), x) == beta(x, y)*(digamma(x) - digamma(x + y))\n    assert diff(beta(x, y), y) == beta(x, y)*(digamma(y) - digamma(x + y))\n", "comments": "  symmetric ", "content": "from sympy import (Symbol, gamma, expand_func, beta, digamma, diff)\n\n\ndef test_beta():\n    x, y = Symbol('x'), Symbol('y')\n\n    assert isinstance(beta(x, y), beta)\n\n    assert expand_func(beta(x, y)) == gamma(x)*gamma(y)/gamma(x + y)\n    assert expand_func(beta(x, y) - beta(y, x)) == 0  # Symmetric\n    assert expand_func(beta(x, y)) == expand_func(beta(x, y + 1) + beta(x + 1, y)).simplify()\n\n    assert diff(beta(x, y), x) == beta(x, y)*(digamma(x) - digamma(x + y))\n    assert diff(beta(x, y), y) == beta(x, y)*(digamma(y) - digamma(x + y))\n", "description": "A computer algebra system written in pure Python", "file_name": "test_beta_functions.py", "id": "42883a6f7ea83310234be6b091baa25f", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/functions/special/tests/test_beta_functions.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
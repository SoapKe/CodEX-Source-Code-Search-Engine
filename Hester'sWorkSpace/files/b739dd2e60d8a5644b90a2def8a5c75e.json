{"author": "ansible", "code": "# Copyright (c) 2016-2017 Hewlett Packard Enterprise Development LP\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom ansible.compat.tests import unittest\nfrom oneview_module_loader import FcNetworkFactsModule\nfrom hpe_test_utils import FactsParamsTestCase\n\nERROR_MSG = 'Fake message error'\n\nPARAMS_GET_ALL = dict(\n    config='config.json',\n    name=None\n)\n\nPARAMS_GET_BY_NAME = dict(\n    config='config.json',\n    name=\"Test FC Network\"\n)\n\nPRESENT_NETWORKS = [{\n    \"name\": \"Test FC Network\",\n    \"uri\": \"/rest/fc-networks/c6bf9af9-48e7-4236-b08a-77684dc258a5\"\n}]\n\n\nclass FcNetworkFactsSpec(unittest.TestCase,\n                         FactsParamsTestCase):\n    def setUp(self):\n        self.configure_mocks(self, FcNetworkFactsModule)\n        self.fc_networks = self.mock_ov_client.fc_networks\n        FactsParamsTestCase.configure_client_mock(self, self.fc_networks)\n\n    def test_should_get_all_fc_networks(self):\n        self.fc_networks.get_all.return_value = PRESENT_NETWORKS\n        self.mock_ansible_module.params = PARAMS_GET_ALL\n\n        FcNetworkFactsModule().run()\n\n        self.mock_ansible_module.exit_json.assert_called_once_with(\n            changed=False,\n            ansible_facts=dict(fc_networks=PRESENT_NETWORKS)\n        )\n\n    def test_should_get_fc_network_by_name(self):\n        self.fc_networks.get_by.return_value = PRESENT_NETWORKS\n        self.mock_ansible_module.params = PARAMS_GET_BY_NAME\n\n        FcNetworkFactsModule().run()\n\n        self.mock_ansible_module.exit_json.assert_called_once_with(\n            changed=False,\n            ansible_facts=dict(fc_networks=PRESENT_NETWORKS)\n        )\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "comments": "  copyright (c) 2016 2017 hewlett packard enterprise development lp    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "# Copyright (c) 2016-2017 Hewlett Packard Enterprise Development LP\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom ansible.compat.tests import unittest\nfrom oneview_module_loader import FcNetworkFactsModule\nfrom hpe_test_utils import FactsParamsTestCase\n\nERROR_MSG = 'Fake message error'\n\nPARAMS_GET_ALL = dict(\n    config='config.json',\n    name=None\n)\n\nPARAMS_GET_BY_NAME = dict(\n    config='config.json',\n    name=\"Test FC Network\"\n)\n\nPRESENT_NETWORKS = [{\n    \"name\": \"Test FC Network\",\n    \"uri\": \"/rest/fc-networks/c6bf9af9-48e7-4236-b08a-77684dc258a5\"\n}]\n\n\nclass FcNetworkFactsSpec(unittest.TestCase,\n                         FactsParamsTestCase):\n    def setUp(self):\n        self.configure_mocks(self, FcNetworkFactsModule)\n        self.fc_networks = self.mock_ov_client.fc_networks\n        FactsParamsTestCase.configure_client_mock(self, self.fc_networks)\n\n    def test_should_get_all_fc_networks(self):\n        self.fc_networks.get_all.return_value = PRESENT_NETWORKS\n        self.mock_ansible_module.params = PARAMS_GET_ALL\n\n        FcNetworkFactsModule().run()\n\n        self.mock_ansible_module.exit_json.assert_called_once_with(\n            changed=False,\n            ansible_facts=dict(fc_networks=PRESENT_NETWORKS)\n        )\n\n    def test_should_get_fc_network_by_name(self):\n        self.fc_networks.get_by.return_value = PRESENT_NETWORKS\n        self.mock_ansible_module.params = PARAMS_GET_BY_NAME\n\n        FcNetworkFactsModule().run()\n\n        self.mock_ansible_module.exit_json.assert_called_once_with(\n            changed=False,\n            ansible_facts=dict(fc_networks=PRESENT_NETWORKS)\n        )\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_oneview_fc_network_facts.py", "id": "b739dd2e60d8a5644b90a2def8a5c75e", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/remote_management/oneview/test_oneview_fc_network_facts.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
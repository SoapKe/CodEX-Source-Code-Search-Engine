{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport hashlib\nimport time\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    sanitized_Request,\n)\n\n\ndef _get_api_key(api_path):\n    if api_path.endswith('?'):\n        api_path = api_path[:-1]\n\n    api_key = 'fb5f58a820353bd7095de526253c14fd'\n    a = '{0:}{1:}{2:}'.format(api_key, api_path, int(round(time.time() / 24 / 3600)))\n    return hashlib.md5(a.encode('ascii')).hexdigest()\n\n\nclass StreamCZIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?stream\\.cz/.+/(?P<id>[0-9]+)'\n    _API_URL = 'http://www.stream.cz/API'\n\n    _TESTS = [{\n        'url': 'http://www.stream.cz/peklonataliri/765767-ecka-pro-deti',\n        'md5': '934bb6a6d220d99c010783c9719960d5',\n        'info_dict': {\n            'id': '765767',\n            'ext': 'mp4',\n            'title': 'Peklo na tal\u00ed\u0159i: \u00c9\u010dka pro d\u011bti',\n            'description': 'Ta\u0161ka s gr\u00f3nskou pomaz\u00e1nkou a dal\u0161\u00ed pekelnosti ZDE',\n            'thumbnail': 're:^http://im.stream.cz/episode/52961d7e19d423f8f06f0100',\n            'duration': 256,\n        },\n    }, {\n        'url': 'http://www.stream.cz/blanik/10002447-tri-roky-pro-mazanka',\n        'md5': '849a88c1e1ca47d41403c2ba5e59e261',\n        'info_dict': {\n            'id': '10002447',\n            'ext': 'mp4',\n            'title': 'Kancel\u00e1\u0159 Blan\u00edk: T\u0159i roky pro Maz\u00e1nka',\n            'description': 'md5:3862a00ba7bf0b3e44806b544032c859',\n            'thumbnail': 're:^http://im.stream.cz/episode/537f838c50c11f8d21320000',\n            'duration': 368,\n        },\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        api_path = '/episode/%s' % video_id\n\n        req = sanitized_Request(self._API_URL + api_path)\n        req.add_header('Api-Password', _get_api_key(api_path))\n        data = self._download_json(req, video_id)\n\n        formats = []\n        for quality, video in enumerate(data['video_qualities']):\n            for f in video['formats']:\n                typ = f['type'].partition('/')[2]\n                qlabel = video.get('quality_label')\n                formats.append({\n                    'format_note': '%s-%s' % (qlabel, typ) if qlabel else typ,\n                    'format_id': '%s-%s' % (typ, f['quality']),\n                    'url': f['source'],\n                    'height': int_or_none(f['quality'].rstrip('p')),\n                    'quality': quality,\n                })\n        self._sort_formats(formats)\n\n        image = data.get('image')\n        if image:\n            thumbnail = self._proto_relative_url(\n                image.replace('{width}', '1240').replace('{height}', '697'),\n                scheme='http:',\n            )\n        else:\n            thumbnail = None\n\n        stream = data.get('_embedded', {}).get('stream:show', {}).get('name')\n        if stream:\n            title = '%s: %s' % (stream, data['name'])\n        else:\n            title = data['name']\n\n        subtitles = {}\n        srt_url = data.get('subtitles_srt')\n        if srt_url:\n            subtitles['cs'] = [{\n                'ext': 'srt',\n                'url': srt_url,\n            }]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'formats': formats,\n            'description': data.get('web_site_text'),\n            'duration': int_or_none(data.get('duration')),\n            'view_count': int_or_none(data.get('views')),\n            'subtitles': subtitles,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport hashlib\nimport time\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    sanitized_Request,\n)\n\n\ndef _get_api_key(api_path):\n    if api_path.endswith('?'):\n        api_path = api_path[:-1]\n\n    api_key = 'fb5f58a820353bd7095de526253c14fd'\n    a = '{0:}{1:}{2:}'.format(api_key, api_path, int(round(time.time() / 24 / 3600)))\n    return hashlib.md5(a.encode('ascii')).hexdigest()\n\n\nclass StreamCZIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?stream\\.cz/.+/(?P<id>[0-9]+)'\n    _API_URL = 'http://www.stream.cz/API'\n\n    _TESTS = [{\n        'url': 'http://www.stream.cz/peklonataliri/765767-ecka-pro-deti',\n        'md5': '934bb6a6d220d99c010783c9719960d5',\n        'info_dict': {\n            'id': '765767',\n            'ext': 'mp4',\n            'title': 'Peklo na tal\u00ed\u0159i: \u00c9\u010dka pro d\u011bti',\n            'description': 'Ta\u0161ka s gr\u00f3nskou pomaz\u00e1nkou a dal\u0161\u00ed pekelnosti ZDE',\n            'thumbnail': 're:^http://im.stream.cz/episode/52961d7e19d423f8f06f0100',\n            'duration': 256,\n        },\n    }, {\n        'url': 'http://www.stream.cz/blanik/10002447-tri-roky-pro-mazanka',\n        'md5': '849a88c1e1ca47d41403c2ba5e59e261',\n        'info_dict': {\n            'id': '10002447',\n            'ext': 'mp4',\n            'title': 'Kancel\u00e1\u0159 Blan\u00edk: T\u0159i roky pro Maz\u00e1nka',\n            'description': 'md5:3862a00ba7bf0b3e44806b544032c859',\n            'thumbnail': 're:^http://im.stream.cz/episode/537f838c50c11f8d21320000',\n            'duration': 368,\n        },\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        api_path = '/episode/%s' % video_id\n\n        req = sanitized_Request(self._API_URL + api_path)\n        req.add_header('Api-Password', _get_api_key(api_path))\n        data = self._download_json(req, video_id)\n\n        formats = []\n        for quality, video in enumerate(data['video_qualities']):\n            for f in video['formats']:\n                typ = f['type'].partition('/')[2]\n                qlabel = video.get('quality_label')\n                formats.append({\n                    'format_note': '%s-%s' % (qlabel, typ) if qlabel else typ,\n                    'format_id': '%s-%s' % (typ, f['quality']),\n                    'url': f['source'],\n                    'height': int_or_none(f['quality'].rstrip('p')),\n                    'quality': quality,\n                })\n        self._sort_formats(formats)\n\n        image = data.get('image')\n        if image:\n            thumbnail = self._proto_relative_url(\n                image.replace('{width}', '1240').replace('{height}', '697'),\n                scheme='http:',\n            )\n        else:\n            thumbnail = None\n\n        stream = data.get('_embedded', {}).get('stream:show', {}).get('name')\n        if stream:\n            title = '%s: %s' % (stream, data['name'])\n        else:\n            title = data['name']\n\n        subtitles = {}\n        srt_url = data.get('subtitles_srt')\n        if srt_url:\n            subtitles['cs'] = [{\n                'ext': 'srt',\n                'url': srt_url,\n            }]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'formats': formats,\n            'description': data.get('web_site_text'),\n            'duration': int_or_none(data.get('duration')),\n            'view_count': int_or_none(data.get('views')),\n            'subtitles': subtitles,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "streamcz.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/streamcz.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
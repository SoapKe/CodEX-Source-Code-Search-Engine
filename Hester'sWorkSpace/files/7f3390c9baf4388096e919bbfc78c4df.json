{"author": "django", "code": "\"\"\"\nRegression tests for defer() / only() behavior.\n\"\"\"\n\nfrom django.db import models\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=15)\n    text = models.TextField(default=\"xyzzy\")\n    value = models.IntegerField()\n    other_value = models.IntegerField(default=0)\n\n    def __str__(self):\n        return self.name\n\n\nclass RelatedItem(models.Model):\n    item = models.ForeignKey(Item, models.CASCADE)\n\n\nclass ProxyRelated(RelatedItem):\n    class Meta:\n        proxy = True\n\n\nclass Child(models.Model):\n    name = models.CharField(max_length=10)\n    value = models.IntegerField()\n\n\nclass Leaf(models.Model):\n    name = models.CharField(max_length=10)\n    child = models.ForeignKey(Child, models.CASCADE)\n    second_child = models.ForeignKey(Child, models.SET_NULL, related_name=\"other\", null=True)\n    value = models.IntegerField(default=42)\n\n    def __str__(self):\n        return self.name\n\n\nclass ResolveThis(models.Model):\n    num = models.FloatField()\n    name = models.CharField(max_length=16)\n\n\nclass Proxy(Item):\n    class Meta:\n        proxy = True\n\n\nclass SimpleItem(models.Model):\n    name = models.CharField(max_length=15)\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name\n\n\nclass Feature(models.Model):\n    item = models.ForeignKey(SimpleItem, models.CASCADE)\n\n\nclass SpecialFeature(models.Model):\n    feature = models.ForeignKey(Feature, models.CASCADE)\n\n\nclass OneToOneItem(models.Model):\n    item = models.OneToOneField(Item, models.CASCADE, related_name=\"one_to_one_item\")\n    name = models.CharField(max_length=15)\n\n\nclass ItemAndSimpleItem(models.Model):\n    item = models.ForeignKey(Item, models.CASCADE)\n    simple = models.ForeignKey(SimpleItem, models.CASCADE)\n\n\nclass Profile(models.Model):\n    profile1 = models.CharField(max_length=255, default='profile1')\n\n\nclass Location(models.Model):\n    location1 = models.CharField(max_length=255, default='location1')\n\n\nclass Request(models.Model):\n    profile = models.ForeignKey(Profile, models.SET_NULL, null=True, blank=True)\n    location = models.ForeignKey(Location, models.CASCADE)\n    items = models.ManyToManyField(Item)\n\n    request1 = models.CharField(default='request1', max_length=255)\n    request2 = models.CharField(default='request2', max_length=255)\n    request3 = models.CharField(default='request3', max_length=255)\n    request4 = models.CharField(default='request4', max_length=255)\n\n\nclass Base(models.Model):\n    text = models.TextField()\n\n\nclass Derived(Base):\n    other_text = models.TextField()\n", "comments": "    regression tests defer()   only() behavior      ", "content": "\"\"\"\nRegression tests for defer() / only() behavior.\n\"\"\"\n\nfrom django.db import models\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=15)\n    text = models.TextField(default=\"xyzzy\")\n    value = models.IntegerField()\n    other_value = models.IntegerField(default=0)\n\n    def __str__(self):\n        return self.name\n\n\nclass RelatedItem(models.Model):\n    item = models.ForeignKey(Item, models.CASCADE)\n\n\nclass ProxyRelated(RelatedItem):\n    class Meta:\n        proxy = True\n\n\nclass Child(models.Model):\n    name = models.CharField(max_length=10)\n    value = models.IntegerField()\n\n\nclass Leaf(models.Model):\n    name = models.CharField(max_length=10)\n    child = models.ForeignKey(Child, models.CASCADE)\n    second_child = models.ForeignKey(Child, models.SET_NULL, related_name=\"other\", null=True)\n    value = models.IntegerField(default=42)\n\n    def __str__(self):\n        return self.name\n\n\nclass ResolveThis(models.Model):\n    num = models.FloatField()\n    name = models.CharField(max_length=16)\n\n\nclass Proxy(Item):\n    class Meta:\n        proxy = True\n\n\nclass SimpleItem(models.Model):\n    name = models.CharField(max_length=15)\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name\n\n\nclass Feature(models.Model):\n    item = models.ForeignKey(SimpleItem, models.CASCADE)\n\n\nclass SpecialFeature(models.Model):\n    feature = models.ForeignKey(Feature, models.CASCADE)\n\n\nclass OneToOneItem(models.Model):\n    item = models.OneToOneField(Item, models.CASCADE, related_name=\"one_to_one_item\")\n    name = models.CharField(max_length=15)\n\n\nclass ItemAndSimpleItem(models.Model):\n    item = models.ForeignKey(Item, models.CASCADE)\n    simple = models.ForeignKey(SimpleItem, models.CASCADE)\n\n\nclass Profile(models.Model):\n    profile1 = models.CharField(max_length=255, default='profile1')\n\n\nclass Location(models.Model):\n    location1 = models.CharField(max_length=255, default='location1')\n\n\nclass Request(models.Model):\n    profile = models.ForeignKey(Profile, models.SET_NULL, null=True, blank=True)\n    location = models.ForeignKey(Location, models.CASCADE)\n    items = models.ManyToManyField(Item)\n\n    request1 = models.CharField(default='request1', max_length=255)\n    request2 = models.CharField(default='request2', max_length=255)\n    request3 = models.CharField(default='request3', max_length=255)\n    request4 = models.CharField(default='request4', max_length=255)\n\n\nclass Base(models.Model):\n    text = models.TextField()\n\n\nclass Derived(Base):\n    other_text = models.TextField()\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "7f3390c9baf4388096e919bbfc78c4df", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/defer_regress/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
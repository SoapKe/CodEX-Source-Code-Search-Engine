{"author": "rushter", "code": "import logging\n\ntry:\n    from sklearn.model_selection import train_test_split\nexcept ImportError:\n    from sklearn.cross_validation import train_test_split\nfrom sklearn.datasets import make_classification\nfrom sklearn.datasets import make_regression\n\nfrom mla.linear_models import LinearRegression, LogisticRegression\nfrom mla.metrics.metrics import mean_squared_error, accuracy\n\n\nlogging.basicConfig(level=logging.ERROR)\n\n\ndef regression():\n    \n    X, y = make_regression(n_samples=10000, n_features=100,\n                           n_informative=75, n_targets=1, noise=0.05,\n                           random_state=1111, bias=0.5)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25,\n                                                        random_state=1111)\n\n    model = LinearRegression(lr=0.01, max_iters=2000, penalty='l2', C=0.03)\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    print('regression mse', mean_squared_error(y_test, predictions))\n\n\ndef classification():\n    \n    X, y = make_classification(n_samples=1000, n_features=100,\n                               n_informative=75, random_state=1111,\n                               n_classes=2, class_sep=2.5, )\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1,\n                                                        random_state=1111)\n\n    model = LogisticRegression(lr=0.01, max_iters=500, penalty='l1', C=0.01)\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    print('classification accuracy', accuracy(y_test, predictions))\n\n\nif __name__ == '__main__':\n    regression()\n    classification()\n", "comments": "  change debug see convergence    generate random regression problem    generate random binary classification problem  ", "content": "import logging\n\ntry:\n    from sklearn.model_selection import train_test_split\nexcept ImportError:\n    from sklearn.cross_validation import train_test_split\nfrom sklearn.datasets import make_classification\nfrom sklearn.datasets import make_regression\n\nfrom mla.linear_models import LinearRegression, LogisticRegression\nfrom mla.metrics.metrics import mean_squared_error, accuracy\n\n# Change to DEBUG to see convergence\nlogging.basicConfig(level=logging.ERROR)\n\n\ndef regression():\n    # Generate a random regression problem\n    X, y = make_regression(n_samples=10000, n_features=100,\n                           n_informative=75, n_targets=1, noise=0.05,\n                           random_state=1111, bias=0.5)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25,\n                                                        random_state=1111)\n\n    model = LinearRegression(lr=0.01, max_iters=2000, penalty='l2', C=0.03)\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    print('regression mse', mean_squared_error(y_test, predictions))\n\n\ndef classification():\n    # Generate a random binary classification problem.\n    X, y = make_classification(n_samples=1000, n_features=100,\n                               n_informative=75, random_state=1111,\n                               n_classes=2, class_sep=2.5, )\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1,\n                                                        random_state=1111)\n\n    model = LogisticRegression(lr=0.01, max_iters=500, penalty='l1', C=0.01)\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n    print('classification accuracy', accuracy(y_test, predictions))\n\n\nif __name__ == '__main__':\n    regression()\n    classification()\n", "description": "Minimal and clean examples of machine learning algorithms", "file_name": "linear_models.py", "id": "525b7d1682d08b35f326a6536d085902", "language": "Python", "project_name": "MLAlgorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rushter-MLAlgorithms/rushter-MLAlgorithms-d398777/examples/linear_models.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:25:48Z", "url": "https://github.com/rushter/MLAlgorithms", "wiki": false}
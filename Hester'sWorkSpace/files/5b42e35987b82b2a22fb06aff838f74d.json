{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport time\nimport hashlib\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    unescapeHTML,\n    unified_strdate,\n    urljoin,\n)\n\n\nclass DouyuTVIE(InfoExtractor):\n    IE_DESC = '\u6597\u9c7c'\n    _VALID_URL = r'https?://(?:www\\.)?douyu(?:tv)?\\.com/(?:[^/]+/)*(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.douyutv.com/iseven',\n        'info_dict': {\n            'id': '17732',\n            'display_id': 'iseven',\n            'ext': 'flv',\n            'title': 're:^\u6e05\u6668\u9192\u8111\uff01\u6839\u672c\u505c\u4e0d\u4e0b\u6765\uff01 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': r're:.*m7show@163\\.com.*',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '7\u5e08\u5085',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.douyutv.com/85982',\n        'info_dict': {\n            'id': '85982',\n            'display_id': '85982',\n            'ext': 'flv',\n            'title': 're:^\u5c0f\u6f20\u4ece\u96f6\u5355\u6392\u8bb0\uff01\u2014\u2014CSOL2\u8eb2\u732b\u732b [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': 'md5:746a2f7a253966a06755a912f0acc0d2',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': 'douyu\u5c0f\u6f20',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'skip': 'Room not found',\n    }, {\n        'url': 'http://www.douyutv.com/17732',\n        'info_dict': {\n            'id': '17732',\n            'display_id': '17732',\n            'ext': 'flv',\n            'title': 're:^\u6e05\u6668\u9192\u8111\uff01\u6839\u672c\u505c\u4e0d\u4e0b\u6765\uff01 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': r're:.*m7show@163\\.com.*',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '7\u5e08\u5085',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.douyu.com/xiaocang',\n        'only_matching': True,\n    }, {\n        \n        'url': 'http://www.douyu.com/t/lpl',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        if video_id.isdigit():\n            room_id = video_id\n        else:\n            page = self._download_webpage(url, video_id)\n            room_id = self._html_search_regex(\n                r'\"room_id\\\\?\"\\s*:\\s*(\\d+),', page, 'room id')\n\n        \n        room = self._download_json(\n            'http://m.douyu.com/html5/live?roomId=%s' % room_id, video_id,\n            note='Downloading room info')['data']\n\n        \n        if room.get('show_status') == '2':\n            raise ExtractorError('Live stream is offline', expected=True)\n\n        \n        \n        tt = int(time.time())\n        signContent = 'lapi/live/thirdPart/getPlay/%s?aid=pcclient&rate=0&time=%d9TUk5fjjUjg9qIMH3sdnh' % (room_id, tt)\n        sign = hashlib.md5(signContent.encode('ascii')).hexdigest()\n        video_url = self._download_json(\n            'http://coapi.douyucdn.cn/lapi/live/thirdPart/getPlay/' + room_id,\n            video_id, note='Downloading video URL info',\n            query={'rate': 0}, headers={\n                'auth': sign,\n                'time': str(tt),\n                'aid': 'pcclient'\n            })['data']['live_url']\n\n        title = self._live_title(unescapeHTML(room['room_name']))\n        description = room.get('show_details')\n        thumbnail = room.get('room_src')\n        uploader = room.get('nickname')\n\n        return {\n            'id': room_id,\n            'display_id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'is_live': True,\n        }\n\n\nclass DouyuShowIE(InfoExtractor):\n    _VALID_URL = r'https?://v(?:mobile)?\\.douyu\\.com/show/(?P<id>[0-9a-zA-Z]+)'\n\n    _TESTS = [{\n        'url': 'https://v.douyu.com/show/rjNBdvnVXNzvE2yw',\n        'md5': '0c2cfd068ee2afe657801269b2d86214',\n        'info_dict': {\n            'id': 'rjNBdvnVXNzvE2yw',\n            'ext': 'mp4',\n            'title': '\u9648\u4e00\u53d1\u513f\uff1a\u7812\u971c \u6211\u6709\u4e2a\u5ba4\u53cb\u7cfb\u5217\uff0104-01 22\u70b9\u573a',\n            'duration': 7150.08,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '\u9648\u4e00\u53d1\u513f',\n            'uploader_id': 'XrZwYelr5wbK',\n            'uploader_url': 'https://v.douyu.com/author/XrZwYelr5wbK',\n            'upload_date': '20170402',\n        },\n    }, {\n        'url': 'https://vmobile.douyu.com/show/rjNBdvnVXNzvE2yw',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        url = url.replace('vmobile.', 'v.')\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        room_info = self._parse_json(self._search_regex(\n            r'var\\s+\\$ROOM\\s*=\\s*({.+});', webpage, 'room info'), video_id)\n\n        video_info = None\n\n        for trial in range(5):\n            \n            try:\n                video_info = self._download_json(\n                    'https://vmobile.douyu.com/video/getInfo', video_id,\n                    query={'vid': video_id},\n                    headers={\n                        'Referer': url,\n                        'x-requested-with': 'XMLHttpRequest',\n                    })\n                break\n            except ExtractorError:\n                self._sleep(1, video_id)\n\n        if not video_info:\n            raise ExtractorError('Can\\'t fetch video info')\n\n        formats = self._extract_m3u8_formats(\n            video_info['data']['video_url'], video_id,\n            entry_protocol='m3u8_native', ext='mp4')\n\n        upload_date = unified_strdate(self._html_search_regex(\n            r'<em>\u4e0a\u4f20\u65f6\u95f4\uff1a</em><span>([^<]+)</span>', webpage,\n            'upload date', fatal=False))\n\n        uploader = uploader_id = uploader_url = None\n        mobj = re.search(\n            r'(?m)<a[^>]+href=\"/author/([0-9a-zA-Z]+)\".+?<strong[^>]+title=\"([^\"]+)\"',\n            webpage)\n        if mobj:\n            uploader_id, uploader = mobj.groups()\n            uploader_url = urljoin(url, '/author/' + uploader_id)\n\n        return {\n            'id': video_id,\n            'title': room_info['name'],\n            'formats': formats,\n            'duration': room_info.get('duration'),\n            'thumbnail': room_info.get('pic'),\n            'upload_date': upload_date,\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n            'uploader_url': uploader_url,\n        }\n", "comments": "# coding: utf-8\n# \\\"room_id\\\"\n# Grab metadata from mobile API\n# 1 = live, 2 = offline\n# Grab the URL from PC client API\n# The m3u8 url from mobile API requires re-authentication every 5 minutes\n# Sometimes Douyu rejects our request. Let's try it more times\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport time\nimport hashlib\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    unescapeHTML,\n    unified_strdate,\n    urljoin,\n)\n\n\nclass DouyuTVIE(InfoExtractor):\n    IE_DESC = '\u6597\u9c7c'\n    _VALID_URL = r'https?://(?:www\\.)?douyu(?:tv)?\\.com/(?:[^/]+/)*(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.douyutv.com/iseven',\n        'info_dict': {\n            'id': '17732',\n            'display_id': 'iseven',\n            'ext': 'flv',\n            'title': 're:^\u6e05\u6668\u9192\u8111\uff01\u6839\u672c\u505c\u4e0d\u4e0b\u6765\uff01 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': r're:.*m7show@163\\.com.*',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '7\u5e08\u5085',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.douyutv.com/85982',\n        'info_dict': {\n            'id': '85982',\n            'display_id': '85982',\n            'ext': 'flv',\n            'title': 're:^\u5c0f\u6f20\u4ece\u96f6\u5355\u6392\u8bb0\uff01\u2014\u2014CSOL2\u8eb2\u732b\u732b [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': 'md5:746a2f7a253966a06755a912f0acc0d2',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': 'douyu\u5c0f\u6f20',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'skip': 'Room not found',\n    }, {\n        'url': 'http://www.douyutv.com/17732',\n        'info_dict': {\n            'id': '17732',\n            'display_id': '17732',\n            'ext': 'flv',\n            'title': 're:^\u6e05\u6668\u9192\u8111\uff01\u6839\u672c\u505c\u4e0d\u4e0b\u6765\uff01 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': r're:.*m7show@163\\.com.*',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '7\u5e08\u5085',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.douyu.com/xiaocang',\n        'only_matching': True,\n    }, {\n        # \\\"room_id\\\"\n        'url': 'http://www.douyu.com/t/lpl',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        if video_id.isdigit():\n            room_id = video_id\n        else:\n            page = self._download_webpage(url, video_id)\n            room_id = self._html_search_regex(\n                r'\"room_id\\\\?\"\\s*:\\s*(\\d+),', page, 'room id')\n\n        # Grab metadata from mobile API\n        room = self._download_json(\n            'http://m.douyu.com/html5/live?roomId=%s' % room_id, video_id,\n            note='Downloading room info')['data']\n\n        # 1 = live, 2 = offline\n        if room.get('show_status') == '2':\n            raise ExtractorError('Live stream is offline', expected=True)\n\n        # Grab the URL from PC client API\n        # The m3u8 url from mobile API requires re-authentication every 5 minutes\n        tt = int(time.time())\n        signContent = 'lapi/live/thirdPart/getPlay/%s?aid=pcclient&rate=0&time=%d9TUk5fjjUjg9qIMH3sdnh' % (room_id, tt)\n        sign = hashlib.md5(signContent.encode('ascii')).hexdigest()\n        video_url = self._download_json(\n            'http://coapi.douyucdn.cn/lapi/live/thirdPart/getPlay/' + room_id,\n            video_id, note='Downloading video URL info',\n            query={'rate': 0}, headers={\n                'auth': sign,\n                'time': str(tt),\n                'aid': 'pcclient'\n            })['data']['live_url']\n\n        title = self._live_title(unescapeHTML(room['room_name']))\n        description = room.get('show_details')\n        thumbnail = room.get('room_src')\n        uploader = room.get('nickname')\n\n        return {\n            'id': room_id,\n            'display_id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'is_live': True,\n        }\n\n\nclass DouyuShowIE(InfoExtractor):\n    _VALID_URL = r'https?://v(?:mobile)?\\.douyu\\.com/show/(?P<id>[0-9a-zA-Z]+)'\n\n    _TESTS = [{\n        'url': 'https://v.douyu.com/show/rjNBdvnVXNzvE2yw',\n        'md5': '0c2cfd068ee2afe657801269b2d86214',\n        'info_dict': {\n            'id': 'rjNBdvnVXNzvE2yw',\n            'ext': 'mp4',\n            'title': '\u9648\u4e00\u53d1\u513f\uff1a\u7812\u971c \u6211\u6709\u4e2a\u5ba4\u53cb\u7cfb\u5217\uff0104-01 22\u70b9\u573a',\n            'duration': 7150.08,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': '\u9648\u4e00\u53d1\u513f',\n            'uploader_id': 'XrZwYelr5wbK',\n            'uploader_url': 'https://v.douyu.com/author/XrZwYelr5wbK',\n            'upload_date': '20170402',\n        },\n    }, {\n        'url': 'https://vmobile.douyu.com/show/rjNBdvnVXNzvE2yw',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        url = url.replace('vmobile.', 'v.')\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        room_info = self._parse_json(self._search_regex(\n            r'var\\s+\\$ROOM\\s*=\\s*({.+});', webpage, 'room info'), video_id)\n\n        video_info = None\n\n        for trial in range(5):\n            # Sometimes Douyu rejects our request. Let's try it more times\n            try:\n                video_info = self._download_json(\n                    'https://vmobile.douyu.com/video/getInfo', video_id,\n                    query={'vid': video_id},\n                    headers={\n                        'Referer': url,\n                        'x-requested-with': 'XMLHttpRequest',\n                    })\n                break\n            except ExtractorError:\n                self._sleep(1, video_id)\n\n        if not video_info:\n            raise ExtractorError('Can\\'t fetch video info')\n\n        formats = self._extract_m3u8_formats(\n            video_info['data']['video_url'], video_id,\n            entry_protocol='m3u8_native', ext='mp4')\n\n        upload_date = unified_strdate(self._html_search_regex(\n            r'<em>\u4e0a\u4f20\u65f6\u95f4\uff1a</em><span>([^<]+)</span>', webpage,\n            'upload date', fatal=False))\n\n        uploader = uploader_id = uploader_url = None\n        mobj = re.search(\n            r'(?m)<a[^>]+href=\"/author/([0-9a-zA-Z]+)\".+?<strong[^>]+title=\"([^\"]+)\"',\n            webpage)\n        if mobj:\n            uploader_id, uploader = mobj.groups()\n            uploader_url = urljoin(url, '/author/' + uploader_id)\n\n        return {\n            'id': video_id,\n            'title': room_info['name'],\n            'formats': formats,\n            'duration': room_info.get('duration'),\n            'thumbnail': room_info.get('pic'),\n            'upload_date': upload_date,\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n            'uploader_url': uploader_url,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "douyutv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/douyutv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
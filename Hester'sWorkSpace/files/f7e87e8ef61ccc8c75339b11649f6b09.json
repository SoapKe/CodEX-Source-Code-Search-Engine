{"author": "aws", "code": "\n\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\nfrom awscli.compat import six\nfrom six.moves import cStringIO\nimport mock\n\n\nclass TestSendEmail(BaseAWSCommandParamsTest):\n\n    prefix = 'ses send-email'\n\n    def test_plain_text(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --text This_is_the_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {'Body': {'Text': {'Data': 'This_is_the_message'}},\n                        'Subject': {'Data': 'This_is_a_test'}}}\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_to(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message')\n        args_list = (self.prefix + args).split()\n        result = {'Source': 'foo@bar.com',\n                  'Destination': {\n                      'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n                  'Message': {\n                      'Body': {'Text': {'Data': 'This_is_the_message'}},\n                      'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_cc(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message'\n                ' --cc fie3@baz.com fie4@baz.com')\n        args_list = (self.prefix + args).split()\n        result = {'Source': 'foo@bar.com',\n                  'Destination': {\n                      'CcAddresses': ['fie3@baz.com', 'fie4@baz.com'],\n                      'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n                  'Message': {\n                      'Body': {'Text': {'Data': 'This_is_the_message'}},\n                      'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_bcc(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message'\n                ' --cc fie3@baz.com fie4@baz.com'\n                ' --bcc fie5@baz.com fie6@baz.com')\n        args_list = (self.prefix + args).split()\n\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'BccAddresses': ['fie5@baz.com', 'fie6@baz.com'],\n                            'CcAddresses': ['fie3@baz.com', 'fie4@baz.com'],\n                            'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n            'Message': {\n                'Body': {'Text': {'Data': 'This_is_the_message'}},\n                'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_html_text(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --html This_is_the_html_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {'Subject': {'Data': 'This_is_a_test'},\n                        'Body': {\n                            'Html': {'Data': 'This_is_the_html_message'}}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_html_both(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --html This_is_the_html_message'\n                ' --text This_is_the_text_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {\n                'Subject': {'Data': 'This_is_a_test'},\n                'Body': {\n                    'Text': {'Data': 'This_is_the_text_message'},\n                    'Html': {'Data': 'This_is_the_html_message'}}}}\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_using_json(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}')\n        args_list = (self.prefix + args).split()\n        result = {'Destination': {'ToAddresses': ['fie@baz.com']},\n                  'Message': {\n                      'Subject': {\n                          'Data': 'This_is_a_test'},\n                      'Body': {\n                          'Text': {'Data': 'This_is_the_message'}}},\n                  'Source': 'foo@bar.com'}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_both_destination_and_to(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}'\n                ' --to fie2@baz.com')\n        args_list = (self.prefix + args).split()\n        self.run_cmd(args_list, expected_rc=255)\n\n    def test_both_message_and_text(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}'\n                ' --text This_is_another_body')\n        args_list = (self.prefix + args).split()\n        self.run_cmd(args_list, expected_rc=255)\n", "comments": "   usr bin env python    copyright 2013 2014 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license  ", "content": "#!/usr/bin/env python\n# Copyright 2013-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\nfrom awscli.compat import six\nfrom six.moves import cStringIO\nimport mock\n\n\nclass TestSendEmail(BaseAWSCommandParamsTest):\n\n    prefix = 'ses send-email'\n\n    def test_plain_text(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --text This_is_the_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {'Body': {'Text': {'Data': 'This_is_the_message'}},\n                        'Subject': {'Data': 'This_is_a_test'}}}\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_to(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message')\n        args_list = (self.prefix + args).split()\n        result = {'Source': 'foo@bar.com',\n                  'Destination': {\n                      'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n                  'Message': {\n                      'Body': {'Text': {'Data': 'This_is_the_message'}},\n                      'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_cc(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message'\n                ' --cc fie3@baz.com fie4@baz.com')\n        args_list = (self.prefix + args).split()\n        result = {'Source': 'foo@bar.com',\n                  'Destination': {\n                      'CcAddresses': ['fie3@baz.com', 'fie4@baz.com'],\n                      'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n                  'Message': {\n                      'Body': {'Text': {'Data': 'This_is_the_message'}},\n                      'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_plain_text_multiple_bcc(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie1@baz.com fie2@baz.com --text This_is_the_message'\n                ' --cc fie3@baz.com fie4@baz.com'\n                ' --bcc fie5@baz.com fie6@baz.com')\n        args_list = (self.prefix + args).split()\n\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'BccAddresses': ['fie5@baz.com', 'fie6@baz.com'],\n                            'CcAddresses': ['fie3@baz.com', 'fie4@baz.com'],\n                            'ToAddresses': ['fie1@baz.com', 'fie2@baz.com']},\n            'Message': {\n                'Body': {'Text': {'Data': 'This_is_the_message'}},\n                'Subject': {'Data': 'This_is_a_test'}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_html_text(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --html This_is_the_html_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {'Subject': {'Data': 'This_is_a_test'},\n                        'Body': {\n                            'Html': {'Data': 'This_is_the_html_message'}}}}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_html_both(self):\n        args = (' --subject This_is_a_test --from foo@bar.com'\n                ' --to fie@baz.com --html This_is_the_html_message'\n                ' --text This_is_the_text_message')\n        args_list = (self.prefix + args).split()\n        result = {\n            'Source': 'foo@bar.com',\n            'Destination': {'ToAddresses': ['fie@baz.com']},\n            'Message': {\n                'Subject': {'Data': 'This_is_a_test'},\n                'Body': {\n                    'Text': {'Data': 'This_is_the_text_message'},\n                    'Html': {'Data': 'This_is_the_html_message'}}}}\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_using_json(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}')\n        args_list = (self.prefix + args).split()\n        result = {'Destination': {'ToAddresses': ['fie@baz.com']},\n                  'Message': {\n                      'Subject': {\n                          'Data': 'This_is_a_test'},\n                      'Body': {\n                          'Text': {'Data': 'This_is_the_message'}}},\n                  'Source': 'foo@bar.com'}\n\n        self.assert_params_for_cmd(args_list, result)\n\n    def test_both_destination_and_to(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}'\n                ' --to fie2@baz.com')\n        args_list = (self.prefix + args).split()\n        self.run_cmd(args_list, expected_rc=255)\n\n    def test_both_message_and_text(self):\n        args = (' --message {\"Subject\":{\"Data\":\"This_is_a_test\"},'\n                '\"Body\":{\"Text\":{\"Data\":\"This_is_the_message\"}}}'\n                ' --from foo@bar.com'\n                ' --destination {\"ToAddresses\":[\"fie@baz.com\"]}'\n                ' --text This_is_another_body')\n        args_list = (self.prefix + args).split()\n        self.run_cmd(args_list, expected_rc=255)\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_send_email.py", "id": "f7e87e8ef61ccc8c75339b11649f6b09", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/functional/ses/test_send_email.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
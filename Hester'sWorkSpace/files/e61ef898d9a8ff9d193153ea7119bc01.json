{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_systemconfiguration\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of SystemConfiguration Avi RESTful Object\ndescription:\n    - This module is used to configure SystemConfiguration object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    admin_auth_configuration:\n        description:\n            - Adminauthconfiguration settings for systemconfiguration.\n    default_license_tier:\n        description:\n            - Specifies the default license tier which would be used by new clouds.\n            - Enum options - ENTERPRISE_16, ENTERPRISE_18.\n            - Field introduced in 17.2.5.\n            - Default value when not specified in API or module is interpreted by Avi Controller as ENTERPRISE_18.\n        version_added: \"2.5\"\n    dns_configuration:\n        description:\n            - Dnsconfiguration settings for systemconfiguration.\n    dns_virtualservice_refs:\n        description:\n            - Dns virtualservices hosting fqdn records for applications across avi vantage.\n            - If no virtualservices are provided, avi vantage will provide dns services for configured applications.\n            - Switching back to avi vantage from dns virtualservices is not allowed.\n            - It is a reference to an object of type virtualservice.\n    docker_mode:\n        description:\n            - Boolean flag to set docker_mode.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    email_configuration:\n        description:\n            - Emailconfiguration settings for systemconfiguration.\n    global_tenant_config:\n        description:\n            - Tenantconfiguration settings for systemconfiguration.\n    linux_configuration:\n        description:\n            - Linuxconfiguration settings for systemconfiguration.\n    mgmt_ip_access_control:\n        description:\n            - Configure ip access control for controller to restrict open access.\n    ntp_configuration:\n        description:\n            - Ntpconfiguration settings for systemconfiguration.\n    portal_configuration:\n        description:\n            - Portalconfiguration settings for systemconfiguration.\n    proxy_configuration:\n        description:\n            - Proxyconfiguration settings for systemconfiguration.\n    snmp_configuration:\n        description:\n            - Snmpconfiguration settings for systemconfiguration.\n    ssh_ciphers:\n        description:\n            - Allowed ciphers list for ssh to the management interface on the controller and service engines.\n            - If this is not specified, all the default ciphers are allowed.\n            - Ssh -q cipher provides the list of default ciphers supported.\n    ssh_hmacs:\n        description:\n            - Allowed hmac list for ssh to the management interface on the controller and service engines.\n            - If this is not specified, all the default hmacs are allowed.\n            - Ssh -q mac provides the list of default hmacs supported.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: SystemConfiguration (api/systemconfiguration) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        admin_auth_configuration=dict(type='dict',),\n        default_license_tier=dict(type='str',),\n        dns_configuration=dict(type='dict',),\n        dns_virtualservice_refs=dict(type='list',),\n        docker_mode=dict(type='bool',),\n        email_configuration=dict(type='dict',),\n        global_tenant_config=dict(type='dict',),\n        linux_configuration=dict(type='dict',),\n        mgmt_ip_access_control=dict(type='dict',),\n        ntp_configuration=dict(type='dict',),\n        portal_configuration=dict(type='dict',),\n        proxy_configuration=dict(type='dict',),\n        snmp_configuration=dict(type='dict',),\n        ssh_ciphers=dict(type='list',),\n        ssh_hmacs=dict(type='list',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'systemconfiguration',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  example create systemconfiguration object   avi systemconfiguration      controller  10 10 25 42     username  admin     password  something     state  present     name  sample systemconfiguration              module  avi systemconfiguration author  gaurav rastogi (grastogi avinetworks com)  short description  module setup systemconfiguration avi restful object description        this module used configure systemconfiguration object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 3  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       admin auth configuration          description                adminauthconfiguration settings systemconfiguration      default license tier          description                specifies default license tier would used new clouds                enum options   enterprise 16  enterprise 18                field introduced 17 2 5                default value specified api module interpreted avi controller enterprise 18          version added   2 5      dns configuration          description                dnsconfiguration settings systemconfiguration      dns virtualservice refs          description                dns virtualservices hosting fqdn records applications across avi vantage                if virtualservices provided  avi vantage provide dns services configured applications                switching back avi vantage dns virtualservices allowed                it reference object type virtualservice      docker mode          description                boolean flag set docker mode                default value specified api module interpreted avi controller false          type  bool     email configuration          description                emailconfiguration settings systemconfiguration      global tenant config          description                tenantconfiguration settings systemconfiguration      linux configuration          description                linuxconfiguration settings systemconfiguration      mgmt ip access control          description                configure ip access control controller restrict open access      ntp configuration          description                ntpconfiguration settings systemconfiguration      portal configuration          description                portalconfiguration settings systemconfiguration      proxy configuration          description                proxyconfiguration settings systemconfiguration      snmp configuration          description                snmpconfiguration settings systemconfiguration      ssh ciphers          description                allowed ciphers list ssh management interface controller service engines                if specified  default ciphers allowed                ssh  q cipher provides list default ciphers supported      ssh hmacs          description                allowed hmac list ssh management interface controller service engines                if specified  default hmacs allowed                ssh  q mac provides list default hmacs supported      url          description                avi controller url object      uuid          description                unique object identifier object  extends documentation fragment        avi      examples     return       obj      description  systemconfiguration (api systemconfiguration) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_systemconfiguration\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of SystemConfiguration Avi RESTful Object\ndescription:\n    - This module is used to configure SystemConfiguration object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    admin_auth_configuration:\n        description:\n            - Adminauthconfiguration settings for systemconfiguration.\n    default_license_tier:\n        description:\n            - Specifies the default license tier which would be used by new clouds.\n            - Enum options - ENTERPRISE_16, ENTERPRISE_18.\n            - Field introduced in 17.2.5.\n            - Default value when not specified in API or module is interpreted by Avi Controller as ENTERPRISE_18.\n        version_added: \"2.5\"\n    dns_configuration:\n        description:\n            - Dnsconfiguration settings for systemconfiguration.\n    dns_virtualservice_refs:\n        description:\n            - Dns virtualservices hosting fqdn records for applications across avi vantage.\n            - If no virtualservices are provided, avi vantage will provide dns services for configured applications.\n            - Switching back to avi vantage from dns virtualservices is not allowed.\n            - It is a reference to an object of type virtualservice.\n    docker_mode:\n        description:\n            - Boolean flag to set docker_mode.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        type: bool\n    email_configuration:\n        description:\n            - Emailconfiguration settings for systemconfiguration.\n    global_tenant_config:\n        description:\n            - Tenantconfiguration settings for systemconfiguration.\n    linux_configuration:\n        description:\n            - Linuxconfiguration settings for systemconfiguration.\n    mgmt_ip_access_control:\n        description:\n            - Configure ip access control for controller to restrict open access.\n    ntp_configuration:\n        description:\n            - Ntpconfiguration settings for systemconfiguration.\n    portal_configuration:\n        description:\n            - Portalconfiguration settings for systemconfiguration.\n    proxy_configuration:\n        description:\n            - Proxyconfiguration settings for systemconfiguration.\n    snmp_configuration:\n        description:\n            - Snmpconfiguration settings for systemconfiguration.\n    ssh_ciphers:\n        description:\n            - Allowed ciphers list for ssh to the management interface on the controller and service engines.\n            - If this is not specified, all the default ciphers are allowed.\n            - Ssh -q cipher provides the list of default ciphers supported.\n    ssh_hmacs:\n        description:\n            - Allowed hmac list for ssh to the management interface on the controller and service engines.\n            - If this is not specified, all the default hmacs are allowed.\n            - Ssh -q mac provides the list of default hmacs supported.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Example to create SystemConfiguration object\n  avi_systemconfiguration:\n    controller: 10.10.25.42\n    username: admin\n    password: something\n    state: present\n    name: sample_systemconfiguration\n\"\"\"\n\nRETURN = '''\nobj:\n    description: SystemConfiguration (api/systemconfiguration) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        admin_auth_configuration=dict(type='dict',),\n        default_license_tier=dict(type='str',),\n        dns_configuration=dict(type='dict',),\n        dns_virtualservice_refs=dict(type='list',),\n        docker_mode=dict(type='bool',),\n        email_configuration=dict(type='dict',),\n        global_tenant_config=dict(type='dict',),\n        linux_configuration=dict(type='dict',),\n        mgmt_ip_access_control=dict(type='dict',),\n        ntp_configuration=dict(type='dict',),\n        portal_configuration=dict(type='dict',),\n        proxy_configuration=dict(type='dict',),\n        snmp_configuration=dict(type='dict',),\n        ssh_ciphers=dict(type='list',),\n        ssh_hmacs=dict(type='list',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'systemconfiguration',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_systemconfiguration.py", "id": "e61ef898d9a8ff9d193153ea7119bc01", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_systemconfiguration.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
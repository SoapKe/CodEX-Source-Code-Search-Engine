{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_vsdatascriptset\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of VSDataScriptSet Avi RESTful Object\ndescription:\n    - This module is used to configure VSDataScriptSet object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    created_by:\n        description:\n            - Creator name.\n            - Field introduced in 17.1.11,17.2.4.\n        version_added: \"2.5\"\n    datascript:\n        description:\n            - Datascripts to execute.\n    description:\n        description:\n            - User defined description for the object.\n    ipgroup_refs:\n        description:\n            - Uuid of ip groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type ipaddrgroup.\n    name:\n        description:\n            - Name for the virtual service datascript collection.\n        required: true\n    pool_group_refs:\n        description:\n            - Uuid of pool groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type poolgroup.\n    pool_refs:\n        description:\n            - Uuid of pools that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type pool.\n    string_group_refs:\n        description:\n            - Uuid of string groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type stringgroup.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the virtual service datascript collection.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: VSDataScriptSet (api/vsdatascriptset) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        created_by=dict(type='str',),\n        datascript=dict(type='list',),\n        description=dict(type='str',),\n        ipgroup_refs=dict(type='list',),\n        name=dict(type='str', required=True),\n        pool_group_refs=dict(type='list',),\n        pool_refs=dict(type='list',),\n        string_group_refs=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'vsdatascriptset',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  example create vsdatascriptset object   avi vsdatascriptset      controller  10 10 25 42     username  admin     password  something     state  present     name  sample vsdatascriptset              module  avi vsdatascriptset author  gaurav rastogi (grastogi avinetworks com)  short description  module setup vsdatascriptset avi restful object description        this module used configure vsdatascriptset object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 4  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       created          description                creator name                field introduced 17 1 11 17 2 4          version added   2 5      datascript          description                datascripts execute      description          description                user defined description object      ipgroup refs          description                uuid ip groups could referred vsdatascriptset objects                it reference object type ipaddrgroup      name          description                name virtual service datascript collection          required  true     pool group refs          description                uuid pool groups could referred vsdatascriptset objects                it reference object type poolgroup      pool refs          description                uuid pools could referred vsdatascriptset objects                it reference object type pool      string group refs          description                uuid string groups could referred vsdatascriptset objects                it reference object type stringgroup      tenant ref          description                it reference object type tenant      url          description                avi controller url object      uuid          description                uuid virtual service datascript collection  extends documentation fragment        avi      examples     return       obj      description  vsdatascriptset (api vsdatascriptset) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_vsdatascriptset\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of VSDataScriptSet Avi RESTful Object\ndescription:\n    - This module is used to configure VSDataScriptSet object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    created_by:\n        description:\n            - Creator name.\n            - Field introduced in 17.1.11,17.2.4.\n        version_added: \"2.5\"\n    datascript:\n        description:\n            - Datascripts to execute.\n    description:\n        description:\n            - User defined description for the object.\n    ipgroup_refs:\n        description:\n            - Uuid of ip groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type ipaddrgroup.\n    name:\n        description:\n            - Name for the virtual service datascript collection.\n        required: true\n    pool_group_refs:\n        description:\n            - Uuid of pool groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type poolgroup.\n    pool_refs:\n        description:\n            - Uuid of pools that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type pool.\n    string_group_refs:\n        description:\n            - Uuid of string groups that could be referred by vsdatascriptset objects.\n            - It is a reference to an object of type stringgroup.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the virtual service datascript collection.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Example to create VSDataScriptSet object\n  avi_vsdatascriptset:\n    controller: 10.10.25.42\n    username: admin\n    password: something\n    state: present\n    name: sample_vsdatascriptset\n\"\"\"\n\nRETURN = '''\nobj:\n    description: VSDataScriptSet (api/vsdatascriptset) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        created_by=dict(type='str',),\n        datascript=dict(type='list',),\n        description=dict(type='str',),\n        ipgroup_refs=dict(type='list',),\n        name=dict(type='str', required=True),\n        pool_group_refs=dict(type='list',),\n        pool_refs=dict(type='list',),\n        string_group_refs=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'vsdatascriptset',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_vsdatascriptset.py", "id": "572642e52b8060b447aa74e5247d1c92", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_vsdatascriptset.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
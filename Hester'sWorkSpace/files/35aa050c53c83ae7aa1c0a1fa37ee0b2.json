{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.stacktraces import find_stacktraces_in_data\n\n\ndef test_stacktraces_basics():\n    data = {\n        'message': 'hello',\n        'platform': 'javascript',\n        'sentry.interfaces.Stacktrace': {\n            'frames': [\n                {\n                    'abs_path': 'http://example.com/foo.js',\n                    'filename': 'foo.js',\n                    'lineno': 4,\n                    'colno': 0,\n                },\n                {\n                    'abs_path': 'http://example.com/foo.js',\n                    'filename': 'foo.js',\n                    'lineno': 1,\n                    'colno': 0,\n                },\n            ],\n        },\n    }\n\n    infos = find_stacktraces_in_data(data)\n    assert len(infos) == 1\n    assert len(infos[0].stacktrace['frames']) == 2\n    assert infos[0].platforms == set(['javascript'])\n\n\ndef test_get_stacktraces_returns_exception_interface():\n    data = {\n        'message': 'hello',\n        'platform': 'javascript',\n        'sentry.interfaces.Exception': {\n            'values': [\n                {\n                    'type': 'Error',\n                    'stacktrace': {\n                        'frames': [\n                            {\n                                'abs_path': 'http://example.com/foo.js',\n                                'filename': 'foo.js',\n                                'lineno': 4,\n                                'colno': 0,\n                            },\n                            {\n                                'abs_path': 'http://example.com/foo.js',\n                                'filename': 'foo.js',\n                                'lineno': 1,\n                                'colno': 0,\n                            },\n                        ],\n                    },\n                }\n            ],\n        }\n    }\n\n    infos = find_stacktraces_in_data(data)\n    assert len(infos) == 1\n    assert len(infos[0].stacktrace['frames']) == 2\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.stacktraces import find_stacktraces_in_data\n\n\ndef test_stacktraces_basics():\n    data = {\n        'message': 'hello',\n        'platform': 'javascript',\n        'sentry.interfaces.Stacktrace': {\n            'frames': [\n                {\n                    'abs_path': 'http://example.com/foo.js',\n                    'filename': 'foo.js',\n                    'lineno': 4,\n                    'colno': 0,\n                },\n                {\n                    'abs_path': 'http://example.com/foo.js',\n                    'filename': 'foo.js',\n                    'lineno': 1,\n                    'colno': 0,\n                },\n            ],\n        },\n    }\n\n    infos = find_stacktraces_in_data(data)\n    assert len(infos) == 1\n    assert len(infos[0].stacktrace['frames']) == 2\n    assert infos[0].platforms == set(['javascript'])\n\n\ndef test_get_stacktraces_returns_exception_interface():\n    data = {\n        'message': 'hello',\n        'platform': 'javascript',\n        'sentry.interfaces.Exception': {\n            'values': [\n                {\n                    'type': 'Error',\n                    'stacktrace': {\n                        'frames': [\n                            {\n                                'abs_path': 'http://example.com/foo.js',\n                                'filename': 'foo.js',\n                                'lineno': 4,\n                                'colno': 0,\n                            },\n                            {\n                                'abs_path': 'http://example.com/foo.js',\n                                'filename': 'foo.js',\n                                'lineno': 1,\n                                'colno': 0,\n                            },\n                        ],\n                    },\n                }\n            ],\n        }\n    }\n\n    infos = find_stacktraces_in_data(data)\n    assert len(infos) == 1\n    assert len(infos[0].stacktrace['frames']) == 2\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_stacktraces.py", "id": "35aa050c53c83ae7aa1c0a1fa37ee0b2", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/test_stacktraces.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
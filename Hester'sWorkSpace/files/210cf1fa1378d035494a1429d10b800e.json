{"author": "tgalal", "code": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom yowsup.common import YowConstants\nfrom .protocolentities import *\nclass YowContactsIqProtocolLayer(YowProtocolLayer):\n    def __init__(self):\n        handleMap = {\n            \"iq\": (self.recvIq, self.sendIq),\n            \"notification\": (self.recvNotification, None)\n        }\n        super(YowContactsIqProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Iq Layer\"\n\n    def recvNotification(self, node):\n        if node[\"type\"] == \"contacts\":\n            if node.getChild(\"remove\"):\n                self.toUpper(RemoveContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"add\"):\n                self.toUpper(AddContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"update\"):\n                self.toUpper(UpdateContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"sync\"):\n                self.toUpper(ContactsSyncNotificationProtocolEntity.fromProtocolTreeNode(node))\n            else:\n                self.raiseErrorForNode(node)\n\n    def recvIq(self, node):\n        if node[\"type\"] == \"result\" and node.getChild(\"sync\"):\n            self.toUpper(ResultSyncIqProtocolEntity.fromProtocolTreeNode(node))\n        elif node[\"type\"] == \"result\" and node.getChild(\"status\"):\n            self.toUpper(ResultStatusesIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def sendIq(self, entity):\n        if entity.getXmlns() == \"urn:xmpp:whatsapp:sync\":\n            self.toLower(entity.toProtocolTreeNode())\n        elif entity.getXmlns() == GetStatusesIqProtocolEntity.XMLNS:\n            self.toLower(entity.toProtocolTreeNode())\n", "comments": "", "content": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom yowsup.common import YowConstants\nfrom .protocolentities import *\nclass YowContactsIqProtocolLayer(YowProtocolLayer):\n    def __init__(self):\n        handleMap = {\n            \"iq\": (self.recvIq, self.sendIq),\n            \"notification\": (self.recvNotification, None)\n        }\n        super(YowContactsIqProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Iq Layer\"\n\n    def recvNotification(self, node):\n        if node[\"type\"] == \"contacts\":\n            if node.getChild(\"remove\"):\n                self.toUpper(RemoveContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"add\"):\n                self.toUpper(AddContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"update\"):\n                self.toUpper(UpdateContactNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"sync\"):\n                self.toUpper(ContactsSyncNotificationProtocolEntity.fromProtocolTreeNode(node))\n            else:\n                self.raiseErrorForNode(node)\n\n    def recvIq(self, node):\n        if node[\"type\"] == \"result\" and node.getChild(\"sync\"):\n            self.toUpper(ResultSyncIqProtocolEntity.fromProtocolTreeNode(node))\n        elif node[\"type\"] == \"result\" and node.getChild(\"status\"):\n            self.toUpper(ResultStatusesIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def sendIq(self, entity):\n        if entity.getXmlns() == \"urn:xmpp:whatsapp:sync\":\n            self.toLower(entity.toProtocolTreeNode())\n        elif entity.getXmlns() == GetStatusesIqProtocolEntity.XMLNS:\n            self.toLower(entity.toProtocolTreeNode())\n", "description": "The python WhatsApp library", "file_name": "layer.py", "id": "210cf1fa1378d035494a1429d10b800e", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_contacts/layer.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
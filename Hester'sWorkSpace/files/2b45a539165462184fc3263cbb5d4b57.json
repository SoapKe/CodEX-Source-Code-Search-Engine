{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestCompress(object):\n\n    def test_compress(self, func):\n        assert_equal(func(None), None)\n        assert_equal(func(''), '')\n        assert_equal(func('ABC'), 'ABC')\n        assert_equal(func('AABBCC'), 'AABBCC')\n        assert_equal(func('AAABCCDDDDE'), 'A3BC2D4E')\n        assert_equal(func('BAAACCDDDD'), 'BA3C2D4')\n        assert_equal(func('AAABAACCDDDD'), 'A3BA2C2D4')\n        print('Success: test_compress')\n\n\ndef main():\n    test = TestCompress()\n    compress_string = CompressString()\n    test.test_compress(compress_string.compress)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestCompress(object):\n\n    def test_compress(self, func):\n        assert_equal(func(None), None)\n        assert_equal(func(''), '')\n        assert_equal(func('ABC'), 'ABC')\n        assert_equal(func('AABBCC'), 'AABBCC')\n        assert_equal(func('AAABCCDDDDE'), 'A3BC2D4E')\n        assert_equal(func('BAAACCDDDD'), 'BA3C2D4')\n        assert_equal(func('AAABAACCDDDD'), 'A3BA2C2D4')\n        print('Success: test_compress')\n\n\ndef main():\n    test = TestCompress()\n    compress_string = CompressString()\n    test.test_compress(compress_string.compress)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_compress.py", "id": "2b45a539165462184fc3263cbb5d4b57", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/arrays_strings/compress/test_compress.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom sentry.metrics.statsd import StatsdMetricsBackend\nfrom sentry.testutils import TestCase\n\n\nclass StatsdMetricsBackendTest(TestCase):\n    def setUp(self):\n        self.backend = StatsdMetricsBackend(prefix='sentrytest.')\n\n    @patch('statsd.StatsClient.incr')\n    def test_incr(self, mock_incr):\n        self.backend.incr('foo')\n        mock_incr.assert_called_once_with('sentrytest.foo', 1, 1)\n\n    @patch('statsd.StatsClient.timing')\n    def test_timing(self, mock_timing):\n        self.backend.timing('foo', 30)\n        mock_timing.assert_called_once_with('sentrytest.foo', 30, 1)\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom sentry.metrics.statsd import StatsdMetricsBackend\nfrom sentry.testutils import TestCase\n\n\nclass StatsdMetricsBackendTest(TestCase):\n    def setUp(self):\n        self.backend = StatsdMetricsBackend(prefix='sentrytest.')\n\n    @patch('statsd.StatsClient.incr')\n    def test_incr(self, mock_incr):\n        self.backend.incr('foo')\n        mock_incr.assert_called_once_with('sentrytest.foo', 1, 1)\n\n    @patch('statsd.StatsClient.timing')\n    def test_timing(self, mock_timing):\n        self.backend.timing('foo', 30)\n        mock_timing.assert_called_once_with('sentrytest.foo', 30, 1)\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_statsd.py", "id": "6e0bb0acde23db4f6ea15db221aa5273", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/metrics/test_statsd.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
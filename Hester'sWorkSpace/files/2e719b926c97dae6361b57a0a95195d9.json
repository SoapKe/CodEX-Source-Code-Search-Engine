{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    smuggle_url,\n    float_or_none,\n    parse_iso8601,\n    update_url_query,\n)\n\n\nclass MovieClipsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?movieclips\\.com/videos/.+-(?P<id>\\d+)(?:\\?|$)'\n    _TEST = {\n        'url': 'http://www.movieclips.com/videos/warcraft-trailer-1-561180739597',\n        'md5': '42b5a0352d4933a7bd54f2104f481244',\n        'info_dict': {\n            'id': 'pKIGmG83AqD9',\n            'ext': 'mp4',\n            'title': 'Warcraft Trailer 1',\n            'description': 'Watch Trailer 1 from Warcraft (2016). Legendary\u2019s WARCRAFT is a 3D epic adventure of world-colliding conflict based.',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1446843055,\n            'upload_date': '20151106',\n            'uploader': 'Movieclips',\n        },\n        'add_ie': ['ThePlatform'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        video = next(v for v in self._parse_json(self._search_regex(\n            r'var\\s+__REACT_ENGINE__\\s*=\\s*({.+});',\n            webpage, 'react engine'), video_id)['playlist']['videos'] if v['id'] == video_id)\n\n        return {\n            '_type': 'url_transparent',\n            'ie_key': 'ThePlatform',\n            'url': smuggle_url(update_url_query(\n                video['contentUrl'], {'mbr': 'true'}), {'force_smil_url': True}),\n            'title': self._og_search_title(webpage),\n            'description': self._html_search_meta('description', webpage),\n            'duration': float_or_none(video.get('duration')),\n            'timestamp': parse_iso8601(video.get('dateCreated')),\n            'thumbnail': video.get('defaultImage'),\n            'uploader': video.get('provider'),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    smuggle_url,\n    float_or_none,\n    parse_iso8601,\n    update_url_query,\n)\n\n\nclass MovieClipsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?movieclips\\.com/videos/.+-(?P<id>\\d+)(?:\\?|$)'\n    _TEST = {\n        'url': 'http://www.movieclips.com/videos/warcraft-trailer-1-561180739597',\n        'md5': '42b5a0352d4933a7bd54f2104f481244',\n        'info_dict': {\n            'id': 'pKIGmG83AqD9',\n            'ext': 'mp4',\n            'title': 'Warcraft Trailer 1',\n            'description': 'Watch Trailer 1 from Warcraft (2016). Legendary\u2019s WARCRAFT is a 3D epic adventure of world-colliding conflict based.',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1446843055,\n            'upload_date': '20151106',\n            'uploader': 'Movieclips',\n        },\n        'add_ie': ['ThePlatform'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        video = next(v for v in self._parse_json(self._search_regex(\n            r'var\\s+__REACT_ENGINE__\\s*=\\s*({.+});',\n            webpage, 'react engine'), video_id)['playlist']['videos'] if v['id'] == video_id)\n\n        return {\n            '_type': 'url_transparent',\n            'ie_key': 'ThePlatform',\n            'url': smuggle_url(update_url_query(\n                video['contentUrl'], {'mbr': 'true'}), {'force_smil_url': True}),\n            'title': self._og_search_title(webpage),\n            'description': self._html_search_meta('description', webpage),\n            'duration': float_or_none(video.get('duration')),\n            'timestamp': parse_iso8601(video.get('dateCreated')),\n            'thumbnail': video.get('defaultImage'),\n            'uploader': video.get('provider'),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "movieclips.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/movieclips.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
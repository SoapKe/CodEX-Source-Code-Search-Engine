{"author": "django", "code": "from django.db import connection\nfrom django.db.models import Max\nfrom django.test import TestCase\n\nfrom .models import Cash, CashModel\n\n\nclass FromDBValueTest(TestCase):\n    def setUp(self):\n        CashModel.objects.create(cash='12.50')\n\n    def test_simple_load(self):\n        instance = CashModel.objects.get()\n        self.assertIsInstance(instance.cash, Cash)\n\n    def test_values_list(self):\n        values_list = CashModel.objects.values_list('cash', flat=True)\n        self.assertIsInstance(values_list[0], Cash)\n\n    def test_values(self):\n        values = CashModel.objects.values('cash')\n        self.assertIsInstance(values[0]['cash'], Cash)\n\n    def test_aggregation(self):\n        maximum = CashModel.objects.aggregate(m=Max('cash'))['m']\n        self.assertIsInstance(maximum, Cash)\n\n    def test_defer(self):\n        instance = CashModel.objects.defer('cash').get()\n        self.assertIsInstance(instance.cash, Cash)\n\n    def test_connection(self):\n        instance = CashModel.objects.get()\n        self.assertEqual(instance.cash.vendor, connection.vendor)\n", "comments": "", "content": "from django.db import connection\nfrom django.db.models import Max\nfrom django.test import TestCase\n\nfrom .models import Cash, CashModel\n\n\nclass FromDBValueTest(TestCase):\n    def setUp(self):\n        CashModel.objects.create(cash='12.50')\n\n    def test_simple_load(self):\n        instance = CashModel.objects.get()\n        self.assertIsInstance(instance.cash, Cash)\n\n    def test_values_list(self):\n        values_list = CashModel.objects.values_list('cash', flat=True)\n        self.assertIsInstance(values_list[0], Cash)\n\n    def test_values(self):\n        values = CashModel.objects.values('cash')\n        self.assertIsInstance(values[0]['cash'], Cash)\n\n    def test_aggregation(self):\n        maximum = CashModel.objects.aggregate(m=Max('cash'))['m']\n        self.assertIsInstance(maximum, Cash)\n\n    def test_defer(self):\n        instance = CashModel.objects.defer('cash').get()\n        self.assertIsInstance(instance.cash, Cash)\n\n    def test_connection(self):\n        instance = CashModel.objects.get()\n        self.assertEqual(instance.cash.vendor, connection.vendor)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "tests.py", "id": "63695f5cc3eac6a494bf53c4ebed852e", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/from_db_value/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import fields, models, api\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    inventory_availability = fields.Selection([\n        ('never', 'Sell regardless of inventory'),\n        ('always', 'Show inventory on website and prevent sales if not enough stock'),\n        ('threshold', 'Show inventory below a threshold and prevent sales if not enough stock'),\n        ('custom', 'Show product-specific notifications'),\n    ], string='Inventory', default='never')\n    available_threshold = fields.Float(string='Availability Threshold')\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        IrDefault = self.env['ir.default'].sudo()\n        IrDefault.set('product.template', 'inventory_availability', self.inventory_availability)\n        IrDefault.set('product.template', 'available_threshold', self.available_threshold if self.inventory_availability == 'threshold' else None)\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        IrDefault = self.env['ir.default'].sudo()\n        res.update(inventory_availability=IrDefault.get('product.template', 'inventory_availability') or 'never',\n                   available_threshold=IrDefault.get('product.template', 'available_threshold') or 5.0)\n        return res\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import fields, models, api\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    inventory_availability = fields.Selection([\n        ('never', 'Sell regardless of inventory'),\n        ('always', 'Show inventory on website and prevent sales if not enough stock'),\n        ('threshold', 'Show inventory below a threshold and prevent sales if not enough stock'),\n        ('custom', 'Show product-specific notifications'),\n    ], string='Inventory', default='never')\n    available_threshold = fields.Float(string='Availability Threshold')\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        IrDefault = self.env['ir.default'].sudo()\n        IrDefault.set('product.template', 'inventory_availability', self.inventory_availability)\n        IrDefault.set('product.template', 'available_threshold', self.available_threshold if self.inventory_availability == 'threshold' else None)\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        IrDefault = self.env['ir.default'].sudo()\n        res.update(inventory_availability=IrDefault.get('product.template', 'inventory_availability') or 'never',\n                   available_threshold=IrDefault.get('product.template', 'available_threshold') or 5.0)\n        return res\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_config_settings.py", "id": "bd8b6f0a16f68ea18c7561f13fc716be", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_sale_stock/models/res_config_settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
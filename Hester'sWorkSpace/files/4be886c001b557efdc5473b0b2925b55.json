{"author": "ansible", "code": "# Copyright (c) 2018 Matt Martz <matt@sivel.net>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n# -*- coding: utf-8 -*-\n\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport pytest\n\nfrom ansible.executor.module_common import modify_module\nfrom ansible.module_utils.six import PY2\n\nfrom test_module_common import templar\n\n\nFAKE_OLD_MODULE = b'''#!/usr/bin/python\nimport sys\nprint('{\"result\": \"%s\"}' % sys.executable)\n'''\n\n\n@pytest.fixture\ndef fake_old_module_open(mocker):\n    m = mocker.mock_open(read_data=FAKE_OLD_MODULE)\n    if PY2:\n        mocker.patch('__builtin__.open', m)\n    else:\n        mocker.patch('builtins.open', m)\n\n\ndef test_shebang(fake_old_module_open):\n    (data, style, shebang) = modify_module('fake_module', 'fake_path', {})\n    assert shebang == '#!/usr/bin/python'\n\n\ndef test_shebang_task_vars(fake_old_module_open, templar):\n    task_vars = {\n        'ansible_python_interpreter': '/usr/bin/python3'\n    }\n\n    (data, style, shebang) = modify_module('fake_module', 'fake_path', {}, task_vars=task_vars, templar=templar)\n    assert shebang == '#!/usr/bin/python3'\n", "comments": "      usr bin python import sys print(   result          sys executable)        copyright (c) 2018 matt martz  matt sivel net     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)        coding  utf 8     ", "content": "# Copyright (c) 2018 Matt Martz <matt@sivel.net>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n# -*- coding: utf-8 -*-\n\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport pytest\n\nfrom ansible.executor.module_common import modify_module\nfrom ansible.module_utils.six import PY2\n\nfrom test_module_common import templar\n\n\nFAKE_OLD_MODULE = b'''#!/usr/bin/python\nimport sys\nprint('{\"result\": \"%s\"}' % sys.executable)\n'''\n\n\n@pytest.fixture\ndef fake_old_module_open(mocker):\n    m = mocker.mock_open(read_data=FAKE_OLD_MODULE)\n    if PY2:\n        mocker.patch('__builtin__.open', m)\n    else:\n        mocker.patch('builtins.open', m)\n\n\ndef test_shebang(fake_old_module_open):\n    (data, style, shebang) = modify_module('fake_module', 'fake_path', {})\n    assert shebang == '#!/usr/bin/python'\n\n\ndef test_shebang_task_vars(fake_old_module_open, templar):\n    task_vars = {\n        'ansible_python_interpreter': '/usr/bin/python3'\n    }\n\n    (data, style, shebang) = modify_module('fake_module', 'fake_path', {}, task_vars=task_vars, templar=templar)\n    assert shebang == '#!/usr/bin/python3'\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_modify_module.py", "id": "4be886c001b557efdc5473b0b2925b55", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/executor/module_common/test_modify_module.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
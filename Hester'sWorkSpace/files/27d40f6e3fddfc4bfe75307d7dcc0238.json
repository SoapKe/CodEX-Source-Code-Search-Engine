{"author": "odoo", "code": "# -*- coding: utf-8 -*-\nfrom odoo import http, _\nfrom odoo.http import request\nfrom odoo.addons.website_sale.controllers.main import WebsiteSale\nimport json\n\n\nclass WebsiteSaleProductComparison(WebsiteSale):\n\n    @http.route('/shop/compare/', type='http', auth=\"public\", website=True)\n    def product_compare(self, **post):\n        values = {}\n        product_ids = [int(i) for i in post.get('products', '').split(',') if i.isdigit()]\n        if not product_ids:\n            return request.redirect(\"/shop\")\n        \n        products = request.env['product.product'].search([('id', 'in', product_ids)])\n        values['products'] = products.with_context(display_default_code=False)\n\n        res = {}\n        for num, product in enumerate(products):\n            for var in product.attribute_line_ids:\n                cat_name = var.attribute_id.category_id.name or _('Uncategorized')\n                att_name = var.attribute_id.name\n                if not product.attribute_value_ids: \n                    continue\n                res.setdefault(cat_name, {}).setdefault(att_name, [' - '] * len(products))\n                val = product.attribute_value_ids.filtered(lambda x: x.attribute_id == var.attribute_id)\n                res[cat_name][att_name][num] = val[0].name\n        values['specs'] = res\n        values['compute_currency'] = self._get_compute_currency_and_context()[0]\n        return request.render(\"website_sale_comparison.product_compare\", values)\n\n    @http.route(['/shop/get_product_data'], type='json', auth=\"public\", website=True)\n    def get_product_data(self, product_ids, cookies=None):\n        ret = {}\n        compute_currency, pricelist_context, _ = self._get_compute_currency_and_context()\n        prods = request.env['product.product'].with_context(pricelist_context, display_default_code=False).search([('id', 'in', product_ids)])\n\n        if cookies is not None:\n            ret['cookies'] = json.dumps(request.env['product.product'].search([('id', 'in', list(set(product_ids + cookies)))]).ids)\n\n        prods.mapped('name')\n        for prod in prods:\n            ret[prod.id] = {\n                'render': request.env['ir.ui.view'].render_template(\n                    \"website_sale_comparison.product_product\",\n                    {'compute_currency': compute_currency, 'product': prod, 'website': request.website}\n                ),\n                'product': dict(id=prod.id, name=prod.name, display_name=prod.display_name),\n            }\n        return ret\n", "comments": "      coding  utf 8        use search check read access record ids    create variant   false ", "content": "# -*- coding: utf-8 -*-\nfrom odoo import http, _\nfrom odoo.http import request\nfrom odoo.addons.website_sale.controllers.main import WebsiteSale\nimport json\n\n\nclass WebsiteSaleProductComparison(WebsiteSale):\n\n    @http.route('/shop/compare/', type='http', auth=\"public\", website=True)\n    def product_compare(self, **post):\n        values = {}\n        product_ids = [int(i) for i in post.get('products', '').split(',') if i.isdigit()]\n        if not product_ids:\n            return request.redirect(\"/shop\")\n        # use search to check read access on each record/ids\n        products = request.env['product.product'].search([('id', 'in', product_ids)])\n        values['products'] = products.with_context(display_default_code=False)\n\n        res = {}\n        for num, product in enumerate(products):\n            for var in product.attribute_line_ids:\n                cat_name = var.attribute_id.category_id.name or _('Uncategorized')\n                att_name = var.attribute_id.name\n                if not product.attribute_value_ids: # create_variant = False\n                    continue\n                res.setdefault(cat_name, {}).setdefault(att_name, [' - '] * len(products))\n                val = product.attribute_value_ids.filtered(lambda x: x.attribute_id == var.attribute_id)\n                res[cat_name][att_name][num] = val[0].name\n        values['specs'] = res\n        values['compute_currency'] = self._get_compute_currency_and_context()[0]\n        return request.render(\"website_sale_comparison.product_compare\", values)\n\n    @http.route(['/shop/get_product_data'], type='json', auth=\"public\", website=True)\n    def get_product_data(self, product_ids, cookies=None):\n        ret = {}\n        compute_currency, pricelist_context, _ = self._get_compute_currency_and_context()\n        prods = request.env['product.product'].with_context(pricelist_context, display_default_code=False).search([('id', 'in', product_ids)])\n\n        if cookies is not None:\n            ret['cookies'] = json.dumps(request.env['product.product'].search([('id', 'in', list(set(product_ids + cookies)))]).ids)\n\n        prods.mapped('name')\n        for prod in prods:\n            ret[prod.id] = {\n                'render': request.env['ir.ui.view'].render_template(\n                    \"website_sale_comparison.product_product\",\n                    {'compute_currency': compute_currency, 'product': prod, 'website': request.website}\n                ),\n                'product': dict(id=prod.id, name=prod.name, display_name=prod.display_name),\n            }\n        return ret\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "27d40f6e3fddfc4bfe75307d7dcc0238", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_sale_comparison/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
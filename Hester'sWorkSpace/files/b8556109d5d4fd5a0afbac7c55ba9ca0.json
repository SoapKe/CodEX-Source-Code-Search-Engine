{"author": "XX-net", "code": "\n\n\nimport os\nimport sys\n\nimport gc\nimport time\n\ncurrent_path = os.path.dirname(os.path.abspath(__file__))\nroot_path = os.path.abspath( os.path.join(current_path, os.pardir, os.pardir, os.pardir))\ndata_path = os.path.abspath(os.path.join(root_path, os.pardir, os.pardir, 'data'))\nmodule_data_path = os.path.join(data_path, 'x_tunnel')\npython_path = os.path.abspath( os.path.join(root_path, 'python27', '1.0'))\n\nsys.path.append(root_path)\n\nnoarch_lib = os.path.abspath( os.path.join(python_path, 'lib', 'noarch'))\nsys.path.append(noarch_lib)\n\nif sys.platform == \"win32\":\n    win32_lib = os.path.abspath( os.path.join(python_path, 'lib', 'win32'))\n    sys.path.append(win32_lib)\nelif sys.platform.startswith(\"linux\"):\n    linux_lib = os.path.abspath( os.path.join(python_path, 'lib', 'linux'))\n    sys.path.append(linux_lib)\nelif sys.platform == \"darwin\":\n    darwin_lib = os.path.abspath( os.path.join(python_path, 'lib', 'darwin'))\n    sys.path.append(darwin_lib)\n    extra_lib = \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\"\n    sys.path.append(extra_lib)\n\n\nfrom front import front\nfrom xlog import getLogger\nxlog = getLogger(\"tls_relay\")\n\n\ndef t1():\n    content, status, response = front.request(\"GET\", \"scan1.xx-net.net\", timeout=1000)\n    print status\n\n    del response\n\n    content, status, response = front.request(\"GET\", \"scan1.xx-net.net\", timeout=1000)\n    print status\n\n    front.stop()\n\n\nif __name__ == '__main__':\n    try:\n        t1()\n    except KeyboardInterrupt:\n        ()\n        import sys\n\n        sys.exit()\n", "comments": "   usr bin env python2    coding utf 8   import tracemalloc   terminate() ", "content": "#!/usr/bin/env python2\n# coding:utf-8\n\nimport os\nimport sys\n#import tracemalloc\nimport gc\nimport time\n\ncurrent_path = os.path.dirname(os.path.abspath(__file__))\nroot_path = os.path.abspath( os.path.join(current_path, os.pardir, os.pardir, os.pardir))\ndata_path = os.path.abspath(os.path.join(root_path, os.pardir, os.pardir, 'data'))\nmodule_data_path = os.path.join(data_path, 'x_tunnel')\npython_path = os.path.abspath( os.path.join(root_path, 'python27', '1.0'))\n\nsys.path.append(root_path)\n\nnoarch_lib = os.path.abspath( os.path.join(python_path, 'lib', 'noarch'))\nsys.path.append(noarch_lib)\n\nif sys.platform == \"win32\":\n    win32_lib = os.path.abspath( os.path.join(python_path, 'lib', 'win32'))\n    sys.path.append(win32_lib)\nelif sys.platform.startswith(\"linux\"):\n    linux_lib = os.path.abspath( os.path.join(python_path, 'lib', 'linux'))\n    sys.path.append(linux_lib)\nelif sys.platform == \"darwin\":\n    darwin_lib = os.path.abspath( os.path.join(python_path, 'lib', 'darwin'))\n    sys.path.append(darwin_lib)\n    extra_lib = \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python\"\n    sys.path.append(extra_lib)\n\n\nfrom front import front\nfrom xlog import getLogger\nxlog = getLogger(\"tls_relay\")\n\n\ndef t1():\n    content, status, response = front.request(\"GET\", \"scan1.xx-net.net\", timeout=1000)\n    print status\n\n    del response\n\n    content, status, response = front.request(\"GET\", \"scan1.xx-net.net\", timeout=1000)\n    print status\n\n    front.stop()\n\n\nif __name__ == '__main__':\n    try:\n        t1()\n    except KeyboardInterrupt:\n        #terminate()\n        import sys\n\n        sys.exit()\n", "description": "a web proxy tool", "file_name": "test.py", "id": "b8556109d5d4fd5a0afbac7c55ba9ca0", "language": "Python", "project_name": "XX-Net", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/XX-net-XX-Net/XX-net-XX-Net-673a005/code/default/x_tunnel/local/tls_relay_front/test.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:03Z", "url": "https://github.com/XX-net/XX-Net", "wiki": true}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.addons.website_blog.tests.common import TestWebsiteBlogCommon\n\n\nclass TestWebsiteBlogFlow(TestWebsiteBlogCommon):\n\n    def test_website_blog_followers(self):\n        \n\n        \n        test_blog = self.env['blog.blog'].sudo(self.user_blogmanager).create({\n            'name': 'New Blog',\n        })\n        self.assertIn(\n            self.user_blogmanager.partner_id, test_blog.message_partner_ids,\n            'website_blog: blog create should be in the blog followers')\n        test_blog.message_subscribe([self.user_employee.partner_id.id, self.user_public.partner_id.id])\n\n        \n        test_blog_post = self.env['blog.post'].sudo(self.user_blogmanager).create({\n            'name': 'New Post',\n            'blog_id': test_blog.id,\n        })\n        self.assertNotIn(\n            self.user_employee.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: subscribing to a blog should not subscribe to its posts')\n        self.assertNotIn(\n            self.user_public.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: subscribing to a blog should not subscribe to its posts')\n\n        \n        test_blog_post.write({'website_published': True})\n\n        \n        publish_message = next((m for m in test_blog_post.blog_id.message_ids if m.subtype_id.id == self.ref('website_blog.mt_blog_blog_published')), None)\n        self.assertEqual(\n            publish_message.needaction_partner_ids,\n            self.user_employee.partner_id | self.user_public.partner_id,\n            'website_blog: peuple following a blog should be notified of a published post')\n\n        \n        test_blog_post.sudo().message_post(\n            body='Armande BlogUser Commented',\n            message_type='comment',\n            author_id=self.user_employee.partner_id.id,\n            subtype='mt_comment',\n        )\n        self.assertIn(\n            self.user_employee.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: people commenting a post should follow it afterwards')\n", "comments": "    test flow followers notifications blogs  intended         flow               people subscribe blog            creating new post  nobody except creator follows            people subscribed blog receive comments posts            published  notification sent blog followers            someone subscribe post comment  become follower            receive notification future comments             coding  utf 8        part odoo  see license file full copyright licensing details     create new blog  subscribe employee blog    create new post  blog followers follow post    publish blog    check publish message sent blog followers    armand posts message    becomes follower ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.addons.website_blog.tests.common import TestWebsiteBlogCommon\n\n\nclass TestWebsiteBlogFlow(TestWebsiteBlogCommon):\n\n    def test_website_blog_followers(self):\n        \"\"\" Test the flow of followers and notifications for blogs. Intended\n        flow :\n\n         - people subscribe to a blog\n         - when creating a new post, nobody except the creator follows it\n         - people subscribed to the blog does not receive comments on posts\n         - when published, a notification is sent to all blog followers\n         - if someone subscribe to the post or comment it, it become follower\n           and receive notification for future comments. \"\"\"\n\n        # Create a new blog, subscribe the employee to the blog\n        test_blog = self.env['blog.blog'].sudo(self.user_blogmanager).create({\n            'name': 'New Blog',\n        })\n        self.assertIn(\n            self.user_blogmanager.partner_id, test_blog.message_partner_ids,\n            'website_blog: blog create should be in the blog followers')\n        test_blog.message_subscribe([self.user_employee.partner_id.id, self.user_public.partner_id.id])\n\n        # Create a new post, blog followers should not follow the post\n        test_blog_post = self.env['blog.post'].sudo(self.user_blogmanager).create({\n            'name': 'New Post',\n            'blog_id': test_blog.id,\n        })\n        self.assertNotIn(\n            self.user_employee.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: subscribing to a blog should not subscribe to its posts')\n        self.assertNotIn(\n            self.user_public.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: subscribing to a blog should not subscribe to its posts')\n\n        # Publish the blog\n        test_blog_post.write({'website_published': True})\n\n        # Check publish message has been sent to blog followers\n        publish_message = next((m for m in test_blog_post.blog_id.message_ids if m.subtype_id.id == self.ref('website_blog.mt_blog_blog_published')), None)\n        self.assertEqual(\n            publish_message.needaction_partner_ids,\n            self.user_employee.partner_id | self.user_public.partner_id,\n            'website_blog: peuple following a blog should be notified of a published post')\n\n        # Armand posts a message -> becomes follower\n        test_blog_post.sudo().message_post(\n            body='Armande BlogUser Commented',\n            message_type='comment',\n            author_id=self.user_employee.partner_id.id,\n            subtype='mt_comment',\n        )\n        self.assertIn(\n            self.user_employee.partner_id, test_blog_post.message_partner_ids,\n            'website_blog: people commenting a post should follow it afterwards')\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_website_blog_flow.py", "id": "da32b54db210138b3d2ffe5745a138c4", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_blog/tests/test_website_blog_flow.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "docker", "code": "from __future__ import absolute_import\nfrom __future__ import unicode_literals\n\nimport pytest\n\nfrom .. import mock\nfrom .. import unittest\nfrom compose.network import check_remote_network_config\nfrom compose.network import Network\nfrom compose.network import NetworkConfigChangedError\n\n\nclass NetworkTest(unittest.TestCase):\n    def test_check_remote_network_config_success(self):\n        options = {'com.docker.network.driver.foo': 'bar'}\n        ipam_config = {\n            'driver': 'default',\n            'config': [\n                {'subnet': '172.0.0.1/16', },\n                {\n                    'subnet': '156.0.0.1/25',\n                    'gateway': '156.0.0.1',\n                    'aux_addresses': ['11.0.0.1', '24.25.26.27'],\n                    'ip_range': '156.0.0.1-254'\n                }\n            ]\n        }\n        labels = {\n            'com.project.tests.istest': 'true',\n            'com.project.sound.track': 'way out of here',\n        }\n        remote_labels = labels.copy()\n        remote_labels.update({\n            'com.docker.compose.project': 'compose_test',\n            'com.docker.compose.network': 'net1',\n        })\n        net = Network(\n            None, 'compose_test', 'net1', 'bridge',\n            options, enable_ipv6=True, ipam=ipam_config,\n            labels=labels\n        )\n        check_remote_network_config(\n            {\n                'Driver': 'bridge',\n                'Options': options,\n                'EnableIPv6': True,\n                'Internal': False,\n                'Attachable': True,\n                'IPAM': {\n                    'Driver': 'default',\n                    'Config': [{\n                        'Subnet': '156.0.0.1/25',\n                        'Gateway': '156.0.0.1',\n                        'AuxiliaryAddresses': ['24.25.26.27', '11.0.0.1'],\n                        'IPRange': '156.0.0.1-254'\n                    }, {\n                        'Subnet': '172.0.0.1/16',\n                        'Gateway': '172.0.0.1'\n                    }],\n                },\n                'Labels': remote_labels\n            },\n            net\n        )\n\n    def test_check_remote_network_config_whitelist(self):\n        options = {'com.docker.network.driver.foo': 'bar'}\n        remote_options = {\n            'com.docker.network.driver.overlay.vxlanid_list': '257',\n            'com.docker.network.driver.foo': 'bar',\n            'com.docker.network.windowsshim.hnsid': 'aac3fd4887daaec1e3b',\n        }\n        net = Network(\n            None, 'compose_test', 'net1', 'overlay',\n            options\n        )\n        check_remote_network_config(\n            {'Driver': 'overlay', 'Options': remote_options}, net\n        )\n\n    def test_check_remote_network_config_driver_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        with pytest.raises(NetworkConfigChangedError) as e:\n            check_remote_network_config(\n                {'Driver': 'bridge', 'Options': {}}, net\n            )\n\n        assert 'driver has changed' in str(e.value)\n\n    def test_check_remote_network_config_options_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        with pytest.raises(NetworkConfigChangedError) as e:\n            check_remote_network_config({'Driver': 'overlay', 'Options': {\n                'com.docker.network.driver.foo': 'baz'\n            }}, net)\n\n        assert 'option \"com.docker.network.driver.foo\" has changed' in str(e.value)\n\n    def test_check_remote_network_config_null_remote(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        check_remote_network_config(\n            {'Driver': 'overlay', 'Options': None}, net\n        )\n\n    def test_check_remote_network_config_null_remote_ipam_options(self):\n        ipam_config = {\n            'driver': 'default',\n            'config': [\n                {'subnet': '172.0.0.1/16', },\n                {\n                    'subnet': '156.0.0.1/25',\n                    'gateway': '156.0.0.1',\n                    'aux_addresses': ['11.0.0.1', '24.25.26.27'],\n                    'ip_range': '156.0.0.1-254'\n                }\n            ]\n        }\n        net = Network(\n            None, 'compose_test', 'net1', 'bridge', ipam=ipam_config,\n        )\n\n        check_remote_network_config(\n            {\n                'Driver': 'bridge',\n                'Attachable': True,\n                'IPAM': {\n                    'Driver': 'default',\n                    'Config': [{\n                        'Subnet': '156.0.0.1/25',\n                        'Gateway': '156.0.0.1',\n                        'AuxiliaryAddresses': ['24.25.26.27', '11.0.0.1'],\n                        'IPRange': '156.0.0.1-254'\n                    }, {\n                        'Subnet': '172.0.0.1/16',\n                        'Gateway': '172.0.0.1'\n                    }],\n                    'Options': None\n                },\n            },\n            net\n        )\n\n    def test_check_remote_network_labels_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay', labels={\n            'com.project.touhou.character': 'sakuya.izayoi'\n        })\n        remote = {\n            'Driver': 'overlay',\n            'Options': None,\n            'Labels': {\n                'com.docker.compose.network': 'net1',\n                'com.docker.compose.project': 'compose_test',\n                'com.project.touhou.character': 'marisa.kirisame',\n            }\n        }\n        with mock.patch('compose.network.log') as mock_log:\n            check_remote_network_config(remote, net)\n\n        mock_log.warn.assert_called_once_with(mock.ANY)\n        _, args, kwargs = mock_log.warn.mock_calls[0]\n        assert 'label \"com.project.touhou.character\" has changed' in args[0]\n", "comments": "", "content": "from __future__ import absolute_import\nfrom __future__ import unicode_literals\n\nimport pytest\n\nfrom .. import mock\nfrom .. import unittest\nfrom compose.network import check_remote_network_config\nfrom compose.network import Network\nfrom compose.network import NetworkConfigChangedError\n\n\nclass NetworkTest(unittest.TestCase):\n    def test_check_remote_network_config_success(self):\n        options = {'com.docker.network.driver.foo': 'bar'}\n        ipam_config = {\n            'driver': 'default',\n            'config': [\n                {'subnet': '172.0.0.1/16', },\n                {\n                    'subnet': '156.0.0.1/25',\n                    'gateway': '156.0.0.1',\n                    'aux_addresses': ['11.0.0.1', '24.25.26.27'],\n                    'ip_range': '156.0.0.1-254'\n                }\n            ]\n        }\n        labels = {\n            'com.project.tests.istest': 'true',\n            'com.project.sound.track': 'way out of here',\n        }\n        remote_labels = labels.copy()\n        remote_labels.update({\n            'com.docker.compose.project': 'compose_test',\n            'com.docker.compose.network': 'net1',\n        })\n        net = Network(\n            None, 'compose_test', 'net1', 'bridge',\n            options, enable_ipv6=True, ipam=ipam_config,\n            labels=labels\n        )\n        check_remote_network_config(\n            {\n                'Driver': 'bridge',\n                'Options': options,\n                'EnableIPv6': True,\n                'Internal': False,\n                'Attachable': True,\n                'IPAM': {\n                    'Driver': 'default',\n                    'Config': [{\n                        'Subnet': '156.0.0.1/25',\n                        'Gateway': '156.0.0.1',\n                        'AuxiliaryAddresses': ['24.25.26.27', '11.0.0.1'],\n                        'IPRange': '156.0.0.1-254'\n                    }, {\n                        'Subnet': '172.0.0.1/16',\n                        'Gateway': '172.0.0.1'\n                    }],\n                },\n                'Labels': remote_labels\n            },\n            net\n        )\n\n    def test_check_remote_network_config_whitelist(self):\n        options = {'com.docker.network.driver.foo': 'bar'}\n        remote_options = {\n            'com.docker.network.driver.overlay.vxlanid_list': '257',\n            'com.docker.network.driver.foo': 'bar',\n            'com.docker.network.windowsshim.hnsid': 'aac3fd4887daaec1e3b',\n        }\n        net = Network(\n            None, 'compose_test', 'net1', 'overlay',\n            options\n        )\n        check_remote_network_config(\n            {'Driver': 'overlay', 'Options': remote_options}, net\n        )\n\n    def test_check_remote_network_config_driver_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        with pytest.raises(NetworkConfigChangedError) as e:\n            check_remote_network_config(\n                {'Driver': 'bridge', 'Options': {}}, net\n            )\n\n        assert 'driver has changed' in str(e.value)\n\n    def test_check_remote_network_config_options_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        with pytest.raises(NetworkConfigChangedError) as e:\n            check_remote_network_config({'Driver': 'overlay', 'Options': {\n                'com.docker.network.driver.foo': 'baz'\n            }}, net)\n\n        assert 'option \"com.docker.network.driver.foo\" has changed' in str(e.value)\n\n    def test_check_remote_network_config_null_remote(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay')\n        check_remote_network_config(\n            {'Driver': 'overlay', 'Options': None}, net\n        )\n\n    def test_check_remote_network_config_null_remote_ipam_options(self):\n        ipam_config = {\n            'driver': 'default',\n            'config': [\n                {'subnet': '172.0.0.1/16', },\n                {\n                    'subnet': '156.0.0.1/25',\n                    'gateway': '156.0.0.1',\n                    'aux_addresses': ['11.0.0.1', '24.25.26.27'],\n                    'ip_range': '156.0.0.1-254'\n                }\n            ]\n        }\n        net = Network(\n            None, 'compose_test', 'net1', 'bridge', ipam=ipam_config,\n        )\n\n        check_remote_network_config(\n            {\n                'Driver': 'bridge',\n                'Attachable': True,\n                'IPAM': {\n                    'Driver': 'default',\n                    'Config': [{\n                        'Subnet': '156.0.0.1/25',\n                        'Gateway': '156.0.0.1',\n                        'AuxiliaryAddresses': ['24.25.26.27', '11.0.0.1'],\n                        'IPRange': '156.0.0.1-254'\n                    }, {\n                        'Subnet': '172.0.0.1/16',\n                        'Gateway': '172.0.0.1'\n                    }],\n                    'Options': None\n                },\n            },\n            net\n        )\n\n    def test_check_remote_network_labels_mismatch(self):\n        net = Network(None, 'compose_test', 'net1', 'overlay', labels={\n            'com.project.touhou.character': 'sakuya.izayoi'\n        })\n        remote = {\n            'Driver': 'overlay',\n            'Options': None,\n            'Labels': {\n                'com.docker.compose.network': 'net1',\n                'com.docker.compose.project': 'compose_test',\n                'com.project.touhou.character': 'marisa.kirisame',\n            }\n        }\n        with mock.patch('compose.network.log') as mock_log:\n            check_remote_network_config(remote, net)\n\n        mock_log.warn.assert_called_once_with(mock.ANY)\n        _, args, kwargs = mock_log.warn.mock_calls[0]\n        assert 'label \"com.project.touhou.character\" has changed' in args[0]\n", "description": "Define and run multi-container applications with Docker", "file_name": "network_test.py", "id": "14361dbc936db3266bcb7e4c1557cb66", "language": "Python", "project_name": "compose", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/docker-compose/docker-compose-867ad15/tests/unit/network_test.py", "save_time": "", "source": "", "update_at": "2018-03-13T22:03:14Z", "url": "https://github.com/docker/compose", "wiki": false}
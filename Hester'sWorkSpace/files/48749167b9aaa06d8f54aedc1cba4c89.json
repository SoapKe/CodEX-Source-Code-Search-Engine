{"author": "sympy", "code": "from sympy.sets.ordinals import Ordinal, OmegaPower, ord0, omega\n\ndef test_string_ordinals():\n    assert str(omega) == 'w'\n    assert str(Ordinal(OmegaPower(5, 3), OmegaPower(3, 2))) == 'w**5*3 + w**3*2'\n    assert str(Ordinal(OmegaPower(5, 3), OmegaPower(0, 5))) == 'w**5*3 + 5'\n    assert str(Ordinal(OmegaPower(1, 3), OmegaPower(0, 5))) == 'w*3 + 5'\n    assert str(Ordinal(OmegaPower(omega + 1 ,1), OmegaPower(3, 2))) == 'w**(w + 1) + w**3*2'\n\ndef test_addition_with_integers():\n    assert 3 + Ordinal(OmegaPower(5, 3)) == Ordinal(OmegaPower(5, 3))\n    assert Ordinal(OmegaPower(5, 3))+3 == Ordinal(OmegaPower(5, 3), OmegaPower(0, 3))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(0, 2))+3 == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(0, 5))\n\n\ndef test_addition_with_ordinals():\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) + Ordinal(OmegaPower(3, 3)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(3, 5))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) + Ordinal(OmegaPower(4, 2)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(4, 2))\n    assert Ordinal(OmegaPower(omega, 2), OmegaPower(3, 2)) + Ordinal(OmegaPower(4, 2)) == \\\n        Ordinal(OmegaPower(omega, 2), OmegaPower(4, 2))\n\ndef test_comparison():\n    assert Ordinal(OmegaPower(5, 3)) > Ordinal(OmegaPower(4, 3), OmegaPower(2, 1))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) < Ordinal(OmegaPower(5, 4))\n    assert Ordinal(OmegaPower(5, 4)) < Ordinal(OmegaPower(5, 5), OmegaPower(4, 1))\n\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(3, 2))\n    assert not Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) == Ordinal(OmegaPower(5, 3))\n    assert Ordinal(OmegaPower(omega, 3)) > Ordinal(OmegaPower(5, 3))\n\ndef test_multiplication_with_integers():\n    w = omega\n    assert 3*w == w\n    assert w*9 == Ordinal(OmegaPower(1, 9))\n\ndef test_multiplication():\n    w = omega\n    assert w*(w + 1) == w*w + w\n    assert (w + 1)*(w + 1) ==  w*w + w + 1\n    assert w*1 == w\n    assert 1*w == w\n    assert w*ord0 == ord0\n    assert ord0*w == ord0\n    assert w**w == w * w**w\n    assert (w**w)*w*w == w**(w + 2)\n\ndef test_exponentiation():\n    w = omega\n    assert w**2 == w*w\n    assert w**3 == w*w*w\n    assert w**(w + 1) == Ordinal(OmegaPower(omega + 1, 1))\n    assert (w**w)*(w**w) == w**(w*2)\n", "comments": "", "content": "from sympy.sets.ordinals import Ordinal, OmegaPower, ord0, omega\n\ndef test_string_ordinals():\n    assert str(omega) == 'w'\n    assert str(Ordinal(OmegaPower(5, 3), OmegaPower(3, 2))) == 'w**5*3 + w**3*2'\n    assert str(Ordinal(OmegaPower(5, 3), OmegaPower(0, 5))) == 'w**5*3 + 5'\n    assert str(Ordinal(OmegaPower(1, 3), OmegaPower(0, 5))) == 'w*3 + 5'\n    assert str(Ordinal(OmegaPower(omega + 1 ,1), OmegaPower(3, 2))) == 'w**(w + 1) + w**3*2'\n\ndef test_addition_with_integers():\n    assert 3 + Ordinal(OmegaPower(5, 3)) == Ordinal(OmegaPower(5, 3))\n    assert Ordinal(OmegaPower(5, 3))+3 == Ordinal(OmegaPower(5, 3), OmegaPower(0, 3))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(0, 2))+3 == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(0, 5))\n\n\ndef test_addition_with_ordinals():\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) + Ordinal(OmegaPower(3, 3)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(3, 5))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) + Ordinal(OmegaPower(4, 2)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(4, 2))\n    assert Ordinal(OmegaPower(omega, 2), OmegaPower(3, 2)) + Ordinal(OmegaPower(4, 2)) == \\\n        Ordinal(OmegaPower(omega, 2), OmegaPower(4, 2))\n\ndef test_comparison():\n    assert Ordinal(OmegaPower(5, 3)) > Ordinal(OmegaPower(4, 3), OmegaPower(2, 1))\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) < Ordinal(OmegaPower(5, 4))\n    assert Ordinal(OmegaPower(5, 4)) < Ordinal(OmegaPower(5, 5), OmegaPower(4, 1))\n\n    assert Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) == \\\n        Ordinal(OmegaPower(5, 3), OmegaPower(3, 2))\n    assert not Ordinal(OmegaPower(5, 3), OmegaPower(3, 2)) == Ordinal(OmegaPower(5, 3))\n    assert Ordinal(OmegaPower(omega, 3)) > Ordinal(OmegaPower(5, 3))\n\ndef test_multiplication_with_integers():\n    w = omega\n    assert 3*w == w\n    assert w*9 == Ordinal(OmegaPower(1, 9))\n\ndef test_multiplication():\n    w = omega\n    assert w*(w + 1) == w*w + w\n    assert (w + 1)*(w + 1) ==  w*w + w + 1\n    assert w*1 == w\n    assert 1*w == w\n    assert w*ord0 == ord0\n    assert ord0*w == ord0\n    assert w**w == w * w**w\n    assert (w**w)*w*w == w**(w + 2)\n\ndef test_exponentiation():\n    w = omega\n    assert w**2 == w*w\n    assert w**3 == w*w*w\n    assert w**(w + 1) == Ordinal(OmegaPower(omega + 1, 1))\n    assert (w**w)*(w**w) == w**(w*2)\n", "description": "A computer algebra system written in pure Python", "file_name": "test_ordinals.py", "id": "48749167b9aaa06d8f54aedc1cba4c89", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/sets/tests/test_ordinals.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
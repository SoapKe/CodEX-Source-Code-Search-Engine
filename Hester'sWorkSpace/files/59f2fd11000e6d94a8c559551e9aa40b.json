{"author": "HelloZeroNet", "code": "from Config import config\nfrom Plugin import PluginManager\n\nallow_reload = False\n\n@PluginManager.registerTo(\"UserManager\")\nclass UserManagerPlugin(object):\n    def load(self):\n        if not config.multiuser_local:\n            \n            if not self.users:\n                self.users = {}\n            return self.users\n        else:\n            return super(UserManagerPlugin, self).load()\n\n    \n    \n    def get(self, master_address=None):\n        users = self.list()\n        if master_address in users:\n            user = users[master_address]\n        else:\n            user = None\n        return user\n\n\n@PluginManager.registerTo(\"User\")\nclass UserPlugin(object):\n    \n    def save(self):\n        if not config.multiuser_local:\n            return False\n        else:\n            return super(UserPlugin, self).save()\n", "comments": "  in multiuser mode load users    find user master address    return  user none    in multiuser mode users data exits memory  dont write data user json ", "content": "from Config import config\nfrom Plugin import PluginManager\n\nallow_reload = False\n\n@PluginManager.registerTo(\"UserManager\")\nclass UserManagerPlugin(object):\n    def load(self):\n        if not config.multiuser_local:\n            # In multiuser mode do not load the users\n            if not self.users:\n                self.users = {}\n            return self.users\n        else:\n            return super(UserManagerPlugin, self).load()\n\n    # Find user by master address\n    # Return: User or None\n    def get(self, master_address=None):\n        users = self.list()\n        if master_address in users:\n            user = users[master_address]\n        else:\n            user = None\n        return user\n\n\n@PluginManager.registerTo(\"User\")\nclass UserPlugin(object):\n    # In multiuser mode users data only exits in memory, dont write to data/user.json\n    def save(self):\n        if not config.multiuser_local:\n            return False\n        else:\n            return super(UserPlugin, self).save()\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "UserPlugin.py", "id": "59f2fd11000e6d94a8c559551e9aa40b", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/plugins/disabled-Multiuser/UserPlugin.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
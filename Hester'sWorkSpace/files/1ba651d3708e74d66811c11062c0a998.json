{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    get_element_by_class,\n    get_element_by_id,\n    unified_strdate,\n)\n\n\nclass FreesoundIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?freesound\\.org/people/[^/]+/sounds/(?P<id>[^/]+)'\n    _TEST = {\n        'url': 'http://www.freesound.org/people/miklovan/sounds/194503/',\n        'md5': '12280ceb42c81f19a515c745eae07650',\n        'info_dict': {\n            'id': '194503',\n            'ext': 'mp3',\n            'title': 'gulls in the city.wav',\n            'description': 'the sounds of seagulls in the city',\n            'duration': 130.233,\n            'uploader': 'miklovan',\n            'upload_date': '20130715',\n            'tags': list,\n        }\n    }\n\n    def _real_extract(self, url):\n        audio_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, audio_id)\n\n        audio_url = self._og_search_property('audio', webpage, 'song url')\n        title = self._og_search_property('audio:title', webpage, 'song title')\n\n        description = self._html_search_regex(\n            r'(?s)id=[\"\\']sound_description[\"\\'][^>]*>(.+?)</div>',\n            webpage, 'description', fatal=False)\n\n        duration = float_or_none(\n            get_element_by_class('duration', webpage), scale=1000)\n\n        upload_date = unified_strdate(get_element_by_id('sound_date', webpage))\n        uploader = self._og_search_property(\n            'audio:artist', webpage, 'uploader', fatal=False)\n\n        channels = self._html_search_regex(\n            r'Channels</dt><dd>(.+?)</dd>', webpage,\n            'channels info', fatal=False)\n\n        tags_str = get_element_by_class('tags', webpage)\n        tags = re.findall(r'<a[^>]+>([^<]+)', tags_str) if tags_str else None\n\n        audio_urls = [audio_url]\n\n        LQ_FORMAT = '-lq.mp3'\n        if LQ_FORMAT in audio_url:\n            audio_urls.append(audio_url.replace(LQ_FORMAT, '-hq.mp3'))\n\n        formats = [{\n            'url': format_url,\n            'format_note': channels,\n            'quality': quality,\n        } for quality, format_url in enumerate(audio_urls)]\n        self._sort_formats(formats)\n\n        return {\n            'id': audio_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'uploader': uploader,\n            'upload_date': upload_date,\n            'tags': tags,\n            'formats': formats,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    get_element_by_class,\n    get_element_by_id,\n    unified_strdate,\n)\n\n\nclass FreesoundIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?freesound\\.org/people/[^/]+/sounds/(?P<id>[^/]+)'\n    _TEST = {\n        'url': 'http://www.freesound.org/people/miklovan/sounds/194503/',\n        'md5': '12280ceb42c81f19a515c745eae07650',\n        'info_dict': {\n            'id': '194503',\n            'ext': 'mp3',\n            'title': 'gulls in the city.wav',\n            'description': 'the sounds of seagulls in the city',\n            'duration': 130.233,\n            'uploader': 'miklovan',\n            'upload_date': '20130715',\n            'tags': list,\n        }\n    }\n\n    def _real_extract(self, url):\n        audio_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, audio_id)\n\n        audio_url = self._og_search_property('audio', webpage, 'song url')\n        title = self._og_search_property('audio:title', webpage, 'song title')\n\n        description = self._html_search_regex(\n            r'(?s)id=[\"\\']sound_description[\"\\'][^>]*>(.+?)</div>',\n            webpage, 'description', fatal=False)\n\n        duration = float_or_none(\n            get_element_by_class('duration', webpage), scale=1000)\n\n        upload_date = unified_strdate(get_element_by_id('sound_date', webpage))\n        uploader = self._og_search_property(\n            'audio:artist', webpage, 'uploader', fatal=False)\n\n        channels = self._html_search_regex(\n            r'Channels</dt><dd>(.+?)</dd>', webpage,\n            'channels info', fatal=False)\n\n        tags_str = get_element_by_class('tags', webpage)\n        tags = re.findall(r'<a[^>]+>([^<]+)', tags_str) if tags_str else None\n\n        audio_urls = [audio_url]\n\n        LQ_FORMAT = '-lq.mp3'\n        if LQ_FORMAT in audio_url:\n            audio_urls.append(audio_url.replace(LQ_FORMAT, '-hq.mp3'))\n\n        formats = [{\n            'url': format_url,\n            'format_note': channels,\n            'quality': quality,\n        } for quality, format_url in enumerate(audio_urls)]\n        self._sort_formats(formats)\n\n        return {\n            'id': audio_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'uploader': uploader,\n            'upload_date': upload_date,\n            'tags': tags,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "freesound.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/freesound.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
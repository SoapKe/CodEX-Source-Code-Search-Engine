{"author": "geekcomputers", "code": "\n\n\n\n\n\n\n\n\n\nimport os\t\t\t\t\t\t\nimport subprocess\t\t\t\nimport sys\t\t\t\t\t\t\n\nfilename = sys.argv[0]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\nif '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:\t\n    print '''\nYou need to supply the first octets of the address Usage : ''' + filename + ''' 111.111.111 '''\n    sys.exit(0)\nelse:\n\n    if (len(sys.argv) < 2): \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        sys.exit (' You need to supply the first octets of the address Usage : ' + filename + ' 111.111.111')\n\n    subnet = sys.argv[1]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n    if os.name == \"posix\":\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        myping = \"ping -c 2 \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    elif os.name in (\"nt\", \"dos\", \"ce\"):\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        myping = \"ping -n 2 \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n    f = open('ping_' + subnet + '.log', 'w')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    for ip in range(2,255):\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        ret = subprocess.call(myping + str(subnet) + \".\" + str(ip) ,\n            shell=True, stdout=f, stderr=subprocess.STDOUT) \n        if ret == 0:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n            f.write (subnet + \".\" + str(ip) + \" is alive\" + \"\\n\")\t\t\t\t\t\t\t\t\t\n        else:\n            f.write (subnet + \".\" + str(ip) + \" did not respond\" + \"\\n\")\t\t\t\t\t\t\n", "comments": "    you need supply first octets address usage         filename       111 111 111        script name    ping subnet py    author      craig richards    created      12th january 2012    last modified       version      1 0    modifications       description     after supplying first 3 octets scan final range available addresses    load library module    load library module    load library module    sets variable script name    help menu called    if arguments passed display help instructions run script    set variable subnet three octets pass    check os  linux    this ping command    check os  windows    this ping command    open logfile    set ip variable range numbers    run command pinging servers    depending response    write receive reponse    write reach box ", "content": "# Script Name\t\t: ping_subnet.py\n# Author\t\t\t\t: Craig Richards\n# Created\t\t\t\t: 12th January 2012\n# Last Modified\t\t:\n# Version\t\t\t\t: 1.0\n\n# Modifications\t\t:\n\n# Description\t\t\t: After supplying the first 3 octets it will scan the final range for available addresses\n\nimport os\t\t\t\t\t\t# Load the Library Module\nimport subprocess\t\t\t# Load the Library Module\nimport sys\t\t\t\t\t\t# Load the Library Module\n\nfilename = sys.argv[0]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Sets a variable for the script name\n\nif '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:\t# Help Menu if called\n    print '''\nYou need to supply the first octets of the address Usage : ''' + filename + ''' 111.111.111 '''\n    sys.exit(0)\nelse:\n\n    if (len(sys.argv) < 2): \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# If no arguments are passed then display the help and instructions on how to run the script\n        sys.exit (' You need to supply the first octets of the address Usage : ' + filename + ' 111.111.111')\n\n    subnet = sys.argv[1]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Set the variable subnet as the three octets you pass it\n\n    if os.name == \"posix\":\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Check the os, if it's linux then\n        myping = \"ping -c 2 \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# This is the ping command\n    elif os.name in (\"nt\", \"dos\", \"ce\"):\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Check the os, if it's windows then\n        myping = \"ping -n 2 \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# This is the ping command\n\n    f = open('ping_' + subnet + '.log', 'w')\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Open a logfile\n    for ip in range(2,255):\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Set the ip variable for the range of numbers\n        ret = subprocess.call(myping + str(subnet) + \".\" + str(ip) ,\n            shell=True, stdout=f, stderr=subprocess.STDOUT) # Run the command pinging the servers\n        if ret == 0:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Depending on the response\n            f.write (subnet + \".\" + str(ip) + \" is alive\" + \"\\n\")\t\t\t\t\t\t\t\t\t# Write out that you can receive a reponse\n        else:\n            f.write (subnet + \".\" + str(ip) + \" did not respond\" + \"\\n\")\t\t\t\t\t\t# Write out you can't reach the box\n", "description": "My Python Examples", "file_name": "ping_subnet.py", "id": "7da5cc200895fc9b1453e7a121970420", "language": "Python", "project_name": "Python", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/geekcomputers-Python/geekcomputers-Python-ef88c96/ping_subnet.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:41:16Z", "url": "https://github.com/geekcomputers/Python", "wiki": true}
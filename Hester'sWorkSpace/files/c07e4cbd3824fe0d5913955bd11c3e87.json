{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass SexuIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?sexu\\.com/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://sexu.com/961791/',\n        'md5': 'ff615aca9691053c94f8f10d96cd7884',\n        'info_dict': {\n            'id': '961791',\n            'ext': 'mp4',\n            'title': 'md5:4d05a19a5fc049a63dbbaf05fb71d91b',\n            'description': 'md5:2b75327061310a3afb3fbd7d09e2e403',\n            'categories': list,  \n            'thumbnail': r're:https?://.*\\.jpg$',\n            'age_limit': 18,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        jwvideo = self._parse_json(\n            self._search_regex(r'\\.setup\\(\\s*({.+?})\\s*\\);', webpage, 'jwvideo'),\n            video_id)\n\n        sources = jwvideo['sources']\n\n        formats = [{\n            'url': source['file'].replace('\\\\', ''),\n            'format_id': source.get('label'),\n            'height': int(self._search_regex(\n                r'^(\\d+)[pP]', source.get('label', ''), 'height',\n                default=None)),\n        } for source in sources if source.get('file')]\n        self._sort_formats(formats)\n\n        title = self._html_search_regex(\n            r'<title>([^<]+)\\s*-\\s*Sexu\\.Com</title>', webpage, 'title')\n\n        description = self._html_search_meta(\n            'description', webpage, 'description')\n\n        thumbnail = jwvideo.get('image')\n\n        categories_str = self._html_search_meta(\n            'keywords', webpage, 'categories')\n        categories = (\n            None if categories_str is None\n            else categories_str.split(','))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'categories': categories,\n            'formats': formats,\n            'age_limit': 18,\n        }\n", "comments": "# NSFW\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass SexuIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?sexu\\.com/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://sexu.com/961791/',\n        'md5': 'ff615aca9691053c94f8f10d96cd7884',\n        'info_dict': {\n            'id': '961791',\n            'ext': 'mp4',\n            'title': 'md5:4d05a19a5fc049a63dbbaf05fb71d91b',\n            'description': 'md5:2b75327061310a3afb3fbd7d09e2e403',\n            'categories': list,  # NSFW\n            'thumbnail': r're:https?://.*\\.jpg$',\n            'age_limit': 18,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        jwvideo = self._parse_json(\n            self._search_regex(r'\\.setup\\(\\s*({.+?})\\s*\\);', webpage, 'jwvideo'),\n            video_id)\n\n        sources = jwvideo['sources']\n\n        formats = [{\n            'url': source['file'].replace('\\\\', ''),\n            'format_id': source.get('label'),\n            'height': int(self._search_regex(\n                r'^(\\d+)[pP]', source.get('label', ''), 'height',\n                default=None)),\n        } for source in sources if source.get('file')]\n        self._sort_formats(formats)\n\n        title = self._html_search_regex(\n            r'<title>([^<]+)\\s*-\\s*Sexu\\.Com</title>', webpage, 'title')\n\n        description = self._html_search_meta(\n            'description', webpage, 'description')\n\n        thumbnail = jwvideo.get('image')\n\n        categories_str = self._html_search_meta(\n            'keywords', webpage, 'categories')\n        categories = (\n            None if categories_str is None\n            else categories_str.split(','))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'categories': categories,\n            'formats': formats,\n            'age_limit': 18,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "sexu.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/sexu.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
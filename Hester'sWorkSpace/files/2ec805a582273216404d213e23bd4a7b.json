{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom hashlib import sha1\n\nfrom django.core.files.base import ContentFile\n\nfrom sentry.testutils import TestCase\nfrom sentry.tasks.assemble import assemble_dif\nfrom sentry.models import FileBlob\nfrom sentry.models.file import ChunkFileState\nfrom sentry.models.dsymfile import get_assemble_status, ProjectDSymFile\n\n\nclass AssembleTest(TestCase):\n    def setUp(self):\n        self.organization = self.create_organization(owner=self.user)\n        self.team = self.create_team(organization=self.organization)\n        self.project = self.create_project(\n            teams=[\n                self.team],\n            organization=self.organization,\n            name='foo')\n\n    def test_wrong_dif(self):\n        content1 = 'foo'.encode('utf-8')\n        fileobj1 = ContentFile(content1)\n\n        content2 = 'bar'.encode('utf-8')\n        fileobj2 = ContentFile(content2)\n\n        content3 = 'baz'.encode('utf-8')\n        fileobj3 = ContentFile(content3)\n\n        total_checksum = sha1(content2 + content1 + content3).hexdigest()\n\n        \n        blob1 = FileBlob.from_file(fileobj1)\n        blob3 = FileBlob.from_file(fileobj3)\n        blob2 = FileBlob.from_file(fileobj2)\n\n        chunks = [blob2.checksum, blob1.checksum, blob3.checksum]\n\n        assemble_dif(\n            project_id=self.project.id,\n            name='foo.sym',\n            checksum=total_checksum,\n            chunks=chunks,\n        )\n\n        assert get_assemble_status(self.project, total_checksum)[0] == ChunkFileState.ERROR\n\n    def test_dif(self):\n        sym_file = self.load_fixture('crash.sym')\n        blob1 = FileBlob.from_file(ContentFile(sym_file))\n        total_checksum = sha1(sym_file).hexdigest()\n\n        assemble_dif(\n            project_id=self.project.id,\n            name='crash.sym',\n            checksum=total_checksum,\n            chunks=[blob1.checksum],\n        )\n\n        dif = ProjectDSymFile.objects.filter(\n            project=self.project,\n            file__checksum=total_checksum,\n        ).get()\n\n        assert dif.file.headers == {'Content-Type': 'text/x-breakpad'}\n", "comments": "  the order purpose check order checksums ", "content": "from __future__ import absolute_import\n\nfrom hashlib import sha1\n\nfrom django.core.files.base import ContentFile\n\nfrom sentry.testutils import TestCase\nfrom sentry.tasks.assemble import assemble_dif\nfrom sentry.models import FileBlob\nfrom sentry.models.file import ChunkFileState\nfrom sentry.models.dsymfile import get_assemble_status, ProjectDSymFile\n\n\nclass AssembleTest(TestCase):\n    def setUp(self):\n        self.organization = self.create_organization(owner=self.user)\n        self.team = self.create_team(organization=self.organization)\n        self.project = self.create_project(\n            teams=[\n                self.team],\n            organization=self.organization,\n            name='foo')\n\n    def test_wrong_dif(self):\n        content1 = 'foo'.encode('utf-8')\n        fileobj1 = ContentFile(content1)\n\n        content2 = 'bar'.encode('utf-8')\n        fileobj2 = ContentFile(content2)\n\n        content3 = 'baz'.encode('utf-8')\n        fileobj3 = ContentFile(content3)\n\n        total_checksum = sha1(content2 + content1 + content3).hexdigest()\n\n        # The order here is on purpose because we check for the order of checksums\n        blob1 = FileBlob.from_file(fileobj1)\n        blob3 = FileBlob.from_file(fileobj3)\n        blob2 = FileBlob.from_file(fileobj2)\n\n        chunks = [blob2.checksum, blob1.checksum, blob3.checksum]\n\n        assemble_dif(\n            project_id=self.project.id,\n            name='foo.sym',\n            checksum=total_checksum,\n            chunks=chunks,\n        )\n\n        assert get_assemble_status(self.project, total_checksum)[0] == ChunkFileState.ERROR\n\n    def test_dif(self):\n        sym_file = self.load_fixture('crash.sym')\n        blob1 = FileBlob.from_file(ContentFile(sym_file))\n        total_checksum = sha1(sym_file).hexdigest()\n\n        assemble_dif(\n            project_id=self.project.id,\n            name='crash.sym',\n            checksum=total_checksum,\n            chunks=[blob1.checksum],\n        )\n\n        dif = ProjectDSymFile.objects.filter(\n            project=self.project,\n            file__checksum=total_checksum,\n        ).get()\n\n        assert dif.file.headers == {'Content-Type': 'text/x-breakpad'}\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_assemble.py", "id": "2ec805a582273216404d213e23bd4a7b", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/tasks/test_assemble.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
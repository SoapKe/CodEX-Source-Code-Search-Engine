{"author": "jwilder", "code": "import pytest\n\n\ndef test_arbitrary_headers_are_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'Foo': 'Bar'})\n    assert r.status_code == 200\n    assert \"Foo: Bar\\n\" in r.text\n\n\n\n\ndef test_X_Forwarded_For_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-For:\" in r.text\n\ndef test_X_Forwarded_For_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-For': '1.2.3.4'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-For: 1.2.3.4, \" in r.text\n\n\n\n\ndef test_X_Forwarded_Proto_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Proto: https\" in r.text\n\ndef test_X_Forwarded_Proto_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Proto': 'f00'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Proto: f00\\n\" in r.text\n\n\n\n\ndef test_X_Forwarded_Port_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Port: 443\\n\" in r.text\n\ndef test_X_Forwarded_Port_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Port': '1234'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Port: 1234\\n\" in r.text\n\n\n\n\ndef test_X_Forwarded_Ssl_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Ssl: on\\n\" in r.text\n\ndef test_X_Forwarded_Ssl_is_overwritten(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Ssl': 'f00'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Ssl: on\\n\" in r.text\n\n\n\n\ndef test_X_Real_IP_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Real-IP: \" in r.text\n\ndef test_Host_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"Host: web.nginx-proxy.tld\" in r.text\n\ndef test_httpoxy_safe(docker_compose, nginxproxy):\n    \n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'Proxy': 'tcp://some.hacker.com'})\n    assert r.status_code == 200\n    assert \"Proxy:\" not in r.text\n    \n", "comments": "        see https   httpoxy org      nginx proxy suppress  proxy  header                testing handling x forwarded for              testing handling x forwarded proto              testing handling x forwarded port              testing handling x forwarded ssl              other headers ", "content": "import pytest\n\n\ndef test_arbitrary_headers_are_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'Foo': 'Bar'})\n    assert r.status_code == 200\n    assert \"Foo: Bar\\n\" in r.text\n\n\n##### Testing the handling of X-Forwarded-For #####\n\ndef test_X_Forwarded_For_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-For:\" in r.text\n\ndef test_X_Forwarded_For_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-For': '1.2.3.4'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-For: 1.2.3.4, \" in r.text\n\n\n##### Testing the handling of X-Forwarded-Proto #####\n\ndef test_X_Forwarded_Proto_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Proto: https\" in r.text\n\ndef test_X_Forwarded_Proto_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Proto': 'f00'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Proto: f00\\n\" in r.text\n\n\n##### Testing the handling of X-Forwarded-Port #####\n\ndef test_X_Forwarded_Port_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Port: 443\\n\" in r.text\n\ndef test_X_Forwarded_Port_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Port': '1234'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Port: 1234\\n\" in r.text\n\n\n##### Testing the handling of X-Forwarded-Ssl #####\n\ndef test_X_Forwarded_Ssl_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Forwarded-Ssl: on\\n\" in r.text\n\ndef test_X_Forwarded_Ssl_is_overwritten(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'X-Forwarded-Ssl': 'f00'})\n    assert r.status_code == 200\n    assert \"X-Forwarded-Ssl: on\\n\" in r.text\n\n\n##### Other headers\n\ndef test_X_Real_IP_is_generated(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"X-Real-IP: \" in r.text\n\ndef test_Host_is_passed_on(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\")\n    assert r.status_code == 200\n    assert \"Host: web.nginx-proxy.tld\" in r.text\n\ndef test_httpoxy_safe(docker_compose, nginxproxy):\n    \"\"\"\n    See https://httpoxy.org/\n    nginx-proxy should suppress the `Proxy` header\n    \"\"\"\n    r = nginxproxy.get(\"https://web.nginx-proxy.tld/headers\", headers={'Proxy': 'tcp://some.hacker.com'})\n    assert r.status_code == 200\n    assert \"Proxy:\" not in r.text\n    \n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_https.py", "id": "989a20cd095cf8126986790f28dd9052", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_headers/test_https.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
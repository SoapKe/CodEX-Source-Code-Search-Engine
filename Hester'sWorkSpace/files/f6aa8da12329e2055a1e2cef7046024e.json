{"author": "odoo", "code": "\"\"\" ESC/POS Exceptions classes \"\"\"\n\n\nclass Error(Exception):\n    \"\"\" Base class for ESC/POS errors \"\"\"\n    def __init__(self, msg, status=None):\n        Exception.__init__(self)\n        self.msg = msg\n        self.resultcode = 1\n        if status is not None:\n            self.resultcode = status\n\n    def __str__(self):\n        return self.msg\n\n\n\n\n\n\n\n\n\n\n\nclass BarcodeTypeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 10\n\n    def __str__(self):\n        return \"No Barcode type is defined\"\n\nclass BarcodeSizeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 20\n\n    def __str__(self):\n        return \"Barcode size is out of range\"\n\nclass BarcodeCodeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 30\n\n    def __str__(self):\n        return \"Code was not supplied\"\n\nclass ImageSizeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 40\n\n    def __str__(self):\n        return \"Image height is longer than 255px and can't be printed\"\n\nclass TextError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 50\n\n    def __str__(self):\n        return \"Text string must be supplied to the text() method\"\n\n\nclass CashDrawerError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 60\n\n    def __str__(self):\n        return \"Valid pin must be set to send pulse\"\n\nclass NoStatusError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 70\n\n    def __str__(self):\n        return \"Impossible to get status from the printer: \" + str(self.msg)\n\nclass TicketNotPrinted(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 80\n\n    def __str__(self):\n        return \"A part of the ticket was not been printed: \" + str(self.msg)\n\nclass NoDeviceError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 90\n\n    def __str__(self):\n        return str(self.msg)\n\nclass HandleDeviceError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 100\n\n    def __str__(self):\n        return str(self.msg)\n", "comments": "    esc pos exceptions classes       class error(exception)          base class esc pos errors        result exit codes    0    success    10   no barcode type defined    20   barcode size values range    30   barcode text supplied    40   image height large    50   no string supplied printed    60   invalid pin send cash drawer pulse ", "content": "\"\"\" ESC/POS Exceptions classes \"\"\"\n\n\nclass Error(Exception):\n    \"\"\" Base class for ESC/POS errors \"\"\"\n    def __init__(self, msg, status=None):\n        Exception.__init__(self)\n        self.msg = msg\n        self.resultcode = 1\n        if status is not None:\n            self.resultcode = status\n\n    def __str__(self):\n        return self.msg\n\n# Result/Exit codes\n# 0  = success\n# 10 = No Barcode type defined\n# 20 = Barcode size values are out of range\n# 30 = Barcode text not supplied\n# 40 = Image height is too large\n# 50 = No string supplied to be printed\n# 60 = Invalid pin to send Cash Drawer pulse\n\n\nclass BarcodeTypeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 10\n\n    def __str__(self):\n        return \"No Barcode type is defined\"\n\nclass BarcodeSizeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 20\n\n    def __str__(self):\n        return \"Barcode size is out of range\"\n\nclass BarcodeCodeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 30\n\n    def __str__(self):\n        return \"Code was not supplied\"\n\nclass ImageSizeError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 40\n\n    def __str__(self):\n        return \"Image height is longer than 255px and can't be printed\"\n\nclass TextError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 50\n\n    def __str__(self):\n        return \"Text string must be supplied to the text() method\"\n\n\nclass CashDrawerError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 60\n\n    def __str__(self):\n        return \"Valid pin must be set to send pulse\"\n\nclass NoStatusError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 70\n\n    def __str__(self):\n        return \"Impossible to get status from the printer: \" + str(self.msg)\n\nclass TicketNotPrinted(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 80\n\n    def __str__(self):\n        return \"A part of the ticket was not been printed: \" + str(self.msg)\n\nclass NoDeviceError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 90\n\n    def __str__(self):\n        return str(self.msg)\n\nclass HandleDeviceError(Error):\n    def __init__(self, msg=\"\"):\n        Error.__init__(self, msg)\n        self.msg = msg\n        self.resultcode = 100\n\n    def __str__(self):\n        return str(self.msg)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "exceptions.py", "id": "f6aa8da12329e2055a1e2cef7046024e", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hw_escpos/escpos/exceptions.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
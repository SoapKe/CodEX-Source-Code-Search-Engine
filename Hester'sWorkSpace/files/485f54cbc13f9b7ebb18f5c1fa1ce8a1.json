{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom django.db import models\nfrom sentry.db.models import (\n    Model, BoundedIntegerField, BoundedBigIntegerField, BoundedPositiveIntegerField\n)\nfrom sentry.testutils import TestCase\n\n\n\n\nclass DummyModel(Model):\n    __core__ = False  \n\n    foo = models.CharField(max_length=32)\n    normint = BoundedIntegerField(null=True)\n    bigint = BoundedBigIntegerField(null=True)\n    posint = BoundedPositiveIntegerField(null=True)\n\n\nclass ModelTest(TestCase):\n    def test_foo_hasnt_changed_on_init(self):\n        inst = DummyModel(id=1, foo='bar')\n        self.assertFalse(inst.has_changed('foo'))\n\n    def test_foo_has_changes_before_save(self):\n        inst = DummyModel(id=1, foo='bar')\n        inst.foo = 'baz'\n        self.assertTrue(inst.has_changed('foo'))\n        self.assertEquals(inst.old_value('foo'), 'bar')\n\n    def test_foo_hasnt_changed_after_save(self):\n        inst = DummyModel(id=1, foo='bar')\n        inst.foo = 'baz'\n        self.assertTrue(inst.has_changed('foo'))\n        self.assertEquals(inst.old_value('foo'), 'bar')\n        models.signals.post_save.send(instance=inst, sender=type(inst), created=False)\n        self.assertFalse(inst.has_changed('foo'))\n\n    def test_large_int(self):\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(normint=int(9223372036854775807), foo='bar')\n\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(bigint=int(9223372036854775808), foo='bar')\n\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(posint=int(9223372036854775808), foo='bar')\n", "comments": "  there good chance model wont get created db  avoid    assuming exists tests     needs defined sentry yell ", "content": "from __future__ import absolute_import\n\nfrom django.db import models\nfrom sentry.db.models import (\n    Model, BoundedIntegerField, BoundedBigIntegerField, BoundedPositiveIntegerField\n)\nfrom sentry.testutils import TestCase\n\n\n# There's a good chance this model wont get created in the db, so avoid\n# assuming it exists in these tests.\nclass DummyModel(Model):\n    __core__ = False  # needs defined for Sentry to not yell at you\n\n    foo = models.CharField(max_length=32)\n    normint = BoundedIntegerField(null=True)\n    bigint = BoundedBigIntegerField(null=True)\n    posint = BoundedPositiveIntegerField(null=True)\n\n\nclass ModelTest(TestCase):\n    def test_foo_hasnt_changed_on_init(self):\n        inst = DummyModel(id=1, foo='bar')\n        self.assertFalse(inst.has_changed('foo'))\n\n    def test_foo_has_changes_before_save(self):\n        inst = DummyModel(id=1, foo='bar')\n        inst.foo = 'baz'\n        self.assertTrue(inst.has_changed('foo'))\n        self.assertEquals(inst.old_value('foo'), 'bar')\n\n    def test_foo_hasnt_changed_after_save(self):\n        inst = DummyModel(id=1, foo='bar')\n        inst.foo = 'baz'\n        self.assertTrue(inst.has_changed('foo'))\n        self.assertEquals(inst.old_value('foo'), 'bar')\n        models.signals.post_save.send(instance=inst, sender=type(inst), created=False)\n        self.assertFalse(inst.has_changed('foo'))\n\n    def test_large_int(self):\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(normint=int(9223372036854775807), foo='bar')\n\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(bigint=int(9223372036854775808), foo='bar')\n\n        with self.assertRaises(AssertionError):\n            DummyModel.objects.create(posint=int(9223372036854775808), foo='bar')\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "tests.py", "id": "485f54cbc13f9b7ebb18f5c1fa1ce8a1", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/utils/models/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "ansible", "code": " (c) 2018 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport os\nimport json\n\nfrom units.modules.utils import AnsibleExitJson, AnsibleFailJson, ModuleTestCase\n\n\nfixture_path = os.path.join(os.path.dirname(__file__), 'fixtures')\nfixture_data = {}\n\n\ndef load_fixture(name):\n    path = os.path.join(fixture_path, name)\n\n    if path in fixture_data:\n        return fixture_data[path]\n\n    with open(path) as f:\n        data = f.read()\n\n    try:\n        data = json.loads(data)\n    except:\n        pass\n\n    fixture_data[path] = data\n    return data\n\n\nclass TestEdgeosModule(ModuleTestCase):\n\n    def execute_module(self, failed=False, changed=False, commands=None, sort=True, defaults=False):\n        self.load_fixtures(commands)\n\n        if failed:\n            result = self.failed()\n            self.assertTrue(result['failed'], result)\n        else:\n            result = self.changed(changed)\n            self.assertEqual(result['changed'], changed, result)\n\n        if commands is not None:\n            if sort:\n                self.assertEqual(sorted(commands), sorted(result['commands']), result['commands'])\n            else:\n                self.assertEqual(commands, result['commands'], result['commands'])\n\n        return result\n\n    def failed(self):\n        with self.assertRaises(AnsibleFailJson) as exc:\n            self.module.main()\n\n        result = exc.exception.args[0]\n        self.assertTrue(result['failed'], result)\n        return result\n\n    def changed(self, changed=False):\n        with self.assertRaises(AnsibleExitJson) as exc:\n            self.module.main()\n\n        result = exc.exception.args[0]\n        self.assertEqual(result['changed'], changed, result)\n        return result\n\n    def load_fixtures(self, commands=None):\n        pass\n", "comments": "  (c) 2018 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses    ", "content": "# (c) 2018 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport os\nimport json\n\nfrom units.modules.utils import AnsibleExitJson, AnsibleFailJson, ModuleTestCase\n\n\nfixture_path = os.path.join(os.path.dirname(__file__), 'fixtures')\nfixture_data = {}\n\n\ndef load_fixture(name):\n    path = os.path.join(fixture_path, name)\n\n    if path in fixture_data:\n        return fixture_data[path]\n\n    with open(path) as f:\n        data = f.read()\n\n    try:\n        data = json.loads(data)\n    except:\n        pass\n\n    fixture_data[path] = data\n    return data\n\n\nclass TestEdgeosModule(ModuleTestCase):\n\n    def execute_module(self, failed=False, changed=False, commands=None, sort=True, defaults=False):\n        self.load_fixtures(commands)\n\n        if failed:\n            result = self.failed()\n            self.assertTrue(result['failed'], result)\n        else:\n            result = self.changed(changed)\n            self.assertEqual(result['changed'], changed, result)\n\n        if commands is not None:\n            if sort:\n                self.assertEqual(sorted(commands), sorted(result['commands']), result['commands'])\n            else:\n                self.assertEqual(commands, result['commands'], result['commands'])\n\n        return result\n\n    def failed(self):\n        with self.assertRaises(AnsibleFailJson) as exc:\n            self.module.main()\n\n        result = exc.exception.args[0]\n        self.assertTrue(result['failed'], result)\n        return result\n\n    def changed(self, changed=False):\n        with self.assertRaises(AnsibleExitJson) as exc:\n            self.module.main()\n\n        result = exc.exception.args[0]\n        self.assertEqual(result['changed'], changed, result)\n        return result\n\n    def load_fixtures(self, commands=None):\n        pass\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "edgeos_module.py", "id": "9e3b69ec3f615e640fc60e058d27b611", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/edgeos/edgeos_module.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    js_to_json,\n    remove_end,\n    determine_ext,\n)\n\n\nclass HellPornoIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?hellporno\\.(?:com/videos|net/v)/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://hellporno.com/videos/dixie-is-posing-with-naked-ass-very-erotic/',\n        'md5': '1fee339c610d2049699ef2aa699439f1',\n        'info_dict': {\n            'id': '149116',\n            'display_id': 'dixie-is-posing-with-naked-ass-very-erotic',\n            'ext': 'mp4',\n            'title': 'Dixie is posing with naked ass very erotic',\n            'thumbnail': r're:https?://.*\\.jpg$',\n            'age_limit': 18,\n        }\n    }, {\n        'url': 'http://hellporno.net/v/186271/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = remove_end(self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title'), ' - Hell Porno')\n\n        flashvars = self._parse_json(self._search_regex(\n            r'var\\s+flashvars\\s*=\\s*({.+?});', webpage, 'flashvars'),\n            display_id, transform_source=js_to_json)\n\n        video_id = flashvars.get('video_id')\n        thumbnail = flashvars.get('preview_url')\n        ext = determine_ext(flashvars.get('postfix'), 'mp4')\n\n        formats = []\n        for video_url_key in ['video_url', 'video_alt_url']:\n            video_url = flashvars.get(video_url_key)\n            if not video_url:\n                continue\n            video_text = flashvars.get('%s_text' % video_url_key)\n            fmt = {\n                'url': video_url,\n                'ext': ext,\n                'format_id': video_text,\n            }\n            m = re.search(r'^(?P<height>\\d+)[pP]', video_text)\n            if m:\n                fmt['height'] = int(m.group('height'))\n            formats.append(fmt)\n        self._sort_formats(formats)\n\n        categories = self._html_search_meta(\n            'keywords', webpage, 'categories', default='').split(',')\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'categories': categories,\n            'age_limit': 18,\n            'formats': formats,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    js_to_json,\n    remove_end,\n    determine_ext,\n)\n\n\nclass HellPornoIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?hellporno\\.(?:com/videos|net/v)/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://hellporno.com/videos/dixie-is-posing-with-naked-ass-very-erotic/',\n        'md5': '1fee339c610d2049699ef2aa699439f1',\n        'info_dict': {\n            'id': '149116',\n            'display_id': 'dixie-is-posing-with-naked-ass-very-erotic',\n            'ext': 'mp4',\n            'title': 'Dixie is posing with naked ass very erotic',\n            'thumbnail': r're:https?://.*\\.jpg$',\n            'age_limit': 18,\n        }\n    }, {\n        'url': 'http://hellporno.net/v/186271/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        title = remove_end(self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title'), ' - Hell Porno')\n\n        flashvars = self._parse_json(self._search_regex(\n            r'var\\s+flashvars\\s*=\\s*({.+?});', webpage, 'flashvars'),\n            display_id, transform_source=js_to_json)\n\n        video_id = flashvars.get('video_id')\n        thumbnail = flashvars.get('preview_url')\n        ext = determine_ext(flashvars.get('postfix'), 'mp4')\n\n        formats = []\n        for video_url_key in ['video_url', 'video_alt_url']:\n            video_url = flashvars.get(video_url_key)\n            if not video_url:\n                continue\n            video_text = flashvars.get('%s_text' % video_url_key)\n            fmt = {\n                'url': video_url,\n                'ext': ext,\n                'format_id': video_text,\n            }\n            m = re.search(r'^(?P<height>\\d+)[pP]', video_text)\n            if m:\n                fmt['height'] = int(m.group('height'))\n            formats.append(fmt)\n        self._sort_formats(formats)\n\n        categories = self._html_search_meta(\n            'keywords', webpage, 'categories', default='').split(',')\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'categories': categories,\n            'age_limit': 18,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "hellporno.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/hellporno.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
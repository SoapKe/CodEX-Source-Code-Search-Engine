{"author": "ansible", "code": " (c) 2017 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.junos import junos_netconf\nfrom units.modules.utils import set_module_args\nfrom .junos_module import TestJunosModule\n\n\nclass TestJunosCommandModule(TestJunosModule):\n\n    module = junos_netconf\n\n    def setUp(self):\n        super(TestJunosCommandModule, self).setUp()\n\n        self.mock_lock_configuration = patch('ansible.module_utils.network.junos.junos.lock_configuration')\n        self.lock_configuration = self.mock_lock_configuration.start()\n\n        self.mock_unlock_configuration = patch('ansible.module_utils.network.junos.junos.unlock_configuration')\n        self.unlock_configuration = self.mock_unlock_configuration.start()\n\n        self.mock_commit_configuration = patch('ansible.modules.network.junos.junos_netconf.commit_configuration')\n        self.commit_configuration = self.mock_commit_configuration.start()\n\n        self.mock_conn = patch('ansible.module_utils.connection.Connection')\n        self.conn = self.mock_conn.start()\n\n        self.mock_netconf = patch('ansible.module_utils.network.junos.junos.NetconfConnection')\n        self.netconf_conn = self.mock_netconf.start()\n\n        self.mock_netconf_rpc = patch('ansible.module_utils.network.common.netconf.NetconfConnection')\n        self.netconf_rpc = self.mock_netconf_rpc.start()\n\n        self.mock_get_capabilities = patch('ansible.module_utils.network.junos.junos.get_capabilities')\n        self.get_capabilities = self.mock_get_capabilities.start()\n        self.get_capabilities.return_value = {'network_api': 'netconf'}\n\n    def tearDown(self):\n        super(TestJunosCommandModule, self).tearDown()\n        self.mock_lock_configuration.stop()\n        self.mock_unlock_configuration.stop()\n        self.mock_commit_configuration.stop()\n        self.mock_conn.stop()\n        self.mock_netconf.stop()\n        self.mock_netconf_rpc.stop()\n        self.mock_get_capabilities.stop()\n\n    def test_junos_netconf_enable(self):\n        self.netconf_conn().get.return_value = ''\n        set_module_args(dict(state='present'))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['set system services netconf ssh port 830'])\n\n    def test_junos_netconf_disable(self):\n        out = '''\n              ssh {\n                port 830;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='absent'))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['delete system services netconf'])\n\n    def test_junos_netconf_port_change(self):\n        out = '''\n              ssh {\n                port 830;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='present', netconf_port=22))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['set system services netconf ssh port 22'])\n\n    def test_junos_netconf_port_error(self):\n        out = '''\n              ssh {\n                port 22;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='present', netconf_port=0))\n        result = self.execute_module(changed=True, failed=True)\n        self.assertEqual(result['msg'], 'netconf_port must be between 1 and 65535')\n\n    def test_junos_netconf_config_error(self):\n        self.netconf_conn().get.return_value = None\n        set_module_args(dict(state='present'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'unable to retrieve current config')\n", "comments": "                  ssh                   port 830                                            self netconf conn() get return value           set module args(dict(state  absent ))         result   self execute module(changed true)         self assertequal(result  commands      delete system services netconf  )      def test junos netconf port change(self)                              ssh                   port 830                                            self netconf conn() get return value           set module args(dict(state  present   netconf port 22))         result   self execute module(changed true)         self assertequal(result  commands      set system services netconf ssh port 22  )      def test junos netconf port error(self)                              ssh                   port 22                                       (c) 2017 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish ", "content": "# (c) 2017 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.junos import junos_netconf\nfrom units.modules.utils import set_module_args\nfrom .junos_module import TestJunosModule\n\n\nclass TestJunosCommandModule(TestJunosModule):\n\n    module = junos_netconf\n\n    def setUp(self):\n        super(TestJunosCommandModule, self).setUp()\n\n        self.mock_lock_configuration = patch('ansible.module_utils.network.junos.junos.lock_configuration')\n        self.lock_configuration = self.mock_lock_configuration.start()\n\n        self.mock_unlock_configuration = patch('ansible.module_utils.network.junos.junos.unlock_configuration')\n        self.unlock_configuration = self.mock_unlock_configuration.start()\n\n        self.mock_commit_configuration = patch('ansible.modules.network.junos.junos_netconf.commit_configuration')\n        self.commit_configuration = self.mock_commit_configuration.start()\n\n        self.mock_conn = patch('ansible.module_utils.connection.Connection')\n        self.conn = self.mock_conn.start()\n\n        self.mock_netconf = patch('ansible.module_utils.network.junos.junos.NetconfConnection')\n        self.netconf_conn = self.mock_netconf.start()\n\n        self.mock_netconf_rpc = patch('ansible.module_utils.network.common.netconf.NetconfConnection')\n        self.netconf_rpc = self.mock_netconf_rpc.start()\n\n        self.mock_get_capabilities = patch('ansible.module_utils.network.junos.junos.get_capabilities')\n        self.get_capabilities = self.mock_get_capabilities.start()\n        self.get_capabilities.return_value = {'network_api': 'netconf'}\n\n    def tearDown(self):\n        super(TestJunosCommandModule, self).tearDown()\n        self.mock_lock_configuration.stop()\n        self.mock_unlock_configuration.stop()\n        self.mock_commit_configuration.stop()\n        self.mock_conn.stop()\n        self.mock_netconf.stop()\n        self.mock_netconf_rpc.stop()\n        self.mock_get_capabilities.stop()\n\n    def test_junos_netconf_enable(self):\n        self.netconf_conn().get.return_value = ''\n        set_module_args(dict(state='present'))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['set system services netconf ssh port 830'])\n\n    def test_junos_netconf_disable(self):\n        out = '''\n              ssh {\n                port 830;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='absent'))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['delete system services netconf'])\n\n    def test_junos_netconf_port_change(self):\n        out = '''\n              ssh {\n                port 830;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='present', netconf_port=22))\n        result = self.execute_module(changed=True)\n        self.assertEqual(result['commands'], ['set system services netconf ssh port 22'])\n\n    def test_junos_netconf_port_error(self):\n        out = '''\n              ssh {\n                port 22;\n                }\n            '''\n        self.netconf_conn().get.return_value = out\n        set_module_args(dict(state='present', netconf_port=0))\n        result = self.execute_module(changed=True, failed=True)\n        self.assertEqual(result['msg'], 'netconf_port must be between 1 and 65535')\n\n    def test_junos_netconf_config_error(self):\n        self.netconf_conn().get.return_value = None\n        set_module_args(dict(state='present'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'unable to retrieve current config')\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_junos_netconf.py", "id": "9014bb5d4ea722ef4d379a740f6d3345", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/junos/test_junos_netconf.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "mopidy", "code": "from __future__ import unicode_literals\n\nimport platform\n\nimport mopidy\n\n\"Helpers for configuring HTTP clients used in Mopidy extensions.\"\n\n\ndef format_proxy(proxy_config, auth=True):\n    \"\"\"Convert a Mopidy proxy config to the commonly used proxy string format.\n\n    Outputs ``scheme://host:port``, ``scheme://user:pass@host:port`` or\n    :class:`None` depending on the proxy config provided.\n\n    You can also opt out of getting the basic auth by setting ``auth`` to\n    :class:`False`.\n\n    .. versionadded:: 1.1\n    \"\"\"\n    if not proxy_config.get('hostname'):\n        return None\n\n    port = proxy_config.get('port')\n    if not port or port < 0:\n        port = 80\n\n    if proxy_config.get('username') and proxy_config.get('password') and auth:\n        template = '{scheme}://{username}:{password}@{hostname}:{port}'\n    else:\n        template = '{scheme}://{hostname}:{port}'\n\n    return template.format(scheme=proxy_config.get('scheme') or 'http',\n                           username=proxy_config.get('username'),\n                           password=proxy_config.get('password'),\n                           hostname=proxy_config['hostname'], port=port)\n\n\ndef format_user_agent(name=None):\n    \"\"\"Construct a User-Agent suitable for use in client code.\n\n    This will identify use by the provided ``name`` (which should be on the\n    format ``dist_name/version``), Mopidy version and Python version.\n\n    .. versionadded:: 1.1\n    \"\"\"\n    parts = ['Mopidy/%s' % (mopidy.__version__),\n             '%s/%s' % (platform.python_implementation(),\n                        platform.python_version())]\n    if name:\n        parts.insert(0, name)\n    return ' '.join(parts)\n", "comments": "   convert mopidy proxy config commonly used proxy string format       outputs   scheme   host port      scheme   user pass host port        class  none  depending proxy config provided       you also opt getting basic auth setting   auth        class  false           versionadded   1 1             proxy config get( hostname )          return none      port   proxy config get( port )     port port   0          port   80      proxy config get( username ) proxy config get( password ) auth          template     scheme     username   password   hostname   port       else          template     scheme     hostname   port        return template format(scheme proxy config get( scheme )  http                              username proxy config get( username )                             password proxy config get( password )                             hostname proxy config  hostname    port port)   def format user agent(name none)         construct user agent suitable use client code       this identify use provided   name   (which     format   dist name version  )  mopidy version python version          versionadded   1 1         ", "content": "from __future__ import unicode_literals\n\nimport platform\n\nimport mopidy\n\n\"Helpers for configuring HTTP clients used in Mopidy extensions.\"\n\n\ndef format_proxy(proxy_config, auth=True):\n    \"\"\"Convert a Mopidy proxy config to the commonly used proxy string format.\n\n    Outputs ``scheme://host:port``, ``scheme://user:pass@host:port`` or\n    :class:`None` depending on the proxy config provided.\n\n    You can also opt out of getting the basic auth by setting ``auth`` to\n    :class:`False`.\n\n    .. versionadded:: 1.1\n    \"\"\"\n    if not proxy_config.get('hostname'):\n        return None\n\n    port = proxy_config.get('port')\n    if not port or port < 0:\n        port = 80\n\n    if proxy_config.get('username') and proxy_config.get('password') and auth:\n        template = '{scheme}://{username}:{password}@{hostname}:{port}'\n    else:\n        template = '{scheme}://{hostname}:{port}'\n\n    return template.format(scheme=proxy_config.get('scheme') or 'http',\n                           username=proxy_config.get('username'),\n                           password=proxy_config.get('password'),\n                           hostname=proxy_config['hostname'], port=port)\n\n\ndef format_user_agent(name=None):\n    \"\"\"Construct a User-Agent suitable for use in client code.\n\n    This will identify use by the provided ``name`` (which should be on the\n    format ``dist_name/version``), Mopidy version and Python version.\n\n    .. versionadded:: 1.1\n    \"\"\"\n    parts = ['Mopidy/%s' % (mopidy.__version__),\n             '%s/%s' % (platform.python_implementation(),\n                        platform.python_version())]\n    if name:\n        parts.insert(0, name)\n    return ' '.join(parts)\n", "description": "Mopidy is an extensible music server that plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.", "file_name": "httpclient.py", "id": "82351bc565e312d8d2dd4be2a3c5cd64", "language": "Python", "project_name": "mopidy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mopidy-mopidy/mopidy-mopidy-79d42c3/mopidy/httpclient.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:12:51Z", "url": "https://github.com/mopidy/mopidy", "wiki": false}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .cbs import CBSBaseIE\n\n\nclass CBSSportsIE(CBSBaseIE):\n    _VALID_URL = r'https?://(?:www\\.)?cbssports\\.com/video/player/[^/]+/(?P<id>\\d+)'\n\n    _TESTS = [{\n        'url': 'http://www.cbssports.com/video/player/videos/708337219968/0/ben-simmons-the-next-lebron?-not-so-fast',\n        'info_dict': {\n            'id': '708337219968',\n            'ext': 'mp4',\n            'title': 'Ben Simmons the next LeBron? Not so fast',\n            'description': 'md5:854294f627921baba1f4b9a990d87197',\n            'timestamp': 1466293740,\n            'upload_date': '20160618',\n            'uploader': 'CBSI-NEW',\n        },\n        'params': {\n            \n            'skip_download': True,\n        }\n    }]\n\n    def _extract_video_info(self, filter_query, video_id):\n        return self._extract_feed_info('dJ5BDC', 'VxxJg8Ymh8sE', filter_query, video_id)\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        return self._extract_video_info('byId=%s' % video_id, video_id)\n", "comments": "# m3u8 download\n", "content": "from __future__ import unicode_literals\n\nfrom .cbs import CBSBaseIE\n\n\nclass CBSSportsIE(CBSBaseIE):\n    _VALID_URL = r'https?://(?:www\\.)?cbssports\\.com/video/player/[^/]+/(?P<id>\\d+)'\n\n    _TESTS = [{\n        'url': 'http://www.cbssports.com/video/player/videos/708337219968/0/ben-simmons-the-next-lebron?-not-so-fast',\n        'info_dict': {\n            'id': '708337219968',\n            'ext': 'mp4',\n            'title': 'Ben Simmons the next LeBron? Not so fast',\n            'description': 'md5:854294f627921baba1f4b9a990d87197',\n            'timestamp': 1466293740,\n            'upload_date': '20160618',\n            'uploader': 'CBSI-NEW',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        }\n    }]\n\n    def _extract_video_info(self, filter_query, video_id):\n        return self._extract_feed_info('dJ5BDC', 'VxxJg8Ymh8sE', filter_query, video_id)\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        return self._extract_video_info('byId=%s' % video_id, video_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "cbssports.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/cbssports.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
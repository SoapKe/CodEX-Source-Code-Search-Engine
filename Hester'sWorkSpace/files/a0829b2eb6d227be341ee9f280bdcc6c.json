{"author": "jwilder", "code": "\"\"\"\nTest that nginx-proxy detects new containers\n\"\"\"\nfrom time import sleep\n\nimport pytest\nfrom docker.errors import NotFound\n\n\n@pytest.yield_fixture()\ndef web1(docker_compose):\n    \"\"\"\n    pytest fixture creating a web container with `VIRTUAL_HOST=web1.nginx-proxy` listening on port 81.\n    \"\"\"\n    container = docker_compose.containers.run(\n        name=\"web1\",\n        image=\"web\",\n        detach=True,\n        environment={\n            \"WEB_PORTS\": \"81\",\n            \"VIRTUAL_HOST\": \"web1.nginx-proxy\"\n        },\n        ports={\"81/tcp\": None}\n    )\n    sleep(2)  \n    yield container\n    try:\n        docker_compose.containers.get(\"web1\").remove(force=True)\n    except NotFound:\n        pass\n\n\ndef test_nginx_proxy_behavior_when_alone(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://nginx-proxy/\")\n    assert r.status_code == 503\n\n\ndef test_new_container_is_detected(web1, nginxproxy):\n    r = nginxproxy.get(\"http://web1.nginx-proxy/port\")\n    assert r.status_code == 200\n    assert \"answer from port 81\\n\" == r.text\n\n    web1.remove(force=True)\n    sleep(2)\n    r = nginxproxy.get(\"http://web1.nginx-proxy/port\")\n    assert r.status_code == 503\n", "comments": "    test nginx proxy detects new containers     time import sleep  import pytest docker errors import notfound    pytest yield fixture() def web1(docker compose)              pytest fixture creating web container  virtual host web1 nginx proxy  listening port 81             give time initialize docker gen detect ", "content": "\"\"\"\nTest that nginx-proxy detects new containers\n\"\"\"\nfrom time import sleep\n\nimport pytest\nfrom docker.errors import NotFound\n\n\n@pytest.yield_fixture()\ndef web1(docker_compose):\n    \"\"\"\n    pytest fixture creating a web container with `VIRTUAL_HOST=web1.nginx-proxy` listening on port 81.\n    \"\"\"\n    container = docker_compose.containers.run(\n        name=\"web1\",\n        image=\"web\",\n        detach=True,\n        environment={\n            \"WEB_PORTS\": \"81\",\n            \"VIRTUAL_HOST\": \"web1.nginx-proxy\"\n        },\n        ports={\"81/tcp\": None}\n    )\n    sleep(2)  # give it some time to initialize and for docker-gen to detect it\n    yield container\n    try:\n        docker_compose.containers.get(\"web1\").remove(force=True)\n    except NotFound:\n        pass\n\n\ndef test_nginx_proxy_behavior_when_alone(docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://nginx-proxy/\")\n    assert r.status_code == 503\n\n\ndef test_new_container_is_detected(web1, nginxproxy):\n    r = nginxproxy.get(\"http://web1.nginx-proxy/port\")\n    assert r.status_code == 200\n    assert \"answer from port 81\\n\" == r.text\n\n    web1.remove(force=True)\n    sleep(2)\n    r = nginxproxy.get(\"http://web1.nginx-proxy/port\")\n    assert r.status_code == 503\n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_events.py", "id": "a0829b2eb6d227be341ee9f280bdcc6c", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_events.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
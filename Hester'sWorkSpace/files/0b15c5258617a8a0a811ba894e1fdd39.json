{"author": "django", "code": "from django.db import models\n\n\nclass City(models.Model):\n    id = models.BigAutoField(primary_key=True)\n    name = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name\n\n\nclass District(models.Model):\n    city = models.ForeignKey(City, models.CASCADE, primary_key=True)\n    name = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n    email = models.EmailField()\n    facebook_user_id = models.BigIntegerField(null=True)\n    raw_data = models.BinaryField(null=True)\n    small_int = models.SmallIntegerField()\n\n    class Meta:\n        unique_together = ('first_name', 'last_name')\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n    body = models.TextField(default='')\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    response_to = models.ForeignKey('self', models.SET_NULL, null=True)\n    unmanaged_reporters = models.ManyToManyField(Reporter, through='ArticleReporter', related_name='+')\n\n    def __str__(self):\n        return self.headline\n\n    class Meta:\n        ordering = ('headline',)\n        index_together = [\n            [\"headline\", \"pub_date\"],\n            ['headline', 'response_to', 'pub_date', 'reporter'],\n        ]\n\n\nclass ArticleReporter(models.Model):\n    article = models.ForeignKey(Article, models.CASCADE)\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n\n    class Meta:\n        managed = False\n", "comments": "", "content": "from django.db import models\n\n\nclass City(models.Model):\n    id = models.BigAutoField(primary_key=True)\n    name = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name\n\n\nclass District(models.Model):\n    city = models.ForeignKey(City, models.CASCADE, primary_key=True)\n    name = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n    email = models.EmailField()\n    facebook_user_id = models.BigIntegerField(null=True)\n    raw_data = models.BinaryField(null=True)\n    small_int = models.SmallIntegerField()\n\n    class Meta:\n        unique_together = ('first_name', 'last_name')\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n    body = models.TextField(default='')\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    response_to = models.ForeignKey('self', models.SET_NULL, null=True)\n    unmanaged_reporters = models.ManyToManyField(Reporter, through='ArticleReporter', related_name='+')\n\n    def __str__(self):\n        return self.headline\n\n    class Meta:\n        ordering = ('headline',)\n        index_together = [\n            [\"headline\", \"pub_date\"],\n            ['headline', 'response_to', 'pub_date', 'reporter'],\n        ]\n\n\nclass ArticleReporter(models.Model):\n    article = models.ForeignKey(Article, models.CASCADE)\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n\n    class Meta:\n        managed = False\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "0b15c5258617a8a0a811ba894e1fdd39", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/introspection/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
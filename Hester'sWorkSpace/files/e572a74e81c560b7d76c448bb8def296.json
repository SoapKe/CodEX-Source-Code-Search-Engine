{"author": "nvbn", "code": "\n    dest = command.script_parts[1].split(os.sep)\n    if dest[-1] == '':\n        dest = dest[:-1]\n\n    if dest[0] == '':\n        cwd = os.sep\n        dest = dest[1:]\n    elif six.PY2:\n        cwd = os.getcwdu()\n    else:\n        cwd = os.getcwd()\n    for directory in dest:\n        if directory == \".\":\n            continue\n        elif directory == \"..\":\n            cwd = os.path.split(cwd)[0]\n            continue\n        best_matches = get_close_matches(directory, _get_sub_dirs(cwd), cutoff=MAX_ALLOWED_DIFF)\n        if best_matches:\n            cwd = os.path.join(cwd, best_matches[0])\n        else:\n            return cd_mkdir.get_new_command(command)\n    return u'cd \"{0}\"'.format(cwd)\n", "comments": "Attempts to spellcheck and correct failed cd commands\"\"\"\n\nimport os\nimport six\nfrom difflib import get_close_matches\nfrom thefuck.specific.sudo import sudo_support\nfrom thefuck.rules import cd_mkdir\nfrom thefuck.utils import for_app\n\n__author__ = \"mmussomele\"\n\nMAX_ALLOWED_DIFF = 0.6\n\n\ndef _get_sub_dirs(parent):\n    \"\"\"Returns a list of the child directories of the given parent directory\"\"\"\n    return [child for child in os.listdir(parent) if os.path.isdir(os.path.join(parent, child))]\n\n\n@sudo_support\n@for_app('cd')\ndef match(command):\n    \"\"\"Match function copied from cd_mkdir.py\"\"\"\n    return (\n        command.script.startswith('cd ') and any((\n            'no such file or directory' in command.output.lower(),\n            'cd: can\\'t cd to' in command.output.lower(),\n            'does not exist' in command.output.lower()\n        )))\n\n\n@sudo_support\ndef get_new_command(command):\n    \"\"\"\n    Attempt to rebuild the path string by spellchecking the directories.\n    If it fails (i.e. no directories are a close enough match), then it\n    defaults to the rules of cd_mkdir.\n    Change sensitivity by changing MAX_ALLOWED_DIFF. Default value is 0.6\n    \n \n", "content": "\"\"\"Attempts to spellcheck and correct failed cd commands\"\"\"\n\nimport os\nimport six\nfrom difflib import get_close_matches\nfrom thefuck.specific.sudo import sudo_support\nfrom thefuck.rules import cd_mkdir\nfrom thefuck.utils import for_app\n\n__author__ = \"mmussomele\"\n\nMAX_ALLOWED_DIFF = 0.6\n\n\ndef _get_sub_dirs(parent):\n    \"\"\"Returns a list of the child directories of the given parent directory\"\"\"\n    return [child for child in os.listdir(parent) if os.path.isdir(os.path.join(parent, child))]\n\n\n@sudo_support\n@for_app('cd')\ndef match(command):\n    \"\"\"Match function copied from cd_mkdir.py\"\"\"\n    return (\n        command.script.startswith('cd ') and any((\n            'no such file or directory' in command.output.lower(),\n            'cd: can\\'t cd to' in command.output.lower(),\n            'does not exist' in command.output.lower()\n        )))\n\n\n@sudo_support\ndef get_new_command(command):\n    \"\"\"\n    Attempt to rebuild the path string by spellchecking the directories.\n    If it fails (i.e. no directories are a close enough match), then it\n    defaults to the rules of cd_mkdir.\n    Change sensitivity by changing MAX_ALLOWED_DIFF. Default value is 0.6\n    \"\"\"\n    dest = command.script_parts[1].split(os.sep)\n    if dest[-1] == '':\n        dest = dest[:-1]\n\n    if dest[0] == '':\n        cwd = os.sep\n        dest = dest[1:]\n    elif six.PY2:\n        cwd = os.getcwdu()\n    else:\n        cwd = os.getcwd()\n    for directory in dest:\n        if directory == \".\":\n            continue\n        elif directory == \"..\":\n            cwd = os.path.split(cwd)[0]\n            continue\n        best_matches = get_close_matches(directory, _get_sub_dirs(cwd), cutoff=MAX_ALLOWED_DIFF)\n        if best_matches:\n            cwd = os.path.join(cwd, best_matches[0])\n        else:\n            return cd_mkdir.get_new_command(command)\n    return u'cd \"{0}\"'.format(cwd)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "cd_correction.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/cd_correction.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
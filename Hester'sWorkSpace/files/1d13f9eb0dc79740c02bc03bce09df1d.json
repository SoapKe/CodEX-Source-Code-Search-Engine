{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .jwplatform import JWPlatformIE\n\nfrom ..utils import (\n    unified_strdate,\n)\n\n\nclass NormalbootsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?normalboots\\.com/video/(?P<id>[0-9a-z-]*)/?$'\n    _TEST = {\n        'url': 'http://normalboots.com/video/home-alone-games-jontron/',\n        'info_dict': {\n            'id': 'home-alone-games-jontron',\n            'ext': 'mp4',\n            'title': 'Home Alone Games - JonTron - NormalBoots',\n            'description': 'Jon is late for Christmas. Typical. Thanks to: Paul Ritchey for Co-Writing/Filming: http://www.youtube.com/user/ContinueShow Michael Azzi for Christmas Intro Animation: http://michafrar.tumblr.com/ Jerrod Waters for Christmas Intro Music: http://www.youtube.com/user/xXJerryTerryXx Casey Ormond for \u2018Tense Battle Theme\u2019:\\xa0http://www.youtube.com/Kiamet/',\n            'uploader': 'JonTron',\n            'upload_date': '20140125',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n        'add_ie': ['JWPlatform'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        video_uploader = self._html_search_regex(\n            r'Posted\\sby\\s<a\\shref=\"[A-Za-z0-9/]*\">(?P<uploader>[A-Za-z]*)\\s</a>',\n            webpage, 'uploader', fatal=False)\n        video_upload_date = unified_strdate(self._html_search_regex(\n            r'<span style=\"text-transform:uppercase; font-size:inherit;\">[A-Za-z]+, (?P<date>.*)</span>',\n            webpage, 'date', fatal=False))\n\n        jwplatform_url = JWPlatformIE._extract_url(webpage)\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': jwplatform_url,\n            'ie_key': JWPlatformIE.ie_key(),\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n            'thumbnail': self._og_search_thumbnail(webpage),\n            'uploader': video_uploader,\n            'upload_date': video_upload_date,\n        }\n", "comments": "# coding: utf-8\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .jwplatform import JWPlatformIE\n\nfrom ..utils import (\n    unified_strdate,\n)\n\n\nclass NormalbootsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?normalboots\\.com/video/(?P<id>[0-9a-z-]*)/?$'\n    _TEST = {\n        'url': 'http://normalboots.com/video/home-alone-games-jontron/',\n        'info_dict': {\n            'id': 'home-alone-games-jontron',\n            'ext': 'mp4',\n            'title': 'Home Alone Games - JonTron - NormalBoots',\n            'description': 'Jon is late for Christmas. Typical. Thanks to: Paul Ritchey for Co-Writing/Filming: http://www.youtube.com/user/ContinueShow Michael Azzi for Christmas Intro Animation: http://michafrar.tumblr.com/ Jerrod Waters for Christmas Intro Music: http://www.youtube.com/user/xXJerryTerryXx Casey Ormond for \u2018Tense Battle Theme\u2019:\\xa0http://www.youtube.com/Kiamet/',\n            'uploader': 'JonTron',\n            'upload_date': '20140125',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n        'add_ie': ['JWPlatform'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        video_uploader = self._html_search_regex(\n            r'Posted\\sby\\s<a\\shref=\"[A-Za-z0-9/]*\">(?P<uploader>[A-Za-z]*)\\s</a>',\n            webpage, 'uploader', fatal=False)\n        video_upload_date = unified_strdate(self._html_search_regex(\n            r'<span style=\"text-transform:uppercase; font-size:inherit;\">[A-Za-z]+, (?P<date>.*)</span>',\n            webpage, 'date', fatal=False))\n\n        jwplatform_url = JWPlatformIE._extract_url(webpage)\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': jwplatform_url,\n            'ie_key': JWPlatformIE.ie_key(),\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n            'thumbnail': self._og_search_thumbnail(webpage),\n            'uploader': video_uploader,\n            'upload_date': video_upload_date,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "normalboots.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/normalboots.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
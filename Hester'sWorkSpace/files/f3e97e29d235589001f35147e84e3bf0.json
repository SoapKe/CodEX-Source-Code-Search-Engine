{"author": "tgalal", "code": "from yowsup.layers import YowLayerEvent, YowLayerTest\nfrom yowsup.structs import ProtocolTreeNode\nfrom yowsup.layers.auth import YowCryptLayer\nfrom yowsup.layers.auth.keystream import KeyStream\n\nclass CryptLayerTest(YowLayerTest, YowCryptLayer):\n    def setUp(self):\n        YowCryptLayer.__init__(self)\n        self.password = bytearray(list(map(ord,\"password\")))\n        self.salt     = bytearray(list(map(ord,\"salt\")))\n        self.username = \"username\"\n        self.inputMessage = bytearray([0,0,0,0, ord('t'), ord('a'), ord('r'), ord('e'), ord('k')])\n        self.inputMessageCrypted = bytearray(b'\\x80\\x00\\r)\\x99\\xbe_\\xee\\x98\\xecV<\\x9d\\x0c\\xb7r')\n        keys = [\n            bytearray(b'>\\xd5\\x8a\\xecB\\xdb\\xc8\\xd4}\\x98\\x9aBa\\x89\\x9fC\\x08\\xdcp\\x8d'),\n            bytearray(b'\\xd3;\\xda:\\x8f\\x94CX\\xe4;\\xbb\\xcc\"W\\x83\\xe0m\\xba\\xe0\\xd1'),\n            bytearray(b'\\x92w{\\xc2\\x04~\\x08;\\x81w\\xb7h3\\xb8\\xc4t\\xbd\\xed\\xf7q'),\n            bytearray(b'.\\xc7\\xe4\\x15\\x1a\\xa0\\xfd\\x98\\xc0\\xea\\xefs{\\r7E\\xa6\\xec\\xd5\\xfb')\n        ]\n        inputKey = KeyStream(keys[2], keys[3])\n        outputKey = KeyStream(keys[0], keys[1])\n\n        self.onEvent(YowLayerEvent(YowCryptLayer.EVENT_KEYS_READY, keys = (inputKey, outputKey)))\n\n    def test_00send(self):\n        self.send(self.inputMessage)\n        self.assertEqual(self.lowerSink.pop(), self.inputMessageCrypted)\n\n", "comments": "", "content": "from yowsup.layers import YowLayerEvent, YowLayerTest\nfrom yowsup.structs import ProtocolTreeNode\nfrom yowsup.layers.auth import YowCryptLayer\nfrom yowsup.layers.auth.keystream import KeyStream\n\nclass CryptLayerTest(YowLayerTest, YowCryptLayer):\n    def setUp(self):\n        YowCryptLayer.__init__(self)\n        self.password = bytearray(list(map(ord,\"password\")))\n        self.salt     = bytearray(list(map(ord,\"salt\")))\n        self.username = \"username\"\n        self.inputMessage = bytearray([0,0,0,0, ord('t'), ord('a'), ord('r'), ord('e'), ord('k')])\n        self.inputMessageCrypted = bytearray(b'\\x80\\x00\\r)\\x99\\xbe_\\xee\\x98\\xecV<\\x9d\\x0c\\xb7r')\n        keys = [\n            bytearray(b'>\\xd5\\x8a\\xecB\\xdb\\xc8\\xd4}\\x98\\x9aBa\\x89\\x9fC\\x08\\xdcp\\x8d'),\n            bytearray(b'\\xd3;\\xda:\\x8f\\x94CX\\xe4;\\xbb\\xcc\"W\\x83\\xe0m\\xba\\xe0\\xd1'),\n            bytearray(b'\\x92w{\\xc2\\x04~\\x08;\\x81w\\xb7h3\\xb8\\xc4t\\xbd\\xed\\xf7q'),\n            bytearray(b'.\\xc7\\xe4\\x15\\x1a\\xa0\\xfd\\x98\\xc0\\xea\\xefs{\\r7E\\xa6\\xec\\xd5\\xfb')\n        ]\n        inputKey = KeyStream(keys[2], keys[3])\n        outputKey = KeyStream(keys[0], keys[1])\n\n        self.onEvent(YowLayerEvent(YowCryptLayer.EVENT_KEYS_READY, keys = (inputKey, outputKey)))\n\n    def test_00send(self):\n        self.send(self.inputMessage)\n        self.assertEqual(self.lowerSink.pop(), self.inputMessageCrypted)\n\n", "description": "The python WhatsApp library", "file_name": "test_crypt.py", "id": "f3e97e29d235589001f35147e84e3bf0", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/auth/test_crypt.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
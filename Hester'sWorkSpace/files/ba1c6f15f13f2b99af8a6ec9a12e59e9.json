{"author": "thumbor", "code": "\n# -*- coding: utf-8 -*-\n\n\n\n\n\n\n# Copyright (c) 2011 globo.com thumbor@googlegroups.com\n\nfrom preggy import expect\n\nfrom thumbor.importer import Importer\nfrom thumbor.config import Config\nfrom thumbor.engines.pil import Engine as pil_engine\nfrom thumbor.engines.gif import Engine as gif_engine\nfrom thumbor.loaders import http_loader\nfrom thumbor.storages.file_storage import Storage as file_storage\nfrom thumbor.result_storages.file_storage import Storage as result_file_storage\nfrom thumbor.detectors.face_detector import Detector as face_detector\nfrom thumbor.detectors import feature_detector\nfrom thumbor.filters.rgb import Filter as rgb_filter\n\nfrom tests.base import TestCase\n\n\nclass ImporterTestCase(TestCase):\n    def get_config(self):\n        return Config(\n            ENGINE='thumbor.engines.pil',\n            GIF_ENGINE='thumbor.engines.gif',\n            LOADER='thumbor.loaders.http_loader',\n            STORAGE='thumbor.storages.file_storage',\n            UPLOAD_PHOTO_STORAGE='thumbor.storages.file_storage',\n            RESULT_STORAGE='thumbor.result_storages.file_storage',\n            DETECTORS=['thumbor.detectors.face_detector'],\n            FILTERS=['thumbor.filters.rgb']\n        )\n\n    def test_import_item_should_be_proper_item(self):\n        importer = Importer(self.get_config())\n        importer.import_modules()\n        data = {\n            'ENGINE': pil_engine,\n            'GIF_ENGINE': gif_engine,\n            'LOADER': http_loader,\n            'STORAGE': file_storage,\n            'UPLOAD_PHOTO_STORAGE': file_storage,\n            'RESULT_STORAGE': result_file_storage,\n            'DETECTORS': (face_detector,),\n            'FILTERS': (rgb_filter,),\n        }\n\n        for key, value in data.iteritems():\n            prop, default_value = (None, None)\n            if hasattr(importer, key.lower()):\n                prop, default_value = (getattr(importer, key.lower()), value)\n\n            if prop is tuple:\n                for index, item in enumerate(prop):\n                    expect(item).not_to_be_null()\n                    expect(item).to_equal(default_value[index])\n            else:\n                expect(prop).not_to_be_null()\n                expect(prop).to_equal(default_value)\n\n    def test_single_item_should_equal_file_storage(self):\n        importer = Importer(None)\n        importer.import_item(\n            config_key='file_storage',\n            item_value='thumbor.storages.file_storage',\n            class_name='Storage'\n        )\n        expect(importer.file_storage).to_equal(file_storage)\n\n    def test_multiple_items_can_be_imported(self):\n        importer = Importer(None)\n        importer.import_item(\n            config_key='detectors', is_multiple=True,\n            item_value=(\n                'thumbor.detectors.feature_detector',\n                'thumbor.detectors.feature_detector'\n            )\n        )\n\n        expect(importer.detectors).to_length(2)\n        expect(importer.detectors).to_include(feature_detector)\n", "comments": "   usr bin python        coding  utf 8        thumbor imaging service    https   github com thumbor thumbor wiki    licensed mit license     http   www opensource org licenses mit license    copyright (c) 2011 globo com thumbor googlegroups com ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# thumbor imaging service\n# https://github.com/thumbor/thumbor/wiki\n\n# Licensed under the MIT license:\n# http://www.opensource.org/licenses/mit-license\n# Copyright (c) 2011 globo.com thumbor@googlegroups.com\n\nfrom preggy import expect\n\nfrom thumbor.importer import Importer\nfrom thumbor.config import Config\nfrom thumbor.engines.pil import Engine as pil_engine\nfrom thumbor.engines.gif import Engine as gif_engine\nfrom thumbor.loaders import http_loader\nfrom thumbor.storages.file_storage import Storage as file_storage\nfrom thumbor.result_storages.file_storage import Storage as result_file_storage\nfrom thumbor.detectors.face_detector import Detector as face_detector\nfrom thumbor.detectors import feature_detector\nfrom thumbor.filters.rgb import Filter as rgb_filter\n\nfrom tests.base import TestCase\n\n\nclass ImporterTestCase(TestCase):\n    def get_config(self):\n        return Config(\n            ENGINE='thumbor.engines.pil',\n            GIF_ENGINE='thumbor.engines.gif',\n            LOADER='thumbor.loaders.http_loader',\n            STORAGE='thumbor.storages.file_storage',\n            UPLOAD_PHOTO_STORAGE='thumbor.storages.file_storage',\n            RESULT_STORAGE='thumbor.result_storages.file_storage',\n            DETECTORS=['thumbor.detectors.face_detector'],\n            FILTERS=['thumbor.filters.rgb']\n        )\n\n    def test_import_item_should_be_proper_item(self):\n        importer = Importer(self.get_config())\n        importer.import_modules()\n        data = {\n            'ENGINE': pil_engine,\n            'GIF_ENGINE': gif_engine,\n            'LOADER': http_loader,\n            'STORAGE': file_storage,\n            'UPLOAD_PHOTO_STORAGE': file_storage,\n            'RESULT_STORAGE': result_file_storage,\n            'DETECTORS': (face_detector,),\n            'FILTERS': (rgb_filter,),\n        }\n\n        for key, value in data.iteritems():\n            prop, default_value = (None, None)\n            if hasattr(importer, key.lower()):\n                prop, default_value = (getattr(importer, key.lower()), value)\n\n            if prop is tuple:\n                for index, item in enumerate(prop):\n                    expect(item).not_to_be_null()\n                    expect(item).to_equal(default_value[index])\n            else:\n                expect(prop).not_to_be_null()\n                expect(prop).to_equal(default_value)\n\n    def test_single_item_should_equal_file_storage(self):\n        importer = Importer(None)\n        importer.import_item(\n            config_key='file_storage',\n            item_value='thumbor.storages.file_storage',\n            class_name='Storage'\n        )\n        expect(importer.file_storage).to_equal(file_storage)\n\n    def test_multiple_items_can_be_imported(self):\n        importer = Importer(None)\n        importer.import_item(\n            config_key='detectors', is_multiple=True,\n            item_value=(\n                'thumbor.detectors.feature_detector',\n                'thumbor.detectors.feature_detector'\n            )\n        )\n\n        expect(importer.detectors).to_length(2)\n        expect(importer.detectors).to_include(feature_detector)\n", "description": "thumbor is an open-source photo thumbnail service by globo.com", "file_name": "test_importer.py", "id": "ba1c6f15f13f2b99af8a6ec9a12e59e9", "language": "Python", "project_name": "thumbor", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/thumbor-thumbor/thumbor-thumbor-991f13c/tests/test_importer.py", "save_time": "", "source": "", "update_at": "2018-03-18T09:16:11Z", "url": "https://github.com/thumbor/thumbor", "wiki": true}
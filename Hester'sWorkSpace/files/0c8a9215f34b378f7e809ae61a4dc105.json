{"author": "jazzband", "code": "from __future__ import absolute_import, unicode_literals\n\nimport warnings\n\nfrom django.conf import settings\nfrom django.utils import six\nfrom django.utils.lru_cache import lru_cache\n\n\n# from debug_toolbar import settings [as dt_settings]\n\n\n\n\n\nCONFIG_DEFAULTS = {\n    \n    'DISABLE_PANELS': {'debug_toolbar.panels.redirects.RedirectsPanel'},\n    'INSERT_BEFORE': '</body>',\n    'JQUERY_URL': '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    'RENDER_PANELS': None,\n    'RESULTS_CACHE_SIZE': 10,\n    'ROOT_TAG_EXTRA_ATTRS': '',\n    'SHOW_COLLAPSED': False,\n    'SHOW_TOOLBAR_CALLBACK': 'debug_toolbar.middleware.show_toolbar',\n    \n    'EXTRA_SIGNALS': [],\n    'ENABLE_STACKTRACES': True,\n    'HIDE_IN_STACKTRACES': (\n        'socketserver' if six.PY3 else 'SocketServer',\n        'threading',\n        'wsgiref',\n        'debug_toolbar',\n        'django',\n    ),\n    'PROFILER_MAX_DEPTH': 10,\n    'SHOW_TEMPLATE_CONTEXT': True,\n    'SKIP_TEMPLATE_PREFIXES': (\n        'django/forms/widgets/',\n        'admin/widgets/',\n    ),\n    'SQL_WARNING_THRESHOLD': 500,   \n}\n\n\n@lru_cache()\ndef get_config():\n    USER_CONFIG = getattr(settings, 'DEBUG_TOOLBAR_CONFIG', {})\n\n    \n    _RENAMED_CONFIG = {\n        'RESULTS_STORE_SIZE': 'RESULTS_CACHE_SIZE',\n        'ROOT_TAG_ATTRS': 'ROOT_TAG_EXTRA_ATTRS',\n        'HIDDEN_STACKTRACE_MODULES': 'HIDE_IN_STACKTRACES'\n    }\n    for old_name, new_name in _RENAMED_CONFIG.items():\n        if old_name in USER_CONFIG:\n            warnings.warn(\n                \"%r was renamed to %r. Update your DEBUG_TOOLBAR_CONFIG \"\n                \"setting.\" % (old_name, new_name), DeprecationWarning)\n            USER_CONFIG[new_name] = USER_CONFIG.pop(old_name)\n\n    if 'HIDE_DJANGO_SQL' in USER_CONFIG:\n        warnings.warn(\n            \"HIDE_DJANGO_SQL was removed. Update your \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        USER_CONFIG.pop('HIDE_DJANGO_SQL')\n\n    if 'TAG' in USER_CONFIG:\n        warnings.warn(\n            \"TAG was replaced by INSERT_BEFORE. Update your \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        USER_CONFIG['INSERT_BEFORE'] = '</%s>' % USER_CONFIG.pop('TAG')\n\n    CONFIG = CONFIG_DEFAULTS.copy()\n    CONFIG.update(USER_CONFIG)\n\n    if 'INTERCEPT_REDIRECTS' in USER_CONFIG:\n        warnings.warn(\n            \"INTERCEPT_REDIRECTS is deprecated. Please use the \"\n            \"DISABLE_PANELS config in the \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        if USER_CONFIG['INTERCEPT_REDIRECTS']:\n            if 'debug_toolbar.panels.redirects.RedirectsPanel' \\\n                    in CONFIG['DISABLE_PANELS']:\n                \n                try:\n                    CONFIG['DISABLE_PANELS'].remove(\n                        'debug_toolbar.panels.redirects.RedirectsPanel'\n                    )\n                except KeyError:\n                    \n                    pass\n        elif 'debug_toolbar.panels.redirects.RedirectsPanel' \\\n                not in CONFIG['DISABLE_PANELS']:\n            \n            CONFIG['DISABLE_PANELS'].add(\n                'debug_toolbar.panels.redirects.RedirectsPanel'\n            )\n\n    return CONFIG\n\n\nPANELS_DEFAULTS = [\n    'debug_toolbar.panels.versions.VersionsPanel',\n    'debug_toolbar.panels.timer.TimerPanel',\n    'debug_toolbar.panels.settings.SettingsPanel',\n    'debug_toolbar.panels.headers.HeadersPanel',\n    'debug_toolbar.panels.request.RequestPanel',\n    'debug_toolbar.panels.sql.SQLPanel',\n    'debug_toolbar.panels.staticfiles.StaticFilesPanel',\n    'debug_toolbar.panels.templates.TemplatesPanel',\n    'debug_toolbar.panels.cache.CachePanel',\n    'debug_toolbar.panels.signals.SignalsPanel',\n    'debug_toolbar.panels.logging.LoggingPanel',\n    'debug_toolbar.panels.redirects.RedirectsPanel',\n]\n\n\n@lru_cache()\ndef get_panels():\n    try:\n        PANELS = list(settings.DEBUG_TOOLBAR_PANELS)\n    except AttributeError:\n        PANELS = PANELS_DEFAULTS\n    else:\n        \n        _RENAMED_PANELS = {\n            'debug_toolbar.panels.version.VersionDebugPanel':\n            'debug_toolbar.panels.versions.VersionsPanel',\n            'debug_toolbar.panels.timer.TimerDebugPanel':\n            'debug_toolbar.panels.timer.TimerPanel',\n            'debug_toolbar.panels.settings_vars.SettingsDebugPanel':\n            'debug_toolbar.panels.settings.SettingsPanel',\n            'debug_toolbar.panels.headers.HeaderDebugPanel':\n            'debug_toolbar.panels.headers.HeadersPanel',\n            'debug_toolbar.panels.request_vars.RequestVarsDebugPanel':\n            'debug_toolbar.panels.request.RequestPanel',\n            'debug_toolbar.panels.sql.SQLDebugPanel':\n            'debug_toolbar.panels.sql.SQLPanel',\n            'debug_toolbar.panels.template.TemplateDebugPanel':\n            'debug_toolbar.panels.templates.TemplatesPanel',\n            'debug_toolbar.panels.cache.CacheDebugPanel':\n            'debug_toolbar.panels.cache.CachePanel',\n            'debug_toolbar.panels.signals.SignalDebugPanel':\n            'debug_toolbar.panels.signals.SignalsPanel',\n            'debug_toolbar.panels.logger.LoggingDebugPanel':\n            'debug_toolbar.panels.logging.LoggingPanel',\n            'debug_toolbar.panels.redirects.InterceptRedirectsDebugPanel':\n            'debug_toolbar.panels.redirects.RedirectsPanel',\n            'debug_toolbar.panels.profiling.ProfilingDebugPanel':\n            'debug_toolbar.panels.profiling.ProfilingPanel',\n        }\n        for index, old_panel in enumerate(PANELS):\n            new_panel = _RENAMED_PANELS.get(old_panel)\n            if new_panel is not None:\n                warnings.warn(\n                    \"%r was renamed to %r. Update your DEBUG_TOOLBAR_PANELS \"\n                    \"setting.\" % (old_panel, new_panel), DeprecationWarning)\n                PANELS[index] = new_panel\n    return PANELS\n", "comments": "  always import module follows     debug toolbar import settings  dt settings     don import directly config panels  miss changes performed    override settings tests     toolbar options    panel options    milliseconds    backward compatibility 1 0  remove 2 0     redirectspanel enabled    we wanted remove  exist  this fine    redirectspanel disabled    backward compatibility 1 0  remove 2 0  ", "content": "from __future__ import absolute_import, unicode_literals\n\nimport warnings\n\nfrom django.conf import settings\nfrom django.utils import six\nfrom django.utils.lru_cache import lru_cache\n\n# Always import this module as follows:\n# from debug_toolbar import settings [as dt_settings]\n\n# Don't import directly CONFIG or PANELs, or you will miss changes performed\n# with override_settings in tests.\n\n\nCONFIG_DEFAULTS = {\n    # Toolbar options\n    'DISABLE_PANELS': {'debug_toolbar.panels.redirects.RedirectsPanel'},\n    'INSERT_BEFORE': '</body>',\n    'JQUERY_URL': '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    'RENDER_PANELS': None,\n    'RESULTS_CACHE_SIZE': 10,\n    'ROOT_TAG_EXTRA_ATTRS': '',\n    'SHOW_COLLAPSED': False,\n    'SHOW_TOOLBAR_CALLBACK': 'debug_toolbar.middleware.show_toolbar',\n    # Panel options\n    'EXTRA_SIGNALS': [],\n    'ENABLE_STACKTRACES': True,\n    'HIDE_IN_STACKTRACES': (\n        'socketserver' if six.PY3 else 'SocketServer',\n        'threading',\n        'wsgiref',\n        'debug_toolbar',\n        'django',\n    ),\n    'PROFILER_MAX_DEPTH': 10,\n    'SHOW_TEMPLATE_CONTEXT': True,\n    'SKIP_TEMPLATE_PREFIXES': (\n        'django/forms/widgets/',\n        'admin/widgets/',\n    ),\n    'SQL_WARNING_THRESHOLD': 500,   # milliseconds\n}\n\n\n@lru_cache()\ndef get_config():\n    USER_CONFIG = getattr(settings, 'DEBUG_TOOLBAR_CONFIG', {})\n\n    # Backward-compatibility for 1.0, remove in 2.0.\n    _RENAMED_CONFIG = {\n        'RESULTS_STORE_SIZE': 'RESULTS_CACHE_SIZE',\n        'ROOT_TAG_ATTRS': 'ROOT_TAG_EXTRA_ATTRS',\n        'HIDDEN_STACKTRACE_MODULES': 'HIDE_IN_STACKTRACES'\n    }\n    for old_name, new_name in _RENAMED_CONFIG.items():\n        if old_name in USER_CONFIG:\n            warnings.warn(\n                \"%r was renamed to %r. Update your DEBUG_TOOLBAR_CONFIG \"\n                \"setting.\" % (old_name, new_name), DeprecationWarning)\n            USER_CONFIG[new_name] = USER_CONFIG.pop(old_name)\n\n    if 'HIDE_DJANGO_SQL' in USER_CONFIG:\n        warnings.warn(\n            \"HIDE_DJANGO_SQL was removed. Update your \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        USER_CONFIG.pop('HIDE_DJANGO_SQL')\n\n    if 'TAG' in USER_CONFIG:\n        warnings.warn(\n            \"TAG was replaced by INSERT_BEFORE. Update your \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        USER_CONFIG['INSERT_BEFORE'] = '</%s>' % USER_CONFIG.pop('TAG')\n\n    CONFIG = CONFIG_DEFAULTS.copy()\n    CONFIG.update(USER_CONFIG)\n\n    if 'INTERCEPT_REDIRECTS' in USER_CONFIG:\n        warnings.warn(\n            \"INTERCEPT_REDIRECTS is deprecated. Please use the \"\n            \"DISABLE_PANELS config in the \"\n            \"DEBUG_TOOLBAR_CONFIG setting.\", DeprecationWarning)\n        if USER_CONFIG['INTERCEPT_REDIRECTS']:\n            if 'debug_toolbar.panels.redirects.RedirectsPanel' \\\n                    in CONFIG['DISABLE_PANELS']:\n                # RedirectsPanel should be enabled\n                try:\n                    CONFIG['DISABLE_PANELS'].remove(\n                        'debug_toolbar.panels.redirects.RedirectsPanel'\n                    )\n                except KeyError:\n                    # We wanted to remove it, but it didn't exist. This is fine\n                    pass\n        elif 'debug_toolbar.panels.redirects.RedirectsPanel' \\\n                not in CONFIG['DISABLE_PANELS']:\n            # RedirectsPanel should be disabled\n            CONFIG['DISABLE_PANELS'].add(\n                'debug_toolbar.panels.redirects.RedirectsPanel'\n            )\n\n    return CONFIG\n\n\nPANELS_DEFAULTS = [\n    'debug_toolbar.panels.versions.VersionsPanel',\n    'debug_toolbar.panels.timer.TimerPanel',\n    'debug_toolbar.panels.settings.SettingsPanel',\n    'debug_toolbar.panels.headers.HeadersPanel',\n    'debug_toolbar.panels.request.RequestPanel',\n    'debug_toolbar.panels.sql.SQLPanel',\n    'debug_toolbar.panels.staticfiles.StaticFilesPanel',\n    'debug_toolbar.panels.templates.TemplatesPanel',\n    'debug_toolbar.panels.cache.CachePanel',\n    'debug_toolbar.panels.signals.SignalsPanel',\n    'debug_toolbar.panels.logging.LoggingPanel',\n    'debug_toolbar.panels.redirects.RedirectsPanel',\n]\n\n\n@lru_cache()\ndef get_panels():\n    try:\n        PANELS = list(settings.DEBUG_TOOLBAR_PANELS)\n    except AttributeError:\n        PANELS = PANELS_DEFAULTS\n    else:\n        # Backward-compatibility for 1.0, remove in 2.0.\n        _RENAMED_PANELS = {\n            'debug_toolbar.panels.version.VersionDebugPanel':\n            'debug_toolbar.panels.versions.VersionsPanel',\n            'debug_toolbar.panels.timer.TimerDebugPanel':\n            'debug_toolbar.panels.timer.TimerPanel',\n            'debug_toolbar.panels.settings_vars.SettingsDebugPanel':\n            'debug_toolbar.panels.settings.SettingsPanel',\n            'debug_toolbar.panels.headers.HeaderDebugPanel':\n            'debug_toolbar.panels.headers.HeadersPanel',\n            'debug_toolbar.panels.request_vars.RequestVarsDebugPanel':\n            'debug_toolbar.panels.request.RequestPanel',\n            'debug_toolbar.panels.sql.SQLDebugPanel':\n            'debug_toolbar.panels.sql.SQLPanel',\n            'debug_toolbar.panels.template.TemplateDebugPanel':\n            'debug_toolbar.panels.templates.TemplatesPanel',\n            'debug_toolbar.panels.cache.CacheDebugPanel':\n            'debug_toolbar.panels.cache.CachePanel',\n            'debug_toolbar.panels.signals.SignalDebugPanel':\n            'debug_toolbar.panels.signals.SignalsPanel',\n            'debug_toolbar.panels.logger.LoggingDebugPanel':\n            'debug_toolbar.panels.logging.LoggingPanel',\n            'debug_toolbar.panels.redirects.InterceptRedirectsDebugPanel':\n            'debug_toolbar.panels.redirects.RedirectsPanel',\n            'debug_toolbar.panels.profiling.ProfilingDebugPanel':\n            'debug_toolbar.panels.profiling.ProfilingPanel',\n        }\n        for index, old_panel in enumerate(PANELS):\n            new_panel = _RENAMED_PANELS.get(old_panel)\n            if new_panel is not None:\n                warnings.warn(\n                    \"%r was renamed to %r. Update your DEBUG_TOOLBAR_PANELS \"\n                    \"setting.\" % (old_panel, new_panel), DeprecationWarning)\n                PANELS[index] = new_panel\n    return PANELS\n", "description": "A configurable set of panels that display various debug information about the current request/response.", "file_name": "settings.py", "id": "0c8a9215f34b378f7e809ae61a4dc105", "language": "Python", "project_name": "django-debug-toolbar", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jazzband-django-debug-toolbar/jazzband-django-debug-toolbar-459e978/debug_toolbar/settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T09:15:08Z", "url": "https://github.com/jazzband/django-debug-toolbar", "wiki": true}
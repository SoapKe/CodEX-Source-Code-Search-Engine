{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport itertools\nimport json\nimport os\nimport re\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom youtube_dl.compat import (\n    compat_print,\n    compat_urllib_request,\n)\nfrom youtube_dl.utils import format_bytes\n\n\ndef format_size(bytes):\n    return '%s (%d bytes)' % (format_bytes(bytes), bytes)\n\n\ntotal_bytes = 0\n\nfor page in itertools.count(1):\n    releases = json.loads(compat_urllib_request.urlopen(\n        'https://api.github.com/repos/rg3/youtube-dl/releases?page=%s' % page\n    ).read().decode('utf-8'))\n\n    if not releases:\n        break\n\n    for release in releases:\n        compat_print(release['name'])\n        for asset in release['assets']:\n            asset_name = asset['name']\n            total_bytes += asset['download_count'] * asset['size']\n            if all(not re.match(p, asset_name) for p in (\n                    r'^youtube-dl$',\n                    r'^youtube-dl-\\d{4}\\.\\d{2}\\.\\d{2}(?:\\.\\d+)?\\.tar\\.gz$',\n                    r'^youtube-dl\\.exe$')):\n                continue\n            compat_print(\n                ' %s size: %s downloads: %d'\n                % (asset_name, format_size(asset['size']), asset['download_count']))\n\ncompat_print('total downloads traffic: %s' % format_size(total_bytes))\n", "comments": "#!/usr/bin/env python\n", "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\nimport itertools\nimport json\nimport os\nimport re\nimport sys\n\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom youtube_dl.compat import (\n    compat_print,\n    compat_urllib_request,\n)\nfrom youtube_dl.utils import format_bytes\n\n\ndef format_size(bytes):\n    return '%s (%d bytes)' % (format_bytes(bytes), bytes)\n\n\ntotal_bytes = 0\n\nfor page in itertools.count(1):\n    releases = json.loads(compat_urllib_request.urlopen(\n        'https://api.github.com/repos/rg3/youtube-dl/releases?page=%s' % page\n    ).read().decode('utf-8'))\n\n    if not releases:\n        break\n\n    for release in releases:\n        compat_print(release['name'])\n        for asset in release['assets']:\n            asset_name = asset['name']\n            total_bytes += asset['download_count'] * asset['size']\n            if all(not re.match(p, asset_name) for p in (\n                    r'^youtube-dl$',\n                    r'^youtube-dl-\\d{4}\\.\\d{2}\\.\\d{2}(?:\\.\\d+)?\\.tar\\.gz$',\n                    r'^youtube-dl\\.exe$')):\n                continue\n            compat_print(\n                ' %s size: %s downloads: %d'\n                % (asset_name, format_size(asset['size']), asset['download_count']))\n\ncompat_print('total downloads traffic: %s' % format_size(total_bytes))\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "show-downloads-statistics.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/devscripts/show-downloads-statistics.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
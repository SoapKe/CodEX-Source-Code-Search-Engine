{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass LocalNews8IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?localnews8\\.com/(?:[^/]+/)*(?P<display_id>[^/]+)/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.localnews8.com/news/rexburg-business-turns-carbon-fiber-scraps-into-wedding-rings/35183304',\n        'md5': 'be4d48aea61aa2bde7be2ee47691ad20',\n        'info_dict': {\n            'id': '35183304',\n            'display_id': 'rexburg-business-turns-carbon-fiber-scraps-into-wedding-rings',\n            'ext': 'mp4',\n            'title': 'Rexburg business turns carbon fiber scraps into wedding ring',\n            'description': 'The process was first invented by Lamborghini and less than a dozen companies around the world use it.',\n            'duration': 153,\n            'timestamp': 1441844822,\n            'upload_date': '20150910',\n            'uploader_id': 'api',\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        partner_id = self._search_regex(\n            r'partnerId\\s*[:=]\\s*([\"\\'])(?P<id>\\d+)\\1',\n            webpage, 'partner id', group='id')\n        kaltura_id = self._search_regex(\n            r'videoIdString\\s*[:=]\\s*([\"\\'])kaltura:(?P<id>[0-9a-z_]+)\\1',\n            webpage, 'videl id', group='id')\n\n        return {\n            '_type': 'url_transparent',\n            'url': 'kaltura:%s:%s' % (partner_id, kaltura_id),\n            'ie_key': 'Kaltura',\n            'id': video_id,\n            'display_id': display_id,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass LocalNews8IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?localnews8\\.com/(?:[^/]+/)*(?P<display_id>[^/]+)/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.localnews8.com/news/rexburg-business-turns-carbon-fiber-scraps-into-wedding-rings/35183304',\n        'md5': 'be4d48aea61aa2bde7be2ee47691ad20',\n        'info_dict': {\n            'id': '35183304',\n            'display_id': 'rexburg-business-turns-carbon-fiber-scraps-into-wedding-rings',\n            'ext': 'mp4',\n            'title': 'Rexburg business turns carbon fiber scraps into wedding ring',\n            'description': 'The process was first invented by Lamborghini and less than a dozen companies around the world use it.',\n            'duration': 153,\n            'timestamp': 1441844822,\n            'upload_date': '20150910',\n            'uploader_id': 'api',\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        partner_id = self._search_regex(\n            r'partnerId\\s*[:=]\\s*([\"\\'])(?P<id>\\d+)\\1',\n            webpage, 'partner id', group='id')\n        kaltura_id = self._search_regex(\n            r'videoIdString\\s*[:=]\\s*([\"\\'])kaltura:(?P<id>[0-9a-z_]+)\\1',\n            webpage, 'videl id', group='id')\n\n        return {\n            '_type': 'url_transparent',\n            'url': 'kaltura:%s:%s' % (partner_id, kaltura_id),\n            'ie_key': 'Kaltura',\n            'id': video_id,\n            'display_id': display_id,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "localnews8.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/localnews8.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestMaximizingXor(object):\n\n    def test_maximizing_xor(self):\n        solution = Solution()\n        assert_equal(solution.max_xor(10, 15), 7)\n        print('Success: test_maximizing_xor')\n\n\ndef main():\n    test = TestMaximizingXor()\n    test.test_maximizing_xor()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal\n\n\nclass TestMaximizingXor(object):\n\n    def test_maximizing_xor(self):\n        solution = Solution()\n        assert_equal(solution.max_xor(10, 15), 7)\n        print('Success: test_maximizing_xor')\n\n\ndef main():\n    test = TestMaximizingXor()\n    test.test_maximizing_xor()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_maximizing_xor.py", "id": "e14191a11a40f109f552645e490962c8", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/online_judges/maximizing_xor/test_maximizing_xor.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
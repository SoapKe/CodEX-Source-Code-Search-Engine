{"author": "mitmproxy", "code": "\"\"\"\ntcp_message Inline Script Hook API Demonstration\n------------------------------------------------\n\n* modifies packets containing \"foo\" to \"bar\"\n* prints various details for each packet.\n\nexample cmdline invocation:\nmitmdump -T --host --tcp \".*\" -q -s examples/tcp_message.py\n\"\"\"\nfrom mitmproxy.utils import strutils\n\n\ndef tcp_message(tcp_msg):\n    modified_msg = tcp_msg.message.replace(\"foo\", \"bar\")\n\n    is_modified = False if modified_msg == tcp_msg.message else True\n    tcp_msg.message = modified_msg\n\n    print(\n        \"[tcp_message{}] from {} {} to {} {}:\\r\\n{}\".format(\n            \" (modified)\" if is_modified else \"\",\n            \"client\" if tcp_msg.sender == tcp_msg.client_conn else \"server\",\n            tcp_msg.sender.address,\n            \"server\" if tcp_msg.receiver == tcp_msg.server_conn else \"client\",\n            tcp_msg.receiver.address, strutils.bytes_to_escaped_str(tcp_msg.message))\n    )\n", "comments": "    tcp message inline script hook api demonstration                                                     modifies packets containing  foo   bar    prints various details packet   example cmdline invocation  mitmdump  t   host   tcp       q  examples tcp message py     ", "content": "\"\"\"\ntcp_message Inline Script Hook API Demonstration\n------------------------------------------------\n\n* modifies packets containing \"foo\" to \"bar\"\n* prints various details for each packet.\n\nexample cmdline invocation:\nmitmdump -T --host --tcp \".*\" -q -s examples/tcp_message.py\n\"\"\"\nfrom mitmproxy.utils import strutils\n\n\ndef tcp_message(tcp_msg):\n    modified_msg = tcp_msg.message.replace(\"foo\", \"bar\")\n\n    is_modified = False if modified_msg == tcp_msg.message else True\n    tcp_msg.message = modified_msg\n\n    print(\n        \"[tcp_message{}] from {} {} to {} {}:\\r\\n{}\".format(\n            \" (modified)\" if is_modified else \"\",\n            \"client\" if tcp_msg.sender == tcp_msg.client_conn else \"server\",\n            tcp_msg.sender.address,\n            \"server\" if tcp_msg.receiver == tcp_msg.server_conn else \"client\",\n            tcp_msg.receiver.address, strutils.bytes_to_escaped_str(tcp_msg.message))\n    )\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "tcp_message.py", "id": "25d83dec32caec26cf4938d0eba1caac", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/docs/src/examples/complex/tcp_message.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
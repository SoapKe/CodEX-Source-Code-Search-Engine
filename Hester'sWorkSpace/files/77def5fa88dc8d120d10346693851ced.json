{"author": "tflearn", "code": "import tflearn\nimport unittest\n\nimport numpy as np\nimport tensorflow as tf\n\n\nclass TestObjectives(unittest.TestCase):\n    \"\"\"\n    Testing objective functions from tflearn/objectives\n    \"\"\"\n\n    def test_weak_cross_entropy_2d(self):\n        \"\"\"\n        Test tflearn.objectives.weak_cross_entropy_2d\n        \"\"\"\n        num_classes = 2\n        batch_size = 3\n        height, width = 5, 5\n        shape = (batch_size, height, width, num_classes)\n        y_pred = np.random.random(shape).astype(np.float32)\n        target = np.random.randint(0, num_classes, np.prod(shape[:-1]))\n        \n        y_true = np.eye(num_classes)[target].reshape(shape)\n\n        with tf.Graph().as_default():\n            y_pred = tf.convert_to_tensor(y_pred)\n            y_true = tf.convert_to_tensor(y_true)\n\n            loss = tflearn.objectives.weak_cross_entropy_2d(y_pred, y_true)\n\n            with tf.Session() as sess:\n                res = sess.run(loss)\n\n        self.assertGreater(res, 0.)\n        self.assertLess(res, 1.)\n\nif __name__ == \"__main__\":\n    unittest.main()\n", "comments": "        testing objective functions tflearn objectives              def test weak cross entropy 2d(self)                      test tflearn objectives weak cross entropy 2d                convert one hot encoding ", "content": "import tflearn\nimport unittest\n\nimport numpy as np\nimport tensorflow as tf\n\n\nclass TestObjectives(unittest.TestCase):\n    \"\"\"\n    Testing objective functions from tflearn/objectives\n    \"\"\"\n\n    def test_weak_cross_entropy_2d(self):\n        \"\"\"\n        Test tflearn.objectives.weak_cross_entropy_2d\n        \"\"\"\n        num_classes = 2\n        batch_size = 3\n        height, width = 5, 5\n        shape = (batch_size, height, width, num_classes)\n        y_pred = np.random.random(shape).astype(np.float32)\n        target = np.random.randint(0, num_classes, np.prod(shape[:-1]))\n        # convert to one-hot encoding\n        y_true = np.eye(num_classes)[target].reshape(shape)\n\n        with tf.Graph().as_default():\n            y_pred = tf.convert_to_tensor(y_pred)\n            y_true = tf.convert_to_tensor(y_true)\n\n            loss = tflearn.objectives.weak_cross_entropy_2d(y_pred, y_true)\n\n            with tf.Session() as sess:\n                res = sess.run(loss)\n\n        self.assertGreater(res, 0.)\n        self.assertLess(res, 1.)\n\nif __name__ == \"__main__\":\n    unittest.main()\n", "description": "Deep learning library featuring a higher-level API for TensorFlow.", "file_name": "test_objectives.py", "id": "77def5fa88dc8d120d10346693851ced", "language": "Python", "project_name": "tflearn", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tflearn-tflearn/tflearn-tflearn-70fb38a/tests/test_objectives.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:15:41Z", "url": "https://github.com/tflearn/tflearn", "wiki": true}
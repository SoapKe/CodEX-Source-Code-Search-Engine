{"author": "keon", "code": "\ndef license_number(key, K):\n    res, alnum = [], []\n    for char in key:\n        if char != \"-\":\n            alnum.append(char)\n    for i, char in enumerate(reversed(alnum)):\n        res.append(char)\n        if (i+1) % K == 0 and i != len(alnum)-1:\n            res.append(\"-\")\n    return \"\".join(res[::-1])\n\n\nprint(license_number(\"a-bc-dfd-df\", 1), 1)\nprint(license_number(\"a-bc-dfd-df\", 2), 2)\nprint(license_number(\"a-bc-dfd-df\", 3), 3)\nprint(license_number(\"a-bc-dfd-df\", 4), 4)\nprint(license_number(\"a-bc-dfd-df\", 5), 5)\n\n", "comments": "", "content": "\ndef license_number(key, K):\n    res, alnum = [], []\n    for char in key:\n        if char != \"-\":\n            alnum.append(char)\n    for i, char in enumerate(reversed(alnum)):\n        res.append(char)\n        if (i+1) % K == 0 and i != len(alnum)-1:\n            res.append(\"-\")\n    return \"\".join(res[::-1])\n\n\nprint(license_number(\"a-bc-dfd-df\", 1), 1)\nprint(license_number(\"a-bc-dfd-df\", 2), 2)\nprint(license_number(\"a-bc-dfd-df\", 3), 3)\nprint(license_number(\"a-bc-dfd-df\", 4), 4)\nprint(license_number(\"a-bc-dfd-df\", 5), 5)\n\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "license_number.py", "id": "a531500b845ba673ebf08d7fbcb319e1", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/strings/license_number.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .message_media_downloadable import DownloadableMediaMessageProtocolEntity\nclass AudioDownloadableMediaMessageProtocolEntity(DownloadableMediaMessageProtocolEntity):\n    '''\n    <message t=\"{{TIME_STAMP}}\" from=\"{{CONTACT_JID}}\"\n        offline=\"{{OFFLINE}}\" type=\"text\" id=\"{{MESSAGE_ID}}\" notify=\"{{NOTIFY_NAME}}\">\n        <media type=\"{{DOWNLOADABLE_MEDIA_TYPE: (image | audio | video)}}\"\n            mimetype=\"{{MIME_TYPE}}\"\n            filehash=\"{{FILE_HASH}}\"\n            url=\"{{DOWNLOAD_URL}}\"\n            ip=\"{{IP}}\"\n            size=\"{{MEDIA SIZE}}\"\n            file=\"{{FILENAME}}\"\n\n\n            encoding=\"{{ENCODING}}\"\n            height=\"{{IMAGE_HEIGHT}}\"\n            width=\"{{IMAGE_WIDTH}}\"\n\n            > {{THUMBNAIL_RAWDATA (JPEG?)}}\n        </media>\n    </message>\n    '''\n    def __init__(self,\n            mimeType, fileHash, url, ip, size, fileName,\n            abitrate, acodec, asampfreq, duration, encoding, origin, seconds,\n            _id = None, _from = None, to = None, notify = None, timestamp = None,\n            participant = None, preview = None, offline = None, retry = None):\n\n        super(AudioDownloadableMediaMessageProtocolEntity, self).__init__(\"audio\",\n            mimeType, fileHash, url, ip, size, fileName, None,\n            _id, _from, to, notify, timestamp, participant, preview, offline, retry)\n        self.setAudioProps(abitrate, acodec, asampfreq, duration, encoding, origin, seconds)\n\n    def __str__(self):\n        out  = super(AudioDownloadableMediaMessageProtocolEntity, self).__str__()\n        out += \"Bitrate: %s\\n\" % self.abitrate\n        out += \"Codec: %s\\n\" % self.acodec\n        out += \"Duration: %s\\n\" % self.duration\n        out += \"Encoding: %s\\n\" % self.encoding\n        out += \"Origin: %s\\n\" % self.origin\n        out += \"Sampling freq.: %s\\n\" % self.asampfreq\n        return out\n\n    def setAudioProps(self, abitrate = None, acodec = None, asampfreq = None,\n                      duration = None, encoding = None, origin = None, seconds = None):\n        self.abitrate  = abitrate\n        self.acodec    = acodec\n        self.asampfreq = asampfreq\n        self.duration  = duration\n        self.encoding  = encoding\n        self.origin    = origin\n        self.seconds   = seconds\n\n    def toProtocolTreeNode(self):\n        node = super(AudioDownloadableMediaMessageProtocolEntity, self).toProtocolTreeNode()\n        mediaNode = node.getChild(\"media\")\n\n        if self.abitrate:\n            mediaNode.setAttribute(\"abitrate\",  self.abitrate)\n        if self.acodec:\n            mediaNode.setAttribute(\"acodec\",    self.acodec)\n        if self.asampfreq:\n            mediaNode.setAttribute(\"asampfreq\", self.asampfreq)\n        if self.duration:\n            mediaNode.setAttribute(\"duration\",  self.duration)\n        if self.encoding:\n            mediaNode.setAttribute(\"encoding\",  self.encoding)\n        if self.origin:\n            mediaNode.setAttribute(\"origin\",    self.origin)\n        if self.seconds:\n            mediaNode.setAttribute(\"seconds\",   self.seconds)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = DownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = AudioDownloadableMediaMessageProtocolEntity\n        mediaNode = node.getChild(\"media\")\n        entity.setAudioProps(\n            mediaNode.getAttributeValue(\"abitrate\"),\n            mediaNode.getAttributeValue(\"acodec\"),\n            mediaNode.getAttributeValue(\"asampfreq\"),\n            mediaNode.getAttributeValue(\"duration\"),\n            mediaNode.getAttributeValue(\"encoding\"),\n            mediaNode.getAttributeValue(\"origin\"),\n            mediaNode.getAttributeValue(\"seconds\"),\n        )\n        return entity\n\n\n\n    @staticmethod\n    def fromFilePath(fpath, url, ip, to, mimeType = None, preview = None, filehash = None, filesize = None):\n        entity = DownloadableMediaMessageProtocolEntity.fromFilePath(fpath, url, DownloadableMediaMessageProtocolEntity.MEDIA_TYPE_AUDIO, ip, to, mimeType, preview)\n        entity.__class__ = AudioDownloadableMediaMessageProtocolEntity\n        entity.setAudioProps()\n        return entity\n", "comments": "         message    time stamp       contact jid            offline    offline    type  text  id    message id    notify    notify name              media type    downloadable media type  (image   audio   video)                mimetype    mime type                filehash    file hash                url    download url                ip    ip                size    media size                file    filename                  encoding    encoding                height    image height                width    image width                     thumbnail rawdata (jpeg )             media        message          ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .message_media_downloadable import DownloadableMediaMessageProtocolEntity\nclass AudioDownloadableMediaMessageProtocolEntity(DownloadableMediaMessageProtocolEntity):\n    '''\n    <message t=\"{{TIME_STAMP}}\" from=\"{{CONTACT_JID}}\"\n        offline=\"{{OFFLINE}}\" type=\"text\" id=\"{{MESSAGE_ID}}\" notify=\"{{NOTIFY_NAME}}\">\n        <media type=\"{{DOWNLOADABLE_MEDIA_TYPE: (image | audio | video)}}\"\n            mimetype=\"{{MIME_TYPE}}\"\n            filehash=\"{{FILE_HASH}}\"\n            url=\"{{DOWNLOAD_URL}}\"\n            ip=\"{{IP}}\"\n            size=\"{{MEDIA SIZE}}\"\n            file=\"{{FILENAME}}\"\n\n\n            encoding=\"{{ENCODING}}\"\n            height=\"{{IMAGE_HEIGHT}}\"\n            width=\"{{IMAGE_WIDTH}}\"\n\n            > {{THUMBNAIL_RAWDATA (JPEG?)}}\n        </media>\n    </message>\n    '''\n    def __init__(self,\n            mimeType, fileHash, url, ip, size, fileName,\n            abitrate, acodec, asampfreq, duration, encoding, origin, seconds,\n            _id = None, _from = None, to = None, notify = None, timestamp = None,\n            participant = None, preview = None, offline = None, retry = None):\n\n        super(AudioDownloadableMediaMessageProtocolEntity, self).__init__(\"audio\",\n            mimeType, fileHash, url, ip, size, fileName, None,\n            _id, _from, to, notify, timestamp, participant, preview, offline, retry)\n        self.setAudioProps(abitrate, acodec, asampfreq, duration, encoding, origin, seconds)\n\n    def __str__(self):\n        out  = super(AudioDownloadableMediaMessageProtocolEntity, self).__str__()\n        out += \"Bitrate: %s\\n\" % self.abitrate\n        out += \"Codec: %s\\n\" % self.acodec\n        out += \"Duration: %s\\n\" % self.duration\n        out += \"Encoding: %s\\n\" % self.encoding\n        out += \"Origin: %s\\n\" % self.origin\n        out += \"Sampling freq.: %s\\n\" % self.asampfreq\n        return out\n\n    def setAudioProps(self, abitrate = None, acodec = None, asampfreq = None,\n                      duration = None, encoding = None, origin = None, seconds = None):\n        self.abitrate  = abitrate\n        self.acodec    = acodec\n        self.asampfreq = asampfreq\n        self.duration  = duration\n        self.encoding  = encoding\n        self.origin    = origin\n        self.seconds   = seconds\n\n    def toProtocolTreeNode(self):\n        node = super(AudioDownloadableMediaMessageProtocolEntity, self).toProtocolTreeNode()\n        mediaNode = node.getChild(\"media\")\n\n        if self.abitrate:\n            mediaNode.setAttribute(\"abitrate\",  self.abitrate)\n        if self.acodec:\n            mediaNode.setAttribute(\"acodec\",    self.acodec)\n        if self.asampfreq:\n            mediaNode.setAttribute(\"asampfreq\", self.asampfreq)\n        if self.duration:\n            mediaNode.setAttribute(\"duration\",  self.duration)\n        if self.encoding:\n            mediaNode.setAttribute(\"encoding\",  self.encoding)\n        if self.origin:\n            mediaNode.setAttribute(\"origin\",    self.origin)\n        if self.seconds:\n            mediaNode.setAttribute(\"seconds\",   self.seconds)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = DownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = AudioDownloadableMediaMessageProtocolEntity\n        mediaNode = node.getChild(\"media\")\n        entity.setAudioProps(\n            mediaNode.getAttributeValue(\"abitrate\"),\n            mediaNode.getAttributeValue(\"acodec\"),\n            mediaNode.getAttributeValue(\"asampfreq\"),\n            mediaNode.getAttributeValue(\"duration\"),\n            mediaNode.getAttributeValue(\"encoding\"),\n            mediaNode.getAttributeValue(\"origin\"),\n            mediaNode.getAttributeValue(\"seconds\"),\n        )\n        return entity\n\n\n\n    @staticmethod\n    def fromFilePath(fpath, url, ip, to, mimeType = None, preview = None, filehash = None, filesize = None):\n        entity = DownloadableMediaMessageProtocolEntity.fromFilePath(fpath, url, DownloadableMediaMessageProtocolEntity.MEDIA_TYPE_AUDIO, ip, to, mimeType, preview)\n        entity.__class__ = AudioDownloadableMediaMessageProtocolEntity\n        entity.setAudioProps()\n        return entity\n", "description": "The python WhatsApp library", "file_name": "message_media_downloadable_audio.py", "id": "7f8414327ed595d5e7f0f56600e7ea0b", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_media/protocolentities/message_media_downloadable_audio.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
{"author": "thumbor", "code": "\n# -*- coding: utf-8 -*-\n\n\n\n\n\n\n# Copyright (c) 2011 globo.com thumbor@googlegroups.com\n\nfrom thumbor.config import Config\nfrom thumbor.context import Context, RequestParameters\nfrom thumbor.optimizers.gifv import Optimizer\nfrom thumbor.utils import which, EXTENSION\n\nfrom unittest import TestCase\n\n\nclass GifvOptimizerTest(TestCase):\n    def get_context(self):\n        conf = Config()\n        conf.STATSD_HOST = ''\n        conf.FFMPEG_PATH = which('ffmpeg')\n        ctx = Context(config=conf)\n        ctx.request = RequestParameters()\n        ctx.request.filters.append('gifv')\n\n        return ctx\n\n    def test_should_run_for_gif(self):\n        optimizer = Optimizer(self.get_context())\n        self.assertTrue(optimizer.should_run('.gif', ''))\n\n    def test_should_not_run_for_not_gif(self):\n        optimizer = Optimizer(self.get_context())\n        for ext in EXTENSION.itervalues():\n            if ext != '.gif':\n                self.assertFalse(optimizer.should_run(ext, ''))\n\n    def test_should_parse_background_color_with_valid_value(self):\n        optimizer = Optimizer(self.get_context())\n        magenta_unicode_hex = u'#ff00ff'\n        self.assertEqual(optimizer.normalize_color_to_hex('ff00ff'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('#ff00ff'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('f0f'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('#f0f'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('magenta'), magenta_unicode_hex)\n\n    def test_should_not_parse_background_color_with_invalid_value(self):\n        optimizer = Optimizer(self.get_context())\n        self.assertEqual(optimizer.normalize_color_to_hex('asdfasdfasfd'), None)\n", "comments": "   usr bin python        coding  utf 8        thumbor imaging service    https   github com thumbor thumbor wiki    licensed mit license     http   www opensource org licenses mit license    copyright (c) 2011 globo com thumbor googlegroups com ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# thumbor imaging service\n# https://github.com/thumbor/thumbor/wiki\n\n# Licensed under the MIT license:\n# http://www.opensource.org/licenses/mit-license\n# Copyright (c) 2011 globo.com thumbor@googlegroups.com\n\nfrom thumbor.config import Config\nfrom thumbor.context import Context, RequestParameters\nfrom thumbor.optimizers.gifv import Optimizer\nfrom thumbor.utils import which, EXTENSION\n\nfrom unittest import TestCase\n\n\nclass GifvOptimizerTest(TestCase):\n    def get_context(self):\n        conf = Config()\n        conf.STATSD_HOST = ''\n        conf.FFMPEG_PATH = which('ffmpeg')\n        ctx = Context(config=conf)\n        ctx.request = RequestParameters()\n        ctx.request.filters.append('gifv')\n\n        return ctx\n\n    def test_should_run_for_gif(self):\n        optimizer = Optimizer(self.get_context())\n        self.assertTrue(optimizer.should_run('.gif', ''))\n\n    def test_should_not_run_for_not_gif(self):\n        optimizer = Optimizer(self.get_context())\n        for ext in EXTENSION.itervalues():\n            if ext != '.gif':\n                self.assertFalse(optimizer.should_run(ext, ''))\n\n    def test_should_parse_background_color_with_valid_value(self):\n        optimizer = Optimizer(self.get_context())\n        magenta_unicode_hex = u'#ff00ff'\n        self.assertEqual(optimizer.normalize_color_to_hex('ff00ff'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('#ff00ff'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('f0f'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('#f0f'), magenta_unicode_hex)\n        self.assertEqual(optimizer.normalize_color_to_hex('magenta'), magenta_unicode_hex)\n\n    def test_should_not_parse_background_color_with_invalid_value(self):\n        optimizer = Optimizer(self.get_context())\n        self.assertEqual(optimizer.normalize_color_to_hex('asdfasdfasfd'), None)\n", "description": "thumbor is an open-source photo thumbnail service by globo.com", "file_name": "test_gifv.py", "id": "c90747b57fc45c89dea09e8a6df504a7", "language": "Python", "project_name": "thumbor", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/thumbor-thumbor/thumbor-thumbor-991f13c/tests/optimizers/test_gifv.py", "save_time": "", "source": "", "update_at": "2018-03-18T09:16:11Z", "url": "https://github.com/thumbor/thumbor", "wiki": true}
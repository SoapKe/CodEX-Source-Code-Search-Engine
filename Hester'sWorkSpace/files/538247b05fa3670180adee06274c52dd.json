{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GrouponIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?groupon\\.com/deals/(?P<id>[^/?\n\n    _TEST = {\n        'url': 'https://www.groupon.com/deals/bikram-yoga-huntington-beach-2\n        'info_dict': {\n            'id': 'bikram-yoga-huntington-beach-2',\n            'title': '$49 for 10 Yoga Classes or One Month of Unlimited Classes at Bikram Yoga Huntington Beach ($180 Value)',\n            'description': 'Studio kept at 105 degrees and 40% humidity with anti-microbial and anti-slip Flotex flooring; certified instructors',\n        },\n        'playlist': [{\n            'md5': '42428ce8a00585f9bc36e49226eae7a1',\n            'info_dict': {\n                'id': 'fk6OhWpXgIQ',\n                'ext': 'mp4',\n                'title': 'Bikram Yoga Huntington Beach | Orange County !tubGNycTo@9Uxg82uESj4i61EYX8nyuf',\n                'description': 'md5:d41d8cd98f00b204e9800998ecf8427e',\n                'duration': 45,\n                'upload_date': '20160405',\n                'uploader_id': 'groupon',\n                'uploader': 'Groupon',\n            },\n            'add_ie': ['Youtube'],\n        }],\n        'params': {\n            'skip_download': True,\n        },\n    }\n\n    _PROVIDERS = {\n        'ooyala': ('ooyala:%s', 'Ooyala'),\n        'youtube': ('%s', 'Youtube'),\n    }\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n        webpage = self._download_webpage(url, playlist_id)\n\n        payload = self._parse_json(self._search_regex(\n            r'(?:var\\s+|window\\.)payload\\s*=\\s*(.*?);\\n', webpage, 'payload'), playlist_id)\n        videos = payload['carousel'].get('dealVideos', [])\n        entries = []\n        for v in videos:\n            provider = v.get('provider')\n            video_id = v.get('media') or v.get('id') or v.get('baseURL')\n            if not provider or not video_id:\n                continue\n            url_pattern, ie_key = self._PROVIDERS.get(provider.lower())\n            if not url_pattern:\n                self.report_warning(\n                    '%s: Unsupported video provider %s, skipping video' %\n                    (playlist_id, provider))\n                continue\n            entries.append(self.url_result(url_pattern % video_id, ie_key))\n\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'entries': entries,\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n        }\n", "comments": "#&]+)'\n#ooid=tubGNycTo_9Uxg82uESj4i61EYX8nyuf',\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GrouponIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?groupon\\.com/deals/(?P<id>[^/?#&]+)'\n\n    _TEST = {\n        'url': 'https://www.groupon.com/deals/bikram-yoga-huntington-beach-2#ooid=tubGNycTo_9Uxg82uESj4i61EYX8nyuf',\n        'info_dict': {\n            'id': 'bikram-yoga-huntington-beach-2',\n            'title': '$49 for 10 Yoga Classes or One Month of Unlimited Classes at Bikram Yoga Huntington Beach ($180 Value)',\n            'description': 'Studio kept at 105 degrees and 40% humidity with anti-microbial and anti-slip Flotex flooring; certified instructors',\n        },\n        'playlist': [{\n            'md5': '42428ce8a00585f9bc36e49226eae7a1',\n            'info_dict': {\n                'id': 'fk6OhWpXgIQ',\n                'ext': 'mp4',\n                'title': 'Bikram Yoga Huntington Beach | Orange County !tubGNycTo@9Uxg82uESj4i61EYX8nyuf',\n                'description': 'md5:d41d8cd98f00b204e9800998ecf8427e',\n                'duration': 45,\n                'upload_date': '20160405',\n                'uploader_id': 'groupon',\n                'uploader': 'Groupon',\n            },\n            'add_ie': ['Youtube'],\n        }],\n        'params': {\n            'skip_download': True,\n        },\n    }\n\n    _PROVIDERS = {\n        'ooyala': ('ooyala:%s', 'Ooyala'),\n        'youtube': ('%s', 'Youtube'),\n    }\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n        webpage = self._download_webpage(url, playlist_id)\n\n        payload = self._parse_json(self._search_regex(\n            r'(?:var\\s+|window\\.)payload\\s*=\\s*(.*?);\\n', webpage, 'payload'), playlist_id)\n        videos = payload['carousel'].get('dealVideos', [])\n        entries = []\n        for v in videos:\n            provider = v.get('provider')\n            video_id = v.get('media') or v.get('id') or v.get('baseURL')\n            if not provider or not video_id:\n                continue\n            url_pattern, ie_key = self._PROVIDERS.get(provider.lower())\n            if not url_pattern:\n                self.report_warning(\n                    '%s: Unsupported video provider %s, skipping video' %\n                    (playlist_id, provider))\n                continue\n            entries.append(self.url_result(url_pattern % video_id, ie_key))\n\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'entries': entries,\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "groupon.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/groupon.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
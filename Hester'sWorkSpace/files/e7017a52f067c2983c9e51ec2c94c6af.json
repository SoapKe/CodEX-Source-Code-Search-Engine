{"author": "donnemartin", "code": "\"\"\"This file contains code used in \"Think Stats\",\nby Allen B. Downey, available from greenteapress.com\n\nCopyright 2014 Allen B. Downey\nLicense: GNU GPLv3 http://www.gnu.org/licenses/gpl.html\n\"\"\"\n\nfrom __future__ import print_function\n\nimport math\nimport numpy as np\n\nimport nsfg\nimport thinkstats2\nimport thinkplot\n\n\ndef MakeFrames():\n    \"\"\"Reads pregnancy data and partitions first babies and others.\n\n    returns: DataFrames (all live births, first babies, others)\n    \"\"\"\n    preg = nsfg.ReadFemPreg()\n\n    live = preg[preg.outcome == 1]\n    firsts = live[live.birthord == 1]\n    others = live[live.birthord != 1]\n\n    assert len(live) == 9148\n    assert len(firsts) == 4413\n    assert len(others) == 4735\n\n    return live, firsts, others\n\n\ndef Summarize(live, firsts, others):\n    \"\"\"Print various summary statistics.\"\"\"\n\n    mean = live.prglngth.mean()\n    var = live.prglngth.var()\n    std = live.prglngth.std()\n\n    print('Live mean', mean)\n    print('Live variance', var)\n    print('Live std', std)\n\n    mean1 = firsts.prglngth.mean()\n    mean2 = others.prglngth.mean()\n\n    var1 = firsts.prglngth.var()\n    var2 = others.prglngth.var()\n\n    print('Mean')\n    print('First babies', mean1)\n    print('Others', mean2)\n\n    print('Variance')\n    print('First babies', var1)\n    print('Others', var2)\n\n    print('Difference in weeks', mean1 - mean2)\n    print('Difference in hours', (mean1 - mean2) * 7 * 24)\n\n    print('Difference relative to 39 weeks', (mean1 - mean2) / 39 * 100)\n\n    d = thinkstats2.CohenEffectSize(firsts.prglngth, others.prglngth)\n    print('Cohen d', d)\n\n\ndef PrintExtremes(live):\n    \"\"\"Plots the histogram of pregnancy lengths and prints the extremes.\n\n    live: DataFrame of live births\n    \"\"\"\n    hist = thinkstats2.Hist(live.prglngth)\n    thinkplot.Hist(hist, label='live births')\n\n    thinkplot.Save(root='first_nsfg_hist_live', \n                   title='Histogram',\n                   xlabel='weeks',\n                   ylabel='frequency')\n\n    print('Shortest lengths:')\n    for weeks, freq in hist.Smallest(10):\n        print(weeks, freq)\n\n    print('Longest lengths:')\n    for weeks, freq in hist.Largest(10):\n        print(weeks, freq)\n    \n\ndef MakeHists(live):\n    \"\"\"Plot Hists for live births\n\n    live: DataFrame\n    others: DataFrame\n    \"\"\"\n    hist = thinkstats2.Hist(live.birthwgt_lb, label='birthwgt_lb')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_wgt_lb_hist', \n                   xlabel='pounds',\n                   ylabel='frequency',\n                   axis=[-1, 14, 0, 3200])\n\n    hist = thinkstats2.Hist(live.birthwgt_oz, label='birthwgt_oz')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_wgt_oz_hist', \n                   xlabel='ounces',\n                   ylabel='frequency',\n                   axis=[-1, 16, 0, 1200])\n\n    hist = thinkstats2.Hist(np.floor(live.agepreg), label='agepreg')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_agepreg_hist', \n                   xlabel='years',\n                   ylabel='frequency')\n\n    hist = thinkstats2.Hist(live.prglngth, label='prglngth')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_prglngth_hist', \n                   xlabel='weeks',\n                   ylabel='frequency',\n                   axis=[-1, 53, 0, 5000])\n\n\ndef MakeComparison(firsts, others):\n    \"\"\"Plots histograms of pregnancy length for first babies and others.\n\n    firsts: DataFrame\n    others: DataFrame\n    \"\"\"\n    first_hist = thinkstats2.Hist(firsts.prglngth, label='first')\n    other_hist = thinkstats2.Hist(others.prglngth, label='other')\n\n    width = 0.45\n    thinkplot.PrePlot(2)\n    thinkplot.Hist(first_hist, align='right', width=width)\n    thinkplot.Hist(other_hist, align='left', width=width)\n\n    thinkplot.Save(root='first_nsfg_hist', \n                   title='Histogram',\n                   xlabel='weeks',\n                   ylabel='frequency',\n                   axis=[27, 46, 0, 2700])\n\n\ndef main(script):\n    live, firsts, others = MakeFrames()\n\n    MakeHists(live)\n    PrintExtremes(live)\n    MakeComparison(firsts, others)\n    Summarize(live, firsts, others)\n\n\nif __name__ == '__main__':\n    import sys\n    main(*sys.argv)\n\n\n", "comments": "   this file contains code used  think stats   allen b  downey  available greenteapress com  copyright 2014 allen b  downey license  gnu gplv3 http   www gnu org licenses gpl html        future   import print function  import math import numpy np  import nsfg import thinkstats2 import thinkplot   def makeframes()         reads pregnancy data partitions first babies others       returns  dataframes (all live births  first babies  others)             preg   nsfg readfempreg()      live   preg preg outcome    1      firsts   live live birthord    1      others   live live birthord    1       assert len(live)    9148     assert len(firsts)    4413     assert len(others)    4735      return live  firsts  others   def summarize(live  firsts  others)         print various summary statistics          mean   live prglngth mean()     var   live prglngth var()     std   live prglngth std()      print( live mean   mean)     print( live variance   var)     print( live std   std)      mean1   firsts prglngth mean()     mean2   others prglngth mean()      var1   firsts prglngth var()     var2   others prglngth var()      print( mean )     print( first babies   mean1)     print( others   mean2)      print( variance )     print( first babies   var1)     print( others   var2)      print( difference weeks   mean1   mean2)     print( difference hours   (mean1   mean2)   7   24)      print( difference relative 39 weeks   (mean1   mean2)   39   100)        thinkstats2 coheneffectsize(firsts prglngth  others prglngth)     print( cohen   d)   def printextremes(live)         plots histogram pregnancy lengths prints extremes       live  dataframe live births             hist   thinkstats2 hist(live prglngth)     thinkplot hist(hist  label  live births )      thinkplot save(root  first nsfg hist live                       title  histogram                      xlabel  weeks                      ylabel  frequency )      print( shortest lengths  )     weeks  freq hist smallest(10)          print(weeks  freq)      print( longest lengths  )     weeks  freq hist largest(10)          print(weeks  freq)       def makehists(live)         plot hists live births      live  dataframe     others  dataframe             hist   thinkstats2 hist(live birthwgt lb  label  birthwgt lb )     thinkplot hist(hist)     thinkplot save(root  first wgt lb hist                       xlabel  pounds                      ylabel  frequency                      axis   1  14  0  3200 )      hist   thinkstats2 hist(live birthwgt oz  label  birthwgt oz )     thinkplot hist(hist)     thinkplot save(root  first wgt oz hist                       xlabel  ounces                      ylabel  frequency                      axis   1  16  0  1200 )      hist   thinkstats2 hist(np floor(live agepreg)  label  agepreg )     thinkplot hist(hist)     thinkplot save(root  first agepreg hist                       xlabel  years                      ylabel  frequency )      hist   thinkstats2 hist(live prglngth  label  prglngth )     thinkplot hist(hist)     thinkplot save(root  first prglngth hist                       xlabel  weeks                      ylabel  frequency                      axis   1  53  0  5000 )   def makecomparison(firsts  others)         plots histograms pregnancy length first babies others       firsts  dataframe     others  dataframe         ", "content": "\"\"\"This file contains code used in \"Think Stats\",\nby Allen B. Downey, available from greenteapress.com\n\nCopyright 2014 Allen B. Downey\nLicense: GNU GPLv3 http://www.gnu.org/licenses/gpl.html\n\"\"\"\n\nfrom __future__ import print_function\n\nimport math\nimport numpy as np\n\nimport nsfg\nimport thinkstats2\nimport thinkplot\n\n\ndef MakeFrames():\n    \"\"\"Reads pregnancy data and partitions first babies and others.\n\n    returns: DataFrames (all live births, first babies, others)\n    \"\"\"\n    preg = nsfg.ReadFemPreg()\n\n    live = preg[preg.outcome == 1]\n    firsts = live[live.birthord == 1]\n    others = live[live.birthord != 1]\n\n    assert len(live) == 9148\n    assert len(firsts) == 4413\n    assert len(others) == 4735\n\n    return live, firsts, others\n\n\ndef Summarize(live, firsts, others):\n    \"\"\"Print various summary statistics.\"\"\"\n\n    mean = live.prglngth.mean()\n    var = live.prglngth.var()\n    std = live.prglngth.std()\n\n    print('Live mean', mean)\n    print('Live variance', var)\n    print('Live std', std)\n\n    mean1 = firsts.prglngth.mean()\n    mean2 = others.prglngth.mean()\n\n    var1 = firsts.prglngth.var()\n    var2 = others.prglngth.var()\n\n    print('Mean')\n    print('First babies', mean1)\n    print('Others', mean2)\n\n    print('Variance')\n    print('First babies', var1)\n    print('Others', var2)\n\n    print('Difference in weeks', mean1 - mean2)\n    print('Difference in hours', (mean1 - mean2) * 7 * 24)\n\n    print('Difference relative to 39 weeks', (mean1 - mean2) / 39 * 100)\n\n    d = thinkstats2.CohenEffectSize(firsts.prglngth, others.prglngth)\n    print('Cohen d', d)\n\n\ndef PrintExtremes(live):\n    \"\"\"Plots the histogram of pregnancy lengths and prints the extremes.\n\n    live: DataFrame of live births\n    \"\"\"\n    hist = thinkstats2.Hist(live.prglngth)\n    thinkplot.Hist(hist, label='live births')\n\n    thinkplot.Save(root='first_nsfg_hist_live', \n                   title='Histogram',\n                   xlabel='weeks',\n                   ylabel='frequency')\n\n    print('Shortest lengths:')\n    for weeks, freq in hist.Smallest(10):\n        print(weeks, freq)\n\n    print('Longest lengths:')\n    for weeks, freq in hist.Largest(10):\n        print(weeks, freq)\n    \n\ndef MakeHists(live):\n    \"\"\"Plot Hists for live births\n\n    live: DataFrame\n    others: DataFrame\n    \"\"\"\n    hist = thinkstats2.Hist(live.birthwgt_lb, label='birthwgt_lb')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_wgt_lb_hist', \n                   xlabel='pounds',\n                   ylabel='frequency',\n                   axis=[-1, 14, 0, 3200])\n\n    hist = thinkstats2.Hist(live.birthwgt_oz, label='birthwgt_oz')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_wgt_oz_hist', \n                   xlabel='ounces',\n                   ylabel='frequency',\n                   axis=[-1, 16, 0, 1200])\n\n    hist = thinkstats2.Hist(np.floor(live.agepreg), label='agepreg')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_agepreg_hist', \n                   xlabel='years',\n                   ylabel='frequency')\n\n    hist = thinkstats2.Hist(live.prglngth, label='prglngth')\n    thinkplot.Hist(hist)\n    thinkplot.Save(root='first_prglngth_hist', \n                   xlabel='weeks',\n                   ylabel='frequency',\n                   axis=[-1, 53, 0, 5000])\n\n\ndef MakeComparison(firsts, others):\n    \"\"\"Plots histograms of pregnancy length for first babies and others.\n\n    firsts: DataFrame\n    others: DataFrame\n    \"\"\"\n    first_hist = thinkstats2.Hist(firsts.prglngth, label='first')\n    other_hist = thinkstats2.Hist(others.prglngth, label='other')\n\n    width = 0.45\n    thinkplot.PrePlot(2)\n    thinkplot.Hist(first_hist, align='right', width=width)\n    thinkplot.Hist(other_hist, align='left', width=width)\n\n    thinkplot.Save(root='first_nsfg_hist', \n                   title='Histogram',\n                   xlabel='weeks',\n                   ylabel='frequency',\n                   axis=[27, 46, 0, 2700])\n\n\ndef main(script):\n    live, firsts, others = MakeFrames()\n\n    MakeHists(live)\n    PrintExtremes(live)\n    MakeComparison(firsts, others)\n    Summarize(live, firsts, others)\n\n\nif __name__ == '__main__':\n    import sys\n    main(*sys.argv)\n\n\n", "description": "Data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe, Keras), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.", "file_name": "first.py", "id": "e7017a52f067c2983c9e51ec2c94c6af", "language": "Python", "project_name": "data-science-ipython-notebooks", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-data-science-ipython-notebooks/donnemartin-data-science-ipython-notebooks-a876e34/scipy/first.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:16:56Z", "url": "https://github.com/donnemartin/data-science-ipython-notebooks", "wiki": true}
{"author": "HelloZeroNet", "code": "import re\nfrom Plugin import PluginManager\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n    def __init__(self, *args, **kwargs):\n        from Site import SiteManager\n        self.site_manager = SiteManager.site_manager\n        super(UiRequestPlugin, self).__init__(*args, **kwargs)\n\n\n    \n    def actionSiteMedia(self, path):\n        match = re.match(\"/media/(?P<address>[A-Za-z0-9-]+\\.[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", path)\n        if match: \n            domain = match.group(\"address\")\n            address = self.site_manager.resolveDomain(domain)\n            if address:\n                path = \"/media/\"+address+match.group(\"inner_path\")\n        return super(UiRequestPlugin, self).actionSiteMedia(path) \n\n\n    \n    def isMediaRequestAllowed(self, site_address, referer):\n        referer_path = re.sub(\"http[s]{0,1}://.*?/\", \"/\", referer).replace(\"/media\", \"\") \n        referer_path = re.sub(\"\\?.*\", \"\", referer_path) \n\n        if self.isProxyRequest(): \n            referer = re.sub(\"^http://zero[/]+\", \"http://\", referer) \n            referer_site_address = re.match(\"http[s]{0,1}://(.*?)(/|$)\", referer).group(1)\n        else: \n            referer_site_address = re.match(\"/(?P<address>[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", referer_path).group(\"address\")\n\n        if referer_site_address == site_address: \n            return True\n        elif self.site_manager.resolveDomain(referer_site_address) == site_address: \n            return True\n        else: \n            return False\n\n", "comments": "  media request    its valid domain  resolve first    get wrapper frame output    is mediarequest allowed referer    remove site address    remove http params    match site domain    allow  zero access    match request path    referer site address simple address    referer site address dns    invalid referer ", "content": "import re\nfrom Plugin import PluginManager\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n    def __init__(self, *args, **kwargs):\n        from Site import SiteManager\n        self.site_manager = SiteManager.site_manager\n        super(UiRequestPlugin, self).__init__(*args, **kwargs)\n\n\n    # Media request\n    def actionSiteMedia(self, path):\n        match = re.match(\"/media/(?P<address>[A-Za-z0-9-]+\\.[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", path)\n        if match: # Its a valid domain, resolve first\n            domain = match.group(\"address\")\n            address = self.site_manager.resolveDomain(domain)\n            if address:\n                path = \"/media/\"+address+match.group(\"inner_path\")\n        return super(UiRequestPlugin, self).actionSiteMedia(path) # Get the wrapper frame output\n\n\n    # Is mediarequest allowed from that referer\n    def isMediaRequestAllowed(self, site_address, referer):\n        referer_path = re.sub(\"http[s]{0,1}://.*?/\", \"/\", referer).replace(\"/media\", \"\") # Remove site address\n        referer_path = re.sub(\"\\?.*\", \"\", referer_path) # Remove http params\n\n        if self.isProxyRequest(): # Match to site domain\n            referer = re.sub(\"^http://zero[/]+\", \"http://\", referer) # Allow /zero access\n            referer_site_address = re.match(\"http[s]{0,1}://(.*?)(/|$)\", referer).group(1)\n        else: # Match to request path\n            referer_site_address = re.match(\"/(?P<address>[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", referer_path).group(\"address\")\n\n        if referer_site_address == site_address: # Referer site address as simple address\n            return True\n        elif self.site_manager.resolveDomain(referer_site_address) == site_address: # Referer site address as dns\n            return True\n        else: # Invalid referer\n            return False\n\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "UiRequestPlugin.py", "id": "488abc0c6bd72b333efcafb0250d8b20", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/plugins/disabled-Zeroname-local/UiRequestPlugin.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
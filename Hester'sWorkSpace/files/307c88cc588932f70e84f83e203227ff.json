{"author": "django", "code": "from django import get_version\nfrom django.test import SimpleTestCase\nfrom django.utils.version import get_version_tuple\n\n\nclass VersionTests(SimpleTestCase):\n\n    def test_development(self):\n        ver_tuple = (1, 4, 0, 'alpha', 0)\n        \n        \n        ver_string = get_version(ver_tuple)\n        self.assertRegex(ver_string, r'1\\.4(\\.dev[0-9]+)?')\n\n    def test_releases(self):\n        tuples_to_strings = (\n            ((1, 4, 0, 'alpha', 1), '1.4a1'),\n            ((1, 4, 0, 'beta', 1), '1.4b1'),\n            ((1, 4, 0, 'rc', 1), '1.4rc1'),\n            ((1, 4, 0, 'final', 0), '1.4'),\n            ((1, 4, 1, 'rc', 2), '1.4.1rc2'),\n            ((1, 4, 1, 'final', 0), '1.4.1'),\n        )\n        for ver_tuple, ver_string in tuples_to_strings:\n            self.assertEqual(get_version(ver_tuple), ver_string)\n\n    def test_get_version_tuple(self):\n        self.assertEqual(get_version_tuple('1.2.3'), (1, 2, 3))\n        self.assertEqual(get_version_tuple('1.2.3b2'), (1, 2, 3))\n        self.assertEqual(get_version_tuple('1.2.3b2.dev0'), (1, 2, 3))\n", "comments": "  this return different result run within outside    git clone  1 4 devyyyymmddhhmmss 1 4  ", "content": "from django import get_version\nfrom django.test import SimpleTestCase\nfrom django.utils.version import get_version_tuple\n\n\nclass VersionTests(SimpleTestCase):\n\n    def test_development(self):\n        ver_tuple = (1, 4, 0, 'alpha', 0)\n        # This will return a different result when it's run within or outside\n        # of a git clone: 1.4.devYYYYMMDDHHMMSS or 1.4.\n        ver_string = get_version(ver_tuple)\n        self.assertRegex(ver_string, r'1\\.4(\\.dev[0-9]+)?')\n\n    def test_releases(self):\n        tuples_to_strings = (\n            ((1, 4, 0, 'alpha', 1), '1.4a1'),\n            ((1, 4, 0, 'beta', 1), '1.4b1'),\n            ((1, 4, 0, 'rc', 1), '1.4rc1'),\n            ((1, 4, 0, 'final', 0), '1.4'),\n            ((1, 4, 1, 'rc', 2), '1.4.1rc2'),\n            ((1, 4, 1, 'final', 0), '1.4.1'),\n        )\n        for ver_tuple, ver_string in tuples_to_strings:\n            self.assertEqual(get_version(ver_tuple), ver_string)\n\n    def test_get_version_tuple(self):\n        self.assertEqual(get_version_tuple('1.2.3'), (1, 2, 3))\n        self.assertEqual(get_version_tuple('1.2.3b2'), (1, 2, 3))\n        self.assertEqual(get_version_tuple('1.2.3b2.dev0'), (1, 2, 3))\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "tests.py", "id": "307c88cc588932f70e84f83e203227ff", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/version/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
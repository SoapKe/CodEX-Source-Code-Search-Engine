{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: net_ping\nversion_added: \"2.4\"\nauthor: \"Jacob McGill (@jmcgill298)\"\nshort_description: Tests reachability using ping from a network device\ndescription:\n  - Tests reachability using ping from network device to a remote destination.\n  - For Windows targets, use the M(win_ping) module instead.\n  - For targets running Python, use the M(ping) module instead.\noptions:\n  count:\n    description:\n    - Number of packets to send.\n    default: 5\n  dest:\n    description:\n    - The IP Address or hostname (resolvable by switch) of the remote node.\n    required: true\n  source:\n    description:\n    - The source IP Address.\n  state:\n    description:\n    - Determines if the expected result is success or fail.\n    choices: [ absent, present ]\n    default: present\n  vrf:\n    description:\n    - The VRF to use for forwarding.\n    default: default\nnotes:\n  - For Windows targets, use the M(win_ping) module instead.\n  - For targets running Python, use the M(ping) module instead.\n'''\n\n\nEXAMPLES = r'''\n- name: Test reachability to 10.10.10.10 using default vrf\n  net_ping:\n    dest: 10.10.10.10\n\n- name: Test reachability to 10.20.20.20 using prod vrf\n  net_ping:\n    dest: 10.20.20.20\n    vrf: prod\n\n- name: Test unreachability to 10.30.30.30 using default vrf\n  net_ping:\n    dest: 10.30.30.30\n    state: absent\n\n- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source\n  net_ping:\n    dest: 10.40.40.40\n    source: loopback0\n    vrf: prod\n    count: 20\n'''\n\nRETURN = r'''\ncommands:\n  description: Show the command sent.\n  returned: always\n  type: list\n  sample: [\"ping vrf prod 10.40.40.40 count 20 source loopback0\"]\npacket_loss:\n  description: Percentage of packets lost.\n  returned: always\n  type: str\n  sample: \"0%\"\npackets_rx:\n  description: Packets successfully received.\n  returned: always\n  type: int\n  sample: 20\npackets_tx:\n  description: Packets successfully transmitted.\n  returned: always\n  type: int\n  sample: 20\nrtt:\n  description: Show RTT stats.\n  returned: always\n  type: dict\n  sample: {\"avg\": 2, \"max\": 8, \"min\": 1}\n'''\n", "comments": "        module  net ping version added   2 4  author   jacob mcgill ( jmcgill298)  short description  tests reachability using ping network device description      tests reachability using ping network device remote destination      for windows targets  use m(win ping) module instead      for targets running python  use m(ping) module instead  options    count      description        number packets send      default  5   dest      description        the ip address hostname (resolvable switch) remote node      required  true   source      description        the source ip address    state      description        determines expected result success fail      choices    absent  present       default  present   vrf      description        the vrf use forwarding      default  default notes      for windows targets  use m(win ping) module instead      for targets running python  use m(ping) module instead        examples   r      name  test reachability 10 10 10 10 using default vrf   net ping      dest  10 10 10 10    name  test reachability 10 20 20 20 using prod vrf   net ping      dest  10 20 20 20     vrf  prod    name  test unreachability 10 30 30 30 using default vrf   net ping      dest  10 30 30 30     state  absent    name  test reachability 10 40 40 40 using prod vrf setting count source   net ping      dest  10 40 40 40     source  loopback0     vrf  prod     count  20      return   r    commands    description  show command sent    returned  always   type  list   sample    ping vrf prod 10 40 40 40 count 20 source loopback0   packet loss    description  percentage packets lost    returned  always   type  str   sample   0   packets rx    description  packets successfully received    returned  always   type  int   sample  20 packets tx    description  packets successfully transmitted    returned  always   type  int   sample  20 rtt    description  show rtt stats    returned  always   type  dict   sample    avg   2   max   8   min   1          usr bin python        coding  utf 8        (c) 2017  ansible red hat  inc    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: net_ping\nversion_added: \"2.4\"\nauthor: \"Jacob McGill (@jmcgill298)\"\nshort_description: Tests reachability using ping from a network device\ndescription:\n  - Tests reachability using ping from network device to a remote destination.\n  - For Windows targets, use the M(win_ping) module instead.\n  - For targets running Python, use the M(ping) module instead.\noptions:\n  count:\n    description:\n    - Number of packets to send.\n    default: 5\n  dest:\n    description:\n    - The IP Address or hostname (resolvable by switch) of the remote node.\n    required: true\n  source:\n    description:\n    - The source IP Address.\n  state:\n    description:\n    - Determines if the expected result is success or fail.\n    choices: [ absent, present ]\n    default: present\n  vrf:\n    description:\n    - The VRF to use for forwarding.\n    default: default\nnotes:\n  - For Windows targets, use the M(win_ping) module instead.\n  - For targets running Python, use the M(ping) module instead.\n'''\n\n\nEXAMPLES = r'''\n- name: Test reachability to 10.10.10.10 using default vrf\n  net_ping:\n    dest: 10.10.10.10\n\n- name: Test reachability to 10.20.20.20 using prod vrf\n  net_ping:\n    dest: 10.20.20.20\n    vrf: prod\n\n- name: Test unreachability to 10.30.30.30 using default vrf\n  net_ping:\n    dest: 10.30.30.30\n    state: absent\n\n- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source\n  net_ping:\n    dest: 10.40.40.40\n    source: loopback0\n    vrf: prod\n    count: 20\n'''\n\nRETURN = r'''\ncommands:\n  description: Show the command sent.\n  returned: always\n  type: list\n  sample: [\"ping vrf prod 10.40.40.40 count 20 source loopback0\"]\npacket_loss:\n  description: Percentage of packets lost.\n  returned: always\n  type: str\n  sample: \"0%\"\npackets_rx:\n  description: Packets successfully received.\n  returned: always\n  type: int\n  sample: 20\npackets_tx:\n  description: Packets successfully transmitted.\n  returned: always\n  type: int\n  sample: 20\nrtt:\n  description: Show RTT stats.\n  returned: always\n  type: dict\n  sample: {\"avg\": 2, \"max\": 8, \"min\": 1}\n'''\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "net_ping.py", "id": "5f1d5e4c8a805b13d2e7f0332f0081a0", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/system/net_ping.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
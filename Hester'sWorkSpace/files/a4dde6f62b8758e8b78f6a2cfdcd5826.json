{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    int_or_none,\n    js_to_json,\n    unescapeHTML,\n)\n\n\nclass StitcherIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?stitcher\\.com/podcast/(?:[^/]+/)+e/(?:(?P<display_id>[^/\n    _TESTS = [{\n        'url': 'http://www.stitcher.com/podcast/the-talking-machines/e/40789481?autoplay=true',\n        'md5': '391dd4e021e6edeb7b8e68fbf2e9e940',\n        'info_dict': {\n            'id': '40789481',\n            'ext': 'mp3',\n            'title': 'Machine Learning Mastery and Cancer Clusters',\n            'description': 'md5:55163197a44e915a14a1ac3a1de0f2d3',\n            'duration': 1604,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n    }, {\n        'url': 'http://www.stitcher.com/podcast/panoply/vulture-tv/e/the-rare-hourlong-comedy-plus-40846275?autoplay=true',\n        'info_dict': {\n            'id': '40846275',\n            'display_id': 'the-rare-hourlong-comedy-plus',\n            'ext': 'mp3',\n            'title': \"The CW's 'Crazy Ex-Girlfriend'\",\n            'description': 'md5:04f1e2f98eb3f5cbb094cea0f9e19b17',\n            'duration': 2235,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://www.stitcher.com/podcast/marketplace-on-stitcher/e/40910226?autoplay=true',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.stitcher.com/podcast/panoply/getting-in/e/episode-2a-how-many-extracurriculars-should-i-have-40876278?autoplay=true',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        audio_id = mobj.group('id')\n        display_id = mobj.group('display_id') or audio_id\n\n        webpage = self._download_webpage(url, display_id)\n\n        episode = self._parse_json(\n            js_to_json(self._search_regex(\n                r'(?s)var\\s+stitcher(?:Config)?\\s*=\\s*({.+?});\\n', webpage, 'episode config')),\n            display_id)['config']['episode']\n\n        title = unescapeHTML(episode['title'])\n        formats = [{\n            'url': episode[episode_key],\n            'ext': determine_ext(episode[episode_key]) or 'mp3',\n            'vcodec': 'none',\n        } for episode_key in ('episodeURL',) if episode.get(episode_key)]\n        description = self._search_regex(\n            r'Episode Info:\\s*</span>([^<]+)<', webpage, 'description', fatal=False)\n        duration = int_or_none(episode.get('duration'))\n        thumbnail = episode.get('episodeImage')\n\n        return {\n            'id': audio_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'thumbnail': thumbnail,\n            'formats': formats,\n        }\n", "comments": "#?&]+?)-)?(?P<id>\\d+)(?:[/#?&]|$)'\n# escaped title\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    int_or_none,\n    js_to_json,\n    unescapeHTML,\n)\n\n\nclass StitcherIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?stitcher\\.com/podcast/(?:[^/]+/)+e/(?:(?P<display_id>[^/#?&]+?)-)?(?P<id>\\d+)(?:[/#?&]|$)'\n    _TESTS = [{\n        'url': 'http://www.stitcher.com/podcast/the-talking-machines/e/40789481?autoplay=true',\n        'md5': '391dd4e021e6edeb7b8e68fbf2e9e940',\n        'info_dict': {\n            'id': '40789481',\n            'ext': 'mp3',\n            'title': 'Machine Learning Mastery and Cancer Clusters',\n            'description': 'md5:55163197a44e915a14a1ac3a1de0f2d3',\n            'duration': 1604,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n    }, {\n        'url': 'http://www.stitcher.com/podcast/panoply/vulture-tv/e/the-rare-hourlong-comedy-plus-40846275?autoplay=true',\n        'info_dict': {\n            'id': '40846275',\n            'display_id': 'the-rare-hourlong-comedy-plus',\n            'ext': 'mp3',\n            'title': \"The CW's 'Crazy Ex-Girlfriend'\",\n            'description': 'md5:04f1e2f98eb3f5cbb094cea0f9e19b17',\n            'duration': 2235,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # escaped title\n        'url': 'http://www.stitcher.com/podcast/marketplace-on-stitcher/e/40910226?autoplay=true',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.stitcher.com/podcast/panoply/getting-in/e/episode-2a-how-many-extracurriculars-should-i-have-40876278?autoplay=true',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        audio_id = mobj.group('id')\n        display_id = mobj.group('display_id') or audio_id\n\n        webpage = self._download_webpage(url, display_id)\n\n        episode = self._parse_json(\n            js_to_json(self._search_regex(\n                r'(?s)var\\s+stitcher(?:Config)?\\s*=\\s*({.+?});\\n', webpage, 'episode config')),\n            display_id)['config']['episode']\n\n        title = unescapeHTML(episode['title'])\n        formats = [{\n            'url': episode[episode_key],\n            'ext': determine_ext(episode[episode_key]) or 'mp3',\n            'vcodec': 'none',\n        } for episode_key in ('episodeURL',) if episode.get(episode_key)]\n        description = self._search_regex(\n            r'Episode Info:\\s*</span>([^<]+)<', webpage, 'description', fatal=False)\n        duration = int_or_none(episode.get('duration'))\n        thumbnail = episode.get('episodeImage')\n\n        return {\n            'id': audio_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'duration': duration,\n            'thumbnail': thumbnail,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "stitcher.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/stitcher.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass AuthTest(AcceptanceTestCase):\n    def enter_auth(self, username, password):\n        self.browser.get('/auth/login/')\n        self.browser.find_element_by_id('id_username').send_keys(username)\n        self.browser.find_element_by_id('id_password').send_keys(password)\n        self.browser.find_element_by_xpath(\"//button[contains(text(), 'Continue')]\").click()\n\n    def test_renders(self):\n        self.browser.get('/auth/login/')\n        self.browser.snapshot(name='login')\n\n    def test_no_credentials(self):\n        self.enter_auth('', '')\n        self.browser.snapshot(name='login fields required')\n\n    def test_invalid_credentials(self):\n        self.enter_auth('bad-username', 'bad-username')\n        self.browser.snapshot(name='login fields invalid')\n\n    def test_success(self):\n        email = 'dummy@example.com'\n        password = 'dummy'\n        user = self.create_user(email=email)\n        user.set_password(password)\n        user.save()\n\n        self.enter_auth(email, password)\n        self.browser.wait_until_not('.loading')\n        self.browser.snapshot(name='login success')\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass AuthTest(AcceptanceTestCase):\n    def enter_auth(self, username, password):\n        self.browser.get('/auth/login/')\n        self.browser.find_element_by_id('id_username').send_keys(username)\n        self.browser.find_element_by_id('id_password').send_keys(password)\n        self.browser.find_element_by_xpath(\"//button[contains(text(), 'Continue')]\").click()\n\n    def test_renders(self):\n        self.browser.get('/auth/login/')\n        self.browser.snapshot(name='login')\n\n    def test_no_credentials(self):\n        self.enter_auth('', '')\n        self.browser.snapshot(name='login fields required')\n\n    def test_invalid_credentials(self):\n        self.enter_auth('bad-username', 'bad-username')\n        self.browser.snapshot(name='login fields invalid')\n\n    def test_success(self):\n        email = 'dummy@example.com'\n        password = 'dummy'\n        user = self.create_user(email=email)\n        user.set_password(password)\n        user.save()\n\n        self.enter_auth(email, password)\n        self.browser.wait_until_not('.loading')\n        self.browser.snapshot(name='login success')\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_auth.py", "id": "a00fcb51a32b47c550354f8503eddfca", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/acceptance/test_auth.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "django", "code": "from django.db import models\n\ntry:\n    from PIL import Image\nexcept ImportError:\n    Image = None\n\n\nclass CaseTestModel(models.Model):\n    integer = models.IntegerField()\n    integer2 = models.IntegerField(null=True)\n    string = models.CharField(max_length=100, default='')\n\n    big_integer = models.BigIntegerField(null=True)\n    binary = models.BinaryField(default=b'')\n    boolean = models.BooleanField(default=False)\n    date = models.DateField(null=True, db_column='date_field')\n    date_time = models.DateTimeField(null=True)\n    decimal = models.DecimalField(max_digits=2, decimal_places=1, null=True, db_column='decimal_field')\n    duration = models.DurationField(null=True)\n    email = models.EmailField(default='')\n    file = models.FileField(null=True, db_column='file_field')\n    file_path = models.FilePathField(null=True)\n    float = models.FloatField(null=True, db_column='float_field')\n    if Image:\n        image = models.ImageField(null=True)\n    generic_ip_address = models.GenericIPAddressField(null=True)\n    null_boolean = models.NullBooleanField()\n    positive_integer = models.PositiveIntegerField(null=True)\n    positive_small_integer = models.PositiveSmallIntegerField(null=True)\n    slug = models.SlugField(default='')\n    small_integer = models.SmallIntegerField(null=True)\n    text = models.TextField(default='')\n    time = models.TimeField(null=True, db_column='time_field')\n    url = models.URLField(default='')\n    uuid = models.UUIDField(null=True)\n    fk = models.ForeignKey('self', models.CASCADE, null=True)\n\n    def __str__(self):\n        return \"%i, %s\" % (self.integer, self.string)\n\n\nclass O2OCaseTestModel(models.Model):\n    o2o = models.OneToOneField(CaseTestModel, models.CASCADE, related_name='o2o_rel')\n    integer = models.IntegerField()\n\n    def __str__(self):\n        return \"%i, %s\" % (self.id, self.o2o)\n\n\nclass FKCaseTestModel(models.Model):\n    fk = models.ForeignKey(CaseTestModel, models.CASCADE, related_name='fk_rel')\n    integer = models.IntegerField()\n\n    def __str__(self):\n        return \"%i, %s\" % (self.id, self.fk)\n\n\nclass Client(models.Model):\n    REGULAR = 'R'\n    GOLD = 'G'\n    PLATINUM = 'P'\n    ACCOUNT_TYPE_CHOICES = (\n        (REGULAR, 'Regular'),\n        (GOLD, 'Gold'),\n        (PLATINUM, 'Platinum'),\n    )\n    name = models.CharField(max_length=50)\n    registered_on = models.DateField()\n    account_type = models.CharField(\n        max_length=1,\n        choices=ACCOUNT_TYPE_CHOICES,\n        default=REGULAR,\n    )\n\n    def __str__(self):\n        return self.name\n", "comments": "", "content": "from django.db import models\n\ntry:\n    from PIL import Image\nexcept ImportError:\n    Image = None\n\n\nclass CaseTestModel(models.Model):\n    integer = models.IntegerField()\n    integer2 = models.IntegerField(null=True)\n    string = models.CharField(max_length=100, default='')\n\n    big_integer = models.BigIntegerField(null=True)\n    binary = models.BinaryField(default=b'')\n    boolean = models.BooleanField(default=False)\n    date = models.DateField(null=True, db_column='date_field')\n    date_time = models.DateTimeField(null=True)\n    decimal = models.DecimalField(max_digits=2, decimal_places=1, null=True, db_column='decimal_field')\n    duration = models.DurationField(null=True)\n    email = models.EmailField(default='')\n    file = models.FileField(null=True, db_column='file_field')\n    file_path = models.FilePathField(null=True)\n    float = models.FloatField(null=True, db_column='float_field')\n    if Image:\n        image = models.ImageField(null=True)\n    generic_ip_address = models.GenericIPAddressField(null=True)\n    null_boolean = models.NullBooleanField()\n    positive_integer = models.PositiveIntegerField(null=True)\n    positive_small_integer = models.PositiveSmallIntegerField(null=True)\n    slug = models.SlugField(default='')\n    small_integer = models.SmallIntegerField(null=True)\n    text = models.TextField(default='')\n    time = models.TimeField(null=True, db_column='time_field')\n    url = models.URLField(default='')\n    uuid = models.UUIDField(null=True)\n    fk = models.ForeignKey('self', models.CASCADE, null=True)\n\n    def __str__(self):\n        return \"%i, %s\" % (self.integer, self.string)\n\n\nclass O2OCaseTestModel(models.Model):\n    o2o = models.OneToOneField(CaseTestModel, models.CASCADE, related_name='o2o_rel')\n    integer = models.IntegerField()\n\n    def __str__(self):\n        return \"%i, %s\" % (self.id, self.o2o)\n\n\nclass FKCaseTestModel(models.Model):\n    fk = models.ForeignKey(CaseTestModel, models.CASCADE, related_name='fk_rel')\n    integer = models.IntegerField()\n\n    def __str__(self):\n        return \"%i, %s\" % (self.id, self.fk)\n\n\nclass Client(models.Model):\n    REGULAR = 'R'\n    GOLD = 'G'\n    PLATINUM = 'P'\n    ACCOUNT_TYPE_CHOICES = (\n        (REGULAR, 'Regular'),\n        (GOLD, 'Gold'),\n        (PLATINUM, 'Platinum'),\n    )\n    name = models.CharField(max_length=50)\n    registered_on = models.DateField()\n    account_type = models.CharField(\n        max_length=1,\n        choices=ACCOUNT_TYPE_CHOICES,\n        default=REGULAR,\n    )\n\n    def __str__(self):\n        return self.name\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "4c98d31398c1c21c210c65438201f1c5", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/expressions_case/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    str_to_int,\n    ExtractorError\n)\n\n\nclass AppleConnectIE(InfoExtractor):\n    _VALID_URL = r'https?://itunes\\.apple\\.com/\\w{0,2}/?post/idsa\\.(?P<id>[\\w-]+)'\n    _TEST = {\n        'url': 'https://itunes.apple.com/us/post/idsa.4ab17a39-2720-11e5-96c5-a5b38f6c42d3',\n        'md5': 'e7c38568a01ea45402570e6029206723',\n        'info_dict': {\n            'id': '4ab17a39-2720-11e5-96c5-a5b38f6c42d3',\n            'ext': 'm4v',\n            'title': 'Energy',\n            'uploader': 'Drake',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20150710',\n            'timestamp': 1436545535,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        try:\n            video_json = self._html_search_regex(\n                r'class=\"auc-video-data\">(\\{.*?\\})', webpage, 'json')\n        except ExtractorError:\n            raise ExtractorError('This post doesn\\'t contain a video', expected=True)\n\n        video_data = self._parse_json(video_json, video_id)\n        timestamp = str_to_int(self._html_search_regex(r'data-timestamp=\"(\\d+)\"', webpage, 'timestamp'))\n        like_count = str_to_int(self._html_search_regex(r'(\\d+) Loves', webpage, 'like count'))\n\n        return {\n            'id': video_id,\n            'url': video_data['sslSrc'],\n            'title': video_data['title'],\n            'description': video_data['description'],\n            'uploader': video_data['artistName'],\n            'thumbnail': video_data['artworkUrl'],\n            'timestamp': timestamp,\n            'like_count': like_count,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    str_to_int,\n    ExtractorError\n)\n\n\nclass AppleConnectIE(InfoExtractor):\n    _VALID_URL = r'https?://itunes\\.apple\\.com/\\w{0,2}/?post/idsa\\.(?P<id>[\\w-]+)'\n    _TEST = {\n        'url': 'https://itunes.apple.com/us/post/idsa.4ab17a39-2720-11e5-96c5-a5b38f6c42d3',\n        'md5': 'e7c38568a01ea45402570e6029206723',\n        'info_dict': {\n            'id': '4ab17a39-2720-11e5-96c5-a5b38f6c42d3',\n            'ext': 'm4v',\n            'title': 'Energy',\n            'uploader': 'Drake',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20150710',\n            'timestamp': 1436545535,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        try:\n            video_json = self._html_search_regex(\n                r'class=\"auc-video-data\">(\\{.*?\\})', webpage, 'json')\n        except ExtractorError:\n            raise ExtractorError('This post doesn\\'t contain a video', expected=True)\n\n        video_data = self._parse_json(video_json, video_id)\n        timestamp = str_to_int(self._html_search_regex(r'data-timestamp=\"(\\d+)\"', webpage, 'timestamp'))\n        like_count = str_to_int(self._html_search_regex(r'(\\d+) Loves', webpage, 'like count'))\n\n        return {\n            'id': video_id,\n            'url': video_data['sslSrc'],\n            'title': video_data['title'],\n            'description': video_data['description'],\n            'uploader': video_data['artistName'],\n            'thumbnail': video_data['artworkUrl'],\n            'timestamp': timestamp,\n            'like_count': like_count,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "appleconnect.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/appleconnect.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
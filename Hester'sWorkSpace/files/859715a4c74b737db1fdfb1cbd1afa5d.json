{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\nfrom odoo.addons import decimal_precision as dp\n\n\nclass MembershipInvoice(models.TransientModel):\n    _name = \"membership.invoice\"\n    _description = \"Membership Invoice\"\n\n    product_id = fields.Many2one('product.product', string='Membership', required=True)\n    member_price = fields.Float(string='Member Price', digits= dp.get_precision('Product Price'), required=True)\n\n    @api.onchange('product_id')\n    def onchange_product(self):\n        \n        price_dict = self.product_id.price_compute('list_price')\n        self.member_price = price_dict.get(self.product_id.id) or False\n\n    @api.multi\n    def membership_invoice(self):\n        if self:\n            datas = {\n                'membership_product_id': self.product_id.id,\n                'amount': self.member_price\n            }\n        invoice_list = self.env['res.partner'].browse(self._context.get('active_ids')).create_membership_invoice(datas=datas)\n\n        search_view_ref = self.env.ref('account.view_account_invoice_filter', False)\n        form_view_ref = self.env.ref('account.invoice_form', False)\n        tree_view_ref = self.env.ref('account.invoice_tree', False)\n\n        return  {\n            'domain': [('id', 'in', invoice_list)],\n            'name': 'Membership Invoices',\n            'res_model': 'account.invoice',\n            'type': 'ir.actions.act_window',\n            'views': [(tree_view_ref.id, 'tree'), (form_view_ref.id, 'form')],\n            'search_view_id': search_view_ref and search_view_ref.id,\n        }\n", "comments": "   this function returns value  product member price based product id                     coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\nfrom odoo.addons import decimal_precision as dp\n\n\nclass MembershipInvoice(models.TransientModel):\n    _name = \"membership.invoice\"\n    _description = \"Membership Invoice\"\n\n    product_id = fields.Many2one('product.product', string='Membership', required=True)\n    member_price = fields.Float(string='Member Price', digits= dp.get_precision('Product Price'), required=True)\n\n    @api.onchange('product_id')\n    def onchange_product(self):\n        \"\"\"This function returns value of  product's member price based on product id.\n        \"\"\"\n        price_dict = self.product_id.price_compute('list_price')\n        self.member_price = price_dict.get(self.product_id.id) or False\n\n    @api.multi\n    def membership_invoice(self):\n        if self:\n            datas = {\n                'membership_product_id': self.product_id.id,\n                'amount': self.member_price\n            }\n        invoice_list = self.env['res.partner'].browse(self._context.get('active_ids')).create_membership_invoice(datas=datas)\n\n        search_view_ref = self.env.ref('account.view_account_invoice_filter', False)\n        form_view_ref = self.env.ref('account.invoice_form', False)\n        tree_view_ref = self.env.ref('account.invoice_tree', False)\n\n        return  {\n            'domain': [('id', 'in', invoice_list)],\n            'name': 'Membership Invoices',\n            'res_model': 'account.invoice',\n            'type': 'ir.actions.act_window',\n            'views': [(tree_view_ref.id, 'tree'), (form_view_ref.id, 'form')],\n            'search_view_id': search_view_ref and search_view_ref.id,\n        }\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "membership_invoice.py", "id": "859715a4c74b737db1fdfb1cbd1afa5d", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/membership/wizard/membership_invoice.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "getredash", "code": "\nimport json\nfrom alembic import op\nimport sqlalchemy as sa\n\nfrom redash.models import Dashboard, Widget, db\n\n\n\nrevision = '969126bd800f'\ndown_revision = '6b5be7e0a0ef'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade():\n    \n    column_size = 3\n    print \"Updating dashboards position data:\"\n    for dashboard in Dashboard.query:\n        print \"  Updating dashboard: {}\".format(dashboard.id)\n        layout = json.loads(dashboard.layout)\n\n        print \"    Building widgets map:\"\n        widgets = {}\n        for w in dashboard.widgets:\n            print \"    Widget: {}\".format(w.id)\n            widgets[w.id] = w\n\n        print \"    Iterating over layout:\"\n        for row_index, row in enumerate(layout):\n            print \"      Row: {} - {}\".format(row_index, row)\n            if row is None:\n                continue\n\n            for column_index, widget_id in enumerate(row):\n                print \"      Column: {} - {}\".format(column_index, widget_id)\n                widget = widgets.get(widget_id)\n\n                if widget is None:\n                    continue\n\n                options = json.loads(widget.options) or {}\n                options['position'] = {\n                    \"row\": row_index,\n                    \"col\": column_index * column_size,\n                    \"sizeX\": column_size * widget.width\n                }\n\n                widget.options = json.dumps(options)\n\n                db.session.add(widget)\n\n    db.session.commit()\n\n    \n    op.drop_column('widgets', 'type')\n    op.drop_column('widgets', 'query_id')\n\n\ndef downgrade():\n    op.add_column('widgets', sa.Column('query_id', sa.INTEGER(), autoincrement=False, nullable=True))\n    op.add_column('widgets', sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))\n", "comments": "   update widget position data based dashboard layout   revision id  969126bd800f revises  6b5be7e0a0ef create date  2018 01 31 15 20 30 396533         revision identifiers  used alembic     update widgets position data     remove legacy columns longer use  ", "content": "\"\"\"Update widget's position data based on dashboard layout.\n\nRevision ID: 969126bd800f\nRevises: 6b5be7e0a0ef\nCreate Date: 2018-01-31 15:20:30.396533\n\n\"\"\"\nimport json\nfrom alembic import op\nimport sqlalchemy as sa\n\nfrom redash.models import Dashboard, Widget, db\n\n\n# revision identifiers, used by Alembic.\nrevision = '969126bd800f'\ndown_revision = '6b5be7e0a0ef'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade():\n    # Update widgets position data:\n    column_size = 3\n    print \"Updating dashboards position data:\"\n    for dashboard in Dashboard.query:\n        print \"  Updating dashboard: {}\".format(dashboard.id)\n        layout = json.loads(dashboard.layout)\n\n        print \"    Building widgets map:\"\n        widgets = {}\n        for w in dashboard.widgets:\n            print \"    Widget: {}\".format(w.id)\n            widgets[w.id] = w\n\n        print \"    Iterating over layout:\"\n        for row_index, row in enumerate(layout):\n            print \"      Row: {} - {}\".format(row_index, row)\n            if row is None:\n                continue\n\n            for column_index, widget_id in enumerate(row):\n                print \"      Column: {} - {}\".format(column_index, widget_id)\n                widget = widgets.get(widget_id)\n\n                if widget is None:\n                    continue\n\n                options = json.loads(widget.options) or {}\n                options['position'] = {\n                    \"row\": row_index,\n                    \"col\": column_index * column_size,\n                    \"sizeX\": column_size * widget.width\n                }\n\n                widget.options = json.dumps(options)\n\n                db.session.add(widget)\n\n    db.session.commit()\n\n    # Remove legacy columns no longer in use.\n    op.drop_column('widgets', 'type')\n    op.drop_column('widgets', 'query_id')\n\n\ndef downgrade():\n    op.add_column('widgets', sa.Column('query_id', sa.INTEGER(), autoincrement=False, nullable=True))\n    op.add_column('widgets', sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))\n", "description": "Make Your Company Data Driven. Connect to any data source, easily visualize and share your data.", "file_name": "969126bd800f_.py", "id": "8b7a0e109f25e171fad427852babbc28", "language": "Python", "project_name": "redash", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/getredash-redash/getredash-redash-0410d83/migrations/versions/969126bd800f_.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:54:55Z", "url": "https://github.com/getredash/redash", "wiki": false}
{"author": "HelloZeroNet", "code": "\nimport json\nimport logging\n\n\nfrom User import User\nfrom Plugin import PluginManager\nfrom Config import config\n\n\n@PluginManager.acceptPlugins\nclass UserManager(object):\n    def __init__(self):\n        self.users = {}\n\n    \n    def load(self):\n        if not self.users:\n            self.users = {}\n\n        user_found = []\n        added = 0\n        \n        for master_address, data in json.load(open(\"%s/users.json\" % config.data_dir)).items():\n            if master_address not in self.users:\n                user = User(master_address, data=data)\n                self.users[master_address] = user\n                added += 1\n            user_found.append(master_address)\n\n        \n        for master_address in self.users.keys():\n            if master_address not in user_found:\n                del(self.users[master_address])\n                logging.debug(\"Removed user: %s\" % master_address)\n\n        if added:\n            logging.debug(\"UserManager added %s users\" % added)\n\n    \n    \n    def create(self, master_address=None, master_seed=None):\n        user = User(master_address, master_seed)\n        logging.debug(\"Created user: %s\" % user.master_address)\n        if user.master_address:  \n            self.users[user.master_address] = user\n            user.save()\n        return user\n\n    \n    \n    def list(self):\n        if self.users == {}:  \n            self.load()\n        return self.users\n\n    \n     or None\n    def get(self, master_address=None):\n        users = self.list()\n        if users:\n            return users.values()[0]  \n        else:\n            return None\n\n\nuser_manager = UserManager()  \n\n\n\ndef reloadModule():\n    return \"Not used\"\n\n    import imp\n    global User, UserManager, user_manager\n    User = imp.load_source(\"User\", \"src/User/User.py\").User  \n    # module = imp.load_source(\"UserManager\", \"src/User/UserManager.py\") # Reload module\n    \n    \n    \n    user_manager = UserManager()\n    user_manager.load()\n", "comments": "  included modules    zeronet modules    load user data users json    load new users    remove deleted adresses    create new user    return  user    if successfully created    list users data users json    return    usermasteraddr   user     not loaded yet    get user based master address    return  user none    single user mode  always return first    singleton    debug  reload user py    reload source    module   imp load source( usermanager    src user usermanager py )   reload module    usermanager   module usermanager    user manager   module user manager    reload users ", "content": "# Included modules\nimport json\nimport logging\n\n# ZeroNet Modules\nfrom User import User\nfrom Plugin import PluginManager\nfrom Config import config\n\n\n@PluginManager.acceptPlugins\nclass UserManager(object):\n    def __init__(self):\n        self.users = {}\n\n    # Load all user from data/users.json\n    def load(self):\n        if not self.users:\n            self.users = {}\n\n        user_found = []\n        added = 0\n        # Load new users\n        for master_address, data in json.load(open(\"%s/users.json\" % config.data_dir)).items():\n            if master_address not in self.users:\n                user = User(master_address, data=data)\n                self.users[master_address] = user\n                added += 1\n            user_found.append(master_address)\n\n        # Remove deleted adresses\n        for master_address in self.users.keys():\n            if master_address not in user_found:\n                del(self.users[master_address])\n                logging.debug(\"Removed user: %s\" % master_address)\n\n        if added:\n            logging.debug(\"UserManager added %s users\" % added)\n\n    # Create new user\n    # Return: User\n    def create(self, master_address=None, master_seed=None):\n        user = User(master_address, master_seed)\n        logging.debug(\"Created user: %s\" % user.master_address)\n        if user.master_address:  # If successfully created\n            self.users[user.master_address] = user\n            user.save()\n        return user\n\n    # List all users from data/users.json\n    # Return: {\"usermasteraddr\": User}\n    def list(self):\n        if self.users == {}:  # Not loaded yet\n            self.load()\n        return self.users\n\n    # Get user based on master_address\n    # Return: User or None\n    def get(self, master_address=None):\n        users = self.list()\n        if users:\n            return users.values()[0]  # Single user mode, always return the first\n        else:\n            return None\n\n\nuser_manager = UserManager()  # Singleton\n\n\n# Debug: Reload User.py\ndef reloadModule():\n    return \"Not used\"\n\n    import imp\n    global User, UserManager, user_manager\n    User = imp.load_source(\"User\", \"src/User/User.py\").User  # Reload source\n    # module = imp.load_source(\"UserManager\", \"src/User/UserManager.py\") # Reload module\n    # UserManager = module.UserManager\n    # user_manager = module.user_manager\n    # Reload users\n    user_manager = UserManager()\n    user_manager.load()\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "UserManager.py", "id": "001c8644a3681325319ed72bb2b50781", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/src/User/UserManager.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
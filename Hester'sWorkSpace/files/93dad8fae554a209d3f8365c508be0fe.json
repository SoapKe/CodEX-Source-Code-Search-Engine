{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .brightcove import BrightcoveLegacyIE\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\n\n\nclass RMCDecouverteIE(InfoExtractor):\n    _VALID_URL = r'https?://rmcdecouverte\\.bfmtv\\.com/mediaplayer-replay.*?\\bid=(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://rmcdecouverte.bfmtv.com/mediaplayer-replay/?id=13502&title=AQUAMEN:LES%20ROIS%20DES%20AQUARIUMS%20:UN%20DELICIEUX%20PROJET',\n        'info_dict': {\n            'id': '5419055995001',\n            'ext': 'mp4',\n            'title': 'UN DELICIEUX PROJET',\n            'description': 'md5:63610df7c8b1fc1698acd4d0d90ba8b5',\n            'uploader_id': '1969646226001',\n            'upload_date': '20170502',\n            'timestamp': 1493745308,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'skip': 'only available for a week',\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/1969646226001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        brightcove_legacy_url = BrightcoveLegacyIE._extract_brightcove_url(webpage)\n        if brightcove_legacy_url:\n            brightcove_id = compat_parse_qs(compat_urlparse.urlparse(\n                brightcove_legacy_url).query)['@videoPlayer'][0]\n        else:\n            brightcove_id = self._search_regex(\n                r'data-video-id=[\"\\'](\\d+)', webpage, 'brightcove id')\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id, 'BrightcoveNew',\n            brightcove_id)\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .brightcove import BrightcoveLegacyIE\nfrom ..compat import (\n    compat_parse_qs,\n    compat_urlparse,\n)\n\n\nclass RMCDecouverteIE(InfoExtractor):\n    _VALID_URL = r'https?://rmcdecouverte\\.bfmtv\\.com/mediaplayer-replay.*?\\bid=(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://rmcdecouverte.bfmtv.com/mediaplayer-replay/?id=13502&title=AQUAMEN:LES%20ROIS%20DES%20AQUARIUMS%20:UN%20DELICIEUX%20PROJET',\n        'info_dict': {\n            'id': '5419055995001',\n            'ext': 'mp4',\n            'title': 'UN DELICIEUX PROJET',\n            'description': 'md5:63610df7c8b1fc1698acd4d0d90ba8b5',\n            'uploader_id': '1969646226001',\n            'upload_date': '20170502',\n            'timestamp': 1493745308,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'skip': 'only available for a week',\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/1969646226001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        brightcove_legacy_url = BrightcoveLegacyIE._extract_brightcove_url(webpage)\n        if brightcove_legacy_url:\n            brightcove_id = compat_parse_qs(compat_urlparse.urlparse(\n                brightcove_legacy_url).query)['@videoPlayer'][0]\n        else:\n            brightcove_id = self._search_regex(\n                r'data-video-id=[\"\\'](\\d+)', webpage, 'brightcove id')\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id, 'BrightcoveNew',\n            brightcove_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "rmcdecouverte.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/rmcdecouverte.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
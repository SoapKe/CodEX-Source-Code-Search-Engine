{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom .test_project_base import TestProjectBase\nfrom odoo.tools import mute_logger\n\n\nEMAIL_TPL = \"\"\"Return-Path: <whatever-2a840@postmaster.twitter.com>\nX-Original-To: {to}\nDelivered-To: {to}\nTo: {to}\ncc: {cc}\nReceived: by mail1.odoo.com (Postfix, from userid 10002)\n    id 5DF9ABFB2A; Fri, 10 Aug 2012 16:16:39 +0200 (CEST)\nMessage-ID: {msg_id}\nDate: Tue, 29 Nov 2011 12:43:21 +0530\nFrom: {email_from}\nMIME-Version: 1.0\nSubject: {subject}\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\n\nHello,\n\nThis email should create a new entry in your module. Please check that it\neffectively works.\n\nThanks,\n\n--\nRaoul Boitempoils\nIntegrator at Agrolait\"\"\"\n\n\nclass TestProjectFlow(TestProjectBase):\n\n    def test_project_process_project_manager_duplicate(self):\n        pigs = self.project_pigs.sudo(self.user_projectmanager)\n        dogs = pigs.copy()\n        self.assertEqual(len(dogs.tasks), 2, 'project: duplicating a project must duplicate its tasks')\n\n    @mute_logger('odoo.addons.mail.mail_thread')\n    def test_task_process_without_stage(self):\n        \n        task = self.format_and_process(\n            EMAIL_TPL, to='project+pigs@mydomain.com, valid.lelitre@agrolait.com', cc='valid.other@gmail.com',\n            email_from='%s' % self.user_projectuser.email,\n            subject='Frogs', msg_id='<1198923581.41972151344608186760.JavaMail@agrolait.com>',\n            target_model='project.task')\n\n        \n        self.assertEqual(len(task), 1, 'project: message_process: a new project.task should have been created')\n        \n        self.assertIn(self.partner_2, task.message_partner_ids, \"Partner in message cc is not added as a task followers.\")\n        \n        self.assertEqual(len(task.message_ids), 2,\n                         'project: message_process: newly created task should have 2 messages: creation and email')\n        self.assertEqual(task.message_ids[0].author_id, self.user_projectuser.partner_id,\n                         'project: message_process: second message should be the one from Agrolait (partner failed)')\n        self.assertEqual(task.message_ids[0].subject, 'Frogs',\n                         'project: message_process: second message should be the one from Agrolait (subject failed)')\n        \n        self.assertEqual(task.name, 'Frogs', 'project_task: name should be the email subject')\n        self.assertEqual(task.project_id.id, self.project_pigs.id, 'project_task: incorrect project')\n        self.assertEqual(task.stage_id.sequence, False, \"project_task: shouldn't have a stage, i.e. sequence=False\")\n\n    @mute_logger('odoo.addons.mail.mail_thread')\n    def test_task_process_with_stages(self):\n        \n        task = self.format_and_process(\n            EMAIL_TPL, to='project+goats@mydomain.com, valid.lelitre@agrolait.com', cc='valid.other@gmail.com',\n            email_from='%s' % self.user_projectuser.email,\n            subject='Cats', msg_id='<1198923581.41972151344608186760.JavaMail@agrolait.com>',\n            target_model='project.task')\n\n        \n        self.assertEqual(len(task), 1, 'project: message_process: a new project.task should have been created')\n        \n        self.assertIn(self.partner_2, task.message_partner_ids, \"Partner in message cc is not added as a task followers.\")\n        \n        self.assertEqual(len(task.message_ids), 2,\n                         'project: message_process: newly created task should have 2 messages: creation and email')\n        self.assertEqual(task.message_ids[1].subtype_id.name, 'Task Opened',\n                         'project: message_process: first message of new task should have Task Created subtype')\n        self.assertEqual(task.message_ids[0].author_id, self.user_projectuser.partner_id,\n                         'project: message_process: second message should be the one from Agrolait (partner failed)')\n        self.assertEqual(task.message_ids[0].subject, 'Cats',\n                         'project: message_process: second message should be the one from Agrolait (subject failed)')\n        \n        self.assertEqual(task.name, 'Cats', 'project_task: name should be the email subject')\n        self.assertEqual(task.project_id.id, self.project_goats.id, 'project_task: incorrect project')\n        self.assertEqual(task.stage_id.sequence, 1, \"project_task: should have a stage with sequence=1\")\n", "comments": "   return path   whatever 2a840 postmaster twitter com  x original to    delivered to    to    cc   cc  received  mail1 odoo com (postfix  userid 10002)     id 5df9abfb2a  fri  10 aug 2012 16 16 39  0200 (cest) message id   msg id  date  tue  29 nov 2011 12 43 21  0530 from   email  mime version  1 0 subject   subject  content type  text plain  charset iso 8859 1  format flowed  hello   this email create new entry module  please check effectively works   thanks      raoul boitempoils integrator agrolait           coding  utf 8        part odoo  see license file full copyright licensing details     do  incoming mail unknown partner alias creates new task  frogs     test  one task created mailgateway administrator    test  check partner message followers    test  messages    test  task content    do  incoming mail unknown partner alias creates new task  cats     test  one task created mailgateway administrator    test  check partner message followers    test  messages    test  task content ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom .test_project_base import TestProjectBase\nfrom odoo.tools import mute_logger\n\n\nEMAIL_TPL = \"\"\"Return-Path: <whatever-2a840@postmaster.twitter.com>\nX-Original-To: {to}\nDelivered-To: {to}\nTo: {to}\ncc: {cc}\nReceived: by mail1.odoo.com (Postfix, from userid 10002)\n    id 5DF9ABFB2A; Fri, 10 Aug 2012 16:16:39 +0200 (CEST)\nMessage-ID: {msg_id}\nDate: Tue, 29 Nov 2011 12:43:21 +0530\nFrom: {email_from}\nMIME-Version: 1.0\nSubject: {subject}\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\n\nHello,\n\nThis email should create a new entry in your module. Please check that it\neffectively works.\n\nThanks,\n\n--\nRaoul Boitempoils\nIntegrator at Agrolait\"\"\"\n\n\nclass TestProjectFlow(TestProjectBase):\n\n    def test_project_process_project_manager_duplicate(self):\n        pigs = self.project_pigs.sudo(self.user_projectmanager)\n        dogs = pigs.copy()\n        self.assertEqual(len(dogs.tasks), 2, 'project: duplicating a project must duplicate its tasks')\n\n    @mute_logger('odoo.addons.mail.mail_thread')\n    def test_task_process_without_stage(self):\n        # Do: incoming mail from an unknown partner on an alias creates a new task 'Frogs'\n        task = self.format_and_process(\n            EMAIL_TPL, to='project+pigs@mydomain.com, valid.lelitre@agrolait.com', cc='valid.other@gmail.com',\n            email_from='%s' % self.user_projectuser.email,\n            subject='Frogs', msg_id='<1198923581.41972151344608186760.JavaMail@agrolait.com>',\n            target_model='project.task')\n\n        # Test: one task created by mailgateway administrator\n        self.assertEqual(len(task), 1, 'project: message_process: a new project.task should have been created')\n        # Test: check partner in message followers\n        self.assertIn(self.partner_2, task.message_partner_ids, \"Partner in message cc is not added as a task followers.\")\n        # Test: messages\n        self.assertEqual(len(task.message_ids), 2,\n                         'project: message_process: newly created task should have 2 messages: creation and email')\n        self.assertEqual(task.message_ids[0].author_id, self.user_projectuser.partner_id,\n                         'project: message_process: second message should be the one from Agrolait (partner failed)')\n        self.assertEqual(task.message_ids[0].subject, 'Frogs',\n                         'project: message_process: second message should be the one from Agrolait (subject failed)')\n        # Test: task content\n        self.assertEqual(task.name, 'Frogs', 'project_task: name should be the email subject')\n        self.assertEqual(task.project_id.id, self.project_pigs.id, 'project_task: incorrect project')\n        self.assertEqual(task.stage_id.sequence, False, \"project_task: shouldn't have a stage, i.e. sequence=False\")\n\n    @mute_logger('odoo.addons.mail.mail_thread')\n    def test_task_process_with_stages(self):\n        # Do: incoming mail from an unknown partner on an alias creates a new task 'Cats'\n        task = self.format_and_process(\n            EMAIL_TPL, to='project+goats@mydomain.com, valid.lelitre@agrolait.com', cc='valid.other@gmail.com',\n            email_from='%s' % self.user_projectuser.email,\n            subject='Cats', msg_id='<1198923581.41972151344608186760.JavaMail@agrolait.com>',\n            target_model='project.task')\n\n        # Test: one task created by mailgateway administrator\n        self.assertEqual(len(task), 1, 'project: message_process: a new project.task should have been created')\n        # Test: check partner in message followers\n        self.assertIn(self.partner_2, task.message_partner_ids, \"Partner in message cc is not added as a task followers.\")\n        # Test: messages\n        self.assertEqual(len(task.message_ids), 2,\n                         'project: message_process: newly created task should have 2 messages: creation and email')\n        self.assertEqual(task.message_ids[1].subtype_id.name, 'Task Opened',\n                         'project: message_process: first message of new task should have Task Created subtype')\n        self.assertEqual(task.message_ids[0].author_id, self.user_projectuser.partner_id,\n                         'project: message_process: second message should be the one from Agrolait (partner failed)')\n        self.assertEqual(task.message_ids[0].subject, 'Cats',\n                         'project: message_process: second message should be the one from Agrolait (subject failed)')\n        # Test: task content\n        self.assertEqual(task.name, 'Cats', 'project_task: name should be the email subject')\n        self.assertEqual(task.project_id.id, self.project_goats.id, 'project_task: incorrect project')\n        self.assertEqual(task.stage_id.sequence, 1, \"project_task: should have a stage with sequence=1\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_project_flow.py", "id": "61807b3d0e695740fa6ef8e8c3a9d6c1", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/project/tests/test_project_flow.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
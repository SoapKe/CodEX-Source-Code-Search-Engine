{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import js_to_json\n\n\nclass C56IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:(?:www|player)\\.)?56\\.com/(?:.+?/)?(?:v_|(?:play_album.+-))(?P<textid>.+?)\\.(?:html|swf)'\n    IE_NAME = '56.com'\n    _TESTS = [{\n        'url': 'http://www.56.com/u39/v_OTM0NDA3MTY.html',\n        'md5': 'e59995ac63d0457783ea05f93f12a866',\n        'info_dict': {\n            'id': '93440716',\n            'ext': 'flv',\n            'title': '\u7f51\u4e8b\u77e5\u591a\u5c11 \u7b2c32\u671f\uff1a\u8f66\u6012',\n            'duration': 283.813,\n        },\n    }, {\n        'url': 'http://www.56.com/u47/v_MTM5NjQ5ODc2.html',\n        'md5': '',\n        'info_dict': {\n            'id': '82247482',\n            'title': '\u7231\u7684\u8bc5\u5492\u4e4b\u675c\u9e43\u82b1\u5f00',\n        },\n        'playlist_count': 7,\n        'add_ie': ['Sohu'],\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url, flags=re.VERBOSE)\n        text_id = mobj.group('textid')\n\n        webpage = self._download_webpage(url, text_id)\n        sohu_video_info_str = self._search_regex(\n            r'var\\s+sohuVideoInfo\\s*=\\s*({[^}]+});', webpage, 'Sohu video info', default=None)\n        if sohu_video_info_str:\n            sohu_video_info = self._parse_json(\n                sohu_video_info_str, text_id, transform_source=js_to_json)\n            return self.url_result(sohu_video_info['url'], 'Sohu')\n\n        page = self._download_json(\n            'http://vxml.56.com/json/%s/' % text_id, text_id, 'Downloading video info')\n\n        info = page['info']\n\n        formats = [\n            {\n                'format_id': f['type'],\n                'filesize': int(f['filesize']),\n                'url': f['url']\n            } for f in info['rfiles']\n        ]\n        self._sort_formats(formats)\n\n        return {\n            'id': info['vid'],\n            'title': info['Subject'],\n            'duration': int(info['duration']) / 1000.0,\n            'formats': formats,\n            'thumbnail': info.get('bimg') or info.get('img'),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import js_to_json\n\n\nclass C56IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:(?:www|player)\\.)?56\\.com/(?:.+?/)?(?:v_|(?:play_album.+-))(?P<textid>.+?)\\.(?:html|swf)'\n    IE_NAME = '56.com'\n    _TESTS = [{\n        'url': 'http://www.56.com/u39/v_OTM0NDA3MTY.html',\n        'md5': 'e59995ac63d0457783ea05f93f12a866',\n        'info_dict': {\n            'id': '93440716',\n            'ext': 'flv',\n            'title': '\u7f51\u4e8b\u77e5\u591a\u5c11 \u7b2c32\u671f\uff1a\u8f66\u6012',\n            'duration': 283.813,\n        },\n    }, {\n        'url': 'http://www.56.com/u47/v_MTM5NjQ5ODc2.html',\n        'md5': '',\n        'info_dict': {\n            'id': '82247482',\n            'title': '\u7231\u7684\u8bc5\u5492\u4e4b\u675c\u9e43\u82b1\u5f00',\n        },\n        'playlist_count': 7,\n        'add_ie': ['Sohu'],\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url, flags=re.VERBOSE)\n        text_id = mobj.group('textid')\n\n        webpage = self._download_webpage(url, text_id)\n        sohu_video_info_str = self._search_regex(\n            r'var\\s+sohuVideoInfo\\s*=\\s*({[^}]+});', webpage, 'Sohu video info', default=None)\n        if sohu_video_info_str:\n            sohu_video_info = self._parse_json(\n                sohu_video_info_str, text_id, transform_source=js_to_json)\n            return self.url_result(sohu_video_info['url'], 'Sohu')\n\n        page = self._download_json(\n            'http://vxml.56.com/json/%s/' % text_id, text_id, 'Downloading video info')\n\n        info = page['info']\n\n        formats = [\n            {\n                'format_id': f['type'],\n                'filesize': int(f['filesize']),\n                'url': f['url']\n            } for f in info['rfiles']\n        ]\n        self._sort_formats(formats)\n\n        return {\n            'id': info['vid'],\n            'title': info['Subject'],\n            'duration': int(info['duration']) / 1000.0,\n            'formats': formats,\n            'thumbnail': info.get('bimg') or info.get('img'),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "c56.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/c56.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
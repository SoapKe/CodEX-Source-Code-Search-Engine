{"author": "keon", "code": "class Graph:\n    def __init__(self, vertices):\n        \n        self.V = vertices\n\n        \n        self.graph = {}\n\n        \n        self.tc = [[0 for j in range(self.V)] for i in range(self.V)]\n\n    \n    def add_edge(self, u, v):\n        if u in self.graph:\n            self.graph[u].append(v)\n        else:\n            self.graph[u] = [v]\n            \ng = Graph(4)\ng.add_edge(0, 1)\ng.add_edge(0, 2)\ng.add_edge(1, 2)\ng.add_edge(2, 0)\ng.add_edge(2, 3)\ng.add_edge(3, 3)\n", "comments": "  no  vertices    default dictionary store graph    to store transitive closure    function add edge graph ", "content": "class Graph:\n    def __init__(self, vertices):\n        # No. of vertices\n        self.V = vertices\n\n        # default dictionary to store graph\n        self.graph = {}\n\n        # To store transitive closure\n        self.tc = [[0 for j in range(self.V)] for i in range(self.V)]\n\n    # function to add an edge to graph\n    def add_edge(self, u, v):\n        if u in self.graph:\n            self.graph[u].append(v)\n        else:\n            self.graph[u] = [v]\n            \ng = Graph(4)\ng.add_edge(0, 1)\ng.add_edge(0, 2)\ng.add_edge(1, 2)\ng.add_edge(2, 0)\ng.add_edge(2, 3)\ng.add_edge(3, 3)\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "graph.py", "id": "36876fc12ce92b5dd633399c6cd976e8", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/keon-algorithms/keon-algorithms-ea43887/graph/graph.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:53:29Z", "url": "https://github.com/keon/algorithms", "wiki": true}
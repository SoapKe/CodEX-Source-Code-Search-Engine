{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import js_to_json\n\n\nclass DiggIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?digg\\.com/video/(?P<id>[^/?\n    _TESTS = [{\n        \n        'url': 'http://digg.com/video/sci-fi-short-jonah-daniel-kaluuya-get-out',\n        'info_dict': {\n            'id': 'LcqvmS0b',\n            'ext': 'mp4',\n            'title': \"'Get Out' Star Daniel Kaluuya Goes On 'Moby Dick'-Like Journey In Sci-Fi Short 'Jonah'\",\n            'description': 'md5:541bb847648b6ee3d6514bc84b82efda',\n            'upload_date': '20180109',\n            'timestamp': 1515530551,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://digg.com/video/dog-boat-seal-play',\n        'only_matching': True,\n    }, {\n        \n        'url': 'http://digg.com/video/dream-girl-short-film',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        info = self._parse_json(\n            self._search_regex(\n                r'(?s)video_info\\s*=\\s*({.+?});\\n', webpage, 'video info',\n                default='{}'), display_id, transform_source=js_to_json,\n            fatal=False)\n\n        video_id = info.get('video_id')\n\n        if video_id:\n            provider = info.get('provider_name')\n            if provider == 'youtube':\n                return self.url_result(\n                    video_id, ie='Youtube', video_id=video_id)\n            elif provider == 'jwplayer':\n                return self.url_result(\n                    'jwplatform:%s' % video_id, ie='JWPlatform',\n                    video_id=video_id)\n\n        return self.url_result(url, 'Generic')\n", "comments": "#&]+)'\n# JWPlatform via provider\n# Youtube via provider\n# vimeo as regular embed\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import js_to_json\n\n\nclass DiggIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?digg\\.com/video/(?P<id>[^/?#&]+)'\n    _TESTS = [{\n        # JWPlatform via provider\n        'url': 'http://digg.com/video/sci-fi-short-jonah-daniel-kaluuya-get-out',\n        'info_dict': {\n            'id': 'LcqvmS0b',\n            'ext': 'mp4',\n            'title': \"'Get Out' Star Daniel Kaluuya Goes On 'Moby Dick'-Like Journey In Sci-Fi Short 'Jonah'\",\n            'description': 'md5:541bb847648b6ee3d6514bc84b82efda',\n            'upload_date': '20180109',\n            'timestamp': 1515530551,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # Youtube via provider\n        'url': 'http://digg.com/video/dog-boat-seal-play',\n        'only_matching': True,\n    }, {\n        # vimeo as regular embed\n        'url': 'http://digg.com/video/dream-girl-short-film',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        info = self._parse_json(\n            self._search_regex(\n                r'(?s)video_info\\s*=\\s*({.+?});\\n', webpage, 'video info',\n                default='{}'), display_id, transform_source=js_to_json,\n            fatal=False)\n\n        video_id = info.get('video_id')\n\n        if video_id:\n            provider = info.get('provider_name')\n            if provider == 'youtube':\n                return self.url_result(\n                    video_id, ie='Youtube', video_id=video_id)\n            elif provider == 'jwplayer':\n                return self.url_result(\n                    'jwplatform:%s' % video_id, ie='JWPlatform',\n                    video_id=video_id)\n\n        return self.url_result(url, 'Generic')\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "digg.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/digg.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\n\n\nclass AccountInvoice(models.Model):\n\n    _inherit = \"account.invoice\"\n\n    @api.depends('amount_total')\n    def _compute_amount_total_words(self):\n        for invoice in self:\n            invoice.amount_total_words = invoice.currency_id.amount_to_text(invoice.amount_total)\n\n    amount_total_words = fields.Char(\"Total (In Words)\", compute=\"_compute_amount_total_words\")\n\n    def _get_printed_report_name(self):\n        self.ensure_one()\n        if self.company_id.country_id.code != 'IN':\n            return super(AccountInvoice, self)._get_printed_report_name()\n        return self.type == 'out_invoice' and self.state == 'draft' and _('Draft %s') % (self.journal_id.name) or \\\n            self.type == 'out_invoice' and self.state in ('open','paid') and '%s - %s' % (self.journal_id.name, self.number) or \\\n            self.type == 'out_refund' and self.state == 'draft' and _('Credit Note') or \\\n            self.type == 'out_refund' and _('Credit Note - %s') % (self.number) or \\\n            self.type == 'in_invoice' and self.state == 'draft' and _('Vendor Bill') or \\\n            self.type == 'in_invoice' and self.state in ('open','paid') and _('Vendor Bill - %s') % (self.number) or \\\n            self.type == 'in_refund' and self.state == 'draft' and _('Vendor Credit Note') or \\\n            self.type == 'in_refund' and _('Vendor Credit Note - %s') % (self.number)\n\n    @api.multi\n    def _invoice_line_tax_values(self):\n        self.ensure_one()\n        tax_datas = {}\n        TAX = self.env['account.tax']\n\n        for line in self.mapped('invoice_line_ids'):\n            price_unit = line.price_unit * (1 - (line.discount or 0.0) / 100.0)\n            tax_lines = line.invoice_line_tax_ids.compute_all(price_unit, line.invoice_id.currency_id, line.quantity, line.product_id, line.invoice_id.partner_id)['taxes']\n            for tax_line in tax_lines:\n                tax_line['tag_ids'] = TAX.browse(tax_line['id']).tag_ids.ids\n            tax_datas[line.id] = tax_lines\n        return tax_datas\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\n\n\nclass AccountInvoice(models.Model):\n\n    _inherit = \"account.invoice\"\n\n    @api.depends('amount_total')\n    def _compute_amount_total_words(self):\n        for invoice in self:\n            invoice.amount_total_words = invoice.currency_id.amount_to_text(invoice.amount_total)\n\n    amount_total_words = fields.Char(\"Total (In Words)\", compute=\"_compute_amount_total_words\")\n\n    def _get_printed_report_name(self):\n        self.ensure_one()\n        if self.company_id.country_id.code != 'IN':\n            return super(AccountInvoice, self)._get_printed_report_name()\n        return self.type == 'out_invoice' and self.state == 'draft' and _('Draft %s') % (self.journal_id.name) or \\\n            self.type == 'out_invoice' and self.state in ('open','paid') and '%s - %s' % (self.journal_id.name, self.number) or \\\n            self.type == 'out_refund' and self.state == 'draft' and _('Credit Note') or \\\n            self.type == 'out_refund' and _('Credit Note - %s') % (self.number) or \\\n            self.type == 'in_invoice' and self.state == 'draft' and _('Vendor Bill') or \\\n            self.type == 'in_invoice' and self.state in ('open','paid') and _('Vendor Bill - %s') % (self.number) or \\\n            self.type == 'in_refund' and self.state == 'draft' and _('Vendor Credit Note') or \\\n            self.type == 'in_refund' and _('Vendor Credit Note - %s') % (self.number)\n\n    @api.multi\n    def _invoice_line_tax_values(self):\n        self.ensure_one()\n        tax_datas = {}\n        TAX = self.env['account.tax']\n\n        for line in self.mapped('invoice_line_ids'):\n            price_unit = line.price_unit * (1 - (line.discount or 0.0) / 100.0)\n            tax_lines = line.invoice_line_tax_ids.compute_all(price_unit, line.invoice_id.currency_id, line.quantity, line.product_id, line.invoice_id.partner_id)['taxes']\n            for tax_line in tax_lines:\n                tax_line['tag_ids'] = TAX.browse(tax_line['id']).tag_ids.ids\n            tax_datas[line.id] = tax_lines\n        return tax_datas\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "account_invoice.py", "id": "b5c3fd97def28ea5e7f9afc4247616de", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_in/models/account_invoice.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestBits(object):\n\n    def test_new_int(self):\n        bits = Bits()\n        max_size = 32\n        assert_raises(TypeError, bits.new_int, None, max_size)\n        assert_raises(TypeError, bits.new_int, [], max_size)\n        data = [item for item in range(30)]\n        data.append(31)\n        assert_equal(bits.new_int(data, max_size), 30)\n        data = [item for item in range(32)]\n        assert_equal(bits.new_int(data, max_size), None)\n        print('Success: test_find_int_excluded_from_input')\n\n\ndef main():\n    test = TestBits()\n    test.test_new_int()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestBits(object):\n\n    def test_new_int(self):\n        bits = Bits()\n        max_size = 32\n        assert_raises(TypeError, bits.new_int, None, max_size)\n        assert_raises(TypeError, bits.new_int, [], max_size)\n        data = [item for item in range(30)]\n        data.append(31)\n        assert_equal(bits.new_int(data, max_size), 30)\n        data = [item for item in range(32)]\n        assert_equal(bits.new_int(data, max_size), None)\n        print('Success: test_find_int_excluded_from_input')\n\n\ndef main():\n    test = TestBits()\n    test.test_new_int()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_new_int.py", "id": "e7139ac4b1d8f82c38118d4d3f83272d", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/sorting_searching/new_int/test_new_int.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
{"author": "HelloZeroNet", "code": "import hashlib\nimport os\nimport copy\n\nimport pytest\n\nfrom OptionalManager import OptionalManagerPlugin\nfrom util import helper\n\n\n@pytest.mark.usefixtures(\"resetSettings\")\nclass TestOptionalManager:\n    def testDbFill(self, site):\n        contents = site.content_manager.contents\n        assert len(site.content_manager.hashfield) > 0\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional WHERE is_downloaded = 1\").fetchone()[0] == len(site.content_manager.hashfield)\n\n    def testSetContent(self, site):\n        contents = site.content_manager.contents\n\n        \n        new_content = copy.deepcopy(contents[\"content.json\"])\n        new_content[\"files_optional\"][\"testfile\"] = {\n            \"size\": 1234,\n            \"sha512\": \"aaaabbbbcccc\"\n        }\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        contents[\"content.json\"] = new_content\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] > num_optional_files_before\n\n        \n        new_content = copy.deepcopy(contents[\"content.json\"])\n        del new_content[\"files_optional\"][\"testfile\"]\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        contents[\"content.json\"] = new_content\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] < num_optional_files_before\n\n    def testDeleteContent(self, site):\n        contents = site.content_manager.contents\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        del contents[\"content.json\"]\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] < num_optional_files_before\n", "comments": "  add new file    remove file ", "content": "import hashlib\nimport os\nimport copy\n\nimport pytest\n\nfrom OptionalManager import OptionalManagerPlugin\nfrom util import helper\n\n\n@pytest.mark.usefixtures(\"resetSettings\")\nclass TestOptionalManager:\n    def testDbFill(self, site):\n        contents = site.content_manager.contents\n        assert len(site.content_manager.hashfield) > 0\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional WHERE is_downloaded = 1\").fetchone()[0] == len(site.content_manager.hashfield)\n\n    def testSetContent(self, site):\n        contents = site.content_manager.contents\n\n        # Add new file\n        new_content = copy.deepcopy(contents[\"content.json\"])\n        new_content[\"files_optional\"][\"testfile\"] = {\n            \"size\": 1234,\n            \"sha512\": \"aaaabbbbcccc\"\n        }\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        contents[\"content.json\"] = new_content\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] > num_optional_files_before\n\n        # Remove file\n        new_content = copy.deepcopy(contents[\"content.json\"])\n        del new_content[\"files_optional\"][\"testfile\"]\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        contents[\"content.json\"] = new_content\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] < num_optional_files_before\n\n    def testDeleteContent(self, site):\n        contents = site.content_manager.contents\n        num_optional_files_before = contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0]\n        del contents[\"content.json\"]\n        assert contents.db.execute(\"SELECT COUNT(*) FROM file_optional\").fetchone()[0] < num_optional_files_before\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "TestOptionalManager.py", "id": "1c87c596de0c9e8c79f61a18f6d2498c", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/plugins/OptionalManager/Test/TestOptionalManager.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom ..utils import (\n    int_or_none,\n    str_to_int,\n    unified_strdate,\n)\nfrom .keezmovies import KeezMoviesIE\n\n\nclass MofosexIE(KeezMoviesIE):\n    _VALID_URL = r'https?://(?:www\\.)?mofosex\\.com/videos/(?P<id>\\d+)/(?P<display_id>[^/?\n    _TESTS = [{\n        'url': 'http://www.mofosex.com/videos/318131/amateur-teen-playing-and-masturbating-318131.html',\n        'md5': '39a15853632b7b2e5679f92f69b78e91',\n        'info_dict': {\n            'id': '318131',\n            'display_id': 'amateur-teen-playing-and-masturbating-318131',\n            'ext': 'mp4',\n            'title': 'amateur teen playing and masturbating',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20121114',\n            'view_count': int,\n            'like_count': int,\n            'dislike_count': int,\n            'age_limit': 18,\n        }\n    }, {\n        \n        'url': 'http://www.mofosex.com/videos/5018/japanese-teen-music-video.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        webpage, info = self._extract_info(url)\n\n        view_count = str_to_int(self._search_regex(\n            r'VIEWS:</span>\\s*([\\d,.]+)', webpage, 'view count', fatal=False))\n        like_count = int_or_none(self._search_regex(\n            r'id=[\"\\']amountLikes[\"\\'][^>]*>(\\d+)', webpage,\n            'like count', fatal=False))\n        dislike_count = int_or_none(self._search_regex(\n            r'id=[\"\\']amountDislikes[\"\\'][^>]*>(\\d+)', webpage,\n            'like count', fatal=False))\n        upload_date = unified_strdate(self._html_search_regex(\n            r'Added:</span>([^<]+)', webpage, 'upload date', fatal=False))\n\n        info.update({\n            'view_count': view_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'upload_date': upload_date,\n            'thumbnail': self._og_search_thumbnail(webpage),\n        })\n\n        return info\n", "comments": "#&.]+)\\.html'\n# This video is no longer available\n", "content": "from __future__ import unicode_literals\n\nfrom ..utils import (\n    int_or_none,\n    str_to_int,\n    unified_strdate,\n)\nfrom .keezmovies import KeezMoviesIE\n\n\nclass MofosexIE(KeezMoviesIE):\n    _VALID_URL = r'https?://(?:www\\.)?mofosex\\.com/videos/(?P<id>\\d+)/(?P<display_id>[^/?#&.]+)\\.html'\n    _TESTS = [{\n        'url': 'http://www.mofosex.com/videos/318131/amateur-teen-playing-and-masturbating-318131.html',\n        'md5': '39a15853632b7b2e5679f92f69b78e91',\n        'info_dict': {\n            'id': '318131',\n            'display_id': 'amateur-teen-playing-and-masturbating-318131',\n            'ext': 'mp4',\n            'title': 'amateur teen playing and masturbating',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20121114',\n            'view_count': int,\n            'like_count': int,\n            'dislike_count': int,\n            'age_limit': 18,\n        }\n    }, {\n        # This video is no longer available\n        'url': 'http://www.mofosex.com/videos/5018/japanese-teen-music-video.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        webpage, info = self._extract_info(url)\n\n        view_count = str_to_int(self._search_regex(\n            r'VIEWS:</span>\\s*([\\d,.]+)', webpage, 'view count', fatal=False))\n        like_count = int_or_none(self._search_regex(\n            r'id=[\"\\']amountLikes[\"\\'][^>]*>(\\d+)', webpage,\n            'like count', fatal=False))\n        dislike_count = int_or_none(self._search_regex(\n            r'id=[\"\\']amountDislikes[\"\\'][^>]*>(\\d+)', webpage,\n            'like count', fatal=False))\n        upload_date = unified_strdate(self._html_search_regex(\n            r'Added:</span>([^<]+)', webpage, 'upload date', fatal=False))\n\n        info.update({\n            'view_count': view_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'upload_date': upload_date,\n            'thumbnail': self._og_search_thumbnail(webpage),\n        })\n\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "mofosex.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/mofosex.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
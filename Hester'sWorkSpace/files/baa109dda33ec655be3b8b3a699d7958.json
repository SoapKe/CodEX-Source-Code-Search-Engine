{"author": "django", "code": "\"\"\"\nMany-to-many relationships via an intermediary table\n\nFor many-to-many relationships that need extra fields on the intermediary\ntable, use an intermediary model.\n\nIn this example, an ``Article`` can have multiple ``Reporter`` objects, and\neach ``Article``-``Reporter`` combination (a ``Writer``) has a ``position``\nfield, which specifies the ``Reporter``'s position for the given article\n(e.g. \"Staff writer\").\n\"\"\"\nfrom django.db import models\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n\n    def __str__(self):\n        return self.headline\n\n\nclass Writer(models.Model):\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    article = models.ForeignKey(Article, models.CASCADE)\n    position = models.CharField(max_length=100)\n\n    def __str__(self):\n        return '%s (%s)' % (self.reporter, self.position)\n", "comments": "    many many relationships via intermediary table  for many many relationships need extra fields intermediary table  use intermediary model   in example    article   multiple   reporter   objects    article     reporter   combination (a   writer  )   position   field  specifies   reporter   position given article (e g   staff writer )      ", "content": "\"\"\"\nMany-to-many relationships via an intermediary table\n\nFor many-to-many relationships that need extra fields on the intermediary\ntable, use an intermediary model.\n\nIn this example, an ``Article`` can have multiple ``Reporter`` objects, and\neach ``Article``-``Reporter`` combination (a ``Writer``) has a ``position``\nfield, which specifies the ``Reporter``'s position for the given article\n(e.g. \"Staff writer\").\n\"\"\"\nfrom django.db import models\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n\n    def __str__(self):\n        return self.headline\n\n\nclass Writer(models.Model):\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    article = models.ForeignKey(Article, models.CASCADE)\n    position = models.CharField(max_length=100)\n\n    def __str__(self):\n        return '%s (%s)' % (self.reporter, self.position)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "baa109dda33ec655be3b8b3a699d7958", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/m2m_intermediary/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
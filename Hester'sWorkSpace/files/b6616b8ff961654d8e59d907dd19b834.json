{"author": "ansible", "code": " (c) 2016 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom nose.plugins.skip import SkipTest\n\ntry:\n    from ansible.modules.network.fortimanager import fmgr_script\n    from .fortimanager_module import TestFortimanagerModule\n    from units.modules.utils import set_module_args\nexcept ImportError:\n    raise SkipTest(\"Could not load required modules for testing\")\n\ntry:\n    from pyFMG.fortimgr import FortiManager\nexcept ImportError:\n    raise SkipTest(\"FortiManager tests require pyFMG package\")\n\n\nclass TestFmgrScriptModule(TestFortimanagerModule):\n\n    module = fmgr_script\n\n    def test_fmg_script_fail_connect(self):\n        set_module_args(dict(host='1.1.1.1', username='admin', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'Connection to FortiManager Failed')\n\n    def test_fmg_script_login_fail_host(self):\n        set_module_args(dict(username='admin', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'missing required arguments: host')\n\n    def test_fmg_script_login_fail_username(self):\n        set_module_args(dict(host='1.1.1.1', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'Host and username are required for connection')\n", "comments": "  (c) 2016 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish ", "content": "# (c) 2016 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom nose.plugins.skip import SkipTest\n\ntry:\n    from ansible.modules.network.fortimanager import fmgr_script\n    from .fortimanager_module import TestFortimanagerModule\n    from units.modules.utils import set_module_args\nexcept ImportError:\n    raise SkipTest(\"Could not load required modules for testing\")\n\ntry:\n    from pyFMG.fortimgr import FortiManager\nexcept ImportError:\n    raise SkipTest(\"FortiManager tests require pyFMG package\")\n\n\nclass TestFmgrScriptModule(TestFortimanagerModule):\n\n    module = fmgr_script\n\n    def test_fmg_script_fail_connect(self):\n        set_module_args(dict(host='1.1.1.1', username='admin', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'Connection to FortiManager Failed')\n\n    def test_fmg_script_login_fail_host(self):\n        set_module_args(dict(username='admin', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'missing required arguments: host')\n\n    def test_fmg_script_login_fail_username(self):\n        set_module_args(dict(host='1.1.1.1', password='admin', adom='root', script_name='TestScript',\n                             script_type='cli', script_target='remote_device', script_description='AnsibleTest',\n                             script_content='get system status'))\n        result = self.execute_module(failed=True)\n        self.assertEqual(result['msg'], 'Host and username are required for connection')\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_fmgr_script.py", "id": "b6616b8ff961654d8e59d907dd19b834", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/fortimanager/test_fmgr_script.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
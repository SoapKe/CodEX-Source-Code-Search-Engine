{"author": "nvbn", "code": "import os\nimport sys\nimport tty\nimport termios\nimport colorama\nfrom distutils.spawn import find_executable\nfrom .. import const\n\ninit_output = colorama.init\n\n\ndef getch():\n    fd = sys.stdin.fileno()\n    old = termios.tcgetattr(fd)\n    try:\n        tty.setraw(fd)\n        return sys.stdin.read(1)\n    finally:\n        termios.tcsetattr(fd, termios.TCSADRAIN, old)\n\n\ndef get_key():\n    ch = getch()\n\n    if ch in const.KEY_MAPPING:\n        return const.KEY_MAPPING[ch]\n    elif ch == '\\x1b':\n        next_ch = getch()\n        if next_ch == '[':\n            last_ch = getch()\n\n            if last_ch == 'A':\n                return const.KEY_UP\n            elif last_ch == 'B':\n                return const.KEY_DOWN\n\n    return ch\n\n\ndef open_command(arg):\n    if find_executable('xdg-open'):\n        return 'xdg-open ' + arg\n    return 'open ' + arg\n\n\ntry:\n    from pathlib import Path\nexcept ImportError:\n    from pathlib2 import Path\n\n\ndef _expanduser(self):\n    return self.__class__(os.path.expanduser(str(self)))\n\n\nif not hasattr(Path, 'expanduser'):\n    Path.expanduser = _expanduser\n", "comments": "", "content": "import os\nimport sys\nimport tty\nimport termios\nimport colorama\nfrom distutils.spawn import find_executable\nfrom .. import const\n\ninit_output = colorama.init\n\n\ndef getch():\n    fd = sys.stdin.fileno()\n    old = termios.tcgetattr(fd)\n    try:\n        tty.setraw(fd)\n        return sys.stdin.read(1)\n    finally:\n        termios.tcsetattr(fd, termios.TCSADRAIN, old)\n\n\ndef get_key():\n    ch = getch()\n\n    if ch in const.KEY_MAPPING:\n        return const.KEY_MAPPING[ch]\n    elif ch == '\\x1b':\n        next_ch = getch()\n        if next_ch == '[':\n            last_ch = getch()\n\n            if last_ch == 'A':\n                return const.KEY_UP\n            elif last_ch == 'B':\n                return const.KEY_DOWN\n\n    return ch\n\n\ndef open_command(arg):\n    if find_executable('xdg-open'):\n        return 'xdg-open ' + arg\n    return 'open ' + arg\n\n\ntry:\n    from pathlib import Path\nexcept ImportError:\n    from pathlib2 import Path\n\n\ndef _expanduser(self):\n    return self.__class__(os.path.expanduser(str(self)))\n\n\nif not hasattr(Path, 'expanduser'):\n    Path.expanduser = _expanduser\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "unix.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/system/unix.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
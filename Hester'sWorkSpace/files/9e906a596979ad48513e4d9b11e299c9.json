{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.tests import common\nfrom datetime import datetime\n\n\nclass TestSaleMargin(common.TransactionCase):\n\n    def setUp(self):\n        super(TestSaleMargin, self).setUp()\n        self.SaleOrder = self.env['sale.order']\n\n        self.product_uom_id = self.ref('product.product_uom_unit')\n        self.product_id = self.ref('product.product_product_24')\n        self.partner_id = self.ref('base.res_partner_4')\n        self.partner_invoice_address_id = self.ref('base.res_partner_address_7')\n        self.pricelist_id = self.ref('product.list0')\n\n    def test_sale_margin(self):\n        \n        \n        sale_order_so11 = self.SaleOrder.create({\n            'date_order': datetime.today(),\n            'name': 'Test_SO011',\n            'order_line': [\n                (0, 0, {\n                    'name': '[CARD] Graphics Card',\n                    'purchase_price': 700.0,\n                    'price_unit': 1000.0,\n                    'product_uom': self.product_uom_id,\n                    'product_uom_qty': 10.0,\n                    'state': 'draft',\n                    'product_id': self.product_id}),\n                (0, 0, {\n                    'name': 'Line without product_uom',\n                    'price_unit': 1000.0,\n                    'purchase_price': 700.0,\n                    'product_uom_qty': 10.0,\n                    'state': 'draft',\n                    'product_id': self.product_id})],\n            'partner_id': self.partner_id,\n            'partner_invoice_id': self.partner_invoice_address_id,\n            'partner_shipping_id': self.partner_invoice_address_id,\n            'pricelist_id': self.pricelist_id})\n        \n        sale_order_so11.action_confirm()\n        \n        self.assertEqual(sale_order_so11.margin, 6000.00, \"Sales order margin should be 6000.00\")\n", "comments": "    test sale margin module odoo             coding  utf 8        part odoo  see license file full copyright licensing details     create sales order product graphics card     confirm sales order     verify margin field gets bind value  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.tests import common\nfrom datetime import datetime\n\n\nclass TestSaleMargin(common.TransactionCase):\n\n    def setUp(self):\n        super(TestSaleMargin, self).setUp()\n        self.SaleOrder = self.env['sale.order']\n\n        self.product_uom_id = self.ref('product.product_uom_unit')\n        self.product_id = self.ref('product.product_product_24')\n        self.partner_id = self.ref('base.res_partner_4')\n        self.partner_invoice_address_id = self.ref('base.res_partner_address_7')\n        self.pricelist_id = self.ref('product.list0')\n\n    def test_sale_margin(self):\n        \"\"\" Test the sale_margin module in Odoo. \"\"\"\n        # Create a sales order for product Graphics Card.\n        sale_order_so11 = self.SaleOrder.create({\n            'date_order': datetime.today(),\n            'name': 'Test_SO011',\n            'order_line': [\n                (0, 0, {\n                    'name': '[CARD] Graphics Card',\n                    'purchase_price': 700.0,\n                    'price_unit': 1000.0,\n                    'product_uom': self.product_uom_id,\n                    'product_uom_qty': 10.0,\n                    'state': 'draft',\n                    'product_id': self.product_id}),\n                (0, 0, {\n                    'name': 'Line without product_uom',\n                    'price_unit': 1000.0,\n                    'purchase_price': 700.0,\n                    'product_uom_qty': 10.0,\n                    'state': 'draft',\n                    'product_id': self.product_id})],\n            'partner_id': self.partner_id,\n            'partner_invoice_id': self.partner_invoice_address_id,\n            'partner_shipping_id': self.partner_invoice_address_id,\n            'pricelist_id': self.pricelist_id})\n        # Confirm the sales order.\n        sale_order_so11.action_confirm()\n        # Verify that margin field gets bind with the value.\n        self.assertEqual(sale_order_so11.margin, 6000.00, \"Sales order margin should be 6000.00\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_sale_margin.py", "id": "9e906a596979ad48513e4d9b11e299c9", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/sale_margin/tests/test_sale_margin.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
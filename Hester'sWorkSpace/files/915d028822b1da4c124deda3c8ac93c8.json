{"author": "kivy", "code": "\nfrom pythonforandroid.toolchain import main\nfrom pythonforandroid.recipe import Recipe\n\nfrom os import path\nimport sys\n\nimport pytest\n\n# Set these values manually before testing (for now)\nndk_dir = '/home/asandy/android/crystax-ndk-10.3.2'\nndk_version='crystax-ndk-10.3.2'\n\ncur_dir = path.dirname(path.abspath(__file__))\ntestapps_dir = path.join(path.split(path.split(cur_dir)[0])[0], 'testapps')\n\norig_argv = sys.argv[:]\n\ndef set_argv(argv):\n    while sys.argv:\n        sys.argv.pop()\n    sys.argv.append(orig_argv[0])\n    for item in argv:\n        sys.argv.append(item)\n    for item in orig_argv[1:]:\n        if item == '-s':\n            continue\n        sys.argv.append(item)\n\n\nargument_combinations = [{'app_dir': path.join(testapps_dir, 'testapp'),\n                          'requirements': 'python2,pyjnius,kivy',\n                          'packagename': 'p4a_test_sdl2',\n                          'bootstrap': 'sdl2',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         {'app_dir': path.join(testapps_dir, 'testapp'),\n                          'requirements': 'python2,pyjnius,kivy',\n                          'packagename': 'p4a_test_pygame',\n                          'bootstrap': 'pygame',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         {'app_dir': path.join(testapps_dir, 'testapp_flask'),\n                          'requirements': 'python2,flask,pyjnius',\n                          'packagename': 'p4a_test_flask',\n                          'bootstrap': 'webview',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         ]\n\n                          \n@pytest.mark.parametrize('args', argument_combinations)\ndef test_build_sdl2(args):\n\n    Recipe.recipes = {}\n\n    set_argv(('apk --requirements={requirements} --private '\n              '{app_dir} --package=net.p4a.{packagename} --name={packagename} '\n              '--version=0.1 --bootstrap={bootstrap} --android_api=19 '\n              '--ndk_dir={ndk_dir} --ndk_version={ndk_version} --debug '\n              '--permission VIBRATE '\n              '--symlink-java-src '\n              '--orientation portrait --dist_name=test-{packagename}').format(\n                  **args).split(' '))\n\n    print('argv are', sys.argv)\n\n    main()\n    \n", "comments": "  set values manually testing (for now) ", "content": "\nfrom pythonforandroid.toolchain import main\nfrom pythonforandroid.recipe import Recipe\n\nfrom os import path\nimport sys\n\nimport pytest\n\n# Set these values manually before testing (for now)\nndk_dir = '/home/asandy/android/crystax-ndk-10.3.2'\nndk_version='crystax-ndk-10.3.2'\n\ncur_dir = path.dirname(path.abspath(__file__))\ntestapps_dir = path.join(path.split(path.split(cur_dir)[0])[0], 'testapps')\n\norig_argv = sys.argv[:]\n\ndef set_argv(argv):\n    while sys.argv:\n        sys.argv.pop()\n    sys.argv.append(orig_argv[0])\n    for item in argv:\n        sys.argv.append(item)\n    for item in orig_argv[1:]:\n        if item == '-s':\n            continue\n        sys.argv.append(item)\n\n\nargument_combinations = [{'app_dir': path.join(testapps_dir, 'testapp'),\n                          'requirements': 'python2,pyjnius,kivy',\n                          'packagename': 'p4a_test_sdl2',\n                          'bootstrap': 'sdl2',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         {'app_dir': path.join(testapps_dir, 'testapp'),\n                          'requirements': 'python2,pyjnius,kivy',\n                          'packagename': 'p4a_test_pygame',\n                          'bootstrap': 'pygame',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         {'app_dir': path.join(testapps_dir, 'testapp_flask'),\n                          'requirements': 'python2,flask,pyjnius',\n                          'packagename': 'p4a_test_flask',\n                          'bootstrap': 'webview',\n                          'ndk_dir': ndk_dir,\n                          'ndk_version': ndk_version},\n                         ]\n\n                          \n@pytest.mark.parametrize('args', argument_combinations)\ndef test_build_sdl2(args):\n\n    Recipe.recipes = {}\n\n    set_argv(('apk --requirements={requirements} --private '\n              '{app_dir} --package=net.p4a.{packagename} --name={packagename} '\n              '--version=0.1 --bootstrap={bootstrap} --android_api=19 '\n              '--ndk_dir={ndk_dir} --ndk_version={ndk_version} --debug '\n              '--permission VIBRATE '\n              '--symlink-java-src '\n              '--orientation portrait --dist_name=test-{packagename}').format(\n                  **args).split(' '))\n\n    print('argv are', sys.argv)\n\n    main()\n    \n", "description": "Turn your Python application into an Android APK", "file_name": "test_apk.py", "id": "915d028822b1da4c124deda3c8ac93c8", "language": "Python", "project_name": "python-for-android", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/kivy-python-for-android/kivy-python-for-android-a036f44/test_builds/tests/test_apk.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:42:42Z", "url": "https://github.com/kivy/python-for-android", "wiki": false}
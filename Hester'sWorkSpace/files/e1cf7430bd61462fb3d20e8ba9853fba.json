{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import ExtractorError\n\n\nclass SlidesLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://slideslive\\.com/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'https://slideslive.com/38902413/gcc-ia16-backend',\n        'md5': 'b29fcd6c6952d0c79c5079b0e7a07e6f',\n        'info_dict': {\n            'id': 'LMtgR8ba0b0',\n            'ext': 'mp4',\n            'title': '38902413: external video',\n            'description': '3890241320170925-9-1yd6ech.mp4',\n            'uploader': 'SlidesLive Administrator',\n            'uploader_id': 'UC62SdArr41t_-_fX40QCLRw',\n            'upload_date': '20170925',\n        }\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            url, video_id, headers={'Accept': 'application/json'})\n        service_name = video_data['video_service_name']\n        if service_name == 'YOUTUBE':\n            yt_video_id = video_data['video_service_id']\n            return self.url_result(yt_video_id, 'Youtube', video_id=yt_video_id)\n        else:\n            raise ExtractorError(\n                'Unsupported service name: {0}'.format(service_name), expected=True)\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import ExtractorError\n\n\nclass SlidesLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://slideslive\\.com/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'https://slideslive.com/38902413/gcc-ia16-backend',\n        'md5': 'b29fcd6c6952d0c79c5079b0e7a07e6f',\n        'info_dict': {\n            'id': 'LMtgR8ba0b0',\n            'ext': 'mp4',\n            'title': '38902413: external video',\n            'description': '3890241320170925-9-1yd6ech.mp4',\n            'uploader': 'SlidesLive Administrator',\n            'uploader_id': 'UC62SdArr41t_-_fX40QCLRw',\n            'upload_date': '20170925',\n        }\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            url, video_id, headers={'Accept': 'application/json'})\n        service_name = video_data['video_service_name']\n        if service_name == 'YOUTUBE':\n            yt_video_id = video_data['video_service_id']\n            return self.url_result(yt_video_id, 'Youtube', video_id=yt_video_id)\n        else:\n            raise ExtractorError(\n                'Unsupported service name: {0}'.format(service_name), expected=True)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "slideslive.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/slideslive.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
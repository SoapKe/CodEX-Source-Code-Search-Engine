{"author": "django", "code": "from functools import update_wrapper\n\nfrom django.contrib import admin\nfrom django.db import models\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\n\n\nclass Action(models.Model):\n    name = models.CharField(max_length=50, primary_key=True)\n    description = models.CharField(max_length=70)\n\n    def __str__(self):\n        return self.name\n\n\nclass ActionAdmin(admin.ModelAdmin):\n    \"\"\"\n    A ModelAdmin for the Action model that changes the URL of the add_view\n    to '<app name>/<model name>/!add/'\n    The Action model has a CharField PK.\n    \"\"\"\n\n    list_display = ('name', 'description')\n\n    def remove_url(self, name):\n        \"\"\"\n        Remove all entries named 'name' from the ModelAdmin instance URL\n        patterns list\n        \"\"\"\n        return [url for url in super().get_urls() if url.name != name]\n\n    def get_urls(self):\n        \n        # list.  Remove the existing one(s) first\n        from django.conf.urls import url\n\n        def wrap(view):\n            def wrapper(*args, **kwargs):\n                return self.admin_site.admin_view(view)(*args, **kwargs)\n            return update_wrapper(wrapper, view)\n\n        info = self.model._meta.app_label, self.model._meta.model_name\n\n        view_name = '%s_%s_add' % info\n\n        return [\n            url(r'^!add/$', wrap(self.add_view), name=view_name),\n        ] + self.remove_url(view_name)\n\n\nclass Person(models.Model):\n    name = models.CharField(max_length=20)\n\n\nclass PersonAdmin(admin.ModelAdmin):\n\n    def response_post_save_add(self, request, obj):\n        return HttpResponseRedirect(\n            reverse('admin:admin_custom_urls_person_history', args=[obj.pk]))\n\n    def response_post_save_change(self, request, obj):\n        return HttpResponseRedirect(\n            reverse('admin:admin_custom_urls_person_delete', args=[obj.pk]))\n\n\nclass Car(models.Model):\n    name = models.CharField(max_length=20)\n\n\nclass CarAdmin(admin.ModelAdmin):\n\n    def response_add(self, request, obj, post_url_continue=None):\n        return super().response_add(\n            request, obj,\n            post_url_continue=reverse('admin:admin_custom_urls_car_history', args=[obj.pk]),\n        )\n\n\nsite = admin.AdminSite(name='admin_custom_urls')\nsite.register(Action, ActionAdmin)\nsite.register(Person, PersonAdmin)\nsite.register(Car, CarAdmin)\n", "comments": "        a modeladmin action model changes url add view       app name   model name   add       the action model charfield pk               list display   ( name    description )      def remove url(self  name)                      remove entries named  name  modeladmin instance url         patterns list                add url custom  add view  view front urls    list   remove existing one(s) first ", "content": "from functools import update_wrapper\n\nfrom django.contrib import admin\nfrom django.db import models\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse\n\n\nclass Action(models.Model):\n    name = models.CharField(max_length=50, primary_key=True)\n    description = models.CharField(max_length=70)\n\n    def __str__(self):\n        return self.name\n\n\nclass ActionAdmin(admin.ModelAdmin):\n    \"\"\"\n    A ModelAdmin for the Action model that changes the URL of the add_view\n    to '<app name>/<model name>/!add/'\n    The Action model has a CharField PK.\n    \"\"\"\n\n    list_display = ('name', 'description')\n\n    def remove_url(self, name):\n        \"\"\"\n        Remove all entries named 'name' from the ModelAdmin instance URL\n        patterns list\n        \"\"\"\n        return [url for url in super().get_urls() if url.name != name]\n\n    def get_urls(self):\n        # Add the URL of our custom 'add_view' view to the front of the URLs\n        # list.  Remove the existing one(s) first\n        from django.conf.urls import url\n\n        def wrap(view):\n            def wrapper(*args, **kwargs):\n                return self.admin_site.admin_view(view)(*args, **kwargs)\n            return update_wrapper(wrapper, view)\n\n        info = self.model._meta.app_label, self.model._meta.model_name\n\n        view_name = '%s_%s_add' % info\n\n        return [\n            url(r'^!add/$', wrap(self.add_view), name=view_name),\n        ] + self.remove_url(view_name)\n\n\nclass Person(models.Model):\n    name = models.CharField(max_length=20)\n\n\nclass PersonAdmin(admin.ModelAdmin):\n\n    def response_post_save_add(self, request, obj):\n        return HttpResponseRedirect(\n            reverse('admin:admin_custom_urls_person_history', args=[obj.pk]))\n\n    def response_post_save_change(self, request, obj):\n        return HttpResponseRedirect(\n            reverse('admin:admin_custom_urls_person_delete', args=[obj.pk]))\n\n\nclass Car(models.Model):\n    name = models.CharField(max_length=20)\n\n\nclass CarAdmin(admin.ModelAdmin):\n\n    def response_add(self, request, obj, post_url_continue=None):\n        return super().response_add(\n            request, obj,\n            post_url_continue=reverse('admin:admin_custom_urls_car_history', args=[obj.pk]),\n        )\n\n\nsite = admin.AdminSite(name='admin_custom_urls')\nsite.register(Action, ActionAdmin)\nsite.register(Person, PersonAdmin)\nsite.register(Car, CarAdmin)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "653b75095286c683d23829a94dca268d", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/admin_custom_urls/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
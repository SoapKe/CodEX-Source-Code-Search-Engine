{"author": "getsentry", "code": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nfrom exam import fixture\n\nfrom sentry.interfaces.applecrash import AppleCrashReport\nfrom sentry.testutils import TestCase\n\n\nclass AppleCrashReportTest(TestCase):\n    @fixture\n    def interface(self):\n        return AppleCrashReport.to_python(\n            dict(\n                crash={\n                    'diagnosis': 'Aha',\n                    'error': {},\n                    'threads': [],\n                },\n                binary_images=[\n                    {\n                        \"cpu_subtype\":\n                        9,\n                        \"cpu_type\":\n                        12,\n                        \"image_addr\":\n                        749568,\n                        \"image_size\":\n                        262144,\n                        \"image_vmaddr\":\n                        16384,\n                        \"name\": (\n                            '/private/var/mobile/Containers/Bundle/Application'\n                            '/436352A9-1BE2-4934-9C6F-237CC7DFF27B'\n                            '/Crash-Tester.app/Crash-Tester'\n                        ),\n                        \"uuid\":\n                        \"8094558B-3641-36F7-BA80-A1AAABCF72DA\"\n                    }\n                ],\n            )\n        )\n\n    def test_path(self):\n        assert self.interface.get_path() == 'sentry.interfaces.AppleCrashReport'\n\n    def test_serialize_unserialize_behavior(self):\n        result = type(self.interface).to_python(self.interface.to_json())\n        assert result.to_json() == self.interface.to_json()\n\n    def test_empty_hash(self):\n        assert self.interface.get_hash() == []\n", "comments": "      coding  utf 8     ", "content": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nfrom exam import fixture\n\nfrom sentry.interfaces.applecrash import AppleCrashReport\nfrom sentry.testutils import TestCase\n\n\nclass AppleCrashReportTest(TestCase):\n    @fixture\n    def interface(self):\n        return AppleCrashReport.to_python(\n            dict(\n                crash={\n                    'diagnosis': 'Aha',\n                    'error': {},\n                    'threads': [],\n                },\n                binary_images=[\n                    {\n                        \"cpu_subtype\":\n                        9,\n                        \"cpu_type\":\n                        12,\n                        \"image_addr\":\n                        749568,\n                        \"image_size\":\n                        262144,\n                        \"image_vmaddr\":\n                        16384,\n                        \"name\": (\n                            '/private/var/mobile/Containers/Bundle/Application'\n                            '/436352A9-1BE2-4934-9C6F-237CC7DFF27B'\n                            '/Crash-Tester.app/Crash-Tester'\n                        ),\n                        \"uuid\":\n                        \"8094558B-3641-36F7-BA80-A1AAABCF72DA\"\n                    }\n                ],\n            )\n        )\n\n    def test_path(self):\n        assert self.interface.get_path() == 'sentry.interfaces.AppleCrashReport'\n\n    def test_serialize_unserialize_behavior(self):\n        result = type(self.interface).to_python(self.interface.to_json())\n        assert result.to_json() == self.interface.to_json()\n\n    def test_empty_hash(self):\n        assert self.interface.get_hash() == []\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_applecrashreport.py", "id": "3dabb0016e1ed24b7b5c0c54231045f6", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/interfaces/test_applecrashreport.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
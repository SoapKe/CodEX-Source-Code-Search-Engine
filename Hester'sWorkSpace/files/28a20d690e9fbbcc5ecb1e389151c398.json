{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n)\n\n\nclass VRTIE(InfoExtractor):\n    IE_DESC = 'deredactie.be, sporza.be, cobra.be and cobra.canvas.be'\n    _VALID_URL = r'https?://(?:deredactie|sporza|cobra(?:\\.canvas)?)\\.be/cm/(?:[^/]+/)+(?P<id>[^/]+)/*'\n    _TESTS = [\n        \n        {\n            'url': 'http://deredactie.be/cm/vrtnieuws/videozone/programmas/journaal/EP_141025_JOL',\n            'md5': '4cebde1eb60a53782d4f3992cbd46ec8',\n            'info_dict': {\n                'id': '2129880',\n                'ext': 'flv',\n                'title': 'Het journaal L - 25/10/14',\n                'description': None,\n                'timestamp': 1414271750.949,\n                'upload_date': '20141025',\n                'duration': 929,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        \n        {\n            'url': 'http://sporza.be/cm/sporza/videozone/programmas/extratime/EP_141020_Extra_time',\n            'md5': '11f53088da9bf8e7cfc42456697953ff',\n            'info_dict': {\n                'id': '2124639',\n                'ext': 'flv',\n                'title': 'Bekijk Extra Time van 20 oktober',\n                'description': 'md5:83ac5415a4f1816c6a93f8138aef2426',\n                'timestamp': 1413835980.560,\n                'upload_date': '20141020',\n                'duration': 3238,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        \n        {\n            'url': 'http://cobra.be/cm/cobra/videozone/rubriek/film-videozone/141022-mv-ellis-cafecorsari',\n            'md5': '78a2b060a5083c4f055449a72477409d',\n            'info_dict': {\n                'id': '2126050',\n                'ext': 'flv',\n                'title': 'Bret Easton Ellis in Caf\u00e9 Corsari',\n                'description': 'md5:f699986e823f32fd6036c1855a724ee9',\n                'timestamp': 1413967500.494,\n                'upload_date': '20141022',\n                'duration': 661,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        {\n            \n            'url': 'http://deredactie.be/cm/vrtnieuws/videozone/nieuws/cultuurenmedia/1.2622957',\n            'md5': 'b8b93da1df1cea6c8556255a796b7d61',\n            'info_dict': {\n                'id': 'Wji-BZ0oCwg',\n                'ext': 'mp4',\n                'title': 'ROGUE ONE: A STAR WARS STORY Official Teaser Trailer',\n                'description': 'md5:8e468944dce15567a786a67f74262583',\n                'uploader': 'Star Wars',\n                'uploader_id': 'starwars',\n                'upload_date': '20160407',\n            },\n            'add_ie': ['Youtube'],\n        },\n        {\n            'url': 'http://cobra.canvas.be/cm/cobra/videozone/rubriek/film-videozone/1.2377055',\n            'info_dict': {\n                'id': '2377055',\n                'ext': 'mp4',\n                'title': 'Cafe Derby',\n                'description': 'Lenny Van Wesemael debuteert met de langspeelfilm Caf\u00e9 Derby. Een waar gebeurd maar ook verzonnen verhaal.',\n                'upload_date': '20150626',\n                'timestamp': 1435305240.769,\n            },\n            'params': {\n                \n                'skip_download': True,\n            }\n        }\n    ]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        video_id = self._search_regex(\n            r'data-video-id=\"([^\"]+)_[^\"]+\"', webpage, 'video id', fatal=False)\n\n        src = self._search_regex(\n            r'data-video-src=\"([^\"]+)\"', webpage, 'video src', default=None)\n\n        video_type = self._search_regex(\n            r'data-video-type=\"([^\"]+)\"', webpage, 'video type', default=None)\n\n        if video_type == 'YouTubeVideo':\n            return self.url_result(src, 'Youtube')\n\n        formats = []\n\n        mobj = re.search(\n            r'data-video-iphone-server=\"(?P<server>[^\"]+)\"\\s+data-video-iphone-path=\"(?P<path>[^\"]+)\"',\n            webpage)\n        if mobj:\n            formats.extend(self._extract_m3u8_formats(\n                '%s/%s' % (mobj.group('server'), mobj.group('path')),\n                video_id, 'mp4', m3u8_id='hls', fatal=False))\n\n        if src:\n            formats = self._extract_wowza_formats(src, video_id)\n            if 'data-video-geoblocking=\"true\"' not in webpage:\n                for f in formats:\n                    if f['url'].startswith('rtsp://'):\n                        http_format = f.copy()\n                        http_format.update({\n                            'url': f['url'].replace('rtsp://', 'http://').replace('vod.', 'download.').replace('/_definst_/', '/').replace('mp4:', ''),\n                            'format_id': f['format_id'].replace('rtsp', 'http'),\n                            'protocol': 'http',\n                        })\n                        formats.append(http_format)\n\n        if not formats and 'data-video-geoblocking=\"true\"' in webpage:\n            self.raise_geo_restricted('This video is only available in Belgium')\n\n        self._sort_formats(formats)\n\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = self._og_search_thumbnail(webpage)\n        timestamp = float_or_none(self._search_regex(\n            r'data-video-sitestat-pubdate=\"(\\d+)\"', webpage, 'timestamp', fatal=False), 1000)\n        duration = float_or_none(self._search_regex(\n            r'data-video-duration=\"(\\d+)\"', webpage, 'duration', fatal=False), 1000)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'duration': duration,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n# deredactie.be\n# sporza.be\n# cobra.be\n# YouTube video\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n)\n\n\nclass VRTIE(InfoExtractor):\n    IE_DESC = 'deredactie.be, sporza.be, cobra.be and cobra.canvas.be'\n    _VALID_URL = r'https?://(?:deredactie|sporza|cobra(?:\\.canvas)?)\\.be/cm/(?:[^/]+/)+(?P<id>[^/]+)/*'\n    _TESTS = [\n        # deredactie.be\n        {\n            'url': 'http://deredactie.be/cm/vrtnieuws/videozone/programmas/journaal/EP_141025_JOL',\n            'md5': '4cebde1eb60a53782d4f3992cbd46ec8',\n            'info_dict': {\n                'id': '2129880',\n                'ext': 'flv',\n                'title': 'Het journaal L - 25/10/14',\n                'description': None,\n                'timestamp': 1414271750.949,\n                'upload_date': '20141025',\n                'duration': 929,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        # sporza.be\n        {\n            'url': 'http://sporza.be/cm/sporza/videozone/programmas/extratime/EP_141020_Extra_time',\n            'md5': '11f53088da9bf8e7cfc42456697953ff',\n            'info_dict': {\n                'id': '2124639',\n                'ext': 'flv',\n                'title': 'Bekijk Extra Time van 20 oktober',\n                'description': 'md5:83ac5415a4f1816c6a93f8138aef2426',\n                'timestamp': 1413835980.560,\n                'upload_date': '20141020',\n                'duration': 3238,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        # cobra.be\n        {\n            'url': 'http://cobra.be/cm/cobra/videozone/rubriek/film-videozone/141022-mv-ellis-cafecorsari',\n            'md5': '78a2b060a5083c4f055449a72477409d',\n            'info_dict': {\n                'id': '2126050',\n                'ext': 'flv',\n                'title': 'Bret Easton Ellis in Caf\u00e9 Corsari',\n                'description': 'md5:f699986e823f32fd6036c1855a724ee9',\n                'timestamp': 1413967500.494,\n                'upload_date': '20141022',\n                'duration': 661,\n            },\n            'skip': 'HTTP Error 404: Not Found',\n        },\n        {\n            # YouTube video\n            'url': 'http://deredactie.be/cm/vrtnieuws/videozone/nieuws/cultuurenmedia/1.2622957',\n            'md5': 'b8b93da1df1cea6c8556255a796b7d61',\n            'info_dict': {\n                'id': 'Wji-BZ0oCwg',\n                'ext': 'mp4',\n                'title': 'ROGUE ONE: A STAR WARS STORY Official Teaser Trailer',\n                'description': 'md5:8e468944dce15567a786a67f74262583',\n                'uploader': 'Star Wars',\n                'uploader_id': 'starwars',\n                'upload_date': '20160407',\n            },\n            'add_ie': ['Youtube'],\n        },\n        {\n            'url': 'http://cobra.canvas.be/cm/cobra/videozone/rubriek/film-videozone/1.2377055',\n            'info_dict': {\n                'id': '2377055',\n                'ext': 'mp4',\n                'title': 'Cafe Derby',\n                'description': 'Lenny Van Wesemael debuteert met de langspeelfilm Caf\u00e9 Derby. Een waar gebeurd maar ook verzonnen verhaal.',\n                'upload_date': '20150626',\n                'timestamp': 1435305240.769,\n            },\n            'params': {\n                # m3u8 download\n                'skip_download': True,\n            }\n        }\n    ]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        video_id = self._search_regex(\n            r'data-video-id=\"([^\"]+)_[^\"]+\"', webpage, 'video id', fatal=False)\n\n        src = self._search_regex(\n            r'data-video-src=\"([^\"]+)\"', webpage, 'video src', default=None)\n\n        video_type = self._search_regex(\n            r'data-video-type=\"([^\"]+)\"', webpage, 'video type', default=None)\n\n        if video_type == 'YouTubeVideo':\n            return self.url_result(src, 'Youtube')\n\n        formats = []\n\n        mobj = re.search(\n            r'data-video-iphone-server=\"(?P<server>[^\"]+)\"\\s+data-video-iphone-path=\"(?P<path>[^\"]+)\"',\n            webpage)\n        if mobj:\n            formats.extend(self._extract_m3u8_formats(\n                '%s/%s' % (mobj.group('server'), mobj.group('path')),\n                video_id, 'mp4', m3u8_id='hls', fatal=False))\n\n        if src:\n            formats = self._extract_wowza_formats(src, video_id)\n            if 'data-video-geoblocking=\"true\"' not in webpage:\n                for f in formats:\n                    if f['url'].startswith('rtsp://'):\n                        http_format = f.copy()\n                        http_format.update({\n                            'url': f['url'].replace('rtsp://', 'http://').replace('vod.', 'download.').replace('/_definst_/', '/').replace('mp4:', ''),\n                            'format_id': f['format_id'].replace('rtsp', 'http'),\n                            'protocol': 'http',\n                        })\n                        formats.append(http_format)\n\n        if not formats and 'data-video-geoblocking=\"true\"' in webpage:\n            self.raise_geo_restricted('This video is only available in Belgium')\n\n        self._sort_formats(formats)\n\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = self._og_search_thumbnail(webpage)\n        timestamp = float_or_none(self._search_regex(\n            r'data-video-sitestat-pubdate=\"(\\d+)\"', webpage, 'timestamp', fatal=False), 1000)\n        duration = float_or_none(self._search_regex(\n            r'data-video-duration=\"(\\d+)\"', webpage, 'duration', fatal=False), 1000)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'duration': duration,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "vrt.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/vrt.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
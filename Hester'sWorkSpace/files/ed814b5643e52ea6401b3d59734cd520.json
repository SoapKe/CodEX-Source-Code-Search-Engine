{"author": "jakubroztocil", "code": "\nimport pytest\n\nfrom httpie import ExitStatus\nfrom utils import http, HTTP_OK\n\n\ndef test_follow_all_redirects_shown(httpbin):\n    r = http('--follow', '--all', httpbin.url + '/redirect/2')\n    assert r.count('HTTP/1.1') == 3\n    assert r.count('HTTP/1.1 302 FOUND', 2)\n    assert HTTP_OK in r\n\n\n@pytest.mark.parametrize('follow_flag', ['--follow', '-F'])\ndef test_follow_without_all_redirects_hidden(httpbin, follow_flag):\n    r = http(follow_flag, httpbin.url + '/redirect/2')\n    assert r.count('HTTP/1.1') == 1\n    assert HTTP_OK in r\n\n\ndef test_follow_all_output_options_used_for_redirects(httpbin):\n    r = http('--check-status',\n             '--follow',\n             '--all',\n             '--print=H',\n             httpbin.url + '/redirect/2')\n    assert r.count('GET /') == 3\n    assert HTTP_OK not in r\n\n\ndef test_follow_redirect_output_options(httpbin):\n    r = http('--check-status',\n             '--follow',\n             '--all',\n             '--print=h',\n             '--history-print=H',\n             httpbin.url + '/redirect/2')\n    assert r.count('GET /') == 2\n    assert 'HTTP/1.1 302 FOUND' not in r\n    assert HTTP_OK in r\n\n\ndef test_max_redirects(httpbin):\n    r = http('--max-redirects=1', '--follow', httpbin.url + '/redirect/3',\n             error_exit_ok=True)\n    assert r.exit_status == ExitStatus.ERROR_TOO_MANY_REDIRECTS\n", "comments": "   high level tests     ", "content": "\"\"\"High-level tests.\"\"\"\nimport pytest\n\nfrom httpie import ExitStatus\nfrom utils import http, HTTP_OK\n\n\ndef test_follow_all_redirects_shown(httpbin):\n    r = http('--follow', '--all', httpbin.url + '/redirect/2')\n    assert r.count('HTTP/1.1') == 3\n    assert r.count('HTTP/1.1 302 FOUND', 2)\n    assert HTTP_OK in r\n\n\n@pytest.mark.parametrize('follow_flag', ['--follow', '-F'])\ndef test_follow_without_all_redirects_hidden(httpbin, follow_flag):\n    r = http(follow_flag, httpbin.url + '/redirect/2')\n    assert r.count('HTTP/1.1') == 1\n    assert HTTP_OK in r\n\n\ndef test_follow_all_output_options_used_for_redirects(httpbin):\n    r = http('--check-status',\n             '--follow',\n             '--all',\n             '--print=H',\n             httpbin.url + '/redirect/2')\n    assert r.count('GET /') == 3\n    assert HTTP_OK not in r\n\n\ndef test_follow_redirect_output_options(httpbin):\n    r = http('--check-status',\n             '--follow',\n             '--all',\n             '--print=h',\n             '--history-print=H',\n             httpbin.url + '/redirect/2')\n    assert r.count('GET /') == 2\n    assert 'HTTP/1.1 302 FOUND' not in r\n    assert HTTP_OK in r\n\n\ndef test_max_redirects(httpbin):\n    r = http('--max-redirects=1', '--follow', httpbin.url + '/redirect/3',\n             error_exit_ok=True)\n    assert r.exit_status == ExitStatus.ERROR_TOO_MANY_REDIRECTS\n", "description": "Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://httpie.org", "file_name": "test_redirects.py", "id": "ed814b5643e52ea6401b3d59734cd520", "language": "Python", "project_name": "httpie", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jakubroztocil-httpie/jakubroztocil-httpie-0f4dce9/tests/test_redirects.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:48:16Z", "url": "https://github.com/jakubroztocil/httpie", "wiki": false}
{"author": "ansible", "code": "\n Copyright: Ansible Project\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.onyx import onyx_bgp\nfrom units.modules.utils import set_module_args\nfrom .onyx_module import TestOnyxModule, load_fixture\n\n\nclass TestOnyxBgpModule(TestOnyxModule):\n\n    module = onyx_bgp\n\n    def setUp(self):\n        super(TestOnyxBgpModule, self).setUp()\n        self.mock_get_config = patch.object(\n            onyx_bgp.OnyxBgpModule, \"_get_bgp_summary\")\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch(\n            'ansible.module_utils.network.onyx.onyx.load_config')\n        self.load_config = self.mock_load_config.start()\n\n    def tearDown(self):\n        super(TestOnyxBgpModule, self).tearDown()\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None, transport='cli'):\n        config_file = 'onyx_bgp_show.cfg'\n        self.get_config.return_value = load_fixture(config_file)\n        self.load_config.return_value = None\n\n    def test_bgp_no_change(self):\n        neighbor = dict(remote_as=173, neighbor='10.2.3.4')\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=[neighbor],\n                             networks=['172.16.1.0/24']))\n        self.execute_module(changed=False)\n\n    def test_bgp_remove(self):\n        set_module_args(dict(as_number=172, state='absent'))\n        commands = ['no router bgp 172']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_change(self):\n        neighbor = dict(remote_as=173, neighbor='10.2.3.4')\n        set_module_args(dict(as_number=174, router_id='1.2.3.4',\n                             neighbors=[neighbor]))\n        commands = ['no router bgp 172', 'router bgp 174', 'exit',\n                    'router bgp 174 router-id 1.2.3.4 force',\n                    'router bgp 174 neighbor 10.2.3.4 remote-as 173']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_add_neighbor(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4'),\n                     dict(remote_as=175, neighbor='10.2.3.5')]\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=neighbors,\n                             networks=['172.16.1.0/24']))\n        commands = ['router bgp 172 neighbor 10.2.3.5 remote-as 175']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_del_neighbor(self):\n        set_module_args(dict(as_number=172,\n                             networks=['172.16.1.0/24']))\n        commands = ['router bgp 172 no neighbor 10.2.3.4 remote-as 173']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_add_network(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4')]\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=neighbors,\n                             networks=['172.16.1.0/24', '172.16.2.0/24']))\n        commands = ['router bgp 172 network 172.16.2.0 /24']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_del_network(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4')]\n        set_module_args(dict(as_number=172, neighbors=neighbors))\n        commands = ['router bgp 172 no network 172.16.1.0 /24']\n        self.execute_module(changed=True, commands=commands)\n", "comments": "     copyright  ansible project    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    make coding python3 ish ", "content": "#\n# Copyright: Ansible Project\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.onyx import onyx_bgp\nfrom units.modules.utils import set_module_args\nfrom .onyx_module import TestOnyxModule, load_fixture\n\n\nclass TestOnyxBgpModule(TestOnyxModule):\n\n    module = onyx_bgp\n\n    def setUp(self):\n        super(TestOnyxBgpModule, self).setUp()\n        self.mock_get_config = patch.object(\n            onyx_bgp.OnyxBgpModule, \"_get_bgp_summary\")\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch(\n            'ansible.module_utils.network.onyx.onyx.load_config')\n        self.load_config = self.mock_load_config.start()\n\n    def tearDown(self):\n        super(TestOnyxBgpModule, self).tearDown()\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None, transport='cli'):\n        config_file = 'onyx_bgp_show.cfg'\n        self.get_config.return_value = load_fixture(config_file)\n        self.load_config.return_value = None\n\n    def test_bgp_no_change(self):\n        neighbor = dict(remote_as=173, neighbor='10.2.3.4')\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=[neighbor],\n                             networks=['172.16.1.0/24']))\n        self.execute_module(changed=False)\n\n    def test_bgp_remove(self):\n        set_module_args(dict(as_number=172, state='absent'))\n        commands = ['no router bgp 172']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_change(self):\n        neighbor = dict(remote_as=173, neighbor='10.2.3.4')\n        set_module_args(dict(as_number=174, router_id='1.2.3.4',\n                             neighbors=[neighbor]))\n        commands = ['no router bgp 172', 'router bgp 174', 'exit',\n                    'router bgp 174 router-id 1.2.3.4 force',\n                    'router bgp 174 neighbor 10.2.3.4 remote-as 173']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_add_neighbor(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4'),\n                     dict(remote_as=175, neighbor='10.2.3.5')]\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=neighbors,\n                             networks=['172.16.1.0/24']))\n        commands = ['router bgp 172 neighbor 10.2.3.5 remote-as 175']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_del_neighbor(self):\n        set_module_args(dict(as_number=172,\n                             networks=['172.16.1.0/24']))\n        commands = ['router bgp 172 no neighbor 10.2.3.4 remote-as 173']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_add_network(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4')]\n        set_module_args(dict(as_number=172, router_id='1.2.3.4',\n                             neighbors=neighbors,\n                             networks=['172.16.1.0/24', '172.16.2.0/24']))\n        commands = ['router bgp 172 network 172.16.2.0 /24']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_bgp_del_network(self):\n        neighbors = [dict(remote_as=173, neighbor='10.2.3.4')]\n        set_module_args(dict(as_number=172, neighbors=neighbors))\n        commands = ['router bgp 172 no network 172.16.1.0 /24']\n        self.execute_module(changed=True, commands=commands)\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_onyx_bgp.py", "id": "33787722d2c399f2ca21ac32c06f2388", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/onyx/test_onyx_bgp.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
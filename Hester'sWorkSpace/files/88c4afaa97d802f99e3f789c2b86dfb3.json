{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass MorningstarIE(InfoExtractor):\n    IE_DESC = 'morningstar.com'\n    _VALID_URL = r'https?://(?:(?:www|news)\\.)morningstar\\.com/[cC]over/video[cC]enter\\.aspx\\?id=(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.morningstar.com/cover/videocenter.aspx?id=615869',\n        'md5': '6c0acface7a787aadc8391e4bbf7b0f5',\n        'info_dict': {\n            'id': '615869',\n            'ext': 'mp4',\n            'title': 'Get Ahead of the Curve on 2013 Taxes',\n            'description': \"Vanguard's Joel Dickson on managing higher tax rates for high-income earners and fund capital-gain distributions in 2013.\",\n            'thumbnail': r're:^https?://.*m(?:orning)?star\\.com/.+thumb\\.jpg$'\n        }\n    }, {\n        'url': 'http://news.morningstar.com/cover/videocenter.aspx?id=825556',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._html_search_regex(\n            r'<h1 id=\"titleLink\">(.*?)</h1>', webpage, 'title')\n        video_url = self._html_search_regex(\n            r'<input type=\"hidden\" id=\"hidVideoUrl\" value=\"([^\"]+)\"',\n            webpage, 'video URL')\n        thumbnail = self._html_search_regex(\n            r'<input type=\"hidden\" id=\"hidSnapshot\" value=\"([^\"]+)\"',\n            webpage, 'thumbnail', fatal=False)\n        description = self._html_search_regex(\n            r'<div id=\"mstarDeck\".*?>(.*?)</div>',\n            webpage, 'description', fatal=False)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'description': description,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass MorningstarIE(InfoExtractor):\n    IE_DESC = 'morningstar.com'\n    _VALID_URL = r'https?://(?:(?:www|news)\\.)morningstar\\.com/[cC]over/video[cC]enter\\.aspx\\?id=(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.morningstar.com/cover/videocenter.aspx?id=615869',\n        'md5': '6c0acface7a787aadc8391e4bbf7b0f5',\n        'info_dict': {\n            'id': '615869',\n            'ext': 'mp4',\n            'title': 'Get Ahead of the Curve on 2013 Taxes',\n            'description': \"Vanguard's Joel Dickson on managing higher tax rates for high-income earners and fund capital-gain distributions in 2013.\",\n            'thumbnail': r're:^https?://.*m(?:orning)?star\\.com/.+thumb\\.jpg$'\n        }\n    }, {\n        'url': 'http://news.morningstar.com/cover/videocenter.aspx?id=825556',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._html_search_regex(\n            r'<h1 id=\"titleLink\">(.*?)</h1>', webpage, 'title')\n        video_url = self._html_search_regex(\n            r'<input type=\"hidden\" id=\"hidVideoUrl\" value=\"([^\"]+)\"',\n            webpage, 'video URL')\n        thumbnail = self._html_search_regex(\n            r'<input type=\"hidden\" id=\"hidSnapshot\" value=\"([^\"]+)\"',\n            webpage, 'thumbnail', fatal=False)\n        description = self._html_search_regex(\n            r'<div id=\"mstarDeck\".*?>(.*?)</div>',\n            webpage, 'description', fatal=False)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'description': description,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "morningstar.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/morningstar.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
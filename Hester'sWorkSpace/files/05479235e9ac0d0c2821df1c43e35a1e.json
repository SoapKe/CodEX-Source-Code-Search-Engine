{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_healthmonitor\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of HealthMonitor Avi RESTful Object\ndescription:\n    - This module is used to configure HealthMonitor object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    dns_monitor:\n        description:\n            - Healthmonitordns settings for healthmonitor.\n    external_monitor:\n        description:\n            - Healthmonitorexternal settings for healthmonitor.\n    failed_checks:\n        description:\n            - Number of continuous failed health checks before the server is marked down.\n            - Allowed values are 1-50.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 2.\n    http_monitor:\n        description:\n            - Healthmonitorhttp settings for healthmonitor.\n    https_monitor:\n        description:\n            - Healthmonitorhttp settings for healthmonitor.\n    is_federated:\n        description:\n            - This field describes the object's replication scope.\n            - If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.\n            - If the field is set to true, then the object is replicated across the federation.\n            - Field introduced in 17.1.3.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.4\"\n        type: bool\n    monitor_port:\n        description:\n            - Use this port instead of the port defined for the server in the pool.\n            - If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool.\n            - Allowed values are 1-65535.\n            - Special values are 0 - 'use server port'.\n    name:\n        description:\n            - A user friendly name for this health monitor.\n        required: true\n    receive_timeout:\n        description:\n            - A valid response from the server is expected within the receive timeout window.\n            - This timeout must be less than the send interval.\n            - If server status is regularly flapping up and down, consider increasing this value.\n            - Allowed values are 1-2400.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 4.\n            - Units(SEC).\n    send_interval:\n        description:\n            - Frequency, in seconds, that monitors are sent to a server.\n            - Allowed values are 1-3600.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 10.\n            - Units(SEC).\n    successful_checks:\n        description:\n            - Number of continuous successful health checks before server is marked up.\n            - Allowed values are 1-50.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 2.\n    tcp_monitor:\n        description:\n            - Healthmonitortcp settings for healthmonitor.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of the health monitor.\n            - Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP,\n            - HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB.\n        required: true\n    udp_monitor:\n        description:\n            - Healthmonitorudp settings for healthmonitor.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the health monitor.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: HealthMonitor (api/healthmonitor) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        dns_monitor=dict(type='dict',),\n        external_monitor=dict(type='dict',),\n        failed_checks=dict(type='int',),\n        http_monitor=dict(type='dict',),\n        https_monitor=dict(type='dict',),\n        is_federated=dict(type='bool',),\n        monitor_port=dict(type='int',),\n        name=dict(type='str', required=True),\n        receive_timeout=dict(type='int',),\n        send_interval=dict(type='int',),\n        successful_checks=dict(type='int',),\n        tcp_monitor=dict(type='dict',),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        udp_monitor=dict(type='dict',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'healthmonitor',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  create https health monitor   avi healthmonitor      controller  10 10 27 90     username  admin     password  avinetworks123      https monitor        http request  head   http 1 0       http response code            http 2xx           http 3xx     receive timeout  4     failed checks  3     send interval  10     successful checks  3     type  health monitor https     name  mywebsite https              module  avi healthmonitor author  gaurav rastogi (grastogi avinetworks com)  short description  module setup healthmonitor avi restful object description        this module used configure healthmonitor object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 3  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       description          description                user defined description object      dns monitor          description                healthmonitordns settings healthmonitor      external monitor          description                healthmonitorexternal settings healthmonitor      failed checks          description                number continuous failed health checks server marked                allowed values 1 50                default value specified api module interpreted avi controller 2      http monitor          description                healthmonitorhttp settings healthmonitor      https monitor          description                healthmonitorhttp settings healthmonitor      federated          description                this field describes object replication scope                if field set false  object visible within controller cluster associated service engines                if field set true  object replicated across federation                field introduced 17 1 3                default value specified api module interpreted avi controller false          version added   2 4          type  bool     monitor port          description                use port instead port defined server pool                if monitor succeeds port  load balanced traffic still sent port server defined within pool                allowed values 1 65535                special values 0    use server port       name          description                a user friendly name health monitor          required  true     receive timeout          description                a valid response server expected within receive timeout window                this timeout must less send interval                if server status regularly flapping  consider increasing value                allowed values 1 2400                default value specified api module interpreted avi controller 4                units(sec)      send interval          description                frequency  seconds  monitors sent server                allowed values 1 3600                default value specified api module interpreted avi controller 10                units(sec)      successful checks          description                number continuous successful health checks server marked                allowed values 1 50                default value specified api module interpreted avi controller 2      tcp monitor          description                healthmonitortcp settings healthmonitor      tenant ref          description                it reference object type tenant      type          description                type health monitor                enum options   health monitor ping  health monitor tcp  health monitor http  health monitor https  health monitor external  health monitor udp                health monitor dns  health monitor gslb          required  true     udp monitor          description                healthmonitorudp settings healthmonitor      url          description                avi controller url object      uuid          description                uuid health monitor  extends documentation fragment        avi      examples     return       obj      description  healthmonitor (api healthmonitor) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_healthmonitor\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of HealthMonitor Avi RESTful Object\ndescription:\n    - This module is used to configure HealthMonitor object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.3\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    description:\n        description:\n            - User defined description for the object.\n    dns_monitor:\n        description:\n            - Healthmonitordns settings for healthmonitor.\n    external_monitor:\n        description:\n            - Healthmonitorexternal settings for healthmonitor.\n    failed_checks:\n        description:\n            - Number of continuous failed health checks before the server is marked down.\n            - Allowed values are 1-50.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 2.\n    http_monitor:\n        description:\n            - Healthmonitorhttp settings for healthmonitor.\n    https_monitor:\n        description:\n            - Healthmonitorhttp settings for healthmonitor.\n    is_federated:\n        description:\n            - This field describes the object's replication scope.\n            - If the field is set to false, then the object is visible within the controller-cluster and its associated service-engines.\n            - If the field is set to true, then the object is replicated across the federation.\n            - Field introduced in 17.1.3.\n            - Default value when not specified in API or module is interpreted by Avi Controller as False.\n        version_added: \"2.4\"\n        type: bool\n    monitor_port:\n        description:\n            - Use this port instead of the port defined for the server in the pool.\n            - If the monitor succeeds to this port, the load balanced traffic will still be sent to the port of the server defined within the pool.\n            - Allowed values are 1-65535.\n            - Special values are 0 - 'use server port'.\n    name:\n        description:\n            - A user friendly name for this health monitor.\n        required: true\n    receive_timeout:\n        description:\n            - A valid response from the server is expected within the receive timeout window.\n            - This timeout must be less than the send interval.\n            - If server status is regularly flapping up and down, consider increasing this value.\n            - Allowed values are 1-2400.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 4.\n            - Units(SEC).\n    send_interval:\n        description:\n            - Frequency, in seconds, that monitors are sent to a server.\n            - Allowed values are 1-3600.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 10.\n            - Units(SEC).\n    successful_checks:\n        description:\n            - Number of continuous successful health checks before server is marked up.\n            - Allowed values are 1-50.\n            - Default value when not specified in API or module is interpreted by Avi Controller as 2.\n    tcp_monitor:\n        description:\n            - Healthmonitortcp settings for healthmonitor.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    type:\n        description:\n            - Type of the health monitor.\n            - Enum options - HEALTH_MONITOR_PING, HEALTH_MONITOR_TCP, HEALTH_MONITOR_HTTP, HEALTH_MONITOR_HTTPS, HEALTH_MONITOR_EXTERNAL, HEALTH_MONITOR_UDP,\n            - HEALTH_MONITOR_DNS, HEALTH_MONITOR_GSLB.\n        required: true\n    udp_monitor:\n        description:\n            - Healthmonitorudp settings for healthmonitor.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Uuid of the health monitor.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Create a HTTPS health monitor\n  avi_healthmonitor:\n    controller: 10.10.27.90\n    username: admin\n    password: AviNetworks123!\n    https_monitor:\n      http_request: HEAD / HTTP/1.0\n      http_response_code:\n        - HTTP_2XX\n        - HTTP_3XX\n    receive_timeout: 4\n    failed_checks: 3\n    send_interval: 10\n    successful_checks: 3\n    type: HEALTH_MONITOR_HTTPS\n    name: MyWebsite-HTTPS\n\"\"\"\n\nRETURN = '''\nobj:\n    description: HealthMonitor (api/healthmonitor) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        description=dict(type='str',),\n        dns_monitor=dict(type='dict',),\n        external_monitor=dict(type='dict',),\n        failed_checks=dict(type='int',),\n        http_monitor=dict(type='dict',),\n        https_monitor=dict(type='dict',),\n        is_federated=dict(type='bool',),\n        monitor_port=dict(type='int',),\n        name=dict(type='str', required=True),\n        receive_timeout=dict(type='int',),\n        send_interval=dict(type='int',),\n        successful_checks=dict(type='int',),\n        tcp_monitor=dict(type='dict',),\n        tenant_ref=dict(type='str',),\n        type=dict(type='str', required=True),\n        udp_monitor=dict(type='dict',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'healthmonitor',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_healthmonitor.py", "id": "05479235e9ac0d0c2821df1c43e35a1e", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_healthmonitor.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
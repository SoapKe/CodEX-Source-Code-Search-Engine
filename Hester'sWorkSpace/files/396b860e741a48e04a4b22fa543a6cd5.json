{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestMaxProfit(object):\n\n    def test_max_profit(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.find_max_profit, None)\n        assert_raises(ValueError, solution.find_max_profit, [])\n        assert_equal(solution.find_max_profit([8, 5, 3, 2, 1]), -1)\n        assert_equal(solution.find_max_profit([5, 3, 7, 4, 2, 6, 9]), 7)\n        print('Success: test_max_profit')\n\n\ndef main():\n    test = TestMaxProfit()\n    test.test_max_profit()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestMaxProfit(object):\n\n    def test_max_profit(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.find_max_profit, None)\n        assert_raises(ValueError, solution.find_max_profit, [])\n        assert_equal(solution.find_max_profit([8, 5, 3, 2, 1]), -1)\n        assert_equal(solution.find_max_profit([5, 3, 7, 4, 2, 6, 9]), 7)\n        print('Success: test_max_profit')\n\n\ndef main():\n    test = TestMaxProfit()\n    test.test_max_profit()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_max_profit.py", "id": "396b860e741a48e04a4b22fa543a6cd5", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/online_judges/max_profit/test_max_profit.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
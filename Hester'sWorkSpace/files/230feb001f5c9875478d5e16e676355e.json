{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport os\nfrom os.path import dirname as dirn\nimport sys\n\nsys.path.insert(0, dirn(dirn((os.path.abspath(__file__)))))\nimport youtube_dl\n\nZSH_COMPLETION_FILE = \"youtube-dl.zsh\"\nZSH_COMPLETION_TEMPLATE = \"devscripts/zsh-completion.in\"\n\n\ndef build_completion(opt_parser):\n    opts = [opt for group in opt_parser.option_groups\n            for opt in group.option_list]\n    opts_file = [opt for opt in opts if opt.metavar == \"FILE\"]\n    opts_dir = [opt for opt in opts if opt.metavar == \"DIR\"]\n\n    fileopts = []\n    for opt in opts_file:\n        if opt._short_opts:\n            fileopts.extend(opt._short_opts)\n        if opt._long_opts:\n            fileopts.extend(opt._long_opts)\n\n    diropts = []\n    for opt in opts_dir:\n        if opt._short_opts:\n            diropts.extend(opt._short_opts)\n        if opt._long_opts:\n            diropts.extend(opt._long_opts)\n\n    flags = [opt.get_opt_string() for opt in opts]\n\n    with open(ZSH_COMPLETION_TEMPLATE) as f:\n        template = f.read()\n\n    template = template.replace(\"{{fileopts}}\", \"|\".join(fileopts))\n    template = template.replace(\"{{diropts}}\", \"|\".join(diropts))\n    template = template.replace(\"{{flags}}\", \" \".join(flags))\n\n    with open(ZSH_COMPLETION_FILE, \"w\") as f:\n        f.write(template)\n\n\nparser = youtube_dl.parseOpts()[0]\nbuild_completion(parser)\n", "comments": "#!/usr/bin/env python\n", "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\nimport os\nfrom os.path import dirname as dirn\nimport sys\n\nsys.path.insert(0, dirn(dirn((os.path.abspath(__file__)))))\nimport youtube_dl\n\nZSH_COMPLETION_FILE = \"youtube-dl.zsh\"\nZSH_COMPLETION_TEMPLATE = \"devscripts/zsh-completion.in\"\n\n\ndef build_completion(opt_parser):\n    opts = [opt for group in opt_parser.option_groups\n            for opt in group.option_list]\n    opts_file = [opt for opt in opts if opt.metavar == \"FILE\"]\n    opts_dir = [opt for opt in opts if opt.metavar == \"DIR\"]\n\n    fileopts = []\n    for opt in opts_file:\n        if opt._short_opts:\n            fileopts.extend(opt._short_opts)\n        if opt._long_opts:\n            fileopts.extend(opt._long_opts)\n\n    diropts = []\n    for opt in opts_dir:\n        if opt._short_opts:\n            diropts.extend(opt._short_opts)\n        if opt._long_opts:\n            diropts.extend(opt._long_opts)\n\n    flags = [opt.get_opt_string() for opt in opts]\n\n    with open(ZSH_COMPLETION_TEMPLATE) as f:\n        template = f.read()\n\n    template = template.replace(\"{{fileopts}}\", \"|\".join(fileopts))\n    template = template.replace(\"{{diropts}}\", \"|\".join(diropts))\n    template = template.replace(\"{{flags}}\", \" \".join(flags))\n\n    with open(ZSH_COMPLETION_FILE, \"w\") as f:\n        f.write(template)\n\n\nparser = youtube_dl.parseOpts()[0]\nbuild_completion(parser)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "zsh-completion.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/devscripts/zsh-completion.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
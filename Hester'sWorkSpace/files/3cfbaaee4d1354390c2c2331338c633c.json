{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.sudo import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('output', [\n    'Permission denied',\n    'permission denied',\n    \"npm ERR! Error: EACCES, unlink\",\n    'requested operation requires superuser privilege',\n    'need to be root',\n    'need root',\n    'must be root',\n    'You don\\'t have access to the history DB.',\n    \"error: [Errno 13] Permission denied: '/usr/local/lib/python2.7/dist-packages/ipaddr.py'\"])\ndef test_match(output):\n    assert match(Command('', output))\n\n\ndef test_not_match():\n    assert not match(Command('', ''))\n    assert not match(Command('sudo ls', 'Permission denied'))\n\n\n@pytest.mark.parametrize('before, after', [\n    ('ls', 'sudo ls'),\n    ('echo a > b', 'sudo sh -c \"echo a > b\"'),\n    ('echo \"a\" >> b', 'sudo sh -c \"echo \\\\\"a\\\\\" >> b\"'),\n    ('mkdir && touch a', 'sudo sh -c \"mkdir && touch a\"')])\ndef test_get_new_command(before, after):\n    assert get_new_command(Command(before, '')) == after\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.sudo import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('output', [\n    'Permission denied',\n    'permission denied',\n    \"npm ERR! Error: EACCES, unlink\",\n    'requested operation requires superuser privilege',\n    'need to be root',\n    'need root',\n    'must be root',\n    'You don\\'t have access to the history DB.',\n    \"error: [Errno 13] Permission denied: '/usr/local/lib/python2.7/dist-packages/ipaddr.py'\"])\ndef test_match(output):\n    assert match(Command('', output))\n\n\ndef test_not_match():\n    assert not match(Command('', ''))\n    assert not match(Command('sudo ls', 'Permission denied'))\n\n\n@pytest.mark.parametrize('before, after', [\n    ('ls', 'sudo ls'),\n    ('echo a > b', 'sudo sh -c \"echo a > b\"'),\n    ('echo \"a\" >> b', 'sudo sh -c \"echo \\\\\"a\\\\\" >> b\"'),\n    ('mkdir && touch a', 'sudo sh -c \"mkdir && touch a\"')])\ndef test_get_new_command(before, after):\n    assert get_new_command(Command(before, '')) == after\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_sudo.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_sudo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
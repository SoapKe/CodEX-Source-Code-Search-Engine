{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import unified_strdate, determine_ext\n\n\nclass RoxwelIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?roxwel\\.com/player/(?P<filename>.+?)(\\.|\\?|$)'\n\n    _TEST = {\n        'url': 'http://www.roxwel.com/player/passionpittakeawalklive.html',\n        'info_dict': {\n            'id': 'passionpittakeawalklive',\n            'ext': 'flv',\n            'title': 'Take A Walk (live)',\n            'uploader': 'Passion Pit',\n            'uploader_id': 'passionpit',\n            'upload_date': '20120928',\n            'description': 'Passion Pit performs \"Take A Walk\\\" live at The Backyard in Austin, Texas. ',\n        },\n        'params': {\n            \n            'skip_download': True,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        filename = mobj.group('filename')\n        info_url = 'http://www.roxwel.com/api/videos/%s' % filename\n        info = self._download_json(info_url, filename)\n\n        rtmp_rates = sorted([int(r.replace('flv_', '')) for r in info['media_rates'] if r.startswith('flv_')])\n        best_rate = rtmp_rates[-1]\n        url_page_url = 'http://roxwel.com/pl_one_time.php?filename=%s&quality=%s' % (filename, best_rate)\n        rtmp_url = self._download_webpage(url_page_url, filename, 'Downloading video url')\n        ext = determine_ext(rtmp_url)\n        if ext == 'f4v':\n            rtmp_url = rtmp_url.replace(filename, 'mp4:%s' % filename)\n\n        return {\n            'id': filename,\n            'title': info['title'],\n            'url': rtmp_url,\n            'ext': 'flv',\n            'description': info['description'],\n            'thumbnail': info.get('player_image_url') or info.get('image_url_large'),\n            'uploader': info['artist'],\n            'uploader_id': info['artistname'],\n            'upload_date': unified_strdate(info['dbdate']),\n        }\n", "comments": "# rtmp download\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import unified_strdate, determine_ext\n\n\nclass RoxwelIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?roxwel\\.com/player/(?P<filename>.+?)(\\.|\\?|$)'\n\n    _TEST = {\n        'url': 'http://www.roxwel.com/player/passionpittakeawalklive.html',\n        'info_dict': {\n            'id': 'passionpittakeawalklive',\n            'ext': 'flv',\n            'title': 'Take A Walk (live)',\n            'uploader': 'Passion Pit',\n            'uploader_id': 'passionpit',\n            'upload_date': '20120928',\n            'description': 'Passion Pit performs \"Take A Walk\\\" live at The Backyard in Austin, Texas. ',\n        },\n        'params': {\n            # rtmp download\n            'skip_download': True,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        filename = mobj.group('filename')\n        info_url = 'http://www.roxwel.com/api/videos/%s' % filename\n        info = self._download_json(info_url, filename)\n\n        rtmp_rates = sorted([int(r.replace('flv_', '')) for r in info['media_rates'] if r.startswith('flv_')])\n        best_rate = rtmp_rates[-1]\n        url_page_url = 'http://roxwel.com/pl_one_time.php?filename=%s&quality=%s' % (filename, best_rate)\n        rtmp_url = self._download_webpage(url_page_url, filename, 'Downloading video url')\n        ext = determine_ext(rtmp_url)\n        if ext == 'f4v':\n            rtmp_url = rtmp_url.replace(filename, 'mp4:%s' % filename)\n\n        return {\n            'id': filename,\n            'title': info['title'],\n            'url': rtmp_url,\n            'ext': 'flv',\n            'description': info['description'],\n            'thumbnail': info.get('player_image_url') or info.get('image_url_large'),\n            'uploader': info['artist'],\n            'uploader_id': info['artistname'],\n            'upload_date': unified_strdate(info['dbdate']),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "roxwel.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/roxwel.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
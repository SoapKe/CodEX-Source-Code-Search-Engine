{"author": "nicolargo", "code": "\n\nimport glob\nimport os\nimport re\nimport sys\nfrom io import open\n\nfrom setuptools import setup, Command\n\n\nif sys.version_info < (2, 7) or (3, 0) <= sys.version_info < (3, 3):\n    print('Glances requires at least Python 2.7 or 3.3 to run.')\n    sys.exit(1)\n\n\n\n\n\nwith open(os.path.join('glances', '__init__.py'), encoding='utf-8') as f:\n    version = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\", f.read(), re.M).group(1)\n\nif not version:\n    raise RuntimeError('Cannot find Glances version information.')\n\nwith open('README.rst', encoding='utf-8') as f:\n    long_description = f.read()\n\n\ndef get_data_files():\n    data_files = [\n        ('share/doc/glances', ['AUTHORS', 'COPYING', 'NEWS', 'README.rst',\n                               'CONTRIBUTING.md', 'conf/glances.conf']),\n        ('share/man/man1', ['docs/man/glances.1'])\n    ]\n\n    return data_files\n\n\ndef get_install_requires():\n    requires = ['psutil>=2.0.0']\n    if sys.platform.startswith('win'):\n        requires.append('bottle')\n\n    return requires\n\n\nclass tests(Command):\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        import subprocess\n        import sys\n        for t in glob.glob('unitest.py'):\n            ret = subprocess.call([sys.executable, t]) != 0\n            if ret != 0:\n                raise SystemExit(ret)\n        raise SystemExit(0)\n\n\n\n\nsetup(\n    name='Glances',\n    version=version,\n    description=\"A cross-platform curses-based monitoring tool\",\n    long_description=long_description,\n    author='Nicolas Hennion',\n    author_email='nicolas@nicolargo.com',\n    url='https://github.com/nicolargo/glances',\n    license='LGPLv3',\n    keywords=\"cli curses monitoring system\",\n    install_requires=get_install_requires(),\n    extras_require={\n        'action': ['pystache'],\n        'browser': ['zeroconf>=0.17'],\n        'cloud': ['requests'],\n        'cpuinfo': ['py-cpuinfo'],\n        'chart': ['matplotlib'],\n        'docker': ['docker>=2.0.0'],\n        'export': ['bernhard', 'cassandra-driver', 'couchdb', 'elasticsearch',\n                   'influxdb>=1.0.0', 'kafka-python', 'pika', 'potsdb',\n                   'prometheus_client', 'pyzmq', 'statsd'],\n        'folders': ['scandir'],  \n        'gpu': ['nvidia-ml-py'],  \n        'ip': ['netifaces'],\n        'raid': ['pymdstat'],\n        'snmp': ['pysnmp'],\n        'web': ['bottle', 'requests'],\n        'wifi': ['wifi']\n    },\n    packages=['glances'],\n    include_package_data=True,\n    data_files=get_data_files(),\n    cmdclass={'test': tests},\n    test_suite=\"unitest.py\",\n    entry_points={\"console_scripts\": [\"glances=glances:main\"]},\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Console :: Curses',\n        'Environment :: Web Environment',\n        'Framework :: Bottle',\n        'Intended Audience :: Developers',\n        'Intended Audience :: End Users/Desktop',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Topic :: System :: Monitoring'\n    ]\n)\n", "comments": "   usr bin env python    global functions                        setup      python version  3 5     python version   2 7  ", "content": "#!/usr/bin/env python\n\nimport glob\nimport os\nimport re\nimport sys\nfrom io import open\n\nfrom setuptools import setup, Command\n\n\nif sys.version_info < (2, 7) or (3, 0) <= sys.version_info < (3, 3):\n    print('Glances requires at least Python 2.7 or 3.3 to run.')\n    sys.exit(1)\n\n\n# Global functions\n##################\n\nwith open(os.path.join('glances', '__init__.py'), encoding='utf-8') as f:\n    version = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\", f.read(), re.M).group(1)\n\nif not version:\n    raise RuntimeError('Cannot find Glances version information.')\n\nwith open('README.rst', encoding='utf-8') as f:\n    long_description = f.read()\n\n\ndef get_data_files():\n    data_files = [\n        ('share/doc/glances', ['AUTHORS', 'COPYING', 'NEWS', 'README.rst',\n                               'CONTRIBUTING.md', 'conf/glances.conf']),\n        ('share/man/man1', ['docs/man/glances.1'])\n    ]\n\n    return data_files\n\n\ndef get_install_requires():\n    requires = ['psutil>=2.0.0']\n    if sys.platform.startswith('win'):\n        requires.append('bottle')\n\n    return requires\n\n\nclass tests(Command):\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        import subprocess\n        import sys\n        for t in glob.glob('unitest.py'):\n            ret = subprocess.call([sys.executable, t]) != 0\n            if ret != 0:\n                raise SystemExit(ret)\n        raise SystemExit(0)\n\n\n# Setup !\n\nsetup(\n    name='Glances',\n    version=version,\n    description=\"A cross-platform curses-based monitoring tool\",\n    long_description=long_description,\n    author='Nicolas Hennion',\n    author_email='nicolas@nicolargo.com',\n    url='https://github.com/nicolargo/glances',\n    license='LGPLv3',\n    keywords=\"cli curses monitoring system\",\n    install_requires=get_install_requires(),\n    extras_require={\n        'action': ['pystache'],\n        'browser': ['zeroconf>=0.17'],\n        'cloud': ['requests'],\n        'cpuinfo': ['py-cpuinfo'],\n        'chart': ['matplotlib'],\n        'docker': ['docker>=2.0.0'],\n        'export': ['bernhard', 'cassandra-driver', 'couchdb', 'elasticsearch',\n                   'influxdb>=1.0.0', 'kafka-python', 'pika', 'potsdb',\n                   'prometheus_client', 'pyzmq', 'statsd'],\n        'folders': ['scandir'],  # python_version<\"3.5\"\n        'gpu': ['nvidia-ml-py'],  # python_version==\"2.7\"\n        'ip': ['netifaces'],\n        'raid': ['pymdstat'],\n        'snmp': ['pysnmp'],\n        'web': ['bottle', 'requests'],\n        'wifi': ['wifi']\n    },\n    packages=['glances'],\n    include_package_data=True,\n    data_files=get_data_files(),\n    cmdclass={'test': tests},\n    test_suite=\"unitest.py\",\n    entry_points={\"console_scripts\": [\"glances=glances:main\"]},\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Console :: Curses',\n        'Environment :: Web Environment',\n        'Framework :: Bottle',\n        'Intended Audience :: Developers',\n        'Intended Audience :: End Users/Desktop',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Topic :: System :: Monitoring'\n    ]\n)\n", "description": "Glances an Eye on your system. A top/htop alternative.", "file_name": "setup.py", "id": "b592d415fc464b0628b210a3afb7da26", "language": "Python", "project_name": "glances", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nicolargo-glances/nicolargo-glances-c286362/setup.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:40:41Z", "url": "https://github.com/nicolargo/glances", "wiki": true}
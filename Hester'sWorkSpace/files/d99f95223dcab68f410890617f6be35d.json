{"author": "aws", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\n\nclass TestRb(BaseAWSCommandParamsTest):\n\n    prefix = 's3 rb '\n\n    def test_rb(self):\n        command = self.prefix + 's3://bucket'\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 1)\n        self.assertEqual(self.operations_called[0][0].name, 'DeleteBucket')\n\n    def test_rb_force_empty_bucket(self):\n        command = self.prefix + 's3://bucket --force'\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 2)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n        self.assertEqual(self.operations_called[1][0].name, 'DeleteBucket')\n\n    def test_rb_force_non_empty_bucket(self):\n        command = self.prefix + 's3://bucket --force'\n        self.parsed_responses = [{\n            'Contents': [\n                {\n                    'Key': 'foo',\n                    'Size': 100,\n                    'LastModified': '2016-03-01T23:50:13.000Z'\n                }\n            ]\n        }, {}, {}]\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 3)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n        self.assertEqual(self.operations_called[1][0].name, 'DeleteObject')\n        self.assertEqual(self.operations_called[2][0].name, 'DeleteBucket')\n\n    def test_rb_failed_rc(self):\n        command = self.prefix + 's3://bucket'\n        self.http_response.status_code = 500\n        _, stderr, _ = self.run_cmd(command, expected_rc=1)\n        self.assertIn('remove_bucket failed:', stderr)\n\n    def test_rb_force_with_failed_rm(self):\n        command = self.prefix + 's3://bucket --force'\n        self.http_response.status_code = 500\n        _, stderr, _ = self.run_cmd(command, expected_rc=255)\n        self.assertIn('remove_bucket failed:', stderr)\n        self.assertEqual(len(self.operations_called), 1)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n\n    def test_nonzero_exit_if_uri_scheme_not_provided(self):\n        command = self.prefix + 'bucket'\n        self.run_cmd(command, expected_rc=255)\n\n    def test_nonzero_exit_if_key_provided(self):\n        command = self.prefix + 's3://bucket/key --force'\n        self.run_cmd(command, expected_rc=255)\n\n        command = self.prefix + 's3://bucket/key'\n        self.run_cmd(command, expected_rc=255)\n", "comments": "  copyright 2016 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license  ", "content": "# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\n\nclass TestRb(BaseAWSCommandParamsTest):\n\n    prefix = 's3 rb '\n\n    def test_rb(self):\n        command = self.prefix + 's3://bucket'\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 1)\n        self.assertEqual(self.operations_called[0][0].name, 'DeleteBucket')\n\n    def test_rb_force_empty_bucket(self):\n        command = self.prefix + 's3://bucket --force'\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 2)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n        self.assertEqual(self.operations_called[1][0].name, 'DeleteBucket')\n\n    def test_rb_force_non_empty_bucket(self):\n        command = self.prefix + 's3://bucket --force'\n        self.parsed_responses = [{\n            'Contents': [\n                {\n                    'Key': 'foo',\n                    'Size': 100,\n                    'LastModified': '2016-03-01T23:50:13.000Z'\n                }\n            ]\n        }, {}, {}]\n        self.run_cmd(command)\n        self.assertEqual(len(self.operations_called), 3)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n        self.assertEqual(self.operations_called[1][0].name, 'DeleteObject')\n        self.assertEqual(self.operations_called[2][0].name, 'DeleteBucket')\n\n    def test_rb_failed_rc(self):\n        command = self.prefix + 's3://bucket'\n        self.http_response.status_code = 500\n        _, stderr, _ = self.run_cmd(command, expected_rc=1)\n        self.assertIn('remove_bucket failed:', stderr)\n\n    def test_rb_force_with_failed_rm(self):\n        command = self.prefix + 's3://bucket --force'\n        self.http_response.status_code = 500\n        _, stderr, _ = self.run_cmd(command, expected_rc=255)\n        self.assertIn('remove_bucket failed:', stderr)\n        self.assertEqual(len(self.operations_called), 1)\n        self.assertEqual(self.operations_called[0][0].name, 'ListObjects')\n\n    def test_nonzero_exit_if_uri_scheme_not_provided(self):\n        command = self.prefix + 'bucket'\n        self.run_cmd(command, expected_rc=255)\n\n    def test_nonzero_exit_if_key_provided(self):\n        command = self.prefix + 's3://bucket/key --force'\n        self.run_cmd(command, expected_rc=255)\n\n        command = self.prefix + 's3://bucket/key'\n        self.run_cmd(command, expected_rc=255)\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_rb_command.py", "id": "d99f95223dcab68f410890617f6be35d", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/functional/s3/test_rb_command.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
{"author": "Rochester-NRT", "code": "from AlphaGo.go import GameState, BLACK, WHITE\n\n\ndef parse(boardstr):\n    |\n\n    boardstr = boardstr.replace(' ', '')\n    board_size = max(boardstr.index('|'), boardstr.count('|'))\n\n    st = GameState(size=board_size)\n    moves = {}\n\n    for row, rowstr in enumerate(boardstr.split('|')):\n        for col, c in enumerate(rowstr):\n            if c == '.':\n                continue  \n            elif c in 'BX\n                st.do_move((row, col), color=BLACK)\n            elif c in 'WO':\n                st.do_move((row, col), color=WHITE)\n            else:\n                \n                assert c not in moves, \"{} already used as a move marker\".format(c)\n                moves[c] = (row, col)\n\n    return st, moves\n", "comments": "   parses board gamestate  returns location moves     marked anything  b    x         w    o            rows separated      spaces ignored              ignore empty spaces         move reference ", "content": "from AlphaGo.go import GameState, BLACK, WHITE\n\n\ndef parse(boardstr):\n    '''Parses a board into a gamestate, and returns the location of any moves\n    marked with anything other than 'B', 'X', '#', 'W', 'O', or '.'\n\n    Rows are separated by '|', spaces are ignored.\n\n    '''\n\n    boardstr = boardstr.replace(' ', '')\n    board_size = max(boardstr.index('|'), boardstr.count('|'))\n\n    st = GameState(size=board_size)\n    moves = {}\n\n    for row, rowstr in enumerate(boardstr.split('|')):\n        for col, c in enumerate(rowstr):\n            if c == '.':\n                continue  # ignore empty spaces\n            elif c in 'BX#':\n                st.do_move((row, col), color=BLACK)\n            elif c in 'WO':\n                st.do_move((row, col), color=WHITE)\n            else:\n                # move reference\n                assert c not in moves, \"{} already used as a move marker\".format(c)\n                moves[c] = (row, col)\n\n    return st, moves\n", "description": "An independent, student-led replication of DeepMind's 2016 Nature publication, \"Mastering the game of Go with deep neural networks and tree search\" (Nature 529, 484-489, 28 Jan 2016), details of which can be found on their website https://deepmind.com/publications.html.", "file_name": "parseboard.py", "id": "5445bef686ce68f651829b2c176a1a70", "language": "Python", "project_name": "RocAlphaGo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/Rochester-NRT-RocAlphaGo/Rochester-NRT-RocAlphaGo-a39cac2/tests/parseboard.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:14:30Z", "url": "https://github.com/Rochester-NRT/RocAlphaGo", "wiki": true}
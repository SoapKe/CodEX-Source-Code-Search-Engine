{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestPairParentheses(object):\n\n    def test_pair_parentheses(self):\n        parentheses = Parentheses()\n        assert_raises(TypeError, parentheses.find_pair, None)\n        assert_raises(ValueError, parentheses.find_pair, -1)\n        assert_equal(parentheses.find_pair(0), [])\n        assert_equal(parentheses.find_pair(1), ['()'])\n        assert_equal(parentheses.find_pair(2), ['(())',\n                                                '()()'])\n        assert_equal(parentheses.find_pair(3), ['((()))',\n                                                '(()())',\n                                                '(())()',\n                                                '()(())',\n                                                '()()()'])\n        print('Success: test_pair_parentheses')\n\n\ndef main():\n    test = TestPairParentheses()\n    test.test_pair_parentheses()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestPairParentheses(object):\n\n    def test_pair_parentheses(self):\n        parentheses = Parentheses()\n        assert_raises(TypeError, parentheses.find_pair, None)\n        assert_raises(ValueError, parentheses.find_pair, -1)\n        assert_equal(parentheses.find_pair(0), [])\n        assert_equal(parentheses.find_pair(1), ['()'])\n        assert_equal(parentheses.find_pair(2), ['(())',\n                                                '()()'])\n        assert_equal(parentheses.find_pair(3), ['((()))',\n                                                '(()())',\n                                                '(())()',\n                                                '()(())',\n                                                '()()()'])\n        print('Success: test_pair_parentheses')\n\n\ndef main():\n    test = TestPairParentheses()\n    test.test_pair_parentheses()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_n_pairs_parentheses.py", "id": "a54f68d44b83abc980dd5eefda58c850", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/recursion_dynamic/n_pairs_parentheses/test_n_pairs_parentheses.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
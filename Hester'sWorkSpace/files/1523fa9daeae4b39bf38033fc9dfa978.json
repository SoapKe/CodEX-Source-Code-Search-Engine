{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    dict_get,\n    float_or_none,\n)\n\n\nclass PlaywireIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:config|cdn)\\.playwire\\.com(?:/v2)?/(?P<publisher_id>\\d+)/(?:videos/v2|embed|config)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://config.playwire.com/14907/videos/v2/3353705/player.json',\n        'md5': 'e6398701e3595888125729eaa2329ed9',\n        'info_dict': {\n            'id': '3353705',\n            'ext': 'mp4',\n            'title': 'S04_RM_UCL_Rus',\n            'thumbnail': r're:^https?://.*\\.png$',\n            'duration': 145.94,\n        },\n    }, {\n        \n        'url': 'http://config.playwire.com/21772/videos/v2/4840492/zeus.json',\n        'info_dict': {\n            'id': '4840492',\n            'ext': 'mp4',\n            'title': 'ITV EL SHOW FULL',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://cdn.playwire.com/11625/embed/85228.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://config.playwire.com/12421/videos/v2/3389892/zeus.json',\n        'only_matching': True,\n    }, {\n        'url': 'http://cdn.playwire.com/v2/12342/config/1532636.json',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        publisher_id, video_id = mobj.group('publisher_id'), mobj.group('id')\n\n        player = self._download_json(\n            'http://config.playwire.com/%s/videos/v2/%s/zeus.json' % (publisher_id, video_id),\n            video_id)\n\n        title = player['settings']['title']\n        duration = float_or_none(player.get('duration'), 1000)\n\n        content = player['content']\n        thumbnail = content.get('poster')\n        src = content['media']['f4m']\n\n        formats = self._extract_f4m_formats(src, video_id, m3u8_id='hls')\n        for a_format in formats:\n            if not dict_get(a_format, ['tbr', 'width', 'height']):\n                a_format['quality'] = 1 if '-hd.' in a_format['url'] else 0\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats,\n        }\n", "comments": "# m3u8 in f4m\n# m3u8 download\n# Multiple resolutions while bitrates missing\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    dict_get,\n    float_or_none,\n)\n\n\nclass PlaywireIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:config|cdn)\\.playwire\\.com(?:/v2)?/(?P<publisher_id>\\d+)/(?:videos/v2|embed|config)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://config.playwire.com/14907/videos/v2/3353705/player.json',\n        'md5': 'e6398701e3595888125729eaa2329ed9',\n        'info_dict': {\n            'id': '3353705',\n            'ext': 'mp4',\n            'title': 'S04_RM_UCL_Rus',\n            'thumbnail': r're:^https?://.*\\.png$',\n            'duration': 145.94,\n        },\n    }, {\n        # m3u8 in f4m\n        'url': 'http://config.playwire.com/21772/videos/v2/4840492/zeus.json',\n        'info_dict': {\n            'id': '4840492',\n            'ext': 'mp4',\n            'title': 'ITV EL SHOW FULL',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }, {\n        # Multiple resolutions while bitrates missing\n        'url': 'http://cdn.playwire.com/11625/embed/85228.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://config.playwire.com/12421/videos/v2/3389892/zeus.json',\n        'only_matching': True,\n    }, {\n        'url': 'http://cdn.playwire.com/v2/12342/config/1532636.json',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        publisher_id, video_id = mobj.group('publisher_id'), mobj.group('id')\n\n        player = self._download_json(\n            'http://config.playwire.com/%s/videos/v2/%s/zeus.json' % (publisher_id, video_id),\n            video_id)\n\n        title = player['settings']['title']\n        duration = float_or_none(player.get('duration'), 1000)\n\n        content = player['content']\n        thumbnail = content.get('poster')\n        src = content['media']['f4m']\n\n        formats = self._extract_f4m_formats(src, video_id, m3u8_id='hls')\n        for a_format in formats:\n            if not dict_get(a_format, ['tbr', 'width', 'height']):\n                a_format['quality'] = 1 if '-hd.' in a_format['url'] else 0\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "playwire.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/playwire.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
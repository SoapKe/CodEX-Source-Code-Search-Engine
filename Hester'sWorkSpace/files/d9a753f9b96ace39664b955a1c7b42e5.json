{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    extract_attributes,\n    smuggle_url,\n    update_url_query,\n)\n\n\nclass USANetworkIE(AdobePassIE):\n    _VALID_URL = r'https?://(?:www\\.)?usanetwork\\.com/(?:[^/]+/videos|movies)/(?P<id>[^/?\n    _TEST = {\n        'url': 'http://www.usanetwork.com/mrrobot/videos/hpe-cybersecurity',\n        'md5': '33c0d2ba381571b414024440d08d57fd',\n        'info_dict': {\n            'id': '3086229',\n            'ext': 'mp4',\n            'title': 'HPE Cybersecurity',\n            'description': 'The more we digitize our world, the more vulnerable we are.',\n            'upload_date': '20160818',\n            'timestamp': 1471535460,\n            'uploader': 'NBCU-USA',\n        },\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n\n        player_params = extract_attributes(self._search_regex(\n            r'(<div[^>]+data-usa-tve-player-container[^>]*>)', webpage, 'player params'))\n        video_id = player_params['data-mpx-guid']\n        title = player_params['data-episode-title']\n\n        account_pid, path = re.search(\n            r'data-src=\"(?:https?)?//player\\.theplatform\\.com/p/([^/]+)/.*?/(media/guid/\\d+/\\d+)',\n            webpage).groups()\n\n        query = {\n            'mbr': 'true',\n        }\n        if player_params.get('data-is-full-episode') == '1':\n            query['manifest'] = 'm3u'\n\n        if player_params.get('data-entitlement') == 'auth':\n            adobe_pass = {}\n            drupal_settings = self._search_regex(\n                r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n                webpage, 'drupal settings', fatal=False)\n            if drupal_settings:\n                drupal_settings = self._parse_json(drupal_settings, video_id, fatal=False)\n                if drupal_settings:\n                    adobe_pass = drupal_settings.get('adobePass', {})\n            resource = self._get_mvpd_resource(\n                adobe_pass.get('adobePassResourceId', 'usa'),\n                title, video_id, player_params.get('data-episode-rating', 'TV-14'))\n            query['auth'] = self._extract_mvpd_auth(\n                url, video_id, adobe_pass.get('adobePassRequestorId', 'usa'), resource)\n\n        info = self._search_json_ld(webpage, video_id, default={})\n        info.update({\n            '_type': 'url_transparent',\n            'url': smuggle_url(update_url_query(\n                'http://link.theplatform.com/s/%s/%s' % (account_pid, path),\n                query), {'force_smil_url': True}),\n            'id': video_id,\n            'title': title,\n            'series': player_params.get('data-show-title'),\n            'episode': title,\n            'ie_key': 'ThePlatform',\n        })\n        return info\n", "comments": "# coding: utf-8\n#]+)'\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    extract_attributes,\n    smuggle_url,\n    update_url_query,\n)\n\n\nclass USANetworkIE(AdobePassIE):\n    _VALID_URL = r'https?://(?:www\\.)?usanetwork\\.com/(?:[^/]+/videos|movies)/(?P<id>[^/?#]+)'\n    _TEST = {\n        'url': 'http://www.usanetwork.com/mrrobot/videos/hpe-cybersecurity',\n        'md5': '33c0d2ba381571b414024440d08d57fd',\n        'info_dict': {\n            'id': '3086229',\n            'ext': 'mp4',\n            'title': 'HPE Cybersecurity',\n            'description': 'The more we digitize our world, the more vulnerable we are.',\n            'upload_date': '20160818',\n            'timestamp': 1471535460,\n            'uploader': 'NBCU-USA',\n        },\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n\n        player_params = extract_attributes(self._search_regex(\n            r'(<div[^>]+data-usa-tve-player-container[^>]*>)', webpage, 'player params'))\n        video_id = player_params['data-mpx-guid']\n        title = player_params['data-episode-title']\n\n        account_pid, path = re.search(\n            r'data-src=\"(?:https?)?//player\\.theplatform\\.com/p/([^/]+)/.*?/(media/guid/\\d+/\\d+)',\n            webpage).groups()\n\n        query = {\n            'mbr': 'true',\n        }\n        if player_params.get('data-is-full-episode') == '1':\n            query['manifest'] = 'm3u'\n\n        if player_params.get('data-entitlement') == 'auth':\n            adobe_pass = {}\n            drupal_settings = self._search_regex(\n                r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n                webpage, 'drupal settings', fatal=False)\n            if drupal_settings:\n                drupal_settings = self._parse_json(drupal_settings, video_id, fatal=False)\n                if drupal_settings:\n                    adobe_pass = drupal_settings.get('adobePass', {})\n            resource = self._get_mvpd_resource(\n                adobe_pass.get('adobePassResourceId', 'usa'),\n                title, video_id, player_params.get('data-episode-rating', 'TV-14'))\n            query['auth'] = self._extract_mvpd_auth(\n                url, video_id, adobe_pass.get('adobePassRequestorId', 'usa'), resource)\n\n        info = self._search_json_ld(webpage, video_id, default={})\n        info.update({\n            '_type': 'url_transparent',\n            'url': smuggle_url(update_url_query(\n                'http://link.theplatform.com/s/%s/%s' % (account_pid, path),\n                query), {'force_smil_url': True}),\n            'id': video_id,\n            'title': title,\n            'series': player_params.get('data-show-title'),\n            'episode': title,\n            'ie_key': 'ThePlatform',\n        })\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "usanetwork.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/usanetwork.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
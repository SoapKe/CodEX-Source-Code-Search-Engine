{"author": "HelloZeroNet", "code": "import time\n\nfrom Plugin import PluginManager\nfrom Translate import translate\n\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n    def actionSiteMedia(self, path, **kwargs):\n        file_name = path.split(\"/\")[-1]\n        if not file_name:  \n            file_name = \"index.html\"\n        extension = file_name.split(\".\")[-1]\n        if translate.lang != \"en\" and extension in [\"js\", \"html\"]:\n            path_parts = self.parsePath(path)\n            kwargs[\"header_length\"] = False\n            file_generator = super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)\n            if \"next\" in dir(file_generator):  \n                site = self.server.sites.get(path_parts[\"address\"])\n                return self.actionPatchFile(site, path_parts[\"inner_path\"], file_generator)\n            else:\n                return file_generator\n\n        else:\n            return super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)\n\n    def actionUiMedia(self, path):\n        file_generator = super(UiRequestPlugin, self).actionUiMedia(path)\n        if translate.lang != \"en\" and path.endswith(\".js\"):\n            s = time.time()\n            data = \"\".join(list(file_generator))\n            data = translate.translateData(data)\n            self.log.debug(\"Patched %s (%s bytes) in %.3fs\" % (path, len(data), time.time() - s))\n            return iter([data])\n        else:\n            return file_generator\n\n    def actionPatchFile(self, site, inner_path, file_generator):\n        content_json = site.content_manager.contents[\"content.json\"]\n        lang_file = \"languages/%s.json\" % translate.lang\n        lang_file_exist = False\n        if site.settings.get(\"own\"):  # My site, check if the file is exist (allow to add new lang without signing)\n            if site.storage.isFile(lang_file):\n                lang_file_exist = True\n        else:  # Not my site the reference in content.json is enough (will wait for download later)\n            if lang_file in content_json.get(\"files\", {}):\n                lang_file_exist = True\n\n        if not lang_file_exist or inner_path not in content_json.get(\"translate\", []):\n            for part in file_generator:\n                if inner_path.endswith(\".html\"):\n                    yield part.replace(\"lang={lang}\", \"lang=\" + str(translate.lang))  \n                else:\n                    yield part\n        else:\n            s = time.time()\n            data = \"\".join(list(file_generator))\n\n            # if site.content_manager.contents[\"content.json\"][\"files\"].get(lang_file):\n            site.needFile(lang_file, priority=10)\n            if inner_path.endswith(\"js\"):\n                data = translate.translateData(data, site.storage.loadJson(lang_file), \"js\")\n            else:\n                data = translate.translateData(data, site.storage.loadJson(lang_file), \"html\")\n                data = data.replace(\"lang={lang}\", \"lang=\" + str(translate.lang))  \n\n            self.log.debug(\"Patched %s (%s bytes) in %.3fs\" % (inner_path, len(data), time.time() - s))\n            yield data\n", "comments": "  path ends      file found generator returned    my site  check file exist (allow add new lang without signing)    not site reference content json enough (will wait download later)    lang get parameter  js file avoid cache    site content manager contents  content json    files   get(lang file)     lang get parameter  js file avoid cache ", "content": "import time\n\nfrom Plugin import PluginManager\nfrom Translate import translate\n\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n    def actionSiteMedia(self, path, **kwargs):\n        file_name = path.split(\"/\")[-1]\n        if not file_name:  # Path ends with /\n            file_name = \"index.html\"\n        extension = file_name.split(\".\")[-1]\n        if translate.lang != \"en\" and extension in [\"js\", \"html\"]:\n            path_parts = self.parsePath(path)\n            kwargs[\"header_length\"] = False\n            file_generator = super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)\n            if \"next\" in dir(file_generator):  # File found and generator returned\n                site = self.server.sites.get(path_parts[\"address\"])\n                return self.actionPatchFile(site, path_parts[\"inner_path\"], file_generator)\n            else:\n                return file_generator\n\n        else:\n            return super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)\n\n    def actionUiMedia(self, path):\n        file_generator = super(UiRequestPlugin, self).actionUiMedia(path)\n        if translate.lang != \"en\" and path.endswith(\".js\"):\n            s = time.time()\n            data = \"\".join(list(file_generator))\n            data = translate.translateData(data)\n            self.log.debug(\"Patched %s (%s bytes) in %.3fs\" % (path, len(data), time.time() - s))\n            return iter([data])\n        else:\n            return file_generator\n\n    def actionPatchFile(self, site, inner_path, file_generator):\n        content_json = site.content_manager.contents[\"content.json\"]\n        lang_file = \"languages/%s.json\" % translate.lang\n        lang_file_exist = False\n        if site.settings.get(\"own\"):  # My site, check if the file is exist (allow to add new lang without signing)\n            if site.storage.isFile(lang_file):\n                lang_file_exist = True\n        else:  # Not my site the reference in content.json is enough (will wait for download later)\n            if lang_file in content_json.get(\"files\", {}):\n                lang_file_exist = True\n\n        if not lang_file_exist or inner_path not in content_json.get(\"translate\", []):\n            for part in file_generator:\n                if inner_path.endswith(\".html\"):\n                    yield part.replace(\"lang={lang}\", \"lang=\" + str(translate.lang))  # lang get parameter to .js file to avoid cache\n                else:\n                    yield part\n        else:\n            s = time.time()\n            data = \"\".join(list(file_generator))\n\n            # if site.content_manager.contents[\"content.json\"][\"files\"].get(lang_file):\n            site.needFile(lang_file, priority=10)\n            if inner_path.endswith(\"js\"):\n                data = translate.translateData(data, site.storage.loadJson(lang_file), \"js\")\n            else:\n                data = translate.translateData(data, site.storage.loadJson(lang_file), \"html\")\n                data = data.replace(\"lang={lang}\", \"lang=\" + str(translate.lang))  # lang get parameter to .js file to avoid cache\n\n            self.log.debug(\"Patched %s (%s bytes) in %.3fs\" % (inner_path, len(data), time.time() - s))\n            yield data\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "TranslateSitePlugin.py", "id": "1f70ca460eba68c8e9fab06dc8622769", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/plugins/TranslateSite/TranslateSitePlugin.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
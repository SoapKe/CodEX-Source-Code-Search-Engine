{"author": "aws", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import unittest, aws\n\n\nclass TestDescribeInstances(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-instances --region us-west-2'\n\n    def test_describe_instances_with_id(self):\n        command = self.prefix + ' --instance-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidInstanceID.Malformed', result.stderr)\n\n    def test_describe_instances_with_filter(self):\n        command = self.prefix + ' --filters Name=instance-id,Values='\n        command += 'malformed-id'\n        result = aws(command)\n        reservations = result.json[\"Reservations\"]\n        self.assertEqual(len(reservations), 0)\n\n\nclass TestDescribeSnapshots(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-snapshots --region us-west-2'\n\n    def test_describe_snapshot_with_snapshot_id(self):\n        command = self.prefix + ' --snapshot-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidParameterValue', result.stderr)\n\n    def test_describe_snapshots_with_filter(self):\n        command = self.prefix\n        command += ' --filters Name=snapshot-id,Values=malformed-id'\n        result = aws(command)\n        snapshots = result.json['Snapshots']\n        self.assertEqual(len(snapshots), 0)\n\n\nclass TestDescribeVolumes(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-volumes --region us-west-2'\n\n    def test_describe_volumes_with_volume_id(self):\n        command = self.prefix + ' --volume-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidParameterValue', result.stderr)\n\n    def test_describe_volumes_with_filter(self):\n        command = self.prefix\n        command += ' --filters Name=volume-id,Values=malformed-id'\n        result = aws(command)\n        volumes = result.json['Volumes']\n        self.assertEqual(len(volumes), 0)\n", "comments": "  copyright 2016 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license  ", "content": "# Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import unittest, aws\n\n\nclass TestDescribeInstances(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-instances --region us-west-2'\n\n    def test_describe_instances_with_id(self):\n        command = self.prefix + ' --instance-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidInstanceID.Malformed', result.stderr)\n\n    def test_describe_instances_with_filter(self):\n        command = self.prefix + ' --filters Name=instance-id,Values='\n        command += 'malformed-id'\n        result = aws(command)\n        reservations = result.json[\"Reservations\"]\n        self.assertEqual(len(reservations), 0)\n\n\nclass TestDescribeSnapshots(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-snapshots --region us-west-2'\n\n    def test_describe_snapshot_with_snapshot_id(self):\n        command = self.prefix + ' --snapshot-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidParameterValue', result.stderr)\n\n    def test_describe_snapshots_with_filter(self):\n        command = self.prefix\n        command += ' --filters Name=snapshot-id,Values=malformed-id'\n        result = aws(command)\n        snapshots = result.json['Snapshots']\n        self.assertEqual(len(snapshots), 0)\n\n\nclass TestDescribeVolumes(unittest.TestCase):\n    def setUp(self):\n        self.prefix = 'ec2 describe-volumes --region us-west-2'\n\n    def test_describe_volumes_with_volume_id(self):\n        command = self.prefix + ' --volume-ids malformed-id'\n        result = aws(command)\n        self.assertIn('InvalidParameterValue', result.stderr)\n\n    def test_describe_volumes_with_filter(self):\n        command = self.prefix\n        command += ' --filters Name=volume-id,Values=malformed-id'\n        result = aws(command)\n        volumes = result.json['Volumes']\n        self.assertEqual(len(volumes), 0)\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_ec2.py", "id": "6a7931067433afbd5d77746d43f51955", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/integration/test_ec2.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\n\n\nclass Expense(models.Model):\n    _inherit = \"hr.expense\"\n\n    sale_order_id = fields.Many2one('sale.order', string='Sale Order', readonly=True, states={'draft': [('readonly', False)], 'reported': [('readonly', False)]}, domain=[('state', '=', 'sale')])\n\n    @api.onchange('sale_order_id')\n    def _onchange_sale_order(self):\n        if self.sale_order_id:\n            self.analytic_account_id = self.sale_order_id.analytic_account_id\n\n    @api.multi\n    def action_move_create(self):\n        \n        for expense in self.filtered(lambda expense: expense.sale_order_id and not expense.analytic_account_id):\n            if not expense.sale_order_id.analytic_account_id:\n                expense.sale_order_id._create_analytic_account()\n            expense.write({\n                'analytic_account_id': expense.sale_order_id.analytic_account_id.id\n            })\n        return super(Expense, self).action_move_create()\n", "comments": "    when posting expense  so set  means want reinvoice  to              set analytic account expense  we choose one so              exist  generate  create aa even product expense policy             keep track analytic                     coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\n\n\nclass Expense(models.Model):\n    _inherit = \"hr.expense\"\n\n    sale_order_id = fields.Many2one('sale.order', string='Sale Order', readonly=True, states={'draft': [('readonly', False)], 'reported': [('readonly', False)]}, domain=[('state', '=', 'sale')])\n\n    @api.onchange('sale_order_id')\n    def _onchange_sale_order(self):\n        if self.sale_order_id:\n            self.analytic_account_id = self.sale_order_id.analytic_account_id\n\n    @api.multi\n    def action_move_create(self):\n        \"\"\" When posting expense, if a SO is set, this means you want to reinvoice. To do so, we\n            have to set an Analytic Account on the expense. We choose the one from the SO, and\n            if it does not exist, we generate it. Create AA even for product with no expense policy\n            to keep track of the analytic.\n        \"\"\"\n        for expense in self.filtered(lambda expense: expense.sale_order_id and not expense.analytic_account_id):\n            if not expense.sale_order_id.analytic_account_id:\n                expense.sale_order_id._create_analytic_account()\n            expense.write({\n                'analytic_account_id': expense.sale_order_id.analytic_account_id.id\n            })\n        return super(Expense, self).action_move_create()\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "hr_expense.py", "id": "d787f1fc3dad3a321f78627e05e793af", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/sale_expense/models/hr_expense.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
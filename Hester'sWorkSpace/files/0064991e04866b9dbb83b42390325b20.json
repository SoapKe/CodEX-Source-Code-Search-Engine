{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    unified_strdate,\n    str_to_int,\n)\n\n\nclass RadioJavanIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?radiojavan\\.com/videos/video/(?P<id>[^/]+)/?'\n    _TEST = {\n        'url': 'http://www.radiojavan.com/videos/video/chaartaar-ashoobam',\n        'md5': 'e85208ffa3ca8b83534fca9fe19af95b',\n        'info_dict': {\n            'id': 'chaartaar-ashoobam',\n            'ext': 'mp4',\n            'title': 'Chaartaar - Ashoobam',\n            'thumbnail': r're:^https?://.*\\.jpe?g$',\n            'upload_date': '20150215',\n            'view_count': int,\n            'like_count': int,\n            'dislike_count': int,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        formats = [{\n            'url': 'https://media.rdjavan.com/media/music_video/%s' % video_path,\n            'format_id': '%sp' % height,\n            'height': int(height),\n        } for height, video_path in re.findall(r\"RJ\\.video(\\d+)p\\s*=\\s*'/?([^']+)'\", webpage)]\n        self._sort_formats(formats)\n\n        title = self._og_search_title(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n\n        upload_date = unified_strdate(self._search_regex(\n            r'class=\"date_added\">Date added: ([^<]+)<',\n            webpage, 'upload date', fatal=False))\n\n        view_count = str_to_int(self._search_regex(\n            r'class=\"views\">Plays: ([\\d,]+)',\n            webpage, 'view count', fatal=False))\n        like_count = str_to_int(self._search_regex(\n            r'class=\"rating\">([\\d,]+) likes',\n            webpage, 'like count', fatal=False))\n        dislike_count = str_to_int(self._search_regex(\n            r'class=\"rating\">([\\d,]+) dislikes',\n            webpage, 'dislike count', fatal=False))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'view_count': view_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'formats': formats,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    unified_strdate,\n    str_to_int,\n)\n\n\nclass RadioJavanIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?radiojavan\\.com/videos/video/(?P<id>[^/]+)/?'\n    _TEST = {\n        'url': 'http://www.radiojavan.com/videos/video/chaartaar-ashoobam',\n        'md5': 'e85208ffa3ca8b83534fca9fe19af95b',\n        'info_dict': {\n            'id': 'chaartaar-ashoobam',\n            'ext': 'mp4',\n            'title': 'Chaartaar - Ashoobam',\n            'thumbnail': r're:^https?://.*\\.jpe?g$',\n            'upload_date': '20150215',\n            'view_count': int,\n            'like_count': int,\n            'dislike_count': int,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        formats = [{\n            'url': 'https://media.rdjavan.com/media/music_video/%s' % video_path,\n            'format_id': '%sp' % height,\n            'height': int(height),\n        } for height, video_path in re.findall(r\"RJ\\.video(\\d+)p\\s*=\\s*'/?([^']+)'\", webpage)]\n        self._sort_formats(formats)\n\n        title = self._og_search_title(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n\n        upload_date = unified_strdate(self._search_regex(\n            r'class=\"date_added\">Date added: ([^<]+)<',\n            webpage, 'upload date', fatal=False))\n\n        view_count = str_to_int(self._search_regex(\n            r'class=\"views\">Plays: ([\\d,]+)',\n            webpage, 'view count', fatal=False))\n        like_count = str_to_int(self._search_regex(\n            r'class=\"rating\">([\\d,]+) likes',\n            webpage, 'like count', fatal=False))\n        dislike_count = str_to_int(self._search_regex(\n            r'class=\"rating\">([\\d,]+) dislikes',\n            webpage, 'dislike count', fatal=False))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'view_count': view_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "radiojavan.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/radiojavan.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\nr\"\"\"Generates a bash script for downloading light curves.\n\nThe input to this script is a CSV file of Kepler targets, for example the DR24\nTCE table, which can be downloaded in CSV format from the NASA Exoplanet Archive\nat:\n\n  https://exoplanetarchive.ipac.caltech.edu/cgi-bin/TblView/nph-tblView?app=ExoTbls&config=q1_q17_dr24_tce\n\nExample usage:\n  python generate_download_script.py \\\n    --kepler_csv_file=dr24_tce.csv \\\n    --download_dir=${HOME}/astronet/kepler\n\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport argparse\nimport csv\nimport os\nimport sys\n\nparser = argparse.ArgumentParser()\n\nparser.add_argument(\n    \"--kepler_csv_file\",\n    type=str,\n    required=True,\n    help=\"CSV file containing Kepler targets to download. Must contain a \"\n    \"'kepid' column.\")\n\nparser.add_argument(\n    \"--download_dir\",\n    type=str,\n    required=True,\n    help=\"Directory into which the Kepler data will be downloaded.\")\n\nparser.add_argument(\n    \"--output_file\",\n    type=str,\n    default=\"get_kepler.sh\",\n    help=\"Filename of the output download script.\")\n\n_WGET_CMD = (\"wget -q -nH --cut-dirs=6 -r -l0 -c -N -np -erobots=off \"\n             \"-R 'index*' -A _llc.fits\")\n_BASE_URL = \"http://archive.stsci.edu/pub/kepler/lightcurves\"\n\n\ndef main(argv):\n  del argv   Unused.\n\n   Read Kepler targets.\n  kepids = set()\n  with open(FLAGS.kepler_csv_file) as f:\n    reader = csv.DictReader(row for row in f if not row.startswith(\"\"))\n    for row in reader:\n      kepids.add(row[\"kepid\"])\n\n  num_kepids = len(kepids)\n\n   Write wget commands to script file.\n  with open(FLAGS.output_file, \"w\") as f:\n    f.write(\"!/bin/sh\\n\")\n    f.write(\"echo 'Downloading {} Kepler targets to {}'\\n\".format(\n        num_kepids, FLAGS.download_dir))\n    for i, kepid in enumerate(kepids):\n      if i and not i % 10:\n        f.write(\"echo 'Downloaded {}/{}'\\n\".format(i, num_kepids))\n      kepid = \"{0:09d}\".format(int(kepid))   Pad with zeros.\n      subdir = \"{}/{}\".format(kepid[0:4], kepid)\n      download_dir = os.path.join(FLAGS.download_dir, subdir)\n      url = \"{}/{}/\".format(_BASE_URL, subdir)\n      f.write(\"{} -P {} {}\\n\".format(_WGET_CMD, download_dir, url))\n\n    f.write(\"echo 'Finished downloading {} Kepler targets to {}'\\n\".format(\n        num_kepids, FLAGS.download_dir))\n\n  os.chmod(FLAGS.output_file, 0o744)   Make the download script executable.\n  print(\"{} Kepler targets will be downloaded to {}\".format(\n      num_kepids, FLAGS.output_file))\n  print(\"To start download, run:\\n  {}\".format(\"./\" + FLAGS.output_file\n                                               if \"/\" not in FLAGS.output_file\n                                               else FLAGS.output_file))\n\n\nif __name__ == \"__main__\":\n  FLAGS, unparsed = parser.parse_known_args()\n  main(argv=[sys.argv[0]] + unparsed)\n", "comments": "   generates bash script downloading light curves   the input script csv file kepler targets  example dr24 tce table  downloaded csv format nasa exoplanet archive     https   exoplanetarchive ipac caltech edu cgi bin tblview nph tblview app exotbls config q1 q17 dr24 tce  example usage    python generate download script py         kepler csv file dr24 tce csv         download dir   home  astronet kepler        copyright 2018 the tensorflow authors        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license           http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license     unused     read kepler targets     write wget commands script file     pad zeros     make download script executable  ", "content": "# Copyright 2018 The TensorFlow Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nr\"\"\"Generates a bash script for downloading light curves.\n\nThe input to this script is a CSV file of Kepler targets, for example the DR24\nTCE table, which can be downloaded in CSV format from the NASA Exoplanet Archive\nat:\n\n  https://exoplanetarchive.ipac.caltech.edu/cgi-bin/TblView/nph-tblView?app=ExoTbls&config=q1_q17_dr24_tce\n\nExample usage:\n  python generate_download_script.py \\\n    --kepler_csv_file=dr24_tce.csv \\\n    --download_dir=${HOME}/astronet/kepler\n\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport argparse\nimport csv\nimport os\nimport sys\n\nparser = argparse.ArgumentParser()\n\nparser.add_argument(\n    \"--kepler_csv_file\",\n    type=str,\n    required=True,\n    help=\"CSV file containing Kepler targets to download. Must contain a \"\n    \"'kepid' column.\")\n\nparser.add_argument(\n    \"--download_dir\",\n    type=str,\n    required=True,\n    help=\"Directory into which the Kepler data will be downloaded.\")\n\nparser.add_argument(\n    \"--output_file\",\n    type=str,\n    default=\"get_kepler.sh\",\n    help=\"Filename of the output download script.\")\n\n_WGET_CMD = (\"wget -q -nH --cut-dirs=6 -r -l0 -c -N -np -erobots=off \"\n             \"-R 'index*' -A _llc.fits\")\n_BASE_URL = \"http://archive.stsci.edu/pub/kepler/lightcurves\"\n\n\ndef main(argv):\n  del argv  # Unused.\n\n  # Read Kepler targets.\n  kepids = set()\n  with open(FLAGS.kepler_csv_file) as f:\n    reader = csv.DictReader(row for row in f if not row.startswith(\"#\"))\n    for row in reader:\n      kepids.add(row[\"kepid\"])\n\n  num_kepids = len(kepids)\n\n  # Write wget commands to script file.\n  with open(FLAGS.output_file, \"w\") as f:\n    f.write(\"#!/bin/sh\\n\")\n    f.write(\"echo 'Downloading {} Kepler targets to {}'\\n\".format(\n        num_kepids, FLAGS.download_dir))\n    for i, kepid in enumerate(kepids):\n      if i and not i % 10:\n        f.write(\"echo 'Downloaded {}/{}'\\n\".format(i, num_kepids))\n      kepid = \"{0:09d}\".format(int(kepid))  # Pad with zeros.\n      subdir = \"{}/{}\".format(kepid[0:4], kepid)\n      download_dir = os.path.join(FLAGS.download_dir, subdir)\n      url = \"{}/{}/\".format(_BASE_URL, subdir)\n      f.write(\"{} -P {} {}\\n\".format(_WGET_CMD, download_dir, url))\n\n    f.write(\"echo 'Finished downloading {} Kepler targets to {}'\\n\".format(\n        num_kepids, FLAGS.download_dir))\n\n  os.chmod(FLAGS.output_file, 0o744)  # Make the download script executable.\n  print(\"{} Kepler targets will be downloaded to {}\".format(\n      num_kepids, FLAGS.output_file))\n  print(\"To start download, run:\\n  {}\".format(\"./\" + FLAGS.output_file\n                                               if \"/\" not in FLAGS.output_file\n                                               else FLAGS.output_file))\n\n\nif __name__ == \"__main__\":\n  FLAGS, unparsed = parser.parse_known_args()\n  main(argv=[sys.argv[0]] + unparsed)\n", "description": "Models and examples built with TensorFlow", "file_name": "generate_download_script.py", "id": "e2171e396ab0507e61c5256ffef23fa9", "language": "Python", "project_name": "models", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tensorflow-models/tensorflow-models-7e4c66b/research/astronet/astronet/data/generate_download_script.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:59:36Z", "url": "https://github.com/tensorflow/models", "wiki": true}
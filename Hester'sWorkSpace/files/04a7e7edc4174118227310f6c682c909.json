{"author": "django", "code": "from django.core.exceptions import FieldError\nfrom django.test import TestCase\n\nfrom .models import Choice, Poll, User\n\n\nclass ReverseLookupTests(TestCase):\n\n    def setUp(self):\n        john = User.objects.create(name=\"John Doe\")\n        jim = User.objects.create(name=\"Jim Bo\")\n        first_poll = Poll.objects.create(\n            question=\"What's the first question?\",\n            creator=john\n        )\n        second_poll = Poll.objects.create(\n            question=\"What's the second question?\",\n            creator=jim\n        )\n        Choice.objects.create(\n            poll=first_poll,\n            related_poll=second_poll,\n            name=\"This is the answer.\"\n        )\n\n    def test_reverse_by_field(self):\n        u1 = User.objects.get(\n            poll__question__exact=\"What's the first question?\"\n        )\n        self.assertEqual(u1.name, \"John Doe\")\n\n        u2 = User.objects.get(\n            poll__question__exact=\"What's the second question?\"\n        )\n        self.assertEqual(u2.name, \"Jim Bo\")\n\n    def test_reverse_by_related_name(self):\n        p1 = Poll.objects.get(poll_choice__name__exact=\"This is the answer.\")\n        self.assertEqual(p1.question, \"What's the first question?\")\n\n        p2 = Poll.objects.get(\n            related_choice__name__exact=\"This is the answer.\")\n        self.assertEqual(p2.question, \"What's the second question?\")\n\n    def test_reverse_field_name_disallowed(self):\n        \n        msg = (\n            \"Cannot resolve keyword 'choice' into field. Choices are: \"\n            \"creator, creator_id, id, poll_choice, question, related_choice\"\n        )\n        with self.assertRaisesMessage(FieldError, msg):\n            Poll.objects.get(choice__name__exact=\"This is the answer\")\n", "comments": "            if related name given use field name instead             ", "content": "from django.core.exceptions import FieldError\nfrom django.test import TestCase\n\nfrom .models import Choice, Poll, User\n\n\nclass ReverseLookupTests(TestCase):\n\n    def setUp(self):\n        john = User.objects.create(name=\"John Doe\")\n        jim = User.objects.create(name=\"Jim Bo\")\n        first_poll = Poll.objects.create(\n            question=\"What's the first question?\",\n            creator=john\n        )\n        second_poll = Poll.objects.create(\n            question=\"What's the second question?\",\n            creator=jim\n        )\n        Choice.objects.create(\n            poll=first_poll,\n            related_poll=second_poll,\n            name=\"This is the answer.\"\n        )\n\n    def test_reverse_by_field(self):\n        u1 = User.objects.get(\n            poll__question__exact=\"What's the first question?\"\n        )\n        self.assertEqual(u1.name, \"John Doe\")\n\n        u2 = User.objects.get(\n            poll__question__exact=\"What's the second question?\"\n        )\n        self.assertEqual(u2.name, \"Jim Bo\")\n\n    def test_reverse_by_related_name(self):\n        p1 = Poll.objects.get(poll_choice__name__exact=\"This is the answer.\")\n        self.assertEqual(p1.question, \"What's the first question?\")\n\n        p2 = Poll.objects.get(\n            related_choice__name__exact=\"This is the answer.\")\n        self.assertEqual(p2.question, \"What's the second question?\")\n\n    def test_reverse_field_name_disallowed(self):\n        \"\"\"\n        If a related_name is given you can't use the field name instead\n        \"\"\"\n        msg = (\n            \"Cannot resolve keyword 'choice' into field. Choices are: \"\n            \"creator, creator_id, id, poll_choice, question, related_choice\"\n        )\n        with self.assertRaisesMessage(FieldError, msg):\n            Poll.objects.get(choice__name__exact=\"This is the answer\")\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "tests.py", "id": "04a7e7edc4174118227310f6c682c909", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/reverse_lookup/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
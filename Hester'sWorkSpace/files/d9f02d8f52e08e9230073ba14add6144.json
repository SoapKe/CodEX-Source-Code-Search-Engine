{"author": "ansible", "code": " (c) 2012-2014, Michael DeHaan <michael.dehaan@gmail.com>\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\n__all__ = [\n    'YAML_SYNTAX_ERROR',\n    'YAML_POSITION_DETAILS',\n    'YAML_COMMON_DICT_ERROR',\n    'YAML_COMMON_UNQUOTED_VARIABLE_ERROR',\n    'YAML_COMMON_UNQUOTED_COLON_ERROR',\n    'YAML_COMMON_PARTIALLY_QUOTED_LINE_ERROR',\n    'YAML_COMMON_UNBALANCED_QUOTES_ERROR',\n]\n\nYAML_SYNTAX_ERROR = \"\"\"\\\nSyntax Error while loading YAML.\n  %s\"\"\"\n\nYAML_POSITION_DETAILS = \"\"\"\\\nThe error appears to have been in '%s': line %s, column %s, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\"\"\"\n\nYAML_COMMON_DICT_ERROR = \"\"\"\\\nThis one looks easy to fix.  YAML thought it was looking for the start of a\nhash/dictionary and was confused to see a second \"{\".  Most likely this was\nmeant to be an ansible template evaluation instead, so we have to give the\nparser a small hint that we wanted a string instead. The solution here is to\njust quote the entire value.\n\nFor instance, if the original line was:\n\n    app_path: {{ base_path }}/foo\n\nIt should be written as:\n\n    app_path: \"{{ base_path }}/foo\"\n\"\"\"\n\nYAML_COMMON_UNQUOTED_VARIABLE_ERROR = \"\"\"\\\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n\"\"\"\n\nYAML_COMMON_UNQUOTED_COLON_ERROR = \"\"\"\\\nThis one looks easy to fix.  There seems to be an extra unquoted colon in the line\nand this is confusing the parser. It was only expecting to find one free\ncolon. The solution is just add some quotes around the colon, or quote the\nentire line after the first colon.\n\nFor instance, if the original line was:\n\n    copy: src=file.txt dest=/path/filename:with_colon.txt\n\nIt can be written as:\n\n    copy: src=file.txt dest='/path/filename:with_colon.txt'\n\nOr:\n\n    copy: 'src=file.txt dest=/path/filename:with_colon.txt'\n\"\"\"\n\nYAML_COMMON_PARTIALLY_QUOTED_LINE_ERROR = \"\"\"\\\nThis one looks easy to fix.  It seems that there is a value started\nwith a quote, and the YAML parser is expecting to see the line ended\nwith the same kind of quote.  For instance:\n\n    when: \"ok\" in result.stdout\n\nCould be written as:\n\n   when: '\"ok\" in result.stdout'\n\nOr equivalently:\n\n   when: \"'ok' in result.stdout\"\n\"\"\"\n\nYAML_COMMON_UNBALANCED_QUOTES_ERROR = \"\"\"\\\nWe could be wrong, but this one looks like it might be an issue with\nunbalanced quotes.  If starting a value with a quote, make sure the\nline ends with the same set of quotes.  For instance this arbitrary\nexample:\n\n    foo: \"bad\" \"wolf\"\n\nCould be written as:\n\n    foo: '\"bad\" \"wolf\"'\n\"\"\"\n\nYAML_COMMON_LEADING_TAB_ERROR = \"\"\"\\\nThere appears to be a tab character at the start of the line.\n\nYAML does not use tabs for formatting. Tabs should be replaced with spaces.\n\nFor example:\n    - name: update tooling\n      vars:\n        version: 1.2.3\n    ^--- there is a tab there.\n\nShould be written as:\n    - name: update tooling\n      vars:\n        version: 1.2.3\n ^--- all spaces here.\n\"\"\"\n", "comments": "     syntax error loading yaml         yaml position details        the error appears     line   column   may elsewhere file depending exact syntax problem       yaml common dict error        this one looks easy fix   yaml thought looking start hash dictionary confused see second       most likely meant ansible template evaluation instead  give parser small hint wanted string instead  the solution quote entire value   for instance  original line       app path     base path    foo  it written       app path      base path    foo       yaml common unquoted variable error        we could wrong  one looks like might issue missing quotes   always quote template expression brackets start value  for instance       items             foo     should written       items              foo          yaml common unquoted colon error        this one looks easy fix   there seems extra unquoted colon line confusing parser  it expecting find one free colon  the solution add quotes around colon  quote entire line first colon   for instance  original line       copy  src file txt dest  path filename colon txt  it written       copy  src file txt dest   path filename colon txt   or       copy   src file txt dest  path filename colon txt       yaml common partially quoted line error        this one looks easy fix   it seems value started quote  yaml parser expecting see line ended kind quote   for instance         ok  result stdout  could written         ok  result stdout   or equivalently         ok  result stdout       yaml common unbalanced quotes error        we could wrong  one looks like might issue unbalanced quotes   if starting value quote  make sure line ends set quotes   for instance arbitrary example       foo   bad   wolf   could written       foo    bad   wolf        yaml common leading tab error        there appears tab character start line   yaml use tabs formatting  tabs replaced spaces   for example        name  update tooling       vars          version  1 2 3           tab   should written        name  update tooling       vars          version  1 2 3        spaces         (c) 2012 2014  michael dehaan  michael dehaan gmail com        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish            tab          spaces  ", "content": "# (c) 2012-2014, Michael DeHaan <michael.dehaan@gmail.com>\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\n__all__ = [\n    'YAML_SYNTAX_ERROR',\n    'YAML_POSITION_DETAILS',\n    'YAML_COMMON_DICT_ERROR',\n    'YAML_COMMON_UNQUOTED_VARIABLE_ERROR',\n    'YAML_COMMON_UNQUOTED_COLON_ERROR',\n    'YAML_COMMON_PARTIALLY_QUOTED_LINE_ERROR',\n    'YAML_COMMON_UNBALANCED_QUOTES_ERROR',\n]\n\nYAML_SYNTAX_ERROR = \"\"\"\\\nSyntax Error while loading YAML.\n  %s\"\"\"\n\nYAML_POSITION_DETAILS = \"\"\"\\\nThe error appears to have been in '%s': line %s, column %s, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\"\"\"\n\nYAML_COMMON_DICT_ERROR = \"\"\"\\\nThis one looks easy to fix.  YAML thought it was looking for the start of a\nhash/dictionary and was confused to see a second \"{\".  Most likely this was\nmeant to be an ansible template evaluation instead, so we have to give the\nparser a small hint that we wanted a string instead. The solution here is to\njust quote the entire value.\n\nFor instance, if the original line was:\n\n    app_path: {{ base_path }}/foo\n\nIt should be written as:\n\n    app_path: \"{{ base_path }}/foo\"\n\"\"\"\n\nYAML_COMMON_UNQUOTED_VARIABLE_ERROR = \"\"\"\\\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n\"\"\"\n\nYAML_COMMON_UNQUOTED_COLON_ERROR = \"\"\"\\\nThis one looks easy to fix.  There seems to be an extra unquoted colon in the line\nand this is confusing the parser. It was only expecting to find one free\ncolon. The solution is just add some quotes around the colon, or quote the\nentire line after the first colon.\n\nFor instance, if the original line was:\n\n    copy: src=file.txt dest=/path/filename:with_colon.txt\n\nIt can be written as:\n\n    copy: src=file.txt dest='/path/filename:with_colon.txt'\n\nOr:\n\n    copy: 'src=file.txt dest=/path/filename:with_colon.txt'\n\"\"\"\n\nYAML_COMMON_PARTIALLY_QUOTED_LINE_ERROR = \"\"\"\\\nThis one looks easy to fix.  It seems that there is a value started\nwith a quote, and the YAML parser is expecting to see the line ended\nwith the same kind of quote.  For instance:\n\n    when: \"ok\" in result.stdout\n\nCould be written as:\n\n   when: '\"ok\" in result.stdout'\n\nOr equivalently:\n\n   when: \"'ok' in result.stdout\"\n\"\"\"\n\nYAML_COMMON_UNBALANCED_QUOTES_ERROR = \"\"\"\\\nWe could be wrong, but this one looks like it might be an issue with\nunbalanced quotes.  If starting a value with a quote, make sure the\nline ends with the same set of quotes.  For instance this arbitrary\nexample:\n\n    foo: \"bad\" \"wolf\"\n\nCould be written as:\n\n    foo: '\"bad\" \"wolf\"'\n\"\"\"\n\nYAML_COMMON_LEADING_TAB_ERROR = \"\"\"\\\nThere appears to be a tab character at the start of the line.\n\nYAML does not use tabs for formatting. Tabs should be replaced with spaces.\n\nFor example:\n    - name: update tooling\n      vars:\n        version: 1.2.3\n#    ^--- there is a tab there.\n\nShould be written as:\n    - name: update tooling\n      vars:\n        version: 1.2.3\n# ^--- all spaces here.\n\"\"\"\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "yaml_strings.py", "id": "d9f02d8f52e08e9230073ba14add6144", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/errors/yaml_strings.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
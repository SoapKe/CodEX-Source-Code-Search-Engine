{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.git_not_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef git_not_command():\n    return \n\n\n@pytest.fixture\ndef git_not_command_closest():\n    return \n\n\n@pytest.fixture\ndef git_command():\n    return \"* master\"\n\n\ndef test_match(git_not_command, git_command, git_not_command_one_of_this):\n    assert match(Command('git brnch', git_not_command))\n    assert match(Command('git st', git_not_command_one_of_this))\n    assert not match(Command('ls brnch', git_not_command))\n    assert not match(Command('git branch', git_command))\n\n\ndef test_get_new_command(git_not_command, git_not_command_one_of_this,\n                         git_not_command_closest):\n    assert (get_new_command(Command('git brnch', git_not_command))\n            == ['git branch'])\n    assert (get_new_command(Command('git st', git_not_command_one_of_this))\n            == ['git stats', 'git stash', 'git stage'])\n    assert (get_new_command(Command('git tags', git_not_command_closest))\n            == ['git tag', 'git stage'])\n", "comments": "git: 'brnch' is not a git command. See 'git --help'.\n\nThe most similar command is\nbranch\n\"\"\"\n\n\n@pytest.fixture\ndef git_not_command_one_of_this():\n    return \"\"\"git: 'st' is not a git command. See 'git --help'.\n\nThe most similar commands are\nstatus\nreset\nstage\nstash\nstats\n\n\n\ngit: 'tags' is not a git command. See 'git --help'.\n\nThe most similar commands are\n\\tstage\n\\ttag\n\n\n\n", "content": "import pytest\nfrom thefuck.rules.git_not_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef git_not_command():\n    return \"\"\"git: 'brnch' is not a git command. See 'git --help'.\n\nThe most similar command is\nbranch\n\"\"\"\n\n\n@pytest.fixture\ndef git_not_command_one_of_this():\n    return \"\"\"git: 'st' is not a git command. See 'git --help'.\n\nThe most similar commands are\nstatus\nreset\nstage\nstash\nstats\n\"\"\"\n\n\n@pytest.fixture\ndef git_not_command_closest():\n    return '''git: 'tags' is not a git command. See 'git --help'.\n\nThe most similar commands are\n\\tstage\n\\ttag\n'''\n\n\n@pytest.fixture\ndef git_command():\n    return \"* master\"\n\n\ndef test_match(git_not_command, git_command, git_not_command_one_of_this):\n    assert match(Command('git brnch', git_not_command))\n    assert match(Command('git st', git_not_command_one_of_this))\n    assert not match(Command('ls brnch', git_not_command))\n    assert not match(Command('git branch', git_command))\n\n\ndef test_get_new_command(git_not_command, git_not_command_one_of_this,\n                         git_not_command_closest):\n    assert (get_new_command(Command('git brnch', git_not_command))\n            == ['git branch'])\n    assert (get_new_command(Command('git st', git_not_command_one_of_this))\n            == ['git stats', 'git stash', 'git stage'])\n    assert (get_new_command(Command('git tags', git_not_command_closest))\n            == ['git tag', 'git stage'])\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_git_not_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_git_not_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
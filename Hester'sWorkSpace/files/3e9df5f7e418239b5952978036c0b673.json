{"author": "nvbn", "code": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import memoize, which\nfrom thefuck.shells import shell\n\nenabled_by_default = bool(which('lsof'))\n\npatterns = [r\"bind on address \\('.*', (?P<port>\\d+)\\)\",\n            r'Unable to bind [^ ]*:(?P<port>\\d+)',\n            r\"can't listen on port (?P<port>\\d+)\",\n            r'listen EADDRINUSE [^ ]*:(?P<port>\\d+)']\n\n\n@memoize\ndef _get_pid_by_port(port):\n    proc = Popen(['lsof', '-i', ':{}'.format(port)], stdout=PIPE)\n    lines = proc.stdout.read().decode().split('\\n')\n    if len(lines) > 1:\n        return lines[1].split()[1]\n    else:\n        return None\n\n\n@memoize\ndef _get_used_port(command):\n    for pattern in patterns:\n        matched = re.search(pattern, command.output)\n        if matched:\n            return matched.group('port')\n\n\ndef match(command):\n    port = _get_used_port(command)\n    return port and _get_pid_by_port(port)\n\n\ndef get_new_command(command):\n    port = _get_used_port(command)\n    pid = _get_pid_by_port(port)\n    return shell.and_(u'kill {}'.format(pid), command.script)\n", "comments": "", "content": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import memoize, which\nfrom thefuck.shells import shell\n\nenabled_by_default = bool(which('lsof'))\n\npatterns = [r\"bind on address \\('.*', (?P<port>\\d+)\\)\",\n            r'Unable to bind [^ ]*:(?P<port>\\d+)',\n            r\"can't listen on port (?P<port>\\d+)\",\n            r'listen EADDRINUSE [^ ]*:(?P<port>\\d+)']\n\n\n@memoize\ndef _get_pid_by_port(port):\n    proc = Popen(['lsof', '-i', ':{}'.format(port)], stdout=PIPE)\n    lines = proc.stdout.read().decode().split('\\n')\n    if len(lines) > 1:\n        return lines[1].split()[1]\n    else:\n        return None\n\n\n@memoize\ndef _get_used_port(command):\n    for pattern in patterns:\n        matched = re.search(pattern, command.output)\n        if matched:\n            return matched.group('port')\n\n\ndef match(command):\n    port = _get_used_port(command)\n    return port and _get_pid_by_port(port)\n\n\ndef get_new_command(command):\n    port = _get_used_port(command)\n    pid = _get_pid_by_port(port)\n    return shell.and_(u'kill {}'.format(pid), command.script)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "port_already_in_use.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/port_already_in_use.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
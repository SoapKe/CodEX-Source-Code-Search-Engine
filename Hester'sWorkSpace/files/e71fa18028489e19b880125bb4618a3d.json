{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\n\n\nclass ProductTemplate(models.Model):\n    _inherit = ['product.template']\n\n    attachment_count = fields.Integer(compute='_compute_attachment_count', string=\"File\")\n\n    @api.multi\n    def _compute_attachment_count(self):\n        attachment_data = self.env['ir.attachment'].read_group([('res_model', '=', self._name), ('res_id', 'in', self.ids), ('product_downloadable', '=', True)], ['res_id'], ['res_id'])\n        mapped_data = dict([(data['res_id'], data['res_id_count']) for data in attachment_data])\n        for product_template in self:\n            product_template.attachment_count = mapped_data.get(product_template.id, 0)\n\n    @api.multi\n    def action_open_attachments(self):\n        self.ensure_one()\n        return {\n            'name': _('Digital Attachments'),\n            'domain': [('res_model', '=', self._name), ('res_id', '=', self.id), ('product_downloadable', '=', True)],\n            'res_model': 'ir.attachment',\n            'type': 'ir.actions.act_window',\n            'view_mode': 'kanban,form',\n            'view_type': 'form',\n            'context': \"{'default_res_model': '%s','default_res_id': %d, 'default_product_downloadable': True}\" % (self._name, self.id),\n            'help': \"\"\"\n                <p class=\"oe_view_nocontent_create\">Click on create to add attachments for this digital product.</p>\n                <p>The attached files are the ones that will be purchased and sent to the customer.</p>\n                \"\"\",\n        }\n\n\nclass Product(models.Model):\n    _inherit = 'product.product'\n\n    attachment_count = fields.Integer(compute='_compute_attachment_count', string=\"File\")\n\n    @api.multi\n    def _compute_attachment_count(self):\n        IrAttachment = self.env['ir.attachment']\n        for product in self:\n            prod_tmpl_attach_count = IrAttachment.search_count([('res_model', '=', 'product.template'), ('res_id', 'in', product.product_tmpl_id.ids), ('product_downloadable', '=', True)])\n            prod_attach_count = IrAttachment.search_count([('res_model', '=', 'product.product'), ('res_id', 'in', product.ids), ('product_downloadable', '=', True)])\n            product.attachment_count = prod_tmpl_attach_count + prod_attach_count\n\n    @api.multi\n    def action_open_attachments(self):\n        self.ensure_one()\n        return {\n            'name': _('Digital Attachments'),\n            'domain': [('product_downloadable', '=', True), '|',\n                       '&', ('res_model', '=', 'product.template'), ('res_id', '=', self.product_tmpl_id.id),\n                       '&', ('res_model', '=', self._name), ('res_id', '=', self.id)],\n            'res_model': 'ir.attachment',\n            'type': 'ir.actions.act_window',\n            'view_mode': 'kanban,form',\n            'view_type': 'form',\n            'context': \"{'default_res_model': '%s','default_res_id': %d, 'default_product_downloadable': True}\" % (self._name, self.id),\n            'help': \"\"\"\n                <p class=\"oe_view_nocontent_create\">Click on create to add attachments for this digital product.</p>\n                <p>The attached files are the ones that will be purchased and sent to the customer.</p>\n                \"\"\",\n        }\n", "comments": "                     p class  oe view nocontent create  click create add attachments digital product   p                   p the attached files ones purchased sent customer   p                                   class product(models model)       inherit    product product       attachment count   fields integer(compute   compute attachment count   string  file )       api multi     def  compute attachment count(self)          irattachment   self env  ir attachment           product self              prod tmpl attach count   irattachment search count( ( res model         product template )  ( res id      product product tmpl id ids)  ( product downloadable        true) )             prod attach count   irattachment search count( ( res model         product product )  ( res id      product ids)  ( product downloadable        true) )             product attachment count   prod tmpl attach count   prod attach count       api multi     def action open attachments(self)          self ensure one()         return                name    ( digital attachments )               domain    ( product downloadable        true)                                   ( res model         product template )  ( res id        self product tmpl id id)                              ( res model        self  name)  ( res id        self id)                res model    ir attachment                type    ir actions act window                view mode    kanban form                view type    form                context      default res model       default res id      default product downloadable   true     (self  name  self id)               help                        p class  oe view nocontent create  click create add attachments digital product   p                   p the attached files ones purchased sent customer   p                             coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\n\n\nclass ProductTemplate(models.Model):\n    _inherit = ['product.template']\n\n    attachment_count = fields.Integer(compute='_compute_attachment_count', string=\"File\")\n\n    @api.multi\n    def _compute_attachment_count(self):\n        attachment_data = self.env['ir.attachment'].read_group([('res_model', '=', self._name), ('res_id', 'in', self.ids), ('product_downloadable', '=', True)], ['res_id'], ['res_id'])\n        mapped_data = dict([(data['res_id'], data['res_id_count']) for data in attachment_data])\n        for product_template in self:\n            product_template.attachment_count = mapped_data.get(product_template.id, 0)\n\n    @api.multi\n    def action_open_attachments(self):\n        self.ensure_one()\n        return {\n            'name': _('Digital Attachments'),\n            'domain': [('res_model', '=', self._name), ('res_id', '=', self.id), ('product_downloadable', '=', True)],\n            'res_model': 'ir.attachment',\n            'type': 'ir.actions.act_window',\n            'view_mode': 'kanban,form',\n            'view_type': 'form',\n            'context': \"{'default_res_model': '%s','default_res_id': %d, 'default_product_downloadable': True}\" % (self._name, self.id),\n            'help': \"\"\"\n                <p class=\"oe_view_nocontent_create\">Click on create to add attachments for this digital product.</p>\n                <p>The attached files are the ones that will be purchased and sent to the customer.</p>\n                \"\"\",\n        }\n\n\nclass Product(models.Model):\n    _inherit = 'product.product'\n\n    attachment_count = fields.Integer(compute='_compute_attachment_count', string=\"File\")\n\n    @api.multi\n    def _compute_attachment_count(self):\n        IrAttachment = self.env['ir.attachment']\n        for product in self:\n            prod_tmpl_attach_count = IrAttachment.search_count([('res_model', '=', 'product.template'), ('res_id', 'in', product.product_tmpl_id.ids), ('product_downloadable', '=', True)])\n            prod_attach_count = IrAttachment.search_count([('res_model', '=', 'product.product'), ('res_id', 'in', product.ids), ('product_downloadable', '=', True)])\n            product.attachment_count = prod_tmpl_attach_count + prod_attach_count\n\n    @api.multi\n    def action_open_attachments(self):\n        self.ensure_one()\n        return {\n            'name': _('Digital Attachments'),\n            'domain': [('product_downloadable', '=', True), '|',\n                       '&', ('res_model', '=', 'product.template'), ('res_id', '=', self.product_tmpl_id.id),\n                       '&', ('res_model', '=', self._name), ('res_id', '=', self.id)],\n            'res_model': 'ir.attachment',\n            'type': 'ir.actions.act_window',\n            'view_mode': 'kanban,form',\n            'view_type': 'form',\n            'context': \"{'default_res_model': '%s','default_res_id': %d, 'default_product_downloadable': True}\" % (self._name, self.id),\n            'help': \"\"\"\n                <p class=\"oe_view_nocontent_create\">Click on create to add attachments for this digital product.</p>\n                <p>The attached files are the ones that will be purchased and sent to the customer.</p>\n                \"\"\",\n        }\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "product.py", "id": "e71fa18028489e19b880125bb4618a3d", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_sale_digital/models/product.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\n\nimport os\nimport sys\nimport unittest\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom test.helper import try_rm\n\n\nfrom youtube_dl import YoutubeDL\n\n\ndef _download_restricted(url, filename, age):\n    \n\n    params = {\n        'age_limit': age,\n        'skip_download': True,\n        'writeinfojson': True,\n        'outtmpl': '%(id)s.%(ext)s',\n    }\n    ydl = YoutubeDL(params)\n    ydl.add_default_info_extractors()\n    json_filename = os.path.splitext(filename)[0] + '.info.json'\n    try_rm(json_filename)\n    ydl.download([url])\n    res = os.path.exists(json_filename)\n    try_rm(json_filename)\n    return res\n\n\nclass TestAgeRestriction(unittest.TestCase):\n    def _assert_restricted(self, url, filename, age, old_age=None):\n        self.assertTrue(_download_restricted(url, filename, old_age))\n        self.assertFalse(_download_restricted(url, filename, age))\n\n    def test_youtube(self):\n        self._assert_restricted('07FYdnEawAQ', '07FYdnEawAQ.mp4', 10)\n\n    def test_youporn(self):\n        self._assert_restricted(\n            'http://www.youporn.com/watch/505835/sex-ed-is-it-safe-to-masturbate-daily/',\n            '505835.mp4', 2, old_age=25)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "comments": " Returns true if the file has been downloaded \n \n#!/usr/bin/env python\n# Allow direct execution\n", "content": "#!/usr/bin/env python\nfrom __future__ import unicode_literals\n\n# Allow direct execution\nimport os\nimport sys\nimport unittest\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom test.helper import try_rm\n\n\nfrom youtube_dl import YoutubeDL\n\n\ndef _download_restricted(url, filename, age):\n    \"\"\" Returns true if the file has been downloaded \"\"\"\n\n    params = {\n        'age_limit': age,\n        'skip_download': True,\n        'writeinfojson': True,\n        'outtmpl': '%(id)s.%(ext)s',\n    }\n    ydl = YoutubeDL(params)\n    ydl.add_default_info_extractors()\n    json_filename = os.path.splitext(filename)[0] + '.info.json'\n    try_rm(json_filename)\n    ydl.download([url])\n    res = os.path.exists(json_filename)\n    try_rm(json_filename)\n    return res\n\n\nclass TestAgeRestriction(unittest.TestCase):\n    def _assert_restricted(self, url, filename, age, old_age=None):\n        self.assertTrue(_download_restricted(url, filename, old_age))\n        self.assertFalse(_download_restricted(url, filename, age))\n\n    def test_youtube(self):\n        self._assert_restricted('07FYdnEawAQ', '07FYdnEawAQ.mp4', 10)\n\n    def test_youporn(self):\n        self._assert_restricted(\n            'http://www.youporn.com/watch/505835/sex-ed-is-it-safe-to-masturbate-daily/',\n            '505835.mp4', 2, old_age=25)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "test_age_restriction.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/test/test_age_restriction.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
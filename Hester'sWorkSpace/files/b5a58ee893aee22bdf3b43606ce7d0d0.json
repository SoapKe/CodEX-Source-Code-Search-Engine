{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    urljoin,\n)\n\n\nclass MelonVODIE(InfoExtractor):\n    _VALID_URL = r'https?://vod\\.melon\\.com/video/detail2\\.html?\\?.*?mvId=(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://vod.melon.com/video/detail2.htm?mvId=50158734',\n        'info_dict': {\n            'id': '50158734',\n            'ext': 'mp4',\n            'title': \"Jessica 'Wonderland' MV Making Film\",\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'artist': 'Jessica (\uc81c\uc2dc\uce74)',\n            'upload_date': '20161212',\n            'duration': 203,\n        },\n        'params': {\n            'skip_download': 'm3u8 download',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        play_info = self._download_json(\n            'http://vod.melon.com/video/playerInfo.json', video_id,\n            note='Downloading player info JSON', query={'mvId': video_id})\n\n        title = play_info['mvInfo']['MVTITLE']\n\n        info = self._download_json(\n            'http://vod.melon.com/delivery/streamingInfo.json', video_id,\n            note='Downloading streaming info JSON',\n            query={\n                'contsId': video_id,\n                'contsType': 'VIDEO',\n            })\n\n        stream_info = info['streamingInfo']\n\n        formats = self._extract_m3u8_formats(\n            stream_info['encUrl'], video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        artist_list = play_info.get('artistList')\n        artist = None\n        if isinstance(artist_list, list):\n            artist = ', '.join(\n                [a['ARTISTNAMEWEBLIST']\n                 for a in artist_list if a.get('ARTISTNAMEWEBLIST')])\n\n        thumbnail = urljoin(info.get('staticDomain'), stream_info.get('imgPath'))\n\n        duration = int_or_none(stream_info.get('playTime'))\n        upload_date = stream_info.get('mvSvcOpenDt', '')[:8] or None\n\n        return {\n            'id': video_id,\n            'title': title,\n            'artist': artist,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'duration': duration,\n            'formats': formats\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    urljoin,\n)\n\n\nclass MelonVODIE(InfoExtractor):\n    _VALID_URL = r'https?://vod\\.melon\\.com/video/detail2\\.html?\\?.*?mvId=(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://vod.melon.com/video/detail2.htm?mvId=50158734',\n        'info_dict': {\n            'id': '50158734',\n            'ext': 'mp4',\n            'title': \"Jessica 'Wonderland' MV Making Film\",\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'artist': 'Jessica (\uc81c\uc2dc\uce74)',\n            'upload_date': '20161212',\n            'duration': 203,\n        },\n        'params': {\n            'skip_download': 'm3u8 download',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        play_info = self._download_json(\n            'http://vod.melon.com/video/playerInfo.json', video_id,\n            note='Downloading player info JSON', query={'mvId': video_id})\n\n        title = play_info['mvInfo']['MVTITLE']\n\n        info = self._download_json(\n            'http://vod.melon.com/delivery/streamingInfo.json', video_id,\n            note='Downloading streaming info JSON',\n            query={\n                'contsId': video_id,\n                'contsType': 'VIDEO',\n            })\n\n        stream_info = info['streamingInfo']\n\n        formats = self._extract_m3u8_formats(\n            stream_info['encUrl'], video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        artist_list = play_info.get('artistList')\n        artist = None\n        if isinstance(artist_list, list):\n            artist = ', '.join(\n                [a['ARTISTNAMEWEBLIST']\n                 for a in artist_list if a.get('ARTISTNAMEWEBLIST')])\n\n        thumbnail = urljoin(info.get('staticDomain'), stream_info.get('imgPath'))\n\n        duration = int_or_none(stream_info.get('playTime'))\n        upload_date = stream_info.get('mvSvcOpenDt', '')[:8] or None\n\n        return {\n            'id': video_id,\n            'title': title,\n            'artist': artist,\n            'thumbnail': thumbnail,\n            'upload_date': upload_date,\n            'duration': duration,\n            'formats': formats\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "melonvod.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/melonvod.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
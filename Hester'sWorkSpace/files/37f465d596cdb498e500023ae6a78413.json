{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass DefenseGouvFrIE(InfoExtractor):\n    IE_NAME = 'defense.gouv.fr'\n    _VALID_URL = r'https?://.*?\\.defense\\.gouv\\.fr/layout/set/ligthboxvideo/base-de-medias/webtv/(?P<id>[^/?\n\n    _TEST = {\n        'url': 'http://www.defense.gouv.fr/layout/set/ligthboxvideo/base-de-medias/webtv/attaque-chimique-syrienne-du-21-aout-2013-1',\n        'md5': '75bba6124da7e63d2d60b5244ec9430c',\n        'info_dict': {\n            'id': '11213',\n            'ext': 'mp4',\n            'title': 'attaque-chimique-syrienne-du-21-aout-2013-1'\n        }\n    }\n\n    def _real_extract(self, url):\n        title = self._match_id(url)\n        webpage = self._download_webpage(url, title)\n\n        video_id = self._search_regex(\n            r\"flashvars.pvg_id=\\\"(\\d+)\\\";\",\n            webpage, 'ID')\n\n        json_url = (\n            'http://static.videos.gouv.fr/brightcovehub/export/json/%s' %\n            video_id)\n        info = self._download_json(json_url, title, 'Downloading JSON config')\n        video_url = info['renditions'][0]['url']\n\n        return {\n            'id': video_id,\n            'ext': 'mp4',\n            'url': video_url,\n            'title': title,\n        }\n", "comments": "#]*)'\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass DefenseGouvFrIE(InfoExtractor):\n    IE_NAME = 'defense.gouv.fr'\n    _VALID_URL = r'https?://.*?\\.defense\\.gouv\\.fr/layout/set/ligthboxvideo/base-de-medias/webtv/(?P<id>[^/?#]*)'\n\n    _TEST = {\n        'url': 'http://www.defense.gouv.fr/layout/set/ligthboxvideo/base-de-medias/webtv/attaque-chimique-syrienne-du-21-aout-2013-1',\n        'md5': '75bba6124da7e63d2d60b5244ec9430c',\n        'info_dict': {\n            'id': '11213',\n            'ext': 'mp4',\n            'title': 'attaque-chimique-syrienne-du-21-aout-2013-1'\n        }\n    }\n\n    def _real_extract(self, url):\n        title = self._match_id(url)\n        webpage = self._download_webpage(url, title)\n\n        video_id = self._search_regex(\n            r\"flashvars.pvg_id=\\\"(\\d+)\\\";\",\n            webpage, 'ID')\n\n        json_url = (\n            'http://static.videos.gouv.fr/brightcovehub/export/json/%s' %\n            video_id)\n        info = self._download_json(json_url, title, 'Downloading JSON config')\n        video_url = info['renditions'][0]['url']\n\n        return {\n            'id': video_id,\n            'ext': 'mp4',\n            'url': video_url,\n            'title': title,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "defense.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/defense.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
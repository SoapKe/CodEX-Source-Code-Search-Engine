{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nclass StreamErrorProtocolEntity(ProtocolEntity):\n    TYPE_CONFLICT = \"conflict\"\n    \n\n    TYPES = (TYPE_CONFLICT, TYPE_ACK, TYPE_XML_NOT_WELL_FORMED)\n\n    def __init__(self, data = None):\n        super(StreamErrorProtocolEntity, self).__init__(\"stream:error\")\n        data = data or {}\n        self.setErrorData(data)\n\n    def setErrorData(self, data):\n        self.data = data\n\n    def getErrorData(self):\n        return self.data\n\n    def getErrorType(self):\n        for k in self.data.keys():\n            if k in self.__class__.TYPES:\n                return k\n\n    def __str__(self):\n        out  = \"Stream Error type: %s\\n\" % self.getErrorType()\n        out += \"%s\" % self.getErrorData()\n        out += \"\\n\"\n\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(StreamErrorProtocolEntity, self).toProtocolTreeNode()\n        type = self.getErrorType()\n        node.addChild(ProtocolTreeNode(type))\n        if type == self.__class__.TYPE_CONFLICT and \"text\" in self.data:\n            node.addChild(ProtocolTreeNode(\"text\", data=self.data[\"text\"]))\n\n        return node\n\n\n    @staticmethod\n    def fromProtocolTreeNode(protocolTreeNode):\n        data = {}\n        for child in protocolTreeNode.getAllChildren():\n            data[child.tag] = child.data\n        return StreamErrorProtocolEntity(data)\n", "comments": "          stream error           conflict   conflict           text replaced new connection  text         stream error               type ack    ack                stream error           ack   ack         stream error               type xml not well formed    xml well formed               stream error           xml well formed            xml well formed        stream error          ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nclass StreamErrorProtocolEntity(ProtocolEntity):\n    TYPE_CONFLICT = \"conflict\"\n    '''\n     <stream:error>\n        <conflict></conflict>\n        <text>Replaced by new connection</text>\n     </stream:error>\n    '''\n\n    TYPE_ACK = \"ack\"\n    '''\n     <stream:error>\n        <ack></ack>\n     </stream:error>\n    '''\n\n    TYPE_XML_NOT_WELL_FORMED = \"xml-not-well-formed\"\n    '''\n    <stream:error>\n        <xml-not-well-formed>\n        </xml-not-well-formed>\n    </stream:error>\n    '''\n\n    TYPES = (TYPE_CONFLICT, TYPE_ACK, TYPE_XML_NOT_WELL_FORMED)\n\n    def __init__(self, data = None):\n        super(StreamErrorProtocolEntity, self).__init__(\"stream:error\")\n        data = data or {}\n        self.setErrorData(data)\n\n    def setErrorData(self, data):\n        self.data = data\n\n    def getErrorData(self):\n        return self.data\n\n    def getErrorType(self):\n        for k in self.data.keys():\n            if k in self.__class__.TYPES:\n                return k\n\n    def __str__(self):\n        out  = \"Stream Error type: %s\\n\" % self.getErrorType()\n        out += \"%s\" % self.getErrorData()\n        out += \"\\n\"\n\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(StreamErrorProtocolEntity, self).toProtocolTreeNode()\n        type = self.getErrorType()\n        node.addChild(ProtocolTreeNode(type))\n        if type == self.__class__.TYPE_CONFLICT and \"text\" in self.data:\n            node.addChild(ProtocolTreeNode(\"text\", data=self.data[\"text\"]))\n\n        return node\n\n\n    @staticmethod\n    def fromProtocolTreeNode(protocolTreeNode):\n        data = {}\n        for child in protocolTreeNode.getAllChildren():\n            data[child.tag] = child.data\n        return StreamErrorProtocolEntity(data)\n", "description": "The python WhatsApp library", "file_name": "stream_error.py", "id": "d2268b96c862f345ecf09b350579e453", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/auth/protocolentities/stream_error.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
{"author": "pallets", "code": "\n\n        if hasattr(g, 'sqlite_db'):\n            g.sqlite_db.close()\n", "comments": "\n    Flaskr\n    ~~~~~~\n\n    A microblog example application written as Flask tutorial with\n    Flask and sqlite3.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport os\nfrom flask import Flask, g\nfrom werkzeug.utils import find_modules, import_string\nfrom flaskr.blueprints.flaskr import init_db\n\n\ndef create_app(config=None):\n    app = Flask('flaskr')\n\n    app.config.update(dict(\n        DATABASE=os.path.join(app.root_path, 'flaskr.db'),\n        DEBUG=True,\n        SECRET_KEY=b'_5#y2L\"F4Q8z\\n\\xec]/',\n        USERNAME='admin',\n        PASSWORD='default'\n    ))\n    app.config.update(config or {})\n    app.config.from_envvar('FLASKR_SETTINGS', silent=True)\n\n    register_blueprints(app)\n    register_cli(app)\n    register_teardowns(app)\n\n    return app\n\n\ndef register_blueprints(app):\n    \"\"\"Register all blueprint modules\n\n    Reference: Armin Ronacher, \"Flask for Fun and for Profit\" PyBay 2016.\n    \"\"\"\n    for name in find_modules('flaskr.blueprints'):\n        mod = import_string(name)\n        if hasattr(mod, 'bp'):\n            app.register_blueprint(mod.bp)\n    return None\n\n\ndef register_cli(app):\n    @app.cli.command('initdb')\n    def initdb_command():\n        \"\"\"Creates the database tables.\"\"\"\n        init_db()\n        print('Initialized the database.')\n\n\ndef register_teardowns(app):\n    @app.teardown_appcontext\n    def close_db(error):\n        \"\"\"Closes the database again at the end of the request.\n.\n# -*- coding: utf-8 -*-\n", "content": "# -*- coding: utf-8 -*-\n\"\"\"\n    Flaskr\n    ~~~~~~\n\n    A microblog example application written as Flask tutorial with\n    Flask and sqlite3.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nimport os\nfrom flask import Flask, g\nfrom werkzeug.utils import find_modules, import_string\nfrom flaskr.blueprints.flaskr import init_db\n\n\ndef create_app(config=None):\n    app = Flask('flaskr')\n\n    app.config.update(dict(\n        DATABASE=os.path.join(app.root_path, 'flaskr.db'),\n        DEBUG=True,\n        SECRET_KEY=b'_5#y2L\"F4Q8z\\n\\xec]/',\n        USERNAME='admin',\n        PASSWORD='default'\n    ))\n    app.config.update(config or {})\n    app.config.from_envvar('FLASKR_SETTINGS', silent=True)\n\n    register_blueprints(app)\n    register_cli(app)\n    register_teardowns(app)\n\n    return app\n\n\ndef register_blueprints(app):\n    \"\"\"Register all blueprint modules\n\n    Reference: Armin Ronacher, \"Flask for Fun and for Profit\" PyBay 2016.\n    \"\"\"\n    for name in find_modules('flaskr.blueprints'):\n        mod = import_string(name)\n        if hasattr(mod, 'bp'):\n            app.register_blueprint(mod.bp)\n    return None\n\n\ndef register_cli(app):\n    @app.cli.command('initdb')\n    def initdb_command():\n        \"\"\"Creates the database tables.\"\"\"\n        init_db()\n        print('Initialized the database.')\n\n\ndef register_teardowns(app):\n    @app.teardown_appcontext\n    def close_db(error):\n        \"\"\"Closes the database again at the end of the request.\"\"\"\n        if hasattr(g, 'sqlite_db'):\n            g.sqlite_db.close()\n", "description": "The Python micro framework for building web applications.", "file_name": "factory.py", "language": "Python", "project_name": "flask", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pallets_flask/pallets-flask-a2ea186/examples/flaskr/flaskr/factory.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:52:03Z", "url": "https://github.com/pallets/flask", "wiki": false}
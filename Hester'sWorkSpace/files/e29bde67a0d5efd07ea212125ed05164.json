{"author": "deepfakes", "code": "import os\n\nclass PluginLoader():\n    @staticmethod\n    def get_extractor(name):\n        return PluginLoader._import(\"Extract\", \"Extract_{0}\".format(name))\n    \n    @staticmethod\n    def get_converter(name):\n        return PluginLoader._import(\"Convert\", \"Convert_{0}\".format(name))\n    \n    @staticmethod\n    def get_model(name):\n        return PluginLoader._import(\"Model\", \"Model_{0}\".format(name))\n    \n    @staticmethod\n    def get_trainer(name):\n        return PluginLoader._import(\"Trainer\", \"Model_{0}\".format(name))\n    \n    @staticmethod\n    def _import(attr, name):\n        print(\"Loading {} from {} plugin...\".format(attr, name))\n        module = __import__(name, globals(), locals(), [], 1)\n        return getattr(module, attr)\n\n    @staticmethod\n    def get_available_models():\n        models = ()\n        for dir in next(os.walk( os.path.dirname(__file__) ))[1]:\n            if dir[0:6].lower() == 'model_':\n                models += (dir[6:],)\n        return models\n        \n    @staticmethod\n    def get_default_model():\n        models = PluginLoader.get_available_models()\n        return 'Original' if 'Original' in models else models[0]", "comments": "", "content": "import os\n\nclass PluginLoader():\n    @staticmethod\n    def get_extractor(name):\n        return PluginLoader._import(\"Extract\", \"Extract_{0}\".format(name))\n    \n    @staticmethod\n    def get_converter(name):\n        return PluginLoader._import(\"Convert\", \"Convert_{0}\".format(name))\n    \n    @staticmethod\n    def get_model(name):\n        return PluginLoader._import(\"Model\", \"Model_{0}\".format(name))\n    \n    @staticmethod\n    def get_trainer(name):\n        return PluginLoader._import(\"Trainer\", \"Model_{0}\".format(name))\n    \n    @staticmethod\n    def _import(attr, name):\n        print(\"Loading {} from {} plugin...\".format(attr, name))\n        module = __import__(name, globals(), locals(), [], 1)\n        return getattr(module, attr)\n\n    @staticmethod\n    def get_available_models():\n        models = ()\n        for dir in next(os.walk( os.path.dirname(__file__) ))[1]:\n            if dir[0:6].lower() == 'model_':\n                models += (dir[6:],)\n        return models\n        \n    @staticmethod\n    def get_default_model():\n        models = PluginLoader.get_available_models()\n        return 'Original' if 'Original' in models else models[0]", "description": "Non official project based on original /r/Deepfakes thread. Many thanks to him!", "file_name": "PluginLoader.py", "id": "e29bde67a0d5efd07ea212125ed05164", "language": "Python", "project_name": "faceswap", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/deepfakes-faceswap/deepfakes-faceswap-6ff64ef/plugins/PluginLoader.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:27:43Z", "url": "https://github.com/deepfakes/faceswap", "wiki": true}
{"author": "django", "code": "from django.test import TestCase, TransactionTestCase\n\nfrom .models import Book\n\n\nclass MigrationDataPersistenceTestCase(TransactionTestCase):\n    \"\"\"\n    Data loaded in migrations is available if\n    TransactionTestCase.serialized_rollback = True.\n    \"\"\"\n\n    available_apps = [\"migration_test_data_persistence\"]\n    serialized_rollback = True\n\n    def test_persistence(self):\n        self.assertEqual(\n            Book.objects.count(),\n            1,\n        )\n\n\nclass MigrationDataNormalPersistenceTestCase(TestCase):\n    \"\"\"\n    Data loaded in migrations is available on TestCase\n    \"\"\"\n\n    def test_persistence(self):\n        self.assertEqual(\n            Book.objects.count(),\n            1,\n        )\n", "comments": "        data loaded migrations available     transactiontestcase serialized rollback   true               available apps     migration test data persistence       serialized rollback   true      def test persistence(self)          self assertequal(             book objects count()              1          )   class migrationdatanormalpersistencetestcase(testcase)              data loaded migrations available testcase         ", "content": "from django.test import TestCase, TransactionTestCase\n\nfrom .models import Book\n\n\nclass MigrationDataPersistenceTestCase(TransactionTestCase):\n    \"\"\"\n    Data loaded in migrations is available if\n    TransactionTestCase.serialized_rollback = True.\n    \"\"\"\n\n    available_apps = [\"migration_test_data_persistence\"]\n    serialized_rollback = True\n\n    def test_persistence(self):\n        self.assertEqual(\n            Book.objects.count(),\n            1,\n        )\n\n\nclass MigrationDataNormalPersistenceTestCase(TestCase):\n    \"\"\"\n    Data loaded in migrations is available on TestCase\n    \"\"\"\n\n    def test_persistence(self):\n        self.assertEqual(\n            Book.objects.count(),\n            1,\n        )\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "tests.py", "id": "b780446d6eb4bcba8d5cbaafefae8609", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/migration_test_data_persistence/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
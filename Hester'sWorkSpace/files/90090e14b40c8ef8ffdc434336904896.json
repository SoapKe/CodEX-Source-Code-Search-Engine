{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom django.template import Context, Template\nfrom mock import Mock\n\nfrom sentry.testutils import TestCase\n\n\nclass AssetsTest(TestCase):\n    TEMPLATE = Template(\n        \n    )\n\n    def test_supported_foreign_lang(self):\n        result = self.TEMPLATE.render(\n            Context({\n                'request': Mock(LANGUAGE_CODE='fr'),  \n            })\n        )\n\n        assert '<script src=\"/_static/{version}/sentry/dist/locale/fr.js\"></script>' in result\n\n    def test_unsupported_foreign_lang(self):\n        result = self.TEMPLATE.render(\n            Context(\n                {\n                    'request': Mock(LANGUAGE_CODE='ro'),  \n                }\n            )\n        )\n\n        assert result.strip() == ''\n\n    def test_english(self):\n        result = self.TEMPLATE.render(Context({\n            'request': Mock(LANGUAGE_CODE='en'),\n        }))\n\n        assert result.strip() == ''\n\n    def test_no_lang(self):\n        result = self.TEMPLATE.render(Context({\n            'request': Mock(),\n        }))\n\n        assert result.strip() == ''\n", "comments": "               load sentry assets               locale js include               french  locale catalogs json    romanian  locale catalogs json ", "content": "from __future__ import absolute_import\n\nfrom django.template import Context, Template\nfrom mock import Mock\n\nfrom sentry.testutils import TestCase\n\n\nclass AssetsTest(TestCase):\n    TEMPLATE = Template(\n        \"\"\"\n        {% load sentry_assets %}\n        {% locale_js_include %}\n    \"\"\"\n    )\n\n    def test_supported_foreign_lang(self):\n        result = self.TEMPLATE.render(\n            Context({\n                'request': Mock(LANGUAGE_CODE='fr'),  # French, in locale/catalogs.json\n            })\n        )\n\n        assert '<script src=\"/_static/{version}/sentry/dist/locale/fr.js\"></script>' in result\n\n    def test_unsupported_foreign_lang(self):\n        result = self.TEMPLATE.render(\n            Context(\n                {\n                    'request': Mock(LANGUAGE_CODE='ro'),  # Romanian, not in locale/catalogs.json\n                }\n            )\n        )\n\n        assert result.strip() == ''\n\n    def test_english(self):\n        result = self.TEMPLATE.render(Context({\n            'request': Mock(LANGUAGE_CODE='en'),\n        }))\n\n        assert result.strip() == ''\n\n    def test_no_lang(self):\n        result = self.TEMPLATE.render(Context({\n            'request': Mock(),\n        }))\n\n        assert result.strip() == ''\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_sentry_assets.py", "id": "90090e14b40c8ef8ffdc434336904896", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/templatetags/test_sentry_assets.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
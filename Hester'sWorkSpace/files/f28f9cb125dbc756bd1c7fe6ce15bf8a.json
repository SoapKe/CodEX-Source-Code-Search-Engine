{"author": "odoo", "code": "from odoo.addons.account.tests.account_test_classes import AccountingTestCase\nfrom odoo.osv.orm import except_orm\nfrom datetime import datetime, timedelta\nfrom odoo.tools import DEFAULT_SERVER_DATE_FORMAT\n\nclass TestPeriodState(AccountingTestCase):\n    \n\n    def setUp(self):\n        super(TestPeriodState, self).setUp()\n        self.user_id = self.env.user\n        self.day_before_yesterday = datetime.now() - timedelta(2)\n        self.yesterday = datetime.now() - timedelta(1)\n        self.yesterday_str = self.yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT)\n        \n        draft_entries = self.env['account.move'].search([('date', '<=', self.yesterday_str), ('state', '=', 'draft')])\n        if draft_entries:\n            draft_entries.post()\n        self.user_id.company_id.write({'fiscalyear_lock_date': self.yesterday_str})\n        self.sale_journal_id = self.env['account.journal'].search([('type', '=', 'sale')])[0]\n        self.account_id = self.env['account.account'].search([('internal_type', '=', 'receivable')])[0]\n\n    def test_period_state(self):\n        with self.assertRaises(except_orm):\n            move = self.env['account.move'].create({\n                'name': '/',\n                'journal_id': self.sale_journal_id.id,\n                'date': self.day_before_yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT),\n                'line_ids': [(0, 0, {\n                        'name': 'foo',\n                        'debit': 10,\n                        'account_id': self.account_id.id,\n                    }), (0, 0, {\n                        'name': 'bar',\n                        'credit': 10,\n                        'account_id': self.account_id.id,\n                    })]\n            })\n            move.post()\n", "comments": "        forbid creation journal entries closed period            make sure unposted entry ", "content": "from odoo.addons.account.tests.account_test_classes import AccountingTestCase\nfrom odoo.osv.orm import except_orm\nfrom datetime import datetime, timedelta\nfrom odoo.tools import DEFAULT_SERVER_DATE_FORMAT\n\nclass TestPeriodState(AccountingTestCase):\n    \"\"\"\n    Forbid creation of Journal Entries for a closed period.\n    \"\"\"\n\n    def setUp(self):\n        super(TestPeriodState, self).setUp()\n        self.user_id = self.env.user\n        self.day_before_yesterday = datetime.now() - timedelta(2)\n        self.yesterday = datetime.now() - timedelta(1)\n        self.yesterday_str = self.yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT)\n        #make sure there is no unposted entry\n        draft_entries = self.env['account.move'].search([('date', '<=', self.yesterday_str), ('state', '=', 'draft')])\n        if draft_entries:\n            draft_entries.post()\n        self.user_id.company_id.write({'fiscalyear_lock_date': self.yesterday_str})\n        self.sale_journal_id = self.env['account.journal'].search([('type', '=', 'sale')])[0]\n        self.account_id = self.env['account.account'].search([('internal_type', '=', 'receivable')])[0]\n\n    def test_period_state(self):\n        with self.assertRaises(except_orm):\n            move = self.env['account.move'].create({\n                'name': '/',\n                'journal_id': self.sale_journal_id.id,\n                'date': self.day_before_yesterday.strftime(DEFAULT_SERVER_DATE_FORMAT),\n                'line_ids': [(0, 0, {\n                        'name': 'foo',\n                        'debit': 10,\n                        'account_id': self.account_id.id,\n                    }), (0, 0, {\n                        'name': 'bar',\n                        'credit': 10,\n                        'account_id': self.account_id.id,\n                    })]\n            })\n            move.post()\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_account_move_closed_period.py", "id": "f28f9cb125dbc756bd1c7fe6ce15bf8a", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/account/tests/test_account_move_closed_period.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
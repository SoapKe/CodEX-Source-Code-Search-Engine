{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    str_to_int,\n    unified_strdate,\n)\n\n\nclass CloudyIE(InfoExtractor):\n    _IE_DESC = 'cloudy.ec'\n    _VALID_URL = r'https?://(?:www\\.)?cloudy\\.ec/(?:v/|embed\\.php\\?.*?\\bid=)(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'https://www.cloudy.ec/v/af511e2527aac',\n        'md5': '29832b05028ead1b58be86bf319397ca',\n        'info_dict': {\n            'id': 'af511e2527aac',\n            'ext': 'mp4',\n            'title': 'Funny Cats and Animals Compilation june 2013',\n            'upload_date': '20130913',\n            'view_count': int,\n        }\n    }, {\n        'url': 'http://www.cloudy.ec/embed.php?autoplay=1&id=af511e2527aac',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'https://www.cloudy.ec/embed.php', video_id, query={\n                'id': video_id,\n                'playerPage': 1,\n                'autoplay': 1,\n            })\n\n        info = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        webpage = self._download_webpage(\n            'https://www.cloudy.ec/v/%s' % video_id, video_id, fatal=False)\n\n        if webpage:\n            info.update({\n                'title': self._search_regex(\n                    r'<h\\d[^>]*>([^<]+)<', webpage, 'title'),\n                'upload_date': unified_strdate(self._search_regex(\n                    r'>Published at (\\d{4}-\\d{1,2}-\\d{1,2})', webpage,\n                    'upload date', fatal=False)),\n                'view_count': str_to_int(self._search_regex(\n                    r'([\\d,.]+) views<', webpage, 'view count', fatal=False)),\n            })\n\n        if not info.get('title'):\n            info['title'] = video_id\n\n        info['id'] = video_id\n\n        return info\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    str_to_int,\n    unified_strdate,\n)\n\n\nclass CloudyIE(InfoExtractor):\n    _IE_DESC = 'cloudy.ec'\n    _VALID_URL = r'https?://(?:www\\.)?cloudy\\.ec/(?:v/|embed\\.php\\?.*?\\bid=)(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'https://www.cloudy.ec/v/af511e2527aac',\n        'md5': '29832b05028ead1b58be86bf319397ca',\n        'info_dict': {\n            'id': 'af511e2527aac',\n            'ext': 'mp4',\n            'title': 'Funny Cats and Animals Compilation june 2013',\n            'upload_date': '20130913',\n            'view_count': int,\n        }\n    }, {\n        'url': 'http://www.cloudy.ec/embed.php?autoplay=1&id=af511e2527aac',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'https://www.cloudy.ec/embed.php', video_id, query={\n                'id': video_id,\n                'playerPage': 1,\n                'autoplay': 1,\n            })\n\n        info = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        webpage = self._download_webpage(\n            'https://www.cloudy.ec/v/%s' % video_id, video_id, fatal=False)\n\n        if webpage:\n            info.update({\n                'title': self._search_regex(\n                    r'<h\\d[^>]*>([^<]+)<', webpage, 'title'),\n                'upload_date': unified_strdate(self._search_regex(\n                    r'>Published at (\\d{4}-\\d{1,2}-\\d{1,2})', webpage,\n                    'upload date', fatal=False)),\n                'view_count': str_to_int(self._search_regex(\n                    r'([\\d,.]+) views<', webpage, 'view count', fatal=False)),\n            })\n\n        if not info.get('title'):\n            info['title'] = video_id\n\n        info['id'] = video_id\n\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "cloudy.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/cloudy.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom datadog.util.hostname import get_hostname\n\nfrom sentry.metrics.datadog import DatadogMetricsBackend\nfrom sentry.testutils import TestCase\n\n\nclass DatadogMetricsBackendTest(TestCase):\n    def setUp(self):\n        self.backend = DatadogMetricsBackend(prefix='sentrytest.')\n\n    @patch('datadog.threadstats.base.ThreadStats.increment')\n    def test_incr(self, mock_incr):\n        self.backend.incr('foo', instance='bar')\n        mock_incr.assert_called_once_with(\n            'sentrytest.foo',\n            1,\n            sample_rate=1,\n            tags=['instance:bar'],\n            host=get_hostname(),\n        )\n\n    @patch('datadog.threadstats.base.ThreadStats.timing')\n    def test_timing(self, mock_timing):\n        self.backend.timing('foo', 30, instance='bar')\n        mock_timing.assert_called_once_with(\n            'sentrytest.foo',\n            30,\n            sample_rate=1,\n            tags=['instance:bar'],\n            host=get_hostname(),\n        )\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom datadog.util.hostname import get_hostname\n\nfrom sentry.metrics.datadog import DatadogMetricsBackend\nfrom sentry.testutils import TestCase\n\n\nclass DatadogMetricsBackendTest(TestCase):\n    def setUp(self):\n        self.backend = DatadogMetricsBackend(prefix='sentrytest.')\n\n    @patch('datadog.threadstats.base.ThreadStats.increment')\n    def test_incr(self, mock_incr):\n        self.backend.incr('foo', instance='bar')\n        mock_incr.assert_called_once_with(\n            'sentrytest.foo',\n            1,\n            sample_rate=1,\n            tags=['instance:bar'],\n            host=get_hostname(),\n        )\n\n    @patch('datadog.threadstats.base.ThreadStats.timing')\n    def test_timing(self, mock_timing):\n        self.backend.timing('foo', 30, instance='bar')\n        mock_timing.assert_called_once_with(\n            'sentrytest.foo',\n            30,\n            sample_rate=1,\n            tags=['instance:bar'],\n            host=get_hostname(),\n        )\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_datadog.py", "id": "06d6133b12899ebc51b1ecaf86547072", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/metrics/test_datadog.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
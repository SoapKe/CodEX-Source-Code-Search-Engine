{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import unified_timestamp\n\n\nclass CtsNewsIE(InfoExtractor):\n    IE_DESC = '\u83ef\u8996\u65b0\u805e'\n    _VALID_URL = r'https?://news\\.cts\\.com\\.tw/[a-z]+/[a-z]+/\\d+/(?P<id>\\d+)\\.html'\n    _TESTS = [{\n        'url': 'http://news.cts.com.tw/cts/international/201501/201501291578109.html',\n        'md5': 'a9875cb790252b08431186d741beaabe',\n        'info_dict': {\n            'id': '201501291578109',\n            'ext': 'mp4',\n            'title': '\u4ee5\u8272\u5217.\u771f\u4e3b\u9ee8\u4ea4\u706b 3\u4eba\u6b7b\u4ea1',\n            'description': '\u4ee5\u8272\u5217\u548c\u9ece\u5df4\u5ae9\u771f\u4e3b\u9ee8\uff0c\u7206\u767c\u4e94\u5e74\u6700\u56b4\u91cd\u885d\u7a81\uff0c\u96d9\u65b9\u7832\u8f5f\u4ea4\u706b\uff0c\u5169\u540d\u4ee5\u8ecd\u6b7b\u4ea1\uff0c\u9084\u6709\u4e00\u540d\u897f\u73ed\u7259\u7c4d\u7684\u806f\u5408\u570b\u7dad\u548c\u4eba...',\n            'timestamp': 1422528540,\n            'upload_date': '20150129',\n        }\n    }, {\n        \n        'url': 'http://news.cts.com.tw/cts/international/201309/201309031304098.html',\n        'md5': '3aee7e0df7cdff94e43581f54c22619e',\n        'info_dict': {\n            'id': '201309031304098',\n            'ext': 'mp4',\n            'title': '\u97d3\u570b31\u6b72\u7ae5\u984f\u7537 \u8c8c\u5982\u5341\u591a\u6b72\u5c0f\u5b69',\n            'description': '\u8d8a\u6709\u5e74\u7d00\u7684\u4eba\uff0c\u8d8a\u5e0c\u671b\u770b\u8d77\u4f86\u5e74\u8f15\u4e00\u9ede\uff0c\u800c\u5357\u97d3\u537b\u6709\u4e00\u4f4d31\u6b72\u7684\u7537\u5b50\uff0c\u770b\u8d77\u4f86\u50cf\u662f11\u300112\u6b72\u7684\u5c0f\u5b69\uff0c\u8eab...',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1378205880,\n            'upload_date': '20130903',\n        }\n    }, {\n        \n        'url': 'http://news.cts.com.tw/cts/money/201501/201501291578003.html',\n        'md5': 'e4726b2ccd70ba2c319865e28f0a91d1',\n        'info_dict': {\n            'id': 'OVbfO7d0_hQ',\n            'ext': 'mp4',\n            'title': 'iPhone6\u71b1\u92b7 \u860b\u679c\u8ca1\u5831\u4eae\u773c',\n            'description': 'md5:f395d4f485487bb0f992ed2c4b07aa7d',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20150128',\n            'uploader_id': 'TBSCTS',\n            'uploader': '\u4e2d\u83ef\u96fb\u8996\u516c\u53f8',\n        },\n        'add_ie': ['Youtube'],\n    }]\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        page = self._download_webpage(url, news_id)\n\n        news_id = self._hidden_inputs(page).get('get_id')\n\n        if news_id:\n            mp4_feed = self._download_json(\n                'http://news.cts.com.tw/action/test_mp4feed.php',\n                news_id, note='Fetching feed', query={'news_id': news_id})\n            video_url = mp4_feed['source_url']\n        else:\n            self.to_screen('Not CTSPlayer video, trying Youtube...')\n            youtube_url = self._search_regex(\n                r'src=\"(//www\\.youtube\\.com/embed/[^\"]+)\"', page, 'youtube url')\n\n            return self.url_result(youtube_url, ie='Youtube')\n\n        description = self._html_search_meta('description', page)\n        title = self._html_search_meta('title', page, fatal=True)\n        thumbnail = self._html_search_meta('image', page)\n\n        datetime_str = self._html_search_regex(\n            r'(\\d{4}/\\d{2}/\\d{2} \\d{2}:\\d{2})', page, 'date and time', fatal=False)\n        timestamp = None\n        if datetime_str:\n            timestamp = unified_timestamp(datetime_str) - 8 * 3600\n\n        return {\n            'id': news_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n        }\n", "comments": "# coding: utf-8\n# News count not appear on page but still available in database\n# With Youtube embedded video\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import unified_timestamp\n\n\nclass CtsNewsIE(InfoExtractor):\n    IE_DESC = '\u83ef\u8996\u65b0\u805e'\n    _VALID_URL = r'https?://news\\.cts\\.com\\.tw/[a-z]+/[a-z]+/\\d+/(?P<id>\\d+)\\.html'\n    _TESTS = [{\n        'url': 'http://news.cts.com.tw/cts/international/201501/201501291578109.html',\n        'md5': 'a9875cb790252b08431186d741beaabe',\n        'info_dict': {\n            'id': '201501291578109',\n            'ext': 'mp4',\n            'title': '\u4ee5\u8272\u5217.\u771f\u4e3b\u9ee8\u4ea4\u706b 3\u4eba\u6b7b\u4ea1',\n            'description': '\u4ee5\u8272\u5217\u548c\u9ece\u5df4\u5ae9\u771f\u4e3b\u9ee8\uff0c\u7206\u767c\u4e94\u5e74\u6700\u56b4\u91cd\u885d\u7a81\uff0c\u96d9\u65b9\u7832\u8f5f\u4ea4\u706b\uff0c\u5169\u540d\u4ee5\u8ecd\u6b7b\u4ea1\uff0c\u9084\u6709\u4e00\u540d\u897f\u73ed\u7259\u7c4d\u7684\u806f\u5408\u570b\u7dad\u548c\u4eba...',\n            'timestamp': 1422528540,\n            'upload_date': '20150129',\n        }\n    }, {\n        # News count not appear on page but still available in database\n        'url': 'http://news.cts.com.tw/cts/international/201309/201309031304098.html',\n        'md5': '3aee7e0df7cdff94e43581f54c22619e',\n        'info_dict': {\n            'id': '201309031304098',\n            'ext': 'mp4',\n            'title': '\u97d3\u570b31\u6b72\u7ae5\u984f\u7537 \u8c8c\u5982\u5341\u591a\u6b72\u5c0f\u5b69',\n            'description': '\u8d8a\u6709\u5e74\u7d00\u7684\u4eba\uff0c\u8d8a\u5e0c\u671b\u770b\u8d77\u4f86\u5e74\u8f15\u4e00\u9ede\uff0c\u800c\u5357\u97d3\u537b\u6709\u4e00\u4f4d31\u6b72\u7684\u7537\u5b50\uff0c\u770b\u8d77\u4f86\u50cf\u662f11\u300112\u6b72\u7684\u5c0f\u5b69\uff0c\u8eab...',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1378205880,\n            'upload_date': '20130903',\n        }\n    }, {\n        # With Youtube embedded video\n        'url': 'http://news.cts.com.tw/cts/money/201501/201501291578003.html',\n        'md5': 'e4726b2ccd70ba2c319865e28f0a91d1',\n        'info_dict': {\n            'id': 'OVbfO7d0_hQ',\n            'ext': 'mp4',\n            'title': 'iPhone6\u71b1\u92b7 \u860b\u679c\u8ca1\u5831\u4eae\u773c',\n            'description': 'md5:f395d4f485487bb0f992ed2c4b07aa7d',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20150128',\n            'uploader_id': 'TBSCTS',\n            'uploader': '\u4e2d\u83ef\u96fb\u8996\u516c\u53f8',\n        },\n        'add_ie': ['Youtube'],\n    }]\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        page = self._download_webpage(url, news_id)\n\n        news_id = self._hidden_inputs(page).get('get_id')\n\n        if news_id:\n            mp4_feed = self._download_json(\n                'http://news.cts.com.tw/action/test_mp4feed.php',\n                news_id, note='Fetching feed', query={'news_id': news_id})\n            video_url = mp4_feed['source_url']\n        else:\n            self.to_screen('Not CTSPlayer video, trying Youtube...')\n            youtube_url = self._search_regex(\n                r'src=\"(//www\\.youtube\\.com/embed/[^\"]+)\"', page, 'youtube url')\n\n            return self.url_result(youtube_url, ie='Youtube')\n\n        description = self._html_search_meta('description', page)\n        title = self._html_search_meta('title', page, fatal=True)\n        thumbnail = self._html_search_meta('image', page)\n\n        datetime_str = self._html_search_regex(\n            r'(\\d{4}/\\d{2}/\\d{2} \\d{2}:\\d{2})', page, 'date and time', fatal=False)\n        timestamp = None\n        if datetime_str:\n            timestamp = unified_timestamp(datetime_str) - 8 * 3600\n\n        return {\n            'id': news_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "ctsnews.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/ctsnews.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
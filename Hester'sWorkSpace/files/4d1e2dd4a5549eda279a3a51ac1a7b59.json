{"author": "minimaxir", "code": "import os\n\n\nFILEPATH = os.path.join(\n    os.path.abspath(os.path.dirname(os.path.dirname(__file__))), 'blns.txt')\n\"\"\"Path to the file\"\"\"\n\n\ndef naughty_strings(filepath=FILEPATH):\n    \"\"\"Get the list of naughty_strings.\n\n    By default this will get the strings from the blns.txt file\n\n    Code is a simple port of what is already in the /scripts directory\n\n    :param filepath: Optional filepath the the blns.txt file\n    :returns: The list of naughty strings\n    \"\"\"\n\n    strings = []\n    with open(filepath, 'r') as f:\n\n        \n        strings = f.readlines()\n        \n        \n        strings = [x.strip(u'\\n') for x in strings]\n        \n        \n        strings = [x for x in strings if x and not x.startswith(u'#')]\n        \n        \n        strings.insert(0, u\"\")\n\n    return strings\n", "comments": "   path file      def naughty strings(filepath filepath)         get list naughty strings       by default get strings blns txt file      code simple port already  scripts directory       param filepath  optional filepath blns txt file      returns  the list naughty strings            put lines file python list    line leaves trailing newline characters  strip    remove empty lines comments    insert empty string since removed ", "content": "import os\n\n\nFILEPATH = os.path.join(\n    os.path.abspath(os.path.dirname(os.path.dirname(__file__))), 'blns.txt')\n\"\"\"Path to the file\"\"\"\n\n\ndef naughty_strings(filepath=FILEPATH):\n    \"\"\"Get the list of naughty_strings.\n\n    By default this will get the strings from the blns.txt file\n\n    Code is a simple port of what is already in the /scripts directory\n\n    :param filepath: Optional filepath the the blns.txt file\n    :returns: The list of naughty strings\n    \"\"\"\n\n    strings = []\n    with open(filepath, 'r') as f:\n\n        # put all lines in the file into a Python list\n        strings = f.readlines()\n        \n        # above line leaves trailing newline characters; strip them out\n        strings = [x.strip(u'\\n') for x in strings]\n        \n        # remove empty-lines and comments\n        strings = [x for x in strings if x and not x.startswith(u'#')]\n        \n        # insert empty string since all are being removed\n        strings.insert(0, u\"\")\n\n    return strings\n", "description": "The Big List of Naughty Strings is a list of strings which have a high probability of causing issues when used as user-input data.", "file_name": "__init__.py", "id": "4d1e2dd4a5549eda279a3a51ac1a7b59", "language": "Python", "project_name": "big-list-of-naughty-strings", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/minimaxir-big-list-of-naughty-strings/minimaxir-big-list-of-naughty-strings-ba3c0ba/naughtystrings/__init__.py", "save_time": "", "source": "", "update_at": "2018-03-13T20:21:09Z", "url": "https://github.com/minimaxir/big-list-of-naughty-strings", "wiki": true}
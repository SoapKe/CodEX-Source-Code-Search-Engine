{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    parse_duration,\n    str_to_int,\n    urljoin,\n)\n\n\nclass VpornIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?vporn\\.com/[^/]+/(?P<display_id>[^/]+)/(?P<id>\\d+)'\n    _TESTS = [\n        {\n            'url': 'http://www.vporn.com/masturbation/violet-on-her-th-birthday/497944/',\n            'md5': 'facf37c1b86546fa0208058546842c55',\n            'info_dict': {\n                'id': '497944',\n                'display_id': 'violet-on-her-th-birthday',\n                'ext': 'mp4',\n                'title': 'Violet on her 19th birthday',\n                'description': 'Violet dances in front of the camera which is sure to get you horny.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'uploader': 'kileyGrope',\n                'categories': ['Masturbation', 'Teen'],\n                'duration': 393,\n                'age_limit': 18,\n                'view_count': int,\n            },\n            'skip': 'video removed',\n        },\n        {\n            'url': 'http://www.vporn.com/female/hana-shower/523564/',\n            'md5': 'ced35a4656198a1664cf2cda1575a25f',\n            'info_dict': {\n                'id': '523564',\n                'display_id': 'hana-shower',\n                'ext': 'mp4',\n                'title': 'Hana Shower',\n                'description': 'Hana showers at the bathroom.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'uploader': 'Hmmmmm',\n                'categories': ['Big Boobs', 'Erotic', 'Teen', 'Female', '720p'],\n                'duration': 588,\n                'age_limit': 18,\n                'view_count': int,\n            }\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        errmsg = 'This video has been deleted due to Copyright Infringement or by the account owner!'\n        if errmsg in webpage:\n            raise ExtractorError('%s said: %s' % (self.IE_NAME, errmsg), expected=True)\n\n        title = self._html_search_regex(\n            r'videoname\\s*=\\s*\\'([^\\']+)\\'', webpage, 'title').strip()\n        description = self._html_search_regex(\n            r'class=\"(?:descr|description_txt)\">(.*?)</div>',\n            webpage, 'description', fatal=False)\n        thumbnail = urljoin('http://www.vporn.com', self._html_search_regex(\n            r'flashvars\\.imageUrl\\s*=\\s*\"([^\"]+)\"', webpage, 'description',\n            default=None))\n\n        uploader = self._html_search_regex(\n            r'(?s)Uploaded by:.*?<a href=\"/user/[^\"]+\"[^>]*>(.+?)</a>',\n            webpage, 'uploader', fatal=False)\n\n        categories = re.findall(r'<a href=\"/cat/[^\"]+\"[^>]*>([^<]+)</a>', webpage)\n\n        duration = parse_duration(self._search_regex(\n            r'Runtime:\\s*</span>\\s*(\\d+ min \\d+ sec)',\n            webpage, 'duration', fatal=False))\n\n        view_count = str_to_int(self._search_regex(\n            r'class=\"views\">([\\d,\\.]+) [Vv]iews<',\n            webpage, 'view count', fatal=False))\n        comment_count = str_to_int(self._html_search_regex(\n            r\"'Comments \\(([\\d,\\.]+)\\)'\",\n            webpage, 'comment count', default=None))\n\n        formats = []\n\n        for video in re.findall(r'flashvars\\.videoUrl([^=]+?)\\s*=\\s*\"(https?://[^\"]+)\"', webpage):\n            video_url = video[1]\n            fmt = {\n                'url': video_url,\n                'format_id': video[0],\n            }\n            m = re.search(r'_(?P<width>\\d+)x(?P<height>\\d+)_(?P<vbr>\\d+)k\\.mp4$', video_url)\n            if m:\n                fmt.update({\n                    'width': int(m.group('width')),\n                    'height': int(m.group('height')),\n                    'vbr': int(m.group('vbr')),\n                })\n            formats.append(fmt)\n\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'categories': categories,\n            'duration': duration,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'age_limit': 18,\n            'formats': formats,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    parse_duration,\n    str_to_int,\n    urljoin,\n)\n\n\nclass VpornIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?vporn\\.com/[^/]+/(?P<display_id>[^/]+)/(?P<id>\\d+)'\n    _TESTS = [\n        {\n            'url': 'http://www.vporn.com/masturbation/violet-on-her-th-birthday/497944/',\n            'md5': 'facf37c1b86546fa0208058546842c55',\n            'info_dict': {\n                'id': '497944',\n                'display_id': 'violet-on-her-th-birthday',\n                'ext': 'mp4',\n                'title': 'Violet on her 19th birthday',\n                'description': 'Violet dances in front of the camera which is sure to get you horny.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'uploader': 'kileyGrope',\n                'categories': ['Masturbation', 'Teen'],\n                'duration': 393,\n                'age_limit': 18,\n                'view_count': int,\n            },\n            'skip': 'video removed',\n        },\n        {\n            'url': 'http://www.vporn.com/female/hana-shower/523564/',\n            'md5': 'ced35a4656198a1664cf2cda1575a25f',\n            'info_dict': {\n                'id': '523564',\n                'display_id': 'hana-shower',\n                'ext': 'mp4',\n                'title': 'Hana Shower',\n                'description': 'Hana showers at the bathroom.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'uploader': 'Hmmmmm',\n                'categories': ['Big Boobs', 'Erotic', 'Teen', 'Female', '720p'],\n                'duration': 588,\n                'age_limit': 18,\n                'view_count': int,\n            }\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        errmsg = 'This video has been deleted due to Copyright Infringement or by the account owner!'\n        if errmsg in webpage:\n            raise ExtractorError('%s said: %s' % (self.IE_NAME, errmsg), expected=True)\n\n        title = self._html_search_regex(\n            r'videoname\\s*=\\s*\\'([^\\']+)\\'', webpage, 'title').strip()\n        description = self._html_search_regex(\n            r'class=\"(?:descr|description_txt)\">(.*?)</div>',\n            webpage, 'description', fatal=False)\n        thumbnail = urljoin('http://www.vporn.com', self._html_search_regex(\n            r'flashvars\\.imageUrl\\s*=\\s*\"([^\"]+)\"', webpage, 'description',\n            default=None))\n\n        uploader = self._html_search_regex(\n            r'(?s)Uploaded by:.*?<a href=\"/user/[^\"]+\"[^>]*>(.+?)</a>',\n            webpage, 'uploader', fatal=False)\n\n        categories = re.findall(r'<a href=\"/cat/[^\"]+\"[^>]*>([^<]+)</a>', webpage)\n\n        duration = parse_duration(self._search_regex(\n            r'Runtime:\\s*</span>\\s*(\\d+ min \\d+ sec)',\n            webpage, 'duration', fatal=False))\n\n        view_count = str_to_int(self._search_regex(\n            r'class=\"views\">([\\d,\\.]+) [Vv]iews<',\n            webpage, 'view count', fatal=False))\n        comment_count = str_to_int(self._html_search_regex(\n            r\"'Comments \\(([\\d,\\.]+)\\)'\",\n            webpage, 'comment count', default=None))\n\n        formats = []\n\n        for video in re.findall(r'flashvars\\.videoUrl([^=]+?)\\s*=\\s*\"(https?://[^\"]+)\"', webpage):\n            video_url = video[1]\n            fmt = {\n                'url': video_url,\n                'format_id': video[0],\n            }\n            m = re.search(r'_(?P<width>\\d+)x(?P<height>\\d+)_(?P<vbr>\\d+)k\\.mp4$', video_url)\n            if m:\n                fmt.update({\n                    'width': int(m.group('width')),\n                    'height': int(m.group('height')),\n                    'vbr': int(m.group('vbr')),\n                })\n            formats.append(fmt)\n\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'categories': categories,\n            'duration': duration,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'age_limit': 18,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "vporn.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/vporn.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "sloria", "code": "\n# -*- coding: utf-8 -*-\n\n\nfrom __future__ import unicode_literals\nimport subprocess\nimport sys\n\nimport nose\n\nfrom textblob.compat import PY2\n\nPY26 = PY2 and int(sys.version_info[1]) < 7\nPYPY = \"PyPy\" in sys.version\n\n\ndef main():\n    args = get_argv()\n    retcode = subprocess.call(['flake8', 'textblob'])\n    if retcode:\n        sys.exit(1)\n    success = nose.run(argv=args)\n    sys.exit(0) if success else sys.exit(1)\n\n\ndef get_argv():\n    args = [sys.argv[0], \"tests\", '--verbosity', '2']\n    attr_conditions = []  \n    if \"force-all\" in sys.argv:\n        \n        return args\n    if \"cover\" in sys.argv:\n        args += [\"--with-coverage\", \"--cover-html\"]\n    try:\n        __import__('numpy')\n    except ImportError:\n        \n        attr_conditions.append(\"not requires_numpy\")\n    if not PY2:\n        \n        attr_conditions.append(\"not py2_only\")\n    if PYPY:\n        \n        attr_conditions.append(\"not no_pypy\")\n    if \"fast\" in sys.argv:\n        attr_conditions.append(\"not slow\")\n    if \"no-internet\" in sys.argv:\n        \n        attr_conditions.append(\"not requires_internet\")\n\n    \n    attr_conditions.append(\"not skip\")\n\n    attr_expression = \" and \".join(attr_conditions)\n    if attr_expression:\n        args.extend([\"-A\", attr_expression])\n    return args\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "    the main test runner script   usage         python run tests py skip slow tests     python run tests py fast when internet     python run tests py internet         usr bin env python        coding  utf 8        use nose attribselect plugin filter tests    don exclude tests    exclude tests require numpy    exclude tests work python2    exclude tests work pypy    exclude tests require internet    skip tests  skip  attribute ", "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n'''\nThe main test runner script.\n\nUsage: ::\n    python run_tests.py\nSkip slow tests\n    python run_tests.py fast\nWhen there's no Internet\n    python run_tests.py no-internet\n'''\nfrom __future__ import unicode_literals\nimport subprocess\nimport sys\n\nimport nose\n\nfrom textblob.compat import PY2\n\nPY26 = PY2 and int(sys.version_info[1]) < 7\nPYPY = \"PyPy\" in sys.version\n\n\ndef main():\n    args = get_argv()\n    retcode = subprocess.call(['flake8', 'textblob'])\n    if retcode:\n        sys.exit(1)\n    success = nose.run(argv=args)\n    sys.exit(0) if success else sys.exit(1)\n\n\ndef get_argv():\n    args = [sys.argv[0], \"tests\", '--verbosity', '2']\n    attr_conditions = []  # Use nose's attribselect plugin to filter tests\n    if \"force-all\" in sys.argv:\n        # Don't exclude any tests\n        return args\n    if \"cover\" in sys.argv:\n        args += [\"--with-coverage\", \"--cover-html\"]\n    try:\n        __import__('numpy')\n    except ImportError:\n        # Exclude tests that require numpy\n        attr_conditions.append(\"not requires_numpy\")\n    if not PY2:\n        # Exclude tests that only work on python2\n        attr_conditions.append(\"not py2_only\")\n    if PYPY:\n        # Exclude tests that don't work on PyPY\n        attr_conditions.append(\"not no_pypy\")\n    if \"fast\" in sys.argv:\n        attr_conditions.append(\"not slow\")\n    if \"no-internet\" in sys.argv:\n        # Exclude tests that require internet\n        attr_conditions.append(\"not requires_internet\")\n\n    # Skip tests with the \"skip\" attribute\n    attr_conditions.append(\"not skip\")\n\n    attr_expression = \" and \".join(attr_conditions)\n    if attr_expression:\n        args.extend([\"-A\", attr_expression])\n    return args\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Simple, Pythonic, text processing--Sentiment analysis, part-of-speech tagging, noun phrase extraction, translation, and more.", "file_name": "run_tests.py", "id": "11cd36d280985da2d7439c5affeacfca", "language": "Python", "project_name": "TextBlob", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sloria-TextBlob/sloria-TextBlob-124d0f9/run_tests.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:52:04Z", "url": "https://github.com/sloria/TextBlob", "wiki": true}
{"author": "nvbn", "code": "import pytest\nfrom mock import patch\nfrom thefuck.rules import pacman_not_found\nfrom thefuck.rules.pacman_not_found import match, get_new_command\nfrom thefuck.types import Command\n\nPKGFILE_OUTPUT_LLC = \n\n\n@pytest.mark.skipif(not getattr(pacman_not_found, 'enabled_by_default', True),\n                    reason='Skip if pacman is not available')\n@pytest.mark.parametrize('command', [\n    Command('yaourt -S llc', 'error: target not found: llc'),\n    Command('pacman llc', 'error: target not found: llc'),\n    Command('sudo pacman llc', 'error: target not found: llc')])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('yaourt -S llc', 'error: target not found: llc'),\n    Command('pacman llc', 'error: target not found: llc'),\n    Command('sudo pacman llc', 'error: target not found: llc')])\n@patch('thefuck.specific.archlinux.subprocess')\ndef test_match_mocked(subp_mock, command):\n    subp_mock.check_output.return_value = PKGFILE_OUTPUT_LLC\n    assert match(command)\n\n\n@pytest.mark.skipif(not getattr(pacman_not_found, 'enabled_by_default', True),\n                    reason='Skip if pacman is not available')\n@pytest.mark.parametrize('command, fixed', [\n    (Command('yaourt -S llc', 'error: target not found: llc'), ['yaourt -S extra/llvm', 'yaourt -S extra/llvm35']),\n    (Command('pacman -S llc', 'error: target not found: llc'), ['pacman -S extra/llvm', 'pacman -S extra/llvm35']),\n    (Command('sudo pacman -S llc', 'error: target not found: llc'), ['sudo pacman -S extra/llvm', 'sudo pacman -S extra/llvm35'])])\ndef test_get_new_command(command, fixed):\n    assert get_new_command(command) == fixed\n\n\n@pytest.mark.parametrize('command, fixed', [\n    (Command('yaourt -S llc', 'error: target not found: llc'), ['yaourt -S extra/llvm', 'yaourt -S extra/llvm35']),\n    (Command('pacman -S llc', 'error: target not found: llc'), ['pacman -S extra/llvm', 'pacman -S extra/llvm35']),\n    (Command('sudo pacman -S llc', 'error: target not found: llc'), ['sudo pacman -S extra/llvm', 'sudo pacman -S extra/llvm35'])])\n@patch('thefuck.specific.archlinux.subprocess')\ndef test_get_new_command_mocked(subp_mock, command, fixed):\n    subp_mock.check_output.return_value = PKGFILE_OUTPUT_LLC\n    assert get_new_command(command) == fixed\n", "comments": "extra/llvm 3.6.0-5      /usr/bin/llc\nextra/llvm35 3.5.2-13/usr/bin/llc\nc\n", "content": "import pytest\nfrom mock import patch\nfrom thefuck.rules import pacman_not_found\nfrom thefuck.rules.pacman_not_found import match, get_new_command\nfrom thefuck.types import Command\n\nPKGFILE_OUTPUT_LLC = '''extra/llvm 3.6.0-5      /usr/bin/llc\nextra/llvm35 3.5.2-13/usr/bin/llc'''\n\n\n@pytest.mark.skipif(not getattr(pacman_not_found, 'enabled_by_default', True),\n                    reason='Skip if pacman is not available')\n@pytest.mark.parametrize('command', [\n    Command('yaourt -S llc', 'error: target not found: llc'),\n    Command('pacman llc', 'error: target not found: llc'),\n    Command('sudo pacman llc', 'error: target not found: llc')])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('yaourt -S llc', 'error: target not found: llc'),\n    Command('pacman llc', 'error: target not found: llc'),\n    Command('sudo pacman llc', 'error: target not found: llc')])\n@patch('thefuck.specific.archlinux.subprocess')\ndef test_match_mocked(subp_mock, command):\n    subp_mock.check_output.return_value = PKGFILE_OUTPUT_LLC\n    assert match(command)\n\n\n@pytest.mark.skipif(not getattr(pacman_not_found, 'enabled_by_default', True),\n                    reason='Skip if pacman is not available')\n@pytest.mark.parametrize('command, fixed', [\n    (Command('yaourt -S llc', 'error: target not found: llc'), ['yaourt -S extra/llvm', 'yaourt -S extra/llvm35']),\n    (Command('pacman -S llc', 'error: target not found: llc'), ['pacman -S extra/llvm', 'pacman -S extra/llvm35']),\n    (Command('sudo pacman -S llc', 'error: target not found: llc'), ['sudo pacman -S extra/llvm', 'sudo pacman -S extra/llvm35'])])\ndef test_get_new_command(command, fixed):\n    assert get_new_command(command) == fixed\n\n\n@pytest.mark.parametrize('command, fixed', [\n    (Command('yaourt -S llc', 'error: target not found: llc'), ['yaourt -S extra/llvm', 'yaourt -S extra/llvm35']),\n    (Command('pacman -S llc', 'error: target not found: llc'), ['pacman -S extra/llvm', 'pacman -S extra/llvm35']),\n    (Command('sudo pacman -S llc', 'error: target not found: llc'), ['sudo pacman -S extra/llvm', 'sudo pacman -S extra/llvm35'])])\n@patch('thefuck.specific.archlinux.subprocess')\ndef test_get_new_command_mocked(subp_mock, command, fixed):\n    subp_mock.check_output.return_value = PKGFILE_OUTPUT_LLC\n    assert get_new_command(command) == fixed\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_pacman_not_found.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_pacman_not_found.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
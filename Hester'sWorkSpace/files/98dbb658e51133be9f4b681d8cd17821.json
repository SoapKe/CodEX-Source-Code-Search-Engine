{"author": "mitmproxy", "code": "import io\nimport contextlib\nfrom unittest import mock\n\nimport pytest\n\nfrom mitmproxy.utils import arg_check\n\n\n@pytest.mark.parametrize('arg, output', [\n    ([\"-T\"], \"-T is deprecated, please use --mode transparent instead\"),\n    ([\"-U\"], \"-U is deprecated, please use --mode upstream:SPEC instead\"),\n    ([\"--cadir\"], \"--cadir is deprecated.\\n\"\n                  \"Please use `--set cadir=value` instead.\\n\"\n                  \"To show all options and their default values use --options\"),\n    ([\"--palette\"], \"--palette is deprecated.\\n\"\n                    \"Please use `--set console_palette=value` instead.\\n\"\n                    \"To show all options and their default values use --options\"),\n    ([\"--wfile\"], \"--wfile is deprecated.\\n\"\n                  \"Please use `--save-stream-file` instead.\"),\n    ([\"--eventlog\"], \"--eventlog has been removed.\"),\n    ([\"--nonanonymous\"], '--nonanonymous is deprecated.\\n'\n                         'Please use `--proxyauth SPEC` instead.\\n'\n                         'SPEC Format: \"username:pass\", \"any\" to accept any user/pass combination,\\n'\n                         '\"@path\" to use an Apache htpasswd file, or\\n'\n                         '\"ldap[s]:url_server_ldap:dn_auth:password:dn_subtree\" '\n                         'for LDAP authentication.')\n\n])\ndef test_check_args(arg, output):\n    f = io.StringIO()\n    with contextlib.redirect_stdout(f):\n        with mock.patch('sys.argv') as m:\n            m.__getitem__.return_value = arg\n            arg_check.check()\n            assert f.getvalue().strip() == output\n", "comments": "", "content": "import io\nimport contextlib\nfrom unittest import mock\n\nimport pytest\n\nfrom mitmproxy.utils import arg_check\n\n\n@pytest.mark.parametrize('arg, output', [\n    ([\"-T\"], \"-T is deprecated, please use --mode transparent instead\"),\n    ([\"-U\"], \"-U is deprecated, please use --mode upstream:SPEC instead\"),\n    ([\"--cadir\"], \"--cadir is deprecated.\\n\"\n                  \"Please use `--set cadir=value` instead.\\n\"\n                  \"To show all options and their default values use --options\"),\n    ([\"--palette\"], \"--palette is deprecated.\\n\"\n                    \"Please use `--set console_palette=value` instead.\\n\"\n                    \"To show all options and their default values use --options\"),\n    ([\"--wfile\"], \"--wfile is deprecated.\\n\"\n                  \"Please use `--save-stream-file` instead.\"),\n    ([\"--eventlog\"], \"--eventlog has been removed.\"),\n    ([\"--nonanonymous\"], '--nonanonymous is deprecated.\\n'\n                         'Please use `--proxyauth SPEC` instead.\\n'\n                         'SPEC Format: \"username:pass\", \"any\" to accept any user/pass combination,\\n'\n                         '\"@path\" to use an Apache htpasswd file, or\\n'\n                         '\"ldap[s]:url_server_ldap:dn_auth:password:dn_subtree\" '\n                         'for LDAP authentication.')\n\n])\ndef test_check_args(arg, output):\n    f = io.StringIO()\n    with contextlib.redirect_stdout(f):\n        with mock.patch('sys.argv') as m:\n            m.__getitem__.return_value = arg\n            arg_check.check()\n            assert f.getvalue().strip() == output\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_arg_check.py", "id": "98dbb658e51133be9f4b681d8cd17821", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/test/mitmproxy/utils/test_arg_check.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
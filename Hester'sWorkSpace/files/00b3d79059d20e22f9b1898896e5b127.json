{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_wafpolicy\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of WafPolicy Avi RESTful Object\ndescription:\n    - This module is used to configure WafPolicy object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.5\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    created_by:\n        description:\n            - Creator name.\n            - Field introduced in 17.2.4.\n    crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are system created with crs groups.\n            - Field introduced in 17.2.1.\n    description:\n        description:\n            - Field introduced in 17.2.1.\n    mode:\n        description:\n            - Waf policy mode.\n            - This can be detection or enforcement.\n            - Enum options - WAF_MODE_DETECTION_ONLY, WAF_MODE_ENFORCEMENT.\n            - Field introduced in 17.2.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as WAF_MODE_DETECTION_ONLY.\n        required: true\n    name:\n        description:\n            - Field introduced in 17.2.1.\n        required: true\n    paranoia_level:\n        description:\n            - Waf ruleset paranoia  mode.\n            - This is used to select rules based on the paranoia-level tag.\n            - Enum options - WAF_PARANOIA_LEVEL_LOW, WAF_PARANOIA_LEVEL_MEDIUM, WAF_PARANOIA_LEVEL_HIGH, WAF_PARANOIA_LEVEL_EXTREME.\n            - Field introduced in 17.2.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as WAF_PARANOIA_LEVEL_LOW.\n    post_crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are created by the user and will be enforced after the crs groups.\n            - Field introduced in 17.2.1.\n    pre_crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are created by the user and will be  enforced before the crs groups.\n            - Field introduced in 17.2.1.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n            - Field introduced in 17.2.1.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Field introduced in 17.2.1.\n    waf_profile_ref:\n        description:\n            - Waf profile for waf policy.\n            - It is a reference to an object of type wafprofile.\n            - Field introduced in 17.2.1.\n        required: true\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: WafPolicy (api/wafpolicy) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        created_by=dict(type='str',),\n        crs_groups=dict(type='list',),\n        description=dict(type='str',),\n        mode=dict(type='str', required=True),\n        name=dict(type='str', required=True),\n        paranoia_level=dict(type='str',),\n        post_crs_groups=dict(type='list',),\n        pre_crs_groups=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n        waf_profile_ref=dict(type='str', required=True),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'wafpolicy',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  example create wafpolicy object   avi wafpolicy      controller  10 10 25 42     username  admin     password  something     state  present     name  sample wafpolicy              module  avi wafpolicy author  gaurav rastogi (grastogi avinetworks com)  short description  module setup wafpolicy avi restful object description        this module used configure wafpolicy object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 5  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       created          description                creator name                field introduced 17 2 4      crs groups          description                waf rules categorized groups based characterization                these groups system created crs groups                field introduced 17 2 1      description          description                field introduced 17 2 1      mode          description                waf policy mode                this detection enforcement                enum options   waf mode detection only  waf mode enforcement                field introduced 17 2 1                default value specified api module interpreted avi controller waf mode detection only          required  true     name          description                field introduced 17 2 1          required  true     paranoia level          description                waf ruleset paranoia  mode                this used select rules based paranoia level tag                enum options   waf paranoia level low  waf paranoia level medium  waf paranoia level high  waf paranoia level extreme                field introduced 17 2 1                default value specified api module interpreted avi controller waf paranoia level low      post crs groups          description                waf rules categorized groups based characterization                these groups created user enforced crs groups                field introduced 17 2 1      pre crs groups          description                waf rules categorized groups based characterization                these groups created user  enforced crs groups                field introduced 17 2 1      tenant ref          description                it reference object type tenant                field introduced 17 2 1      url          description                avi controller url object      uuid          description                field introduced 17 2 1      waf profile ref          description                waf profile waf policy                it reference object type wafprofile                field introduced 17 2 1          required  true extends documentation fragment        avi      examples     return       obj      description  wafpolicy (api wafpolicy) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_wafpolicy\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of WafPolicy Avi RESTful Object\ndescription:\n    - This module is used to configure WafPolicy object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.5\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    created_by:\n        description:\n            - Creator name.\n            - Field introduced in 17.2.4.\n    crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are system created with crs groups.\n            - Field introduced in 17.2.1.\n    description:\n        description:\n            - Field introduced in 17.2.1.\n    mode:\n        description:\n            - Waf policy mode.\n            - This can be detection or enforcement.\n            - Enum options - WAF_MODE_DETECTION_ONLY, WAF_MODE_ENFORCEMENT.\n            - Field introduced in 17.2.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as WAF_MODE_DETECTION_ONLY.\n        required: true\n    name:\n        description:\n            - Field introduced in 17.2.1.\n        required: true\n    paranoia_level:\n        description:\n            - Waf ruleset paranoia  mode.\n            - This is used to select rules based on the paranoia-level tag.\n            - Enum options - WAF_PARANOIA_LEVEL_LOW, WAF_PARANOIA_LEVEL_MEDIUM, WAF_PARANOIA_LEVEL_HIGH, WAF_PARANOIA_LEVEL_EXTREME.\n            - Field introduced in 17.2.1.\n            - Default value when not specified in API or module is interpreted by Avi Controller as WAF_PARANOIA_LEVEL_LOW.\n    post_crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are created by the user and will be enforced after the crs groups.\n            - Field introduced in 17.2.1.\n    pre_crs_groups:\n        description:\n            - Waf rules are categorized in to groups based on their characterization.\n            - These groups are created by the user and will be  enforced before the crs groups.\n            - Field introduced in 17.2.1.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n            - Field introduced in 17.2.1.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Field introduced in 17.2.1.\n    waf_profile_ref:\n        description:\n            - Waf profile for waf policy.\n            - It is a reference to an object of type wafprofile.\n            - Field introduced in 17.2.1.\n        required: true\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Example to create WafPolicy object\n  avi_wafpolicy:\n    controller: 10.10.25.42\n    username: admin\n    password: something\n    state: present\n    name: sample_wafpolicy\n\"\"\"\n\nRETURN = '''\nobj:\n    description: WafPolicy (api/wafpolicy) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        created_by=dict(type='str',),\n        crs_groups=dict(type='list',),\n        description=dict(type='str',),\n        mode=dict(type='str', required=True),\n        name=dict(type='str', required=True),\n        paranoia_level=dict(type='str',),\n        post_crs_groups=dict(type='list',),\n        pre_crs_groups=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n        waf_profile_ref=dict(type='str', required=True),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'wafpolicy',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_wafpolicy.py", "id": "00b3d79059d20e22f9b1898896e5b127", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_wafpolicy.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
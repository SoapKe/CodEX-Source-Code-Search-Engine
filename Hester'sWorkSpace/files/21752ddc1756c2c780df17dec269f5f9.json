{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass BellMediaIE(InfoExtractor):\n    _VALID_URL = r\n    _TESTS = [{\n        'url': 'http://www.ctv.ca/video/player?vid=706966',\n        'md5': 'ff2ebbeae0aa2dcc32a830c3fd69b7b0',\n        'info_dict': {\n            'id': '706966',\n            'ext': 'mp4',\n            'title': 'Larry Day and Richard Jutras on the TIFF red carpet of \\'Stonewall\\'',\n            'description': 'etalk catches up with Larry Day and Richard Jutras on the TIFF red carpet of \"Stonewall\u201d.',\n            'upload_date': '20150919',\n            'timestamp': 1442624700,\n        },\n        'expected_warnings': ['HTTP Error 404'],\n    }, {\n        'url': 'http://www.thecomedynetwork.ca/video/player?vid=923582',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.tsn.ca/video/expectations-high-for-milos-raonic-at-us-open~939549',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.bnn.ca/video/berman-s-call-part-two-viewer-questions~939654',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ctv.ca/YourMorning/Video/S1E6-Monday-August-29-2016-vid938009',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.much.com/shows/atmidnight/episode948007/tuesday-september-13-2016',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.much.com/shows/the-almost-impossible-gameshow/928979/episode-6',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ctv.ca/DCs-Legends-of-Tomorrow/Video/S2E11-Turncoat-vid1051430',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.etalk.ca/video?videoid=663455',\n        'only_matching': True,\n    }]\n    _DOMAINS = {\n        'thecomedynetwork': 'comedy',\n        'discoveryvelocity': 'discvel',\n        'sciencechannel': 'discsci',\n        'investigationdiscovery': 'invdisc',\n        'animalplanet': 'aniplan',\n        'etalk': 'ctv',\n    }\n\n    def _real_extract(self, url):\n        domain, video_id = re.match(self._VALID_URL, url).groups()\n        domain = domain.split('.')[0]\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': '9c9media:%s_web:%s' % (self._DOMAINS.get(domain, domain), video_id),\n            'ie_key': 'NineCNineMedia',\n        }\n", "comments": "(?x)https?://(?:www\\.)?\n        (?P<domain>\n            (?:\n                ctv|\n                tsn|\n                bnn|\n                thecomedynetwork|\n                discovery|\n                discoveryvelocity|\n                sciencechannel|\n                investigationdiscovery|\n                animalplanet|\n                bravo|\n                mtv|\n                space|\n                etalk\n            )\\.ca|\n            much\\.com\n        )/.*?(?:\\bvid(?:eoid)?=|-vid|~|%7E|/(?:episode)?)(?P<id>[0-9]{6,})\n)\n# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass BellMediaIE(InfoExtractor):\n    _VALID_URL = r'''(?x)https?://(?:www\\.)?\n        (?P<domain>\n            (?:\n                ctv|\n                tsn|\n                bnn|\n                thecomedynetwork|\n                discovery|\n                discoveryvelocity|\n                sciencechannel|\n                investigationdiscovery|\n                animalplanet|\n                bravo|\n                mtv|\n                space|\n                etalk\n            )\\.ca|\n            much\\.com\n        )/.*?(?:\\bvid(?:eoid)?=|-vid|~|%7E|/(?:episode)?)(?P<id>[0-9]{6,})'''\n    _TESTS = [{\n        'url': 'http://www.ctv.ca/video/player?vid=706966',\n        'md5': 'ff2ebbeae0aa2dcc32a830c3fd69b7b0',\n        'info_dict': {\n            'id': '706966',\n            'ext': 'mp4',\n            'title': 'Larry Day and Richard Jutras on the TIFF red carpet of \\'Stonewall\\'',\n            'description': 'etalk catches up with Larry Day and Richard Jutras on the TIFF red carpet of \"Stonewall\u201d.',\n            'upload_date': '20150919',\n            'timestamp': 1442624700,\n        },\n        'expected_warnings': ['HTTP Error 404'],\n    }, {\n        'url': 'http://www.thecomedynetwork.ca/video/player?vid=923582',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.tsn.ca/video/expectations-high-for-milos-raonic-at-us-open~939549',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.bnn.ca/video/berman-s-call-part-two-viewer-questions~939654',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ctv.ca/YourMorning/Video/S1E6-Monday-August-29-2016-vid938009',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.much.com/shows/atmidnight/episode948007/tuesday-september-13-2016',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.much.com/shows/the-almost-impossible-gameshow/928979/episode-6',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.ctv.ca/DCs-Legends-of-Tomorrow/Video/S2E11-Turncoat-vid1051430',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.etalk.ca/video?videoid=663455',\n        'only_matching': True,\n    }]\n    _DOMAINS = {\n        'thecomedynetwork': 'comedy',\n        'discoveryvelocity': 'discvel',\n        'sciencechannel': 'discsci',\n        'investigationdiscovery': 'invdisc',\n        'animalplanet': 'aniplan',\n        'etalk': 'ctv',\n    }\n\n    def _real_extract(self, url):\n        domain, video_id = re.match(self._VALID_URL, url).groups()\n        domain = domain.split('.')[0]\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': '9c9media:%s_web:%s' % (self._DOMAINS.get(domain, domain), video_id),\n            'ie_key': 'NineCNineMedia',\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "bellmedia.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/bellmedia.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
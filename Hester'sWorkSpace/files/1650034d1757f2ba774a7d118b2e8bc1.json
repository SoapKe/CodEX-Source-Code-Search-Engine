{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_backup\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of Backup Avi RESTful Object\ndescription:\n    - This module is used to configure Backup object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    backup_config_ref:\n        description:\n            - Backupconfiguration information.\n            - It is a reference to an object of type backupconfiguration.\n    file_name:\n        description:\n            - The file name of backup.\n        required: true\n    local_file_url:\n        description:\n            - Url to download the backup file.\n    remote_file_url:\n        description:\n            - Url to download the backup file.\n    scheduler_ref:\n        description:\n            - Scheduler information.\n            - It is a reference to an object of type scheduler.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    timestamp:\n        description:\n            - Unix timestamp of when the backup file is created.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: Backup (api/backup) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        backup_config_ref=dict(type='str',),\n        file_name=dict(type='str', required=True),\n        local_file_url=dict(type='str',),\n        remote_file_url=dict(type='str',),\n        scheduler_ref=dict(type='str',),\n        tenant_ref=dict(type='str',),\n        timestamp=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'backup',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "      name  example create backup object   avi backup      controller  10 10 25 42     username  admin     password  something     state  present     name  sample backup              module  avi backup author  gaurav rastogi (grastogi avinetworks com)  short description  module setup backup avi restful object description        this module used configure backup object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 4  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       backup config ref          description                backupconfiguration information                it reference object type backupconfiguration      file name          description                the file name backup          required  true     local file url          description                url download backup file      remote file url          description                url download backup file      scheduler ref          description                scheduler information                it reference object type scheduler      tenant ref          description                it reference object type tenant      timestamp          description                unix timestamp backup file created      url          description                avi controller url object      uuid          description                unique object identifier object  extends documentation fragment        avi      examples     return       obj      description  backup (api backup) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_backup\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of Backup Avi RESTful Object\ndescription:\n    - This module is used to configure Backup object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    backup_config_ref:\n        description:\n            - Backupconfiguration information.\n            - It is a reference to an object of type backupconfiguration.\n    file_name:\n        description:\n            - The file name of backup.\n        required: true\n    local_file_url:\n        description:\n            - Url to download the backup file.\n    remote_file_url:\n        description:\n            - Url to download the backup file.\n    scheduler_ref:\n        description:\n            - Scheduler information.\n            - It is a reference to an object of type scheduler.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    timestamp:\n        description:\n            - Unix timestamp of when the backup file is created.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n- name: Example to create Backup object\n  avi_backup:\n    controller: 10.10.25.42\n    username: admin\n    password: something\n    state: present\n    name: sample_backup\n\"\"\"\n\nRETURN = '''\nobj:\n    description: Backup (api/backup) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        backup_config_ref=dict(type='str',),\n        file_name=dict(type='str', required=True),\n        local_file_url=dict(type='str',),\n        remote_file_url=dict(type='str',),\n        scheduler_ref=dict(type='str',),\n        tenant_ref=dict(type='str',),\n        timestamp=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'backup',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_backup.py", "id": "1650034d1757f2ba774a7d118b2e8bc1", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_backup.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "nvbn", "code": "import pytest\nfrom io import BytesIO\nfrom thefuck.types import Command\nfrom thefuck.rules.npm_missing_script import match, get_new_command\n\noutput = \n\n\n@pytest.fixture(autouse=True)\ndef run_script(mocker):\n    patch = mocker.patch('thefuck.specific.npm.Popen')\n    patch.return_value.stdout = BytesIO(run_script_stdout)\n    return patch.return_value\n\n\n@pytest.mark.parametrize('command', [\n    Command('npm ru wach', output('wach')),\n    Command('npm run live-tes', output('live-tes')),\n    Command('npm run-script sahare', output('sahare'))])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('npm wach', output('wach')),\n    Command('vim live-tes', output('live-tes')),\n    Command('npm run-script sahare', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('script, output, result', [\n    ('npm ru wach-tests', output('wach-tests'), 'npm ru watch-test'),\n    ('npm -i run-script dvelop', output('dvelop'),\n     'npm -i run-script develop'),\n    ('npm -i run-script buld -X POST', output('buld'),\n     'npm -i run-script build -X POST')])\ndef test_get_new_command(script, output, result):\n    command = Command(script, output)\n\n    assert get_new_command(command)[0] == result\n", "comments": "\nnpm ERR! Linux 4.4.0-31-generic\nnpm ERR! argv \"/opt/node/bin/node\" \"/opt/node/bin/npm\" \"run\" \"dvelop\"\nnpm ERR! node v4.4.7\nnpm ERR! npm  v2.15.8\n\nnpm ERR! missing script: {}\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/nvbn/exp/code_view/client_web/npm-debug.log\n'''.format\n\nrun_script_stdout = b'''\nLifecycle scripts included in code-view-web:\n  test\n    jest\n\navailable via `npm run-script`:\n  build\n    cp node_modules/ace-builds/src-min/ -a resources/ace/ && webpack --progress --colors -p --config ./webpack.production.config.js\n  develop\n    cp node_modules/ace-builds/src/ -a resources/ace/ && webpack-dev-server --progress --colors\n  watch-test\n    jest --verbose --watch\n\n\n\n\n", "content": "import pytest\nfrom io import BytesIO\nfrom thefuck.types import Command\nfrom thefuck.rules.npm_missing_script import match, get_new_command\n\noutput = '''\nnpm ERR! Linux 4.4.0-31-generic\nnpm ERR! argv \"/opt/node/bin/node\" \"/opt/node/bin/npm\" \"run\" \"dvelop\"\nnpm ERR! node v4.4.7\nnpm ERR! npm  v2.15.8\n\nnpm ERR! missing script: {}\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     <https://github.com/npm/npm/issues>\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/nvbn/exp/code_view/client_web/npm-debug.log\n'''.format\n\nrun_script_stdout = b'''\nLifecycle scripts included in code-view-web:\n  test\n    jest\n\navailable via `npm run-script`:\n  build\n    cp node_modules/ace-builds/src-min/ -a resources/ace/ && webpack --progress --colors -p --config ./webpack.production.config.js\n  develop\n    cp node_modules/ace-builds/src/ -a resources/ace/ && webpack-dev-server --progress --colors\n  watch-test\n    jest --verbose --watch\n\n'''\n\n\n@pytest.fixture(autouse=True)\ndef run_script(mocker):\n    patch = mocker.patch('thefuck.specific.npm.Popen')\n    patch.return_value.stdout = BytesIO(run_script_stdout)\n    return patch.return_value\n\n\n@pytest.mark.parametrize('command', [\n    Command('npm ru wach', output('wach')),\n    Command('npm run live-tes', output('live-tes')),\n    Command('npm run-script sahare', output('sahare'))])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('npm wach', output('wach')),\n    Command('vim live-tes', output('live-tes')),\n    Command('npm run-script sahare', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('script, output, result', [\n    ('npm ru wach-tests', output('wach-tests'), 'npm ru watch-test'),\n    ('npm -i run-script dvelop', output('dvelop'),\n     'npm -i run-script develop'),\n    ('npm -i run-script buld -X POST', output('buld'),\n     'npm -i run-script build -X POST')])\ndef test_get_new_command(script, output, result):\n    command = Command(script, output)\n\n    assert get_new_command(command)[0] == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_npm_missing_script.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_npm_missing_script.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "Zulko", "code": "# -*- coding: utf-8 -*-\n\nimport os\nimport sys\n\nimport pytest\nfrom moviepy.video.io.ImageSequenceClip import ImageSequenceClip\n\nsys.path.append(\"tests\")\nimport download_media\nfrom test_helper import TMP_DIR\n\ndef test_download_media(capsys):\n    with capsys.disabled():\n       download_media.download()\n\ndef test_1():\n    images=[]\n    durations=[]\n\n    for i in range(5):\n        durations.append(i)\n        images.append(\"media/python_logo.png\")\n        durations.append(i)\n        images.append(\"media/python_logo_upside_down.png\")\n\n    with ImageSequenceClip(images, durations=durations) as clip:\n        assert clip.duration == sum(durations)\n        clip.write_videofile(os.path.join(TMP_DIR, \"ImageSequenceClip1.mp4\"), fps=30)\n\ndef test_2():\n    images=[]\n    durations=[]\n\n    durations.append(1)\n    images.append(\"media/python_logo.png\")\n    durations.append(2)\n    images.append(\"media/matplotlib_demo1.png\")\n\n    \n    with pytest.raises(Exception, message='Expecting Exception'):\n         ImageSequenceClip(images, durations=durations).close()\n\n\nif __name__ == '__main__':\n   pytest.main()\n", "comments": "   image sequencing clip tests meant run pytest            coding  utf 8       images size   ", "content": "# -*- coding: utf-8 -*-\n\"\"\"Image sequencing clip tests meant to be run with pytest.\"\"\"\nimport os\nimport sys\n\nimport pytest\nfrom moviepy.video.io.ImageSequenceClip import ImageSequenceClip\n\nsys.path.append(\"tests\")\nimport download_media\nfrom test_helper import TMP_DIR\n\ndef test_download_media(capsys):\n    with capsys.disabled():\n       download_media.download()\n\ndef test_1():\n    images=[]\n    durations=[]\n\n    for i in range(5):\n        durations.append(i)\n        images.append(\"media/python_logo.png\")\n        durations.append(i)\n        images.append(\"media/python_logo_upside_down.png\")\n\n    with ImageSequenceClip(images, durations=durations) as clip:\n        assert clip.duration == sum(durations)\n        clip.write_videofile(os.path.join(TMP_DIR, \"ImageSequenceClip1.mp4\"), fps=30)\n\ndef test_2():\n    images=[]\n    durations=[]\n\n    durations.append(1)\n    images.append(\"media/python_logo.png\")\n    durations.append(2)\n    images.append(\"media/matplotlib_demo1.png\")\n\n    #images are not the same size..\n    with pytest.raises(Exception, message='Expecting Exception'):\n         ImageSequenceClip(images, durations=durations).close()\n\n\nif __name__ == '__main__':\n   pytest.main()\n", "description": "Video editing with Python", "file_name": "test_ImageSequenceClip.py", "id": "f016afccbd8773a57cbdb5da5b65c4eb", "language": "Python", "project_name": "moviepy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/Zulko-moviepy/Zulko-moviepy-6cbd4f3/tests/test_ImageSequenceClip.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:21:24Z", "url": "https://github.com/Zulko/moviepy", "wiki": true}
{"author": "ansible", "code": "\n -*- coding: utf-8 -*-\n\n Copyright (c) 2016 Red Hat, Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_mac_pools\nshort_description: Module to manage MAC pools in oVirt/RHV\nversion_added: \"2.3\"\nauthor: \"Ondra Machacek (@machacekondra)\"\ndescription:\n    - \"This module manage MAC pools in oVirt/RHV.\"\noptions:\n    name:\n        description:\n            - \"Name of the MAC pool to manage.\"\n        required: true\n    description:\n        description:\n            - \"Description of the MAC pool.\"\n    state:\n        description:\n            - \"Should the mac pool be present or absent.\"\n        choices: ['present', 'absent']\n        default: present\n    allow_duplicates:\n        description:\n            - \"If (true) allow a MAC address to be used multiple times in a pool.\"\n            - \"Default value is set by oVirt/RHV engine to I(false).\"\n    ranges:\n        description:\n            - \"List of MAC ranges. The from and to should be split by comma.\"\n            - \"For example: 00:1a:4a:16:01:51,00:1a:4a:16:01:61\"\nextends_documentation_fragment: ovirt\n'''\n\nEXAMPLES = '''\n Examples don't contain auth parameter for simplicity,\n look at ovirt_auth module to see how to reuse authentication:\n\n Create MAC pool:\n- ovirt_mac_pools:\n    name: mymacpool\n    allow_duplicates: false\n    ranges:\n      - 00:1a:4a:16:01:51,00:1a:4a:16:01:61\n      - 00:1a:4a:16:02:51,00:1a:4a:16:02:61\n\n Remove MAC pool:\n- ovirt_mac_pools:\n    state: absent\n    name: mymacpool\n'''\n\nRETURN = '''\nid:\n    description: ID of the MAC pool which is managed\n    returned: On success if MAC pool is found.\n    type: str\n    sample: 7de90f31-222c-436c-a1ca-7e655bd5b60c\ntemplate:\n    description: \"Dictionary of all the MAC pool attributes. MAC pool attributes can be found on your oVirt/RHV instance\n                  at following url: http://ovirt.github.io/ovirt-engine-api-model/master/types/mac_pool.\"\n    returned: On success if MAC pool is found.\n    type: dict\n'''\n\nimport traceback\n\ntry:\n    import ovirtsdk4.types as otypes\nexcept ImportError:\n    pass\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    BaseModule,\n    check_sdk,\n    equal,\n    create_connection,\n    ovirt_full_argument_spec,\n)\n\n\nclass MACPoolModule(BaseModule):\n\n    def build_entity(self):\n        return otypes.MacPool(\n            name=self._module.params['name'],\n            allow_duplicates=self._module.params['allow_duplicates'],\n            description=self._module.params['description'],\n            ranges=[\n                otypes.Range(\n                    from_=mac_range.split(',')[0],\n                    to=mac_range.split(',')[1],\n                )\n                for mac_range in self._module.params['ranges']\n            ],\n        )\n\n    def _compare_ranges(self, entity):\n        if self._module.params['ranges'] is not None:\n            ranges = sorted([\n                '%s,%s' % (mac_range.from_, mac_range.to)\n                for mac_range in entity.ranges\n            ])\n            return equal(sorted(self._module.params['ranges']), ranges)\n\n        return True\n\n    def update_check(self, entity):\n        return (\n            self._compare_ranges(entity) and\n            equal(self._module.params['allow_duplicates'], entity.allow_duplicates) and\n            equal(self._module.params['description'], entity.description)\n        )\n\n\ndef main():\n    argument_spec = ovirt_full_argument_spec(\n        state=dict(\n            choices=['present', 'absent'],\n            default='present',\n        ),\n        name=dict(default=None, required=True),\n        allow_duplicates=dict(default=None, type='bool'),\n        description=dict(default=None),\n        ranges=dict(default=None, type='list'),\n    )\n    module = AnsibleModule(\n        argument_spec=argument_spec,\n        supports_check_mode=True,\n    )\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        mac_pools_service = connection.system_service().mac_pools_service()\n        mac_pools_module = MACPoolModule(\n            connection=connection,\n            module=module,\n            service=mac_pools_service,\n        )\n\n        state = module.params['state']\n        if state == 'present':\n            ret = mac_pools_module.create()\n        elif state == 'absent':\n            ret = mac_pools_module.remove()\n\n        module.exit_json(**ret)\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == \"__main__\":\n    main()\n", "comments": "        module  ovirt mac pools short description  module manage mac pools ovirt rhv version added   2 3  author   ondra machacek ( machacekondra)  description         this module manage mac pools ovirt rhv   options      name          description                 name mac pool manage           required  true     description          description                 description mac pool       state          description                 should mac pool present absent           choices    present    absent           default  present     allow duplicates          description                 if (true) allow mac address used multiple times pool                  default value set ovirt rhv engine i(false)       ranges          description                 list mac ranges  the split comma                  for example  00 1a 4a 16 01 51 00 1a 4a 16 01 61  extends documentation fragment  ovirt      examples         examples contain auth parameter simplicity    look ovirt auth module see reuse authentication     create mac pool    ovirt mac pools      name  mymacpool     allow duplicates  false     ranges          00 1a 4a 16 01 51 00 1a 4a 16 01 61         00 1a 4a 16 02 51 00 1a 4a 16 02 61    remove mac pool    ovirt mac pools      state  absent     name  mymacpool      return       id      description  id mac pool managed     returned  on success mac pool found      type  str     sample  7de90f31 222c 436c a1ca 7e655bd5b60c template      description   dictionary mac pool attributes  mac pool attributes found ovirt rhv instance                   following url  http   ovirt github io ovirt engine api model master  types mac pool       returned  on success mac pool found      type  dict         usr bin python        coding  utf 8           copyright (c) 2016 red hat  inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses          examples contain auth parameter simplicity     look ovirt auth module see reuse authentication     create mac pool     remove mac pool    types mac pool   ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n#\n# Copyright (c) 2016 Red Hat, Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: ovirt_mac_pools\nshort_description: Module to manage MAC pools in oVirt/RHV\nversion_added: \"2.3\"\nauthor: \"Ondra Machacek (@machacekondra)\"\ndescription:\n    - \"This module manage MAC pools in oVirt/RHV.\"\noptions:\n    name:\n        description:\n            - \"Name of the MAC pool to manage.\"\n        required: true\n    description:\n        description:\n            - \"Description of the MAC pool.\"\n    state:\n        description:\n            - \"Should the mac pool be present or absent.\"\n        choices: ['present', 'absent']\n        default: present\n    allow_duplicates:\n        description:\n            - \"If (true) allow a MAC address to be used multiple times in a pool.\"\n            - \"Default value is set by oVirt/RHV engine to I(false).\"\n    ranges:\n        description:\n            - \"List of MAC ranges. The from and to should be split by comma.\"\n            - \"For example: 00:1a:4a:16:01:51,00:1a:4a:16:01:61\"\nextends_documentation_fragment: ovirt\n'''\n\nEXAMPLES = '''\n# Examples don't contain auth parameter for simplicity,\n# look at ovirt_auth module to see how to reuse authentication:\n\n# Create MAC pool:\n- ovirt_mac_pools:\n    name: mymacpool\n    allow_duplicates: false\n    ranges:\n      - 00:1a:4a:16:01:51,00:1a:4a:16:01:61\n      - 00:1a:4a:16:02:51,00:1a:4a:16:02:61\n\n# Remove MAC pool:\n- ovirt_mac_pools:\n    state: absent\n    name: mymacpool\n'''\n\nRETURN = '''\nid:\n    description: ID of the MAC pool which is managed\n    returned: On success if MAC pool is found.\n    type: str\n    sample: 7de90f31-222c-436c-a1ca-7e655bd5b60c\ntemplate:\n    description: \"Dictionary of all the MAC pool attributes. MAC pool attributes can be found on your oVirt/RHV instance\n                  at following url: http://ovirt.github.io/ovirt-engine-api-model/master/#types/mac_pool.\"\n    returned: On success if MAC pool is found.\n    type: dict\n'''\n\nimport traceback\n\ntry:\n    import ovirtsdk4.types as otypes\nexcept ImportError:\n    pass\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.ovirt import (\n    BaseModule,\n    check_sdk,\n    equal,\n    create_connection,\n    ovirt_full_argument_spec,\n)\n\n\nclass MACPoolModule(BaseModule):\n\n    def build_entity(self):\n        return otypes.MacPool(\n            name=self._module.params['name'],\n            allow_duplicates=self._module.params['allow_duplicates'],\n            description=self._module.params['description'],\n            ranges=[\n                otypes.Range(\n                    from_=mac_range.split(',')[0],\n                    to=mac_range.split(',')[1],\n                )\n                for mac_range in self._module.params['ranges']\n            ],\n        )\n\n    def _compare_ranges(self, entity):\n        if self._module.params['ranges'] is not None:\n            ranges = sorted([\n                '%s,%s' % (mac_range.from_, mac_range.to)\n                for mac_range in entity.ranges\n            ])\n            return equal(sorted(self._module.params['ranges']), ranges)\n\n        return True\n\n    def update_check(self, entity):\n        return (\n            self._compare_ranges(entity) and\n            equal(self._module.params['allow_duplicates'], entity.allow_duplicates) and\n            equal(self._module.params['description'], entity.description)\n        )\n\n\ndef main():\n    argument_spec = ovirt_full_argument_spec(\n        state=dict(\n            choices=['present', 'absent'],\n            default='present',\n        ),\n        name=dict(default=None, required=True),\n        allow_duplicates=dict(default=None, type='bool'),\n        description=dict(default=None),\n        ranges=dict(default=None, type='list'),\n    )\n    module = AnsibleModule(\n        argument_spec=argument_spec,\n        supports_check_mode=True,\n    )\n    check_sdk(module)\n\n    try:\n        auth = module.params.pop('auth')\n        connection = create_connection(auth)\n        mac_pools_service = connection.system_service().mac_pools_service()\n        mac_pools_module = MACPoolModule(\n            connection=connection,\n            module=module,\n            service=mac_pools_service,\n        )\n\n        state = module.params['state']\n        if state == 'present':\n            ret = mac_pools_module.create()\n        elif state == 'absent':\n            ret = mac_pools_module.remove()\n\n        module.exit_json(**ret)\n    except Exception as e:\n        module.fail_json(msg=str(e), exception=traceback.format_exc())\n    finally:\n        connection.close(logout=auth.get('token') is None)\n\n\nif __name__ == \"__main__\":\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "ovirt_mac_pools.py", "id": "e565cf6aa33bc6adea736db06640d4ed", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/cloud/ovirt/ovirt_mac_pools.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
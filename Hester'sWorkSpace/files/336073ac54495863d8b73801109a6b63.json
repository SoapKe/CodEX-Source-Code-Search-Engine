{"author": "tgalal", "code": "'''\nCopyright (c) <2012> Tarek Galal <tare2.galal@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR\nA PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'''\n\nfrom yowsup.common.http.warequest import WARequest\nfrom yowsup.common.http.waresponseparser import JSONResponseParser\nfrom yowsup.common.tools import StorageTools\nimport hashlib\nimport os\n\nclass WARegRequest(WARequest):\n\n    def __init__(self,cc, p_in, code):\n        super(WARegRequest,self).__init__()\n        idx = StorageTools.getIdentity(cc + p_in)\n\n        if idx is None:\n            raise ValueError(\"You have to request code first\")\n\n        self.addParam(\"cc\", cc)\n        self.addParam(\"in\", p_in)\n\n        self.addParam(\"id\", idx)\n        self.addParam(\"code\", code)\n\n        self.addParam(\"lc\", \"GB\")\n        self.addParam(\"lg\", \"en\")\n\n        self.addParam(\"mistyped\", '6')\n        # self.addParam('network_radio_type', '1')\n        self.addParam('simnum', '1')\n        self.addParam('s', '')\n        self.addParam('copiedrc', '1')\n        self.addParam('hasinrc', '1')\n        self.addParam('rcmatch', '1')\n        self.addParam('pid', os.getpid())\n        self.addParam('rchash', hashlib.sha256(os.urandom(20)).hexdigest())\n        self.addParam('anhash', hashlib.md5(os.urandom(20)).hexdigest())\n        self.addParam('extexist', '1')\n        self.addParam('extstate', '1')\n\n        self.url = \"v.whatsapp.net/v2/register\"\n\n        self.pvars = [\"status\", \"login\", \"pw\", \"type\", \"expiration\", \"kind\", \"price\", \"cost\", \"currency\", \"price_expiration\",\n                      \"reason\",\"retry_after\"]\n\n        self.setParser(JSONResponseParser())\n\n    def register(self):\n        return self.send()\n", "comments": "    copyright (c)  2012  tarek galal  tare2 galal gmail com   permission hereby granted  free charge  person obtaining copy software associated documentation files (the  software )  deal software without restriction  including without limitation rights use  copy  modify  merge  publish  distribute  sublicense  sell copies software  permit persons software furnished  subject following conditions   the copyright notice permission notice shall included copies substantial portions software   the software is provided  as is   without warranty of any kind  express or implied  including but not limited to the warranties of merchantability  fitness for a particular purpose and noninfringement  in no event shall the authors or copyright holders be liable for any claim  damages or other liability  whether in an action of contract  tort or otherwise  arising from  out of or in connection with the software or the use or other dealings in the software         self addparam( network radio type    1 ) ", "content": "'''\nCopyright (c) <2012> Tarek Galal <tare2.galal@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this\nsoftware and associated documentation files (the \"Software\"), to deal in the Software\nwithout restriction, including without limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR\nA PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\nCONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\nOR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'''\n\nfrom yowsup.common.http.warequest import WARequest\nfrom yowsup.common.http.waresponseparser import JSONResponseParser\nfrom yowsup.common.tools import StorageTools\nimport hashlib\nimport os\n\nclass WARegRequest(WARequest):\n\n    def __init__(self,cc, p_in, code):\n        super(WARegRequest,self).__init__()\n        idx = StorageTools.getIdentity(cc + p_in)\n\n        if idx is None:\n            raise ValueError(\"You have to request code first\")\n\n        self.addParam(\"cc\", cc)\n        self.addParam(\"in\", p_in)\n\n        self.addParam(\"id\", idx)\n        self.addParam(\"code\", code)\n\n        self.addParam(\"lc\", \"GB\")\n        self.addParam(\"lg\", \"en\")\n\n        self.addParam(\"mistyped\", '6')\n        # self.addParam('network_radio_type', '1')\n        self.addParam('simnum', '1')\n        self.addParam('s', '')\n        self.addParam('copiedrc', '1')\n        self.addParam('hasinrc', '1')\n        self.addParam('rcmatch', '1')\n        self.addParam('pid', os.getpid())\n        self.addParam('rchash', hashlib.sha256(os.urandom(20)).hexdigest())\n        self.addParam('anhash', hashlib.md5(os.urandom(20)).hexdigest())\n        self.addParam('extexist', '1')\n        self.addParam('extstate', '1')\n\n        self.url = \"v.whatsapp.net/v2/register\"\n\n        self.pvars = [\"status\", \"login\", \"pw\", \"type\", \"expiration\", \"kind\", \"price\", \"cost\", \"currency\", \"price_expiration\",\n                      \"reason\",\"retry_after\"]\n\n        self.setParser(JSONResponseParser())\n\n    def register(self):\n        return self.send()\n", "description": "The python WhatsApp library", "file_name": "regrequest.py", "id": "336073ac54495863d8b73801109a6b63", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/registration/regrequest.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
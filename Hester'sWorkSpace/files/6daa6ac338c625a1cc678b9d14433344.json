{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    sanitized_Request,\n)\n\n\nclass EveryonesMixtapeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?everyonesmixtape\\.com/\n\n    _TESTS = [{\n        'url': 'http://everyonesmixtape.com/\n        'info_dict': {\n            'id': '5bfseWNmlds',\n            'ext': 'mp4',\n            'title': \"Passion Pit - \\\"Sleepyhead\\\" (Official Music Video)\",\n            'uploader': 'FKR.TV',\n            'uploader_id': 'frenchkissrecords',\n            'description': \"Music video for \\\"Sleepyhead\\\" from Passion Pit's debut EP Chunk Of Change.\\nBuy on iTunes: https://itunes.apple.com/us/album/chunk-of-change-ep/id300087641\\n\\nDirected by The Wilderness.\\n\\nhttp://www.passionpitmusic.com\\nhttp://www.frenchkissrecords.com\",\n            'upload_date': '20081015'\n        },\n        'params': {\n            'skip_download': True,  \n        }\n    }, {\n        'url': 'http://everyonesmixtape.com/\n        'info_dict': {\n            'id': 'm7m0jJAbMQi',\n            'title': 'Driving',\n        },\n        'playlist_count': 24\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        playlist_id = mobj.group('id')\n\n        pllist_url = 'http://everyonesmixtape.com/mixtape.php?a=getMixes&u=-1&linked=%s&explore=' % playlist_id\n        pllist_req = sanitized_Request(pllist_url)\n        pllist_req.add_header('X-Requested-With', 'XMLHttpRequest')\n\n        playlist_list = self._download_json(\n            pllist_req, playlist_id, note='Downloading playlist metadata')\n        try:\n            playlist_no = next(playlist['id']\n                               for playlist in playlist_list\n                               if playlist['code'] == playlist_id)\n        except StopIteration:\n            raise ExtractorError('Playlist id not found')\n\n        pl_url = 'http://everyonesmixtape.com/mixtape.php?a=getMix&id=%s&userId=null&code=' % playlist_no\n        pl_req = sanitized_Request(pl_url)\n        pl_req.add_header('X-Requested-With', 'XMLHttpRequest')\n        playlist = self._download_json(\n            pl_req, playlist_id, note='Downloading playlist info')\n\n        entries = [{\n            '_type': 'url',\n            'url': t['url'],\n            'title': t['title'],\n        } for t in playlist['tracks']]\n\n        if mobj.group('songnr'):\n            songnr = int(mobj.group('songnr')) - 1\n            return entries[songnr]\n\n        playlist_title = playlist['mixData']['name']\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'title': playlist_title,\n            'entries': entries,\n        }\n", "comments": "#/mix/(?P<id>[0-9a-zA-Z]+)(?:/(?P<songnr>[0-9]))?$'\n#/mix/m7m0jJAbMQi/5',\n# This is simply YouTube\n#/mix/m7m0jJAbMQi',\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    sanitized_Request,\n)\n\n\nclass EveryonesMixtapeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?everyonesmixtape\\.com/#/mix/(?P<id>[0-9a-zA-Z]+)(?:/(?P<songnr>[0-9]))?$'\n\n    _TESTS = [{\n        'url': 'http://everyonesmixtape.com/#/mix/m7m0jJAbMQi/5',\n        'info_dict': {\n            'id': '5bfseWNmlds',\n            'ext': 'mp4',\n            'title': \"Passion Pit - \\\"Sleepyhead\\\" (Official Music Video)\",\n            'uploader': 'FKR.TV',\n            'uploader_id': 'frenchkissrecords',\n            'description': \"Music video for \\\"Sleepyhead\\\" from Passion Pit's debut EP Chunk Of Change.\\nBuy on iTunes: https://itunes.apple.com/us/album/chunk-of-change-ep/id300087641\\n\\nDirected by The Wilderness.\\n\\nhttp://www.passionpitmusic.com\\nhttp://www.frenchkissrecords.com\",\n            'upload_date': '20081015'\n        },\n        'params': {\n            'skip_download': True,  # This is simply YouTube\n        }\n    }, {\n        'url': 'http://everyonesmixtape.com/#/mix/m7m0jJAbMQi',\n        'info_dict': {\n            'id': 'm7m0jJAbMQi',\n            'title': 'Driving',\n        },\n        'playlist_count': 24\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        playlist_id = mobj.group('id')\n\n        pllist_url = 'http://everyonesmixtape.com/mixtape.php?a=getMixes&u=-1&linked=%s&explore=' % playlist_id\n        pllist_req = sanitized_Request(pllist_url)\n        pllist_req.add_header('X-Requested-With', 'XMLHttpRequest')\n\n        playlist_list = self._download_json(\n            pllist_req, playlist_id, note='Downloading playlist metadata')\n        try:\n            playlist_no = next(playlist['id']\n                               for playlist in playlist_list\n                               if playlist['code'] == playlist_id)\n        except StopIteration:\n            raise ExtractorError('Playlist id not found')\n\n        pl_url = 'http://everyonesmixtape.com/mixtape.php?a=getMix&id=%s&userId=null&code=' % playlist_no\n        pl_req = sanitized_Request(pl_url)\n        pl_req.add_header('X-Requested-With', 'XMLHttpRequest')\n        playlist = self._download_json(\n            pl_req, playlist_id, note='Downloading playlist info')\n\n        entries = [{\n            '_type': 'url',\n            'url': t['url'],\n            'title': t['title'],\n        } for t in playlist['tracks']]\n\n        if mobj.group('songnr'):\n            songnr = int(mobj.group('songnr')) - 1\n            return entries[songnr]\n\n        playlist_title = playlist['mixData']['name']\n        return {\n            '_type': 'playlist',\n            'id': playlist_id,\n            'title': playlist_title,\n            'entries': entries,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "everyonesmixtape.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/everyonesmixtape.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .cbs import CBSIE\nfrom ..utils import int_or_none\n\n\nclass CBSInteractiveIE(CBSIE):\n    _VALID_URL = r'https?://(?:www\\.)?(?P<site>cnet|zdnet)\\.com/(?:videos|video(?:/share)?)/(?P<id>[^/?]+)'\n    _TESTS = [{\n        'url': 'http://www.cnet.com/videos/hands-on-with-microsofts-windows-8-1-update/',\n        'info_dict': {\n            'id': 'R49SYt__yAfmlXR85z4f7gNmCBDcN_00',\n            'display_id': 'hands-on-with-microsofts-windows-8-1-update',\n            'ext': 'mp4',\n            'title': 'Hands-on with Microsoft Windows 8.1 Update',\n            'description': 'The new update to the Windows 8 OS brings improved performance for mouse and keyboard users.',\n            'uploader_id': '6085384d-619e-11e3-b231-14feb5ca9861',\n            'uploader': 'Sarah Mitroff',\n            'duration': 70,\n            'timestamp': 1396479627,\n            'upload_date': '20140402',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.cnet.com/videos/whiny-pothole-tweets-at-local-government-when-hit-by-cars-tomorrow-daily-187/',\n        'md5': 'f11d27b2fa18597fbf92444d2a9ed386',\n        'info_dict': {\n            'id': 'kjOJd_OoVJqbg_ZD8MZCOk8Wekb9QccK',\n            'display_id': 'whiny-pothole-tweets-at-local-government-when-hit-by-cars-tomorrow-daily-187',\n            'ext': 'mp4',\n            'title': 'Whiny potholes tweet at local government when hit by cars (Tomorrow Daily 187)',\n            'description': 'md5:d2b9a95a5ffe978ae6fbd4cf944d618f',\n            'uploader_id': 'b163284d-6b73-44fc-b3e6-3da66c392d40',\n            'uploader': 'Ashley Esqueda',\n            'duration': 1482,\n            'timestamp': 1433289889,\n            'upload_date': '20150603',\n        },\n    }, {\n        'url': 'http://www.zdnet.com/video/share/video-keeping-android-smartphones-and-tablets-secure/',\n        'info_dict': {\n            'id': 'k0r4T_ehht4xW_hAOqiVQPuBDPZ8SRjt',\n            'display_id': 'video-keeping-android-smartphones-and-tablets-secure',\n            'ext': 'mp4',\n            'title': 'Video: Keeping Android smartphones and tablets secure',\n            'description': 'Here\\'s the best way to keep Android devices secure, and what you do when they\\'ve come to the end of their lives.',\n            'uploader_id': 'f2d97ea2-8175-11e2-9d12-0018fe8a00b0',\n            'uploader': 'Adrian Kingsley-Hughes',\n            'duration': 731,\n            'timestamp': 1449129925,\n            'upload_date': '20151203',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.zdnet.com/video/huawei-matebook-x-video/',\n        'only_matching': True,\n    }]\n\n    MPX_ACCOUNTS = {\n        'cnet': 2198311517,\n        'zdnet': 2387448114,\n    }\n\n    def _real_extract(self, url):\n        site, display_id = re.match(self._VALID_URL, url).groups()\n        webpage = self._download_webpage(url, display_id)\n\n        data_json = self._html_search_regex(\n            r\"data(?:-(?:cnet|zdnet))?-video(?:-(?:uvp(?:js)?|player))?-options='([^']+)'\",\n            webpage, 'data json')\n        data = self._parse_json(data_json, display_id)\n        vdata = data.get('video') or (data.get('videos') or data.get('playlist'))[0]\n\n        video_id = vdata['mpxRefId']\n\n        title = vdata['title']\n        author = vdata.get('author')\n        if author:\n            uploader = '%s %s' % (author['firstName'], author['lastName'])\n            uploader_id = author.get('id')\n        else:\n            uploader = None\n            uploader_id = None\n\n        info = self._extract_video_info(video_id, site, self.MPX_ACCOUNTS[site])\n        info.update({\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'duration': int_or_none(vdata.get('duration')),\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n        })\n        return info\n", "comments": "# coding: utf-8\n# m3u8 download\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .cbs import CBSIE\nfrom ..utils import int_or_none\n\n\nclass CBSInteractiveIE(CBSIE):\n    _VALID_URL = r'https?://(?:www\\.)?(?P<site>cnet|zdnet)\\.com/(?:videos|video(?:/share)?)/(?P<id>[^/?]+)'\n    _TESTS = [{\n        'url': 'http://www.cnet.com/videos/hands-on-with-microsofts-windows-8-1-update/',\n        'info_dict': {\n            'id': 'R49SYt__yAfmlXR85z4f7gNmCBDcN_00',\n            'display_id': 'hands-on-with-microsofts-windows-8-1-update',\n            'ext': 'mp4',\n            'title': 'Hands-on with Microsoft Windows 8.1 Update',\n            'description': 'The new update to the Windows 8 OS brings improved performance for mouse and keyboard users.',\n            'uploader_id': '6085384d-619e-11e3-b231-14feb5ca9861',\n            'uploader': 'Sarah Mitroff',\n            'duration': 70,\n            'timestamp': 1396479627,\n            'upload_date': '20140402',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.cnet.com/videos/whiny-pothole-tweets-at-local-government-when-hit-by-cars-tomorrow-daily-187/',\n        'md5': 'f11d27b2fa18597fbf92444d2a9ed386',\n        'info_dict': {\n            'id': 'kjOJd_OoVJqbg_ZD8MZCOk8Wekb9QccK',\n            'display_id': 'whiny-pothole-tweets-at-local-government-when-hit-by-cars-tomorrow-daily-187',\n            'ext': 'mp4',\n            'title': 'Whiny potholes tweet at local government when hit by cars (Tomorrow Daily 187)',\n            'description': 'md5:d2b9a95a5ffe978ae6fbd4cf944d618f',\n            'uploader_id': 'b163284d-6b73-44fc-b3e6-3da66c392d40',\n            'uploader': 'Ashley Esqueda',\n            'duration': 1482,\n            'timestamp': 1433289889,\n            'upload_date': '20150603',\n        },\n    }, {\n        'url': 'http://www.zdnet.com/video/share/video-keeping-android-smartphones-and-tablets-secure/',\n        'info_dict': {\n            'id': 'k0r4T_ehht4xW_hAOqiVQPuBDPZ8SRjt',\n            'display_id': 'video-keeping-android-smartphones-and-tablets-secure',\n            'ext': 'mp4',\n            'title': 'Video: Keeping Android smartphones and tablets secure',\n            'description': 'Here\\'s the best way to keep Android devices secure, and what you do when they\\'ve come to the end of their lives.',\n            'uploader_id': 'f2d97ea2-8175-11e2-9d12-0018fe8a00b0',\n            'uploader': 'Adrian Kingsley-Hughes',\n            'duration': 731,\n            'timestamp': 1449129925,\n            'upload_date': '20151203',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://www.zdnet.com/video/huawei-matebook-x-video/',\n        'only_matching': True,\n    }]\n\n    MPX_ACCOUNTS = {\n        'cnet': 2198311517,\n        'zdnet': 2387448114,\n    }\n\n    def _real_extract(self, url):\n        site, display_id = re.match(self._VALID_URL, url).groups()\n        webpage = self._download_webpage(url, display_id)\n\n        data_json = self._html_search_regex(\n            r\"data(?:-(?:cnet|zdnet))?-video(?:-(?:uvp(?:js)?|player))?-options='([^']+)'\",\n            webpage, 'data json')\n        data = self._parse_json(data_json, display_id)\n        vdata = data.get('video') or (data.get('videos') or data.get('playlist'))[0]\n\n        video_id = vdata['mpxRefId']\n\n        title = vdata['title']\n        author = vdata.get('author')\n        if author:\n            uploader = '%s %s' % (author['firstName'], author['lastName'])\n            uploader_id = author.get('id')\n        else:\n            uploader = None\n            uploader_id = None\n\n        info = self._extract_video_info(video_id, site, self.MPX_ACCOUNTS[site])\n        info.update({\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'duration': int_or_none(vdata.get('duration')),\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n        })\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "cbsinteractive.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/cbsinteractive.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
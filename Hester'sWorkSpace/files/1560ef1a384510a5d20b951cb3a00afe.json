{"author": "jwilder", "code": "import pytest\n\n\n@pytest.mark.parametrize(\"host,expected_port\", [\n    (\"f00.nginx-proxy.test\", 81),\n    (\"bar.nginx-proxy.test\", 81),\n    (\"test.nginx-proxy.f00\", 82),\n    (\"test.nginx-proxy.bar\", 82),\n    (\"web3.123.nginx-proxy.regexp\", 83),\n    (\"web3.ABC.nginx-proxy.regexp\", 83),\n    (\"web3.123.ABC.nginx-proxy.regexp\", 83),\n    (\"web3.123-ABC.nginx-proxy.regexp\", 83),\n    (\"web3.whatever.nginx-proxy.regexp-to-infinity-and-beyond\", 83),\n    (\"web4.123.nginx-proxy.regexp\", 84),\n    (\"web4.ABC.nginx-proxy.regexp\", 84),\n    (\"web4.123.ABC.nginx-proxy.regexp\", 84),\n    (\"web4.123-ABC.nginx-proxy.regexp\", 84),\n    (\"web4.whatever.nginx-proxy.regexp\", 84),\n])\ndef test_wildcard_prefix(docker_compose, nginxproxy, host, expected_port):\n    r = nginxproxy.get(\"http://%s/port\" % host)\n    assert r.status_code == 200\n    assert r.text == \"answer from port %s\\n\" % expected_port\n\n\n@pytest.mark.parametrize(\"host\", [\n    \"unexpected.nginx-proxy.tld\",\n    \"web4.whatever.nginx-proxy.regexp-to-infinity-and-beyond\"\n])\ndef test_non_matching_host_is_503(docker_compose, nginxproxy, host):\n    r = nginxproxy.get(\"http://%s/port\" % host)\n    assert r.status_code == 503, r.text\n", "comments": "", "content": "import pytest\n\n\n@pytest.mark.parametrize(\"host,expected_port\", [\n    (\"f00.nginx-proxy.test\", 81),\n    (\"bar.nginx-proxy.test\", 81),\n    (\"test.nginx-proxy.f00\", 82),\n    (\"test.nginx-proxy.bar\", 82),\n    (\"web3.123.nginx-proxy.regexp\", 83),\n    (\"web3.ABC.nginx-proxy.regexp\", 83),\n    (\"web3.123.ABC.nginx-proxy.regexp\", 83),\n    (\"web3.123-ABC.nginx-proxy.regexp\", 83),\n    (\"web3.whatever.nginx-proxy.regexp-to-infinity-and-beyond\", 83),\n    (\"web4.123.nginx-proxy.regexp\", 84),\n    (\"web4.ABC.nginx-proxy.regexp\", 84),\n    (\"web4.123.ABC.nginx-proxy.regexp\", 84),\n    (\"web4.123-ABC.nginx-proxy.regexp\", 84),\n    (\"web4.whatever.nginx-proxy.regexp\", 84),\n])\ndef test_wildcard_prefix(docker_compose, nginxproxy, host, expected_port):\n    r = nginxproxy.get(\"http://%s/port\" % host)\n    assert r.status_code == 200\n    assert r.text == \"answer from port %s\\n\" % expected_port\n\n\n@pytest.mark.parametrize(\"host\", [\n    \"unexpected.nginx-proxy.tld\",\n    \"web4.whatever.nginx-proxy.regexp-to-infinity-and-beyond\"\n])\ndef test_non_matching_host_is_503(docker_compose, nginxproxy, host):\n    r = nginxproxy.get(\"http://%s/port\" % host)\n    assert r.status_code == 503, r.text\n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_wildcard_host.py", "id": "1560ef1a384510a5d20b951cb3a00afe", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_wildcard_host.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
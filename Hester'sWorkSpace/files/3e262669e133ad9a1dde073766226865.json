{"author": "localstack", "code": "from localstack.services.infra import (register_plugin, Plugin,\n    start_s3, start_sns, start_ses, start_apigateway,\n    start_elasticsearch_service, start_lambda, start_redshift, start_firehose,\n    start_cloudwatch, start_cloudformation, start_dynamodbstreams, start_route53,\n    start_ssm)\nfrom localstack.services.apigateway import apigateway_listener\nfrom localstack.services.cloudformation import cloudformation_listener\nfrom localstack.services.dynamodb import dynamodb_listener, dynamodb_starter\nfrom localstack.services.kinesis import kinesis_listener, kinesis_starter\nfrom localstack.services.sns import sns_listener\nfrom localstack.services.sqs import sqs_listener, sqs_starter\nfrom localstack.services.s3 import s3_listener, s3_starter\nfrom localstack.services.es import es_starter\n\n\n\n\ndef register_localstack_plugins():\n    try:\n        register_plugin(Plugin('es',\n            start=start_elasticsearch_service))\n        register_plugin(Plugin('elasticsearch',\n            start=es_starter.start_elasticsearch,\n            check=es_starter.check_elasticsearch))\n        register_plugin(Plugin('s3',\n            start=start_s3,\n            check=s3_starter.check_s3,\n            listener=s3_listener.UPDATE_S3))\n        register_plugin(Plugin('sns',\n            start=start_sns,\n            listener=sns_listener.UPDATE_SNS))\n        register_plugin(Plugin('sqs',\n            start=sqs_starter.start_sqs,\n            listener=sqs_listener.UPDATE_SQS))\n        register_plugin(Plugin('ses',\n            start=start_ses))\n        register_plugin(Plugin('ssm',\n            start=start_ssm))\n        register_plugin(Plugin('apigateway',\n            start=start_apigateway,\n            listener=apigateway_listener.UPDATE_APIGATEWAY))\n        register_plugin(Plugin('dynamodb',\n            start=dynamodb_starter.start_dynamodb,\n            check=dynamodb_starter.check_dynamodb,\n            listener=dynamodb_listener.UPDATE_DYNAMODB))\n        register_plugin(Plugin('dynamodbstreams',\n            start=start_dynamodbstreams))\n        register_plugin(Plugin('firehose',\n            start=start_firehose))\n        register_plugin(Plugin('lambda',\n            start=start_lambda))\n        register_plugin(Plugin('kinesis',\n            start=kinesis_starter.start_kinesis,\n            check=kinesis_starter.check_kinesis,\n            listener=kinesis_listener.UPDATE_KINESIS))\n        register_plugin(Plugin('redshift',\n            start=start_redshift))\n        register_plugin(Plugin('route53',\n            start=start_route53))\n        register_plugin(Plugin('cloudformation',\n            start=start_cloudformation,\n            listener=cloudformation_listener.UPDATE_CLOUDFORMATION))\n        register_plugin(Plugin('cloudwatch',\n            start=start_cloudwatch))\n    except Exception as e:\n        print('Unable to register plugins: %s' % e)\n        raise e\n", "comments": "  register default plugins ", "content": "from localstack.services.infra import (register_plugin, Plugin,\n    start_s3, start_sns, start_ses, start_apigateway,\n    start_elasticsearch_service, start_lambda, start_redshift, start_firehose,\n    start_cloudwatch, start_cloudformation, start_dynamodbstreams, start_route53,\n    start_ssm)\nfrom localstack.services.apigateway import apigateway_listener\nfrom localstack.services.cloudformation import cloudformation_listener\nfrom localstack.services.dynamodb import dynamodb_listener, dynamodb_starter\nfrom localstack.services.kinesis import kinesis_listener, kinesis_starter\nfrom localstack.services.sns import sns_listener\nfrom localstack.services.sqs import sqs_listener, sqs_starter\nfrom localstack.services.s3 import s3_listener, s3_starter\nfrom localstack.services.es import es_starter\n\n\n# register default plugins\n\ndef register_localstack_plugins():\n    try:\n        register_plugin(Plugin('es',\n            start=start_elasticsearch_service))\n        register_plugin(Plugin('elasticsearch',\n            start=es_starter.start_elasticsearch,\n            check=es_starter.check_elasticsearch))\n        register_plugin(Plugin('s3',\n            start=start_s3,\n            check=s3_starter.check_s3,\n            listener=s3_listener.UPDATE_S3))\n        register_plugin(Plugin('sns',\n            start=start_sns,\n            listener=sns_listener.UPDATE_SNS))\n        register_plugin(Plugin('sqs',\n            start=sqs_starter.start_sqs,\n            listener=sqs_listener.UPDATE_SQS))\n        register_plugin(Plugin('ses',\n            start=start_ses))\n        register_plugin(Plugin('ssm',\n            start=start_ssm))\n        register_plugin(Plugin('apigateway',\n            start=start_apigateway,\n            listener=apigateway_listener.UPDATE_APIGATEWAY))\n        register_plugin(Plugin('dynamodb',\n            start=dynamodb_starter.start_dynamodb,\n            check=dynamodb_starter.check_dynamodb,\n            listener=dynamodb_listener.UPDATE_DYNAMODB))\n        register_plugin(Plugin('dynamodbstreams',\n            start=start_dynamodbstreams))\n        register_plugin(Plugin('firehose',\n            start=start_firehose))\n        register_plugin(Plugin('lambda',\n            start=start_lambda))\n        register_plugin(Plugin('kinesis',\n            start=kinesis_starter.start_kinesis,\n            check=kinesis_starter.check_kinesis,\n            listener=kinesis_listener.UPDATE_KINESIS))\n        register_plugin(Plugin('redshift',\n            start=start_redshift))\n        register_plugin(Plugin('route53',\n            start=start_route53))\n        register_plugin(Plugin('cloudformation',\n            start=start_cloudformation,\n            listener=cloudformation_listener.UPDATE_CLOUDFORMATION))\n        register_plugin(Plugin('cloudwatch',\n            start=start_cloudwatch))\n    except Exception as e:\n        print('Unable to register plugins: %s' % e)\n        raise e\n", "description": "\ud83d\udcbb  A fully functional local AWS cloud stack. Develop and test your cloud apps offline!", "file_name": "plugins.py", "id": "3e262669e133ad9a1dde073766226865", "language": "Python", "project_name": "localstack", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/localstack-localstack/localstack-localstack-fcc848e/localstack/plugins.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:04:08Z", "url": "https://github.com/localstack/localstack", "wiki": true}
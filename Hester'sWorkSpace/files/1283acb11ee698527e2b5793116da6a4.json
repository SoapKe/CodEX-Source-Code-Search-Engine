{"author": "kivy", "code": "\nfrom setuptools import setup, find_packages\nfrom os import walk\nfrom os.path import join, dirname, sep\nimport os\nimport glob\nimport re\n\n\n\npackages = find_packages()\n\npackage_data = {'': ['*.tmpl',\n                     '*.patch', ], }\n\ndata_files = []\n\n\nif os.name == 'nt':\n    install_reqs = ['appdirs', 'colorama>=0.3.3', 'jinja2',\n                        'six']\nelse:\n    \n    \n    install_reqs = ['appdirs', 'colorama>=0.3.3', 'sh>=1.10,<1.12.5', 'jinja2',\n                        'six']\n\n\n\n\n\ndef recursively_include(results, directory, patterns):\n    for root, subfolders, files in walk(directory):\n        for fn in files:\n            if not any([glob.fnmatch.fnmatch(fn, pattern) for pattern in patterns]):\n                continue\n            filename = join(root, fn)\n            directory = 'pythonforandroid'\n            if directory not in results:\n                results[directory] = []\n            results[directory].append(join(*filename.split(sep)[1:]))\n\nrecursively_include(package_data, 'pythonforandroid/recipes',\n                    ['*.patch', 'Setup*', '*.pyx', '*.py', '*.c', '*.h',\n                     '*.mk', '*.jam', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps',\n                    ['*.properties', '*.xml', '*.java', '*.tmpl', '*.txt', '*.png',\n                     '*.mk', '*.c', '*.h', '*.py', '*.sh', '*.jpg', '*.aidl',\n                     '*.gradle', '.gitkeep', 'gradlew*', '*.jar', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps',\n                    ['sdl-config', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps/webview',\n                    ['*.html', ])\nrecursively_include(package_data, 'pythonforandroid',\n                    ['liblink', 'biglink', 'liblink.sh'])\n\nwith open(join(dirname(__file__), 'README.rst')) as fileh:\n    long_description = fileh.read()\n\ninit_filen = join(dirname(__file__), 'pythonforandroid', '__init__.py')\nversion = None\ntry:\n    with open(init_filen) as fileh:\n        lines = fileh.readlines()\nexcept IOError:\n    pass\nelse:\n    for line in lines:\n        line = line.strip()\n        if line.startswith('__version__ = '):\n            matches = re.findall(r'[\"\\'].+[\"\\']', line)\n            if matches:\n                version = matches[0].strip(\"'\").strip('\"')\n                break\nif version is None:\n    raise Exception('Error: version could not be loaded from {}'.format(init_filen))\n\nsetup(name='python-for-android',\n      version=version,\n      description='Android APK packager for Python scripts and apps',\n      long_description=long_description,\n      author='The Kivy team',\n      author_email='kivy-dev@googlegroups.com',\n      url='https://github.com/kivy/python-for-android', \n      license='MIT', \n      install_requires=install_reqs,\n      entry_points={\n          'console_scripts': [\n              'python-for-android = pythonforandroid.toolchain:main',\n              'p4a = pythonforandroid.toolchain:main',\n              ],\n          'distutils.commands': [\n              'apk = pythonforandroid.bdistapk:BdistAPK',\n              ],\n          },\n      classifiers = [\n          'Development Status :: 4 - Beta',\n          'Intended Audience :: Developers',\n          'License :: OSI Approved :: MIT License',\n          'Operating System :: Microsoft :: Windows',\n          'Operating System :: OS Independent',\n          'Operating System :: POSIX :: Linux',\n          'Operating System :: MacOS :: MacOS X',\n          'Operating System :: Android',\n          'Programming Language :: C',\n          'Programming Language :: Python :: 2',\n          'Programming Language :: Python :: 3',\n          'Topic :: Software Development',\n          'Topic :: Utilities',\n          ],\n      packages=packages,\n      package_data=package_data,\n      )\n", "comments": "  note  all package data also set manifest    use sh 1 12 5  performance issues    https   github com amoffat sh issues 378    by specifying every file manually  package data able    include binary distributions  note add    everything  pythonforandroid  rule  using    apparently    work  ", "content": "\nfrom setuptools import setup, find_packages\nfrom os import walk\nfrom os.path import join, dirname, sep\nimport os\nimport glob\nimport re\n\n# NOTE: All package data should also be set in MANIFEST.in\n\npackages = find_packages()\n\npackage_data = {'': ['*.tmpl',\n                     '*.patch', ], }\n\ndata_files = []\n\n\nif os.name == 'nt':\n    install_reqs = ['appdirs', 'colorama>=0.3.3', 'jinja2',\n                        'six']\nelse:\n    # don't use sh after 1.12.5, we have performance issues\n    # https://github.com/amoffat/sh/issues/378\n    install_reqs = ['appdirs', 'colorama>=0.3.3', 'sh>=1.10,<1.12.5', 'jinja2',\n                        'six']\n\n# By specifying every file manually, package_data will be able to\n# include them in binary distributions. Note that we have to add\n# everything as a 'pythonforandroid' rule, using '' apparently doesn't\n# work.\ndef recursively_include(results, directory, patterns):\n    for root, subfolders, files in walk(directory):\n        for fn in files:\n            if not any([glob.fnmatch.fnmatch(fn, pattern) for pattern in patterns]):\n                continue\n            filename = join(root, fn)\n            directory = 'pythonforandroid'\n            if directory not in results:\n                results[directory] = []\n            results[directory].append(join(*filename.split(sep)[1:]))\n\nrecursively_include(package_data, 'pythonforandroid/recipes',\n                    ['*.patch', 'Setup*', '*.pyx', '*.py', '*.c', '*.h',\n                     '*.mk', '*.jam', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps',\n                    ['*.properties', '*.xml', '*.java', '*.tmpl', '*.txt', '*.png',\n                     '*.mk', '*.c', '*.h', '*.py', '*.sh', '*.jpg', '*.aidl',\n                     '*.gradle', '.gitkeep', 'gradlew*', '*.jar', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps',\n                    ['sdl-config', ])\nrecursively_include(package_data, 'pythonforandroid/bootstraps/webview',\n                    ['*.html', ])\nrecursively_include(package_data, 'pythonforandroid',\n                    ['liblink', 'biglink', 'liblink.sh'])\n\nwith open(join(dirname(__file__), 'README.rst')) as fileh:\n    long_description = fileh.read()\n\ninit_filen = join(dirname(__file__), 'pythonforandroid', '__init__.py')\nversion = None\ntry:\n    with open(init_filen) as fileh:\n        lines = fileh.readlines()\nexcept IOError:\n    pass\nelse:\n    for line in lines:\n        line = line.strip()\n        if line.startswith('__version__ = '):\n            matches = re.findall(r'[\"\\'].+[\"\\']', line)\n            if matches:\n                version = matches[0].strip(\"'\").strip('\"')\n                break\nif version is None:\n    raise Exception('Error: version could not be loaded from {}'.format(init_filen))\n\nsetup(name='python-for-android',\n      version=version,\n      description='Android APK packager for Python scripts and apps',\n      long_description=long_description,\n      author='The Kivy team',\n      author_email='kivy-dev@googlegroups.com',\n      url='https://github.com/kivy/python-for-android', \n      license='MIT', \n      install_requires=install_reqs,\n      entry_points={\n          'console_scripts': [\n              'python-for-android = pythonforandroid.toolchain:main',\n              'p4a = pythonforandroid.toolchain:main',\n              ],\n          'distutils.commands': [\n              'apk = pythonforandroid.bdistapk:BdistAPK',\n              ],\n          },\n      classifiers = [\n          'Development Status :: 4 - Beta',\n          'Intended Audience :: Developers',\n          'License :: OSI Approved :: MIT License',\n          'Operating System :: Microsoft :: Windows',\n          'Operating System :: OS Independent',\n          'Operating System :: POSIX :: Linux',\n          'Operating System :: MacOS :: MacOS X',\n          'Operating System :: Android',\n          'Programming Language :: C',\n          'Programming Language :: Python :: 2',\n          'Programming Language :: Python :: 3',\n          'Topic :: Software Development',\n          'Topic :: Utilities',\n          ],\n      packages=packages,\n      package_data=package_data,\n      )\n", "description": "Turn your Python application into an Android APK", "file_name": "setup.py", "id": "1283acb11ee698527e2b5793116da6a4", "language": "Python", "project_name": "python-for-android", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/kivy-python-for-android/kivy-python-for-android-a036f44/setup.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:42:42Z", "url": "https://github.com/kivy/python-for-android", "wiki": false}
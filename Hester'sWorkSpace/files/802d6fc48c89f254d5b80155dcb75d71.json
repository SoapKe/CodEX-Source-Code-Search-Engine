{"author": "rg3", "code": "\n\n\nfrom __future__ import unicode_literals\n\nimport unittest\n\nimport sys\nimport os\nimport subprocess\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nrootDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\nclass TestVerboseOutput(unittest.TestCase):\n    def test_private_info_arg(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '--username', 'johnsmith@gmail.com',\n                '--password', 'secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'--username' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'--password' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_shortarg(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '-u', 'johnsmith@gmail.com',\n                '-p', 'secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'-u' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'-p' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_eq(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '--username=johnsmith@gmail.com',\n                '--password=secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'--username' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'--password' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_shortarg_eq(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '-u=johnsmith@gmail.com',\n                '-p=secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'-u' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'-p' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "comments": "#!/usr/bin/env python\n# coding: utf-8\n", "content": "#!/usr/bin/env python\n# coding: utf-8\n\nfrom __future__ import unicode_literals\n\nimport unittest\n\nimport sys\nimport os\nimport subprocess\nsys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nrootDir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\nclass TestVerboseOutput(unittest.TestCase):\n    def test_private_info_arg(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '--username', 'johnsmith@gmail.com',\n                '--password', 'secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'--username' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'--password' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_shortarg(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '-u', 'johnsmith@gmail.com',\n                '-p', 'secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'-u' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'-p' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_eq(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '--username=johnsmith@gmail.com',\n                '--password=secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'--username' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'--password' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n    def test_private_info_shortarg_eq(self):\n        outp = subprocess.Popen(\n            [\n                sys.executable, 'youtube_dl/__main__.py', '-v',\n                '-u=johnsmith@gmail.com',\n                '-p=secret',\n            ], cwd=rootDir, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n        sout, serr = outp.communicate()\n        self.assertTrue(b'-u' in serr)\n        self.assertTrue(b'johnsmith' not in serr)\n        self.assertTrue(b'-p' in serr)\n        self.assertTrue(b'secret' not in serr)\n\n\nif __name__ == '__main__':\n    unittest.main()\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "test_verbose_output.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/test/test_verbose_output.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
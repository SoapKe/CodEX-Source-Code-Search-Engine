{"author": "nvbn", "code": "import re\nfrom thefuck.shells import shell\nfrom thefuck.specific.git import git_support\nfrom thefuck.system import Path\nfrom thefuck.utils import memoize\n\n\n@memoize\ndef _get_missing_file(command):\n    pathspec = re.findall(\n        r\"error: pathspec '([^']*)' \"\n        r'did not match any file\\(s\\) known to git.', command.output)[0]\n    if Path(pathspec).exists():\n        return pathspec\n\n\n@git_support\ndef match(command):\n    return ('did not match any file(s) known to git.' in command.output\n            and _get_missing_file(command))\n\n\n@git_support\ndef get_new_command(command):\n    missing_file = _get_missing_file(command)\n    formatme = shell.and_('git add -- {}', '{}')\n    return formatme.format(missing_file, command.script)\n", "comments": "", "content": "import re\nfrom thefuck.shells import shell\nfrom thefuck.specific.git import git_support\nfrom thefuck.system import Path\nfrom thefuck.utils import memoize\n\n\n@memoize\ndef _get_missing_file(command):\n    pathspec = re.findall(\n        r\"error: pathspec '([^']*)' \"\n        r'did not match any file\\(s\\) known to git.', command.output)[0]\n    if Path(pathspec).exists():\n        return pathspec\n\n\n@git_support\ndef match(command):\n    return ('did not match any file(s) known to git.' in command.output\n            and _get_missing_file(command))\n\n\n@git_support\ndef get_new_command(command):\n    missing_file = _get_missing_file(command)\n    formatme = shell.and_('git add -- {}', '{}')\n    return formatme.format(missing_file, command.script)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "git_add.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/git_add.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
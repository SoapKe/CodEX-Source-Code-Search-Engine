{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GlideIE(InfoExtractor):\n    IE_DESC = 'Glide mobile video messages (glide.me)'\n    _VALID_URL = r'https?://share\\.glide\\.me/(?P<id>[A-Za-z0-9\\-=_+]+)'\n    _TEST = {\n        'url': 'http://share.glide.me/UZF8zlmuQbe4mr+7dCiQ0w==',\n        'md5': '4466372687352851af2d131cfaa8a4c7',\n        'info_dict': {\n            'id': 'UZF8zlmuQbe4mr+7dCiQ0w==',\n            'ext': 'mp4',\n            'title': \"Damon's Glide message\",\n            'thumbnail': r're:^https?://.*?\\.cloudfront\\.net/.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<title>(.+?)</title>', webpage,\n            'title', default=None) or self._og_search_title(webpage)\n        video_url = self._proto_relative_url(self._search_regex(\n            r'<source[^>]+src=([\"\\'])(?P<url>.+?)\\1',\n            webpage, 'video URL', default=None,\n            group='url')) or self._og_search_video_url(webpage)\n        thumbnail = self._proto_relative_url(self._search_regex(\n            r'<img[^>]+id=[\"\\']video-thumbnail[\"\\'][^>]+src=([\"\\'])(?P<url>.+?)\\1',\n            webpage, 'thumbnail url', default=None,\n            group='url')) or self._og_search_thumbnail(webpage)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GlideIE(InfoExtractor):\n    IE_DESC = 'Glide mobile video messages (glide.me)'\n    _VALID_URL = r'https?://share\\.glide\\.me/(?P<id>[A-Za-z0-9\\-=_+]+)'\n    _TEST = {\n        'url': 'http://share.glide.me/UZF8zlmuQbe4mr+7dCiQ0w==',\n        'md5': '4466372687352851af2d131cfaa8a4c7',\n        'info_dict': {\n            'id': 'UZF8zlmuQbe4mr+7dCiQ0w==',\n            'ext': 'mp4',\n            'title': \"Damon's Glide message\",\n            'thumbnail': r're:^https?://.*?\\.cloudfront\\.net/.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<title>(.+?)</title>', webpage,\n            'title', default=None) or self._og_search_title(webpage)\n        video_url = self._proto_relative_url(self._search_regex(\n            r'<source[^>]+src=([\"\\'])(?P<url>.+?)\\1',\n            webpage, 'video URL', default=None,\n            group='url')) or self._og_search_video_url(webpage)\n        thumbnail = self._proto_relative_url(self._search_regex(\n            r'<img[^>]+id=[\"\\']video-thumbnail[\"\\'][^>]+src=([\"\\'])(?P<url>.+?)\\1',\n            webpage, 'thumbnail url', default=None,\n            group='url')) or self._og_search_thumbnail(webpage)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "glide.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/glide.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
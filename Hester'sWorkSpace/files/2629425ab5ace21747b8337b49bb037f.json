{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .message_media import MediaMessageProtocolEntity\n\nclass LocationMediaMessageProtocolEntity(MediaMessageProtocolEntity):\n    \n\n\n    def __init__(self, latitude, longitude, name, url, encoding, _id = None, _from = None, to = None, notify = None, timestamp = None, participant = None,\n            preview = None, offline = None, retry = None):\n\n        super(LocationMediaMessageProtocolEntity, self).__init__(\"location\", _id, _from, to, notify, timestamp, participant, preview, offline, retry)\n        self.setLocationMediaProps(latitude,longitude,name,url,encoding)\n\n    def __str__(self):\n        out  = super(MediaMessageProtocolEntity, self).__str__()\n        out += \"Latitude: %s\\n\" % self.latitude\n        out += \"Longitude: %s\\n\" % self.longitude\n        out += \"Name: %s\\n\" % self.name\n        out += \"URL: %s\\n\" % self.url\n        out += \"Encoding: %s\\n\" % self.encoding\n\n        return out\n\n    def getLatitude(self):\n        return self.latitude\n\n    def getLongitude(self):\n        return self.longitude\n\n    def getLocationName(self):\n        return self.name\n\n    def getLocationURL(self):\n        return self.url\n\n    def setLocationMediaProps(self, latitude, longitude, locationName, url, encoding):\n        self.latitude = str(latitude)\n        self.longitude = str(longitude)\n        self.name = locationName\n        self.url = url\n        self.encoding= encoding\n\n    def toProtocolTreeNode(self):\n        node = super(LocationMediaMessageProtocolEntity, self).toProtocolTreeNode()\n        mediaNode = node.getChild(\"media\")\n        mediaNode.setAttribute(\"latitude\",  self.latitude)\n        mediaNode.setAttribute(\"longitude\",  self.longitude)\n        mediaNode.setAttribute(\"encoding\", self.encoding)\n\n        if self.name:\n            mediaNode.setAttribute(\"name\", self.name)\n        if self.url:\n            mediaNode.setAttribute(\"url\", self.url)\n            \n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = MediaMessageProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = LocationMediaMessageProtocolEntity\n        mediaNode = node.getChild(\"media\")\n        entity.setLocationMediaProps(\n            mediaNode.getAttributeValue(\"latitude\"),\n            mediaNode.getAttributeValue(\"longitude\"),\n            mediaNode.getAttributeValue(\"name\"),\n            mediaNode.getAttributeValue(\"url\"),\n            mediaNode.getAttributeValue(\"encoding\")\n            )\n        return entity\n", "comments": "         message    time stamp       contact jid         offline    offline    type  text  id    message id    notify    notify name              media              latitude  52 52393               type  location              longitude  13 41747              name  location name              url  http   www foursquare com xxxx              encoding  raw             thumbnail rawdata    media        message          ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .message_media import MediaMessageProtocolEntity\n\nclass LocationMediaMessageProtocolEntity(MediaMessageProtocolEntity):\n    '''\n    <message t=\"{{TIME_STAMP}}\" from=\"{{CONTACT_JID}}\" \n    offline=\"{{OFFLINE}}\" type=\"text\" id=\"{{MESSAGE_ID}}\" notify=\"{{NOTIFY_NAME}}\">\n        <media \n            latitude=\"52.52393\" \n            type=\"location\"\n            longitude=\"13.41747\"\n            name=\"Location Name\"\n            url=\"http://www.foursquare.com/XXXX\"\n            encoding=\"raw\"\n        >{{THUMBNAIL_RAWDATA}}</media>\n    </message>\n    '''\n\n\n    def __init__(self, latitude, longitude, name, url, encoding, _id = None, _from = None, to = None, notify = None, timestamp = None, participant = None,\n            preview = None, offline = None, retry = None):\n\n        super(LocationMediaMessageProtocolEntity, self).__init__(\"location\", _id, _from, to, notify, timestamp, participant, preview, offline, retry)\n        self.setLocationMediaProps(latitude,longitude,name,url,encoding)\n\n    def __str__(self):\n        out  = super(MediaMessageProtocolEntity, self).__str__()\n        out += \"Latitude: %s\\n\" % self.latitude\n        out += \"Longitude: %s\\n\" % self.longitude\n        out += \"Name: %s\\n\" % self.name\n        out += \"URL: %s\\n\" % self.url\n        out += \"Encoding: %s\\n\" % self.encoding\n\n        return out\n\n    def getLatitude(self):\n        return self.latitude\n\n    def getLongitude(self):\n        return self.longitude\n\n    def getLocationName(self):\n        return self.name\n\n    def getLocationURL(self):\n        return self.url\n\n    def setLocationMediaProps(self, latitude, longitude, locationName, url, encoding):\n        self.latitude = str(latitude)\n        self.longitude = str(longitude)\n        self.name = locationName\n        self.url = url\n        self.encoding= encoding\n\n    def toProtocolTreeNode(self):\n        node = super(LocationMediaMessageProtocolEntity, self).toProtocolTreeNode()\n        mediaNode = node.getChild(\"media\")\n        mediaNode.setAttribute(\"latitude\",  self.latitude)\n        mediaNode.setAttribute(\"longitude\",  self.longitude)\n        mediaNode.setAttribute(\"encoding\", self.encoding)\n\n        if self.name:\n            mediaNode.setAttribute(\"name\", self.name)\n        if self.url:\n            mediaNode.setAttribute(\"url\", self.url)\n            \n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = MediaMessageProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = LocationMediaMessageProtocolEntity\n        mediaNode = node.getChild(\"media\")\n        entity.setLocationMediaProps(\n            mediaNode.getAttributeValue(\"latitude\"),\n            mediaNode.getAttributeValue(\"longitude\"),\n            mediaNode.getAttributeValue(\"name\"),\n            mediaNode.getAttributeValue(\"url\"),\n            mediaNode.getAttributeValue(\"encoding\")\n            )\n        return entity\n", "description": "The python WhatsApp library", "file_name": "message_media_location.py", "id": "2629425ab5ace21747b8337b49bb037f", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_media/protocolentities/message_media_location.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
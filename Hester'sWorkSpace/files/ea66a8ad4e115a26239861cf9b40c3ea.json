{"author": "tensorflow", "code": "\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n ==============================================================================\n\n\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport os.path\n\nimport tensorflow as tf\n\nimport reader\n\n\nclass PtbReaderTest(tf.test.TestCase):\n\n  def setUp(self):\n    self._string_data = \"\\n\".join(\n        [\" hello there i am\",\n         \" rain as day\",\n         \" want some cheesy puffs ?\"])\n\n  def testPtbRawData(self):\n    tmpdir = tf.test.get_temp_dir()\n    for suffix in \"train\", \"valid\", \"test\":\n      filename = os.path.join(tmpdir, \"ptb.%s.txt\" % suffix)\n      with tf.gfile.GFile(filename, \"w\") as fh:\n        fh.write(self._string_data)\n     Smoke test\n    output = reader.ptb_raw_data(tmpdir)\n    self.assertEqual(len(output), 4)\n\n  def testPtbProducer(self):\n    raw_data = [4, 3, 2, 1, 0, 5, 6, 1, 1, 1, 1, 0, 3, 4, 1]\n    batch_size = 3\n    num_steps = 2\n    x, y = reader.ptb_producer(raw_data, batch_size, num_steps)\n    with self.test_session() as session:\n      coord = tf.train.Coordinator()\n      tf.train.start_queue_runners(session, coord=coord)\n      try:\n        xval, yval = session.run([x, y])\n        self.assertAllEqual(xval, [[4, 3], [5, 6], [1, 0]])\n        self.assertAllEqual(yval, [[3, 2], [6, 1], [0, 3]])\n        xval, yval = session.run([x, y])\n        self.assertAllEqual(xval, [[2, 1], [1, 1], [3, 4]])\n        self.assertAllEqual(yval, [[1, 0], [1, 1], [4, 1]])\n      finally:\n        coord.request_stop()\n        coord.join()\n\n\nif __name__ == \"__main__\":\n  tf.test.main()\n", "comments": "   tests models tutorials rnn ptb reader        copyright 2015 the tensorflow authors  all rights reserved        licensed apache license  version 2 0 (the  license )     may use file except compliance license     you may obtain copy license           http   www apache org licenses license 2 0       unless required applicable law agreed writing  software    distributed license distributed  as is  basis     without warranties or conditions of any kind  either express implied     see license specific language governing permissions    limitations license                                                                                       smoke test ", "content": "# Copyright 2015 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n\n\"\"\"Tests for models.tutorials.rnn.ptb.reader.\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport os.path\n\nimport tensorflow as tf\n\nimport reader\n\n\nclass PtbReaderTest(tf.test.TestCase):\n\n  def setUp(self):\n    self._string_data = \"\\n\".join(\n        [\" hello there i am\",\n         \" rain as day\",\n         \" want some cheesy puffs ?\"])\n\n  def testPtbRawData(self):\n    tmpdir = tf.test.get_temp_dir()\n    for suffix in \"train\", \"valid\", \"test\":\n      filename = os.path.join(tmpdir, \"ptb.%s.txt\" % suffix)\n      with tf.gfile.GFile(filename, \"w\") as fh:\n        fh.write(self._string_data)\n    # Smoke test\n    output = reader.ptb_raw_data(tmpdir)\n    self.assertEqual(len(output), 4)\n\n  def testPtbProducer(self):\n    raw_data = [4, 3, 2, 1, 0, 5, 6, 1, 1, 1, 1, 0, 3, 4, 1]\n    batch_size = 3\n    num_steps = 2\n    x, y = reader.ptb_producer(raw_data, batch_size, num_steps)\n    with self.test_session() as session:\n      coord = tf.train.Coordinator()\n      tf.train.start_queue_runners(session, coord=coord)\n      try:\n        xval, yval = session.run([x, y])\n        self.assertAllEqual(xval, [[4, 3], [5, 6], [1, 0]])\n        self.assertAllEqual(yval, [[3, 2], [6, 1], [0, 3]])\n        xval, yval = session.run([x, y])\n        self.assertAllEqual(xval, [[2, 1], [1, 1], [3, 4]])\n        self.assertAllEqual(yval, [[1, 0], [1, 1], [4, 1]])\n      finally:\n        coord.request_stop()\n        coord.join()\n\n\nif __name__ == \"__main__\":\n  tf.test.main()\n", "description": "Models and examples built with TensorFlow", "file_name": "reader_test.py", "id": "ea66a8ad4e115a26239861cf9b40c3ea", "language": "Python", "project_name": "models", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/tensorflow-models/tensorflow-models-086d914/tutorials/rnn/ptb/reader_test.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:59:19Z", "url": "https://github.com/tensorflow/models", "wiki": true}
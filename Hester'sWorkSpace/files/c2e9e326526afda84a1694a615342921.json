{"author": "gunthercox", "code": "from .base_case import ChatBotTestCase\n\n\nclass StringInitializationTestCase(ChatBotTestCase):\n\n    def get_kwargs(self):\n        return {\n            'input_adapter': 'chatterbot.input.VariableInputTypeAdapter',\n            'output_adapter': 'chatterbot.output.OutputAdapter',\n            'database': None\n        }\n\n    def test_storage_initialized(self):\n        from chatterbot.storage import SQLStorageAdapter\n        self.assertTrue(isinstance(self.chatbot.storage, SQLStorageAdapter))\n\n    def test_logic_initialized(self):\n        from chatterbot.logic import BestMatch\n        self.assertEqual(len(self.chatbot.logic.adapters), 1)\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[0], BestMatch))\n\n    def test_input_initialized(self):\n        from chatterbot.input import VariableInputTypeAdapter\n        self.assertTrue(isinstance(self.chatbot.input, VariableInputTypeAdapter))\n\n    def test_output_initialized(self):\n        from chatterbot.output import OutputAdapter\n        self.assertTrue(isinstance(self.chatbot.output, OutputAdapter))\n\n\nclass DictionaryInitializationTestCase(ChatBotTestCase):\n\n    def get_kwargs(self):\n        return {\n            'storage_adapter': {\n                'import_path': 'chatterbot.storage.SQLStorageAdapter',\n                'database': None\n            },\n            'input_adapter': {\n                'import_path': 'chatterbot.input.VariableInputTypeAdapter'\n            },\n            'output_adapter': {\n                'import_path': 'chatterbot.output.OutputAdapter'\n            },\n            'logic_adapters': [\n                {\n                    'import_path': 'chatterbot.logic.BestMatch',\n                },\n                {\n                    'import_path': 'chatterbot.logic.MathematicalEvaluation',\n                }\n            ]\n        }\n\n    def test_storage_initialized(self):\n        from chatterbot.storage import SQLStorageAdapter\n        self.assertTrue(isinstance(self.chatbot.storage, SQLStorageAdapter))\n\n    def test_logic_initialized(self):\n        from chatterbot.logic import BestMatch\n        from chatterbot.logic import MathematicalEvaluation\n        self.assertEqual(len(self.chatbot.logic.adapters), 2)\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[0], BestMatch))\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[1], MathematicalEvaluation))\n\n    def test_input_initialized(self):\n        from chatterbot.input import VariableInputTypeAdapter\n        self.assertTrue(isinstance(self.chatbot.input, VariableInputTypeAdapter))\n\n    def test_output_initialized(self):\n        from chatterbot.output import OutputAdapter\n        self.assertTrue(isinstance(self.chatbot.output, OutputAdapter))\n", "comments": "", "content": "from .base_case import ChatBotTestCase\n\n\nclass StringInitializationTestCase(ChatBotTestCase):\n\n    def get_kwargs(self):\n        return {\n            'input_adapter': 'chatterbot.input.VariableInputTypeAdapter',\n            'output_adapter': 'chatterbot.output.OutputAdapter',\n            'database': None\n        }\n\n    def test_storage_initialized(self):\n        from chatterbot.storage import SQLStorageAdapter\n        self.assertTrue(isinstance(self.chatbot.storage, SQLStorageAdapter))\n\n    def test_logic_initialized(self):\n        from chatterbot.logic import BestMatch\n        self.assertEqual(len(self.chatbot.logic.adapters), 1)\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[0], BestMatch))\n\n    def test_input_initialized(self):\n        from chatterbot.input import VariableInputTypeAdapter\n        self.assertTrue(isinstance(self.chatbot.input, VariableInputTypeAdapter))\n\n    def test_output_initialized(self):\n        from chatterbot.output import OutputAdapter\n        self.assertTrue(isinstance(self.chatbot.output, OutputAdapter))\n\n\nclass DictionaryInitializationTestCase(ChatBotTestCase):\n\n    def get_kwargs(self):\n        return {\n            'storage_adapter': {\n                'import_path': 'chatterbot.storage.SQLStorageAdapter',\n                'database': None\n            },\n            'input_adapter': {\n                'import_path': 'chatterbot.input.VariableInputTypeAdapter'\n            },\n            'output_adapter': {\n                'import_path': 'chatterbot.output.OutputAdapter'\n            },\n            'logic_adapters': [\n                {\n                    'import_path': 'chatterbot.logic.BestMatch',\n                },\n                {\n                    'import_path': 'chatterbot.logic.MathematicalEvaluation',\n                }\n            ]\n        }\n\n    def test_storage_initialized(self):\n        from chatterbot.storage import SQLStorageAdapter\n        self.assertTrue(isinstance(self.chatbot.storage, SQLStorageAdapter))\n\n    def test_logic_initialized(self):\n        from chatterbot.logic import BestMatch\n        from chatterbot.logic import MathematicalEvaluation\n        self.assertEqual(len(self.chatbot.logic.adapters), 2)\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[0], BestMatch))\n        self.assertTrue(isinstance(self.chatbot.logic.adapters[1], MathematicalEvaluation))\n\n    def test_input_initialized(self):\n        from chatterbot.input import VariableInputTypeAdapter\n        self.assertTrue(isinstance(self.chatbot.input, VariableInputTypeAdapter))\n\n    def test_output_initialized(self):\n        from chatterbot.output import OutputAdapter\n        self.assertTrue(isinstance(self.chatbot.output, OutputAdapter))\n", "description": "ChatterBot is a machine learning, conversational dialog engine for creating chat bots", "file_name": "test_initialization.py", "id": "c2e9e326526afda84a1694a615342921", "language": "Python", "project_name": "ChatterBot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/gunthercox-ChatterBot/gunthercox-ChatterBot-f20c412/tests/test_initialization.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:44:53Z", "url": "https://github.com/gunthercox/ChatterBot", "wiki": true}
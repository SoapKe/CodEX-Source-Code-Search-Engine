{"author": "HelloZeroNet", "code": "\n This file is part of pyasn1 software.\n\n Copyright (c) 2005-2017, Ilya Etingof <etingof@gmail.com>\n License: http://pyasn1.sf.net/license.html\n\nfrom sys import version_info\n\nif version_info[0] <= 2:\n    int2oct = chr\n     noinspection PyPep8\n    ints2octs = lambda s: ''.join([int2oct(x) for x in s])\n    null = ''\n    oct2int = ord\n     noinspection PyPep8\n    octs2ints = lambda s: [oct2int(x) for x in s]\n     noinspection PyPep8\n    str2octs = lambda x: x\n     noinspection PyPep8\n    octs2str = lambda x: x\n     noinspection PyPep8\n    isOctetsType = lambda s: isinstance(s, str)\n     noinspection PyPep8\n    isStringType = lambda s: isinstance(s, (str, unicode))\n     noinspection PyPep8\n    ensureString = str\nelse:\n    ints2octs = bytes\n     noinspection PyPep8\n    int2oct = lambda x: ints2octs((x,))\n    null = ints2octs()\n     noinspection PyPep8\n    oct2int = lambda x: x\n     noinspection PyPep8\n    octs2ints = lambda x: x\n     noinspection PyPep8\n    str2octs = lambda x: x.encode('iso-8859-1')\n     noinspection PyPep8\n    octs2str = lambda x: x.decode('iso-8859-1')\n     noinspection PyPep8\n    isOctetsType = lambda s: isinstance(s, bytes)\n     noinspection PyPep8\n    isStringType = lambda s: isinstance(s, str)\n     noinspection PyPep8\n    ensureString = bytes\n\n", "comments": "     this file part pyasn1 software        copyright (c) 2005 2017  ilya etingof  etingof gmail com     license  http   pyasn1 sf net license html       noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8    noinspection pypep8 ", "content": "#\n# This file is part of pyasn1 software.\n#\n# Copyright (c) 2005-2017, Ilya Etingof <etingof@gmail.com>\n# License: http://pyasn1.sf.net/license.html\n#\nfrom sys import version_info\n\nif version_info[0] <= 2:\n    int2oct = chr\n    # noinspection PyPep8\n    ints2octs = lambda s: ''.join([int2oct(x) for x in s])\n    null = ''\n    oct2int = ord\n    # noinspection PyPep8\n    octs2ints = lambda s: [oct2int(x) for x in s]\n    # noinspection PyPep8\n    str2octs = lambda x: x\n    # noinspection PyPep8\n    octs2str = lambda x: x\n    # noinspection PyPep8\n    isOctetsType = lambda s: isinstance(s, str)\n    # noinspection PyPep8\n    isStringType = lambda s: isinstance(s, (str, unicode))\n    # noinspection PyPep8\n    ensureString = str\nelse:\n    ints2octs = bytes\n    # noinspection PyPep8\n    int2oct = lambda x: ints2octs((x,))\n    null = ints2octs()\n    # noinspection PyPep8\n    oct2int = lambda x: x\n    # noinspection PyPep8\n    octs2ints = lambda x: x\n    # noinspection PyPep8\n    str2octs = lambda x: x.encode('iso-8859-1')\n    # noinspection PyPep8\n    octs2str = lambda x: x.decode('iso-8859-1')\n    # noinspection PyPep8\n    isOctetsType = lambda s: isinstance(s, bytes)\n    # noinspection PyPep8\n    isStringType = lambda s: isinstance(s, str)\n    # noinspection PyPep8\n    ensureString = bytes\n\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "octets.py", "id": "a79e4568f0adf2fc7b9e817d2ae47ee3", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/src/lib/pyasn1/compat/octets.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
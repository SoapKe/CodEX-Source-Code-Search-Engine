{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport subprocess\n\nfrom .common import PostProcessor\nfrom ..compat import compat_shlex_quote\nfrom ..utils import (\n    encodeArgument,\n    PostProcessingError,\n)\n\n\nclass ExecAfterDownloadPP(PostProcessor):\n    def __init__(self, downloader, exec_cmd):\n        super(ExecAfterDownloadPP, self).__init__(downloader)\n        self.exec_cmd = exec_cmd\n\n    def run(self, information):\n        cmd = self.exec_cmd\n        if '{}' not in cmd:\n            cmd += ' {}'\n\n        cmd = cmd.replace('{}', compat_shlex_quote(information['filepath']))\n\n        self._downloader.to_screen('[exec] Executing command: %s' % cmd)\n        retCode = subprocess.call(encodeArgument(cmd), shell=True)\n        if retCode != 0:\n            raise PostProcessingError(\n                'Command returned error code %d' % retCode)\n\n        return [], information\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport subprocess\n\nfrom .common import PostProcessor\nfrom ..compat import compat_shlex_quote\nfrom ..utils import (\n    encodeArgument,\n    PostProcessingError,\n)\n\n\nclass ExecAfterDownloadPP(PostProcessor):\n    def __init__(self, downloader, exec_cmd):\n        super(ExecAfterDownloadPP, self).__init__(downloader)\n        self.exec_cmd = exec_cmd\n\n    def run(self, information):\n        cmd = self.exec_cmd\n        if '{}' not in cmd:\n            cmd += ' {}'\n\n        cmd = cmd.replace('{}', compat_shlex_quote(information['filepath']))\n\n        self._downloader.to_screen('[exec] Executing command: %s' % cmd)\n        retCode = subprocess.call(encodeArgument(cmd), shell=True)\n        if retCode != 0:\n            raise PostProcessingError(\n                'Command returned error code %d' % retCode)\n\n        return [], information\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "execafterdownload.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/postprocessor/execafterdownload.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
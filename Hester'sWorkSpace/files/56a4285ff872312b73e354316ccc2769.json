{"author": "tgalal", "code": "from yowsup.structs import ProtocolTreeNode\nfrom yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity\nfrom .iq_sync import SyncIqProtocolEntity\n\nclass GetSyncIqProtocolEntity(SyncIqProtocolEntity):\n\n    MODE_FULL = \"full\"\n    MODE_DELTA = \"delta\"\n    CONTEXT_REGISTRATION = \"registration\"\n    CONTEXT_INTERACTIVE = \"interactive\"\n\n    CONTEXTS = (CONTEXT_REGISTRATION, CONTEXT_INTERACTIVE)\n    MODES = (MODE_FULL, MODE_DELTA)\n\n\n    | ?| ?}}\"\n            sid=\"{{str((int(time.time()) + 11644477200) * 10000000)}}\"\n            index=\"{{0 | ?| false?}}\"\n        >\n            <user>\n                {{num1}}\n            </user>\n            <user>\n                {{num2}}\n            </user>\n\n        </sync>\n    </iq>\n    '''\n\n    def __init__(self, numbers, mode = MODE_FULL, context = CONTEXT_INTERACTIVE, sid = None, index = 0, last = True):\n        super(GetSyncIqProtocolEntity, self).__init__(\"get\", sid = sid, index =  index, last = last)\n        self.setGetSyncProps(numbers, mode, context)\n\n    def setGetSyncProps(self, numbers, mode, context):\n        assert type(numbers) is list, \"numbers must be a list\"\n        assert mode in self.__class__.MODES, \"mode must be in %s\" % self.__class__.MODES\n        assert context in self.__class__.CONTEXTS, \"context must be in %s\" % self.__class__.CONTEXTS\n\n        self.numbers = numbers\n        self.mode = mode\n        self.context = context\n\n    def __str__(self):\n        out  = super(GetSyncIqProtocolEntity, self).__str__()\n        out += \"Mode: %s\\n\" % self.mode\n        out += \"Context: %s\\n\" % self.context\n        out += \"numbers: %s\\n\" % (\",\".join(self.numbers))\n        return out\n\n    def toProtocolTreeNode(self):\n\n        users = [ProtocolTreeNode(\"user\", {}, None, number) for number in self.numbers]\n\n        node = super(GetSyncIqProtocolEntity, self).toProtocolTreeNode()\n        syncNode = node.getChild(\"sync\")\n        syncNode.setAttribute(\"mode\", self.mode)\n        syncNode.setAttribute(\"context\", self.context)\n        syncNode.addChildren(users)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        syncNode         = node.getChild(\"sync\")\n        userNodes        = syncNode.getAllChildren()\n        numbers          = [userNode.data for userNode in userNodes]\n        entity           = SyncIqProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = GetSyncIqProtocolEntity\n\n        entity.setGetSyncProps(numbers,\n            syncNode.getAttributeValue(\"mode\"),\n            syncNode.getAttributeValue(\"context\"),\n            )\n\n        return entity\n", "comments": "         iq type  get  id    id    xmlns  urn xmpp whatsapp sync            sync mode    full                    context    registration                    sid    str((int(time time())   11644477200)   10000000)                index    0                    last    true   false                            user                    num1                 user               user                    num2                 user             sync        iq          ", "content": "from yowsup.structs import ProtocolTreeNode\nfrom yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity\nfrom .iq_sync import SyncIqProtocolEntity\n\nclass GetSyncIqProtocolEntity(SyncIqProtocolEntity):\n\n    MODE_FULL = \"full\"\n    MODE_DELTA = \"delta\"\n    CONTEXT_REGISTRATION = \"registration\"\n    CONTEXT_INTERACTIVE = \"interactive\"\n\n    CONTEXTS = (CONTEXT_REGISTRATION, CONTEXT_INTERACTIVE)\n    MODES = (MODE_FULL, MODE_DELTA)\n\n\n    '''\n    <iq type=\"get\" id=\"{{id}}\" xmlns=\"urn:xmpp:whatsapp:sync\">\n        <sync mode=\"{{full | ?}}\"\n            context=\"{{registration | ?}}\"\n            sid=\"{{str((int(time.time()) + 11644477200) * 10000000)}}\"\n            index=\"{{0 | ?}}\"\n            last=\"{{true | false?}}\"\n        >\n            <user>\n                {{num1}}\n            </user>\n            <user>\n                {{num2}}\n            </user>\n\n        </sync>\n    </iq>\n    '''\n\n    def __init__(self, numbers, mode = MODE_FULL, context = CONTEXT_INTERACTIVE, sid = None, index = 0, last = True):\n        super(GetSyncIqProtocolEntity, self).__init__(\"get\", sid = sid, index =  index, last = last)\n        self.setGetSyncProps(numbers, mode, context)\n\n    def setGetSyncProps(self, numbers, mode, context):\n        assert type(numbers) is list, \"numbers must be a list\"\n        assert mode in self.__class__.MODES, \"mode must be in %s\" % self.__class__.MODES\n        assert context in self.__class__.CONTEXTS, \"context must be in %s\" % self.__class__.CONTEXTS\n\n        self.numbers = numbers\n        self.mode = mode\n        self.context = context\n\n    def __str__(self):\n        out  = super(GetSyncIqProtocolEntity, self).__str__()\n        out += \"Mode: %s\\n\" % self.mode\n        out += \"Context: %s\\n\" % self.context\n        out += \"numbers: %s\\n\" % (\",\".join(self.numbers))\n        return out\n\n    def toProtocolTreeNode(self):\n\n        users = [ProtocolTreeNode(\"user\", {}, None, number) for number in self.numbers]\n\n        node = super(GetSyncIqProtocolEntity, self).toProtocolTreeNode()\n        syncNode = node.getChild(\"sync\")\n        syncNode.setAttribute(\"mode\", self.mode)\n        syncNode.setAttribute(\"context\", self.context)\n        syncNode.addChildren(users)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        syncNode         = node.getChild(\"sync\")\n        userNodes        = syncNode.getAllChildren()\n        numbers          = [userNode.data for userNode in userNodes]\n        entity           = SyncIqProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = GetSyncIqProtocolEntity\n\n        entity.setGetSyncProps(numbers,\n            syncNode.getAttributeValue(\"mode\"),\n            syncNode.getAttributeValue(\"context\"),\n            )\n\n        return entity\n", "description": "The python WhatsApp library", "file_name": "iq_sync_get.py", "id": "56a4285ff872312b73e354316ccc2769", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_contacts/protocolentities/iq_sync_get.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
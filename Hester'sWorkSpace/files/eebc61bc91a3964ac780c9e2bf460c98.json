{"author": "odoo", "code": "# -*- coding: utf-8 -*-\nimport requests\n\nfrom odoo.api import Environment\nfrom odoo.tests import common\nfrom odoo.tools.misc import mute_logger, ustr\n\n\nclass TestConfirmUnsubscribe(common.HttpCase):\n    def setUp(self):\n        super(TestConfirmUnsubscribe, self).setUp()\n\n        cr = self.registry.cursor()\n        ?\n        self.env2 = env = Environment(cr, self.uid, {})\n        self.partner = env['res.partner'].create({\n            'name': 'Bob',\n            'email': 'bob@bob.bob'\n        })\n        self.mailing_list = env['mail.channel'].create({\n            'name': 'Test Mailing List',\n            'public': 'public',\n        })\n        self.token = self.mailing_list._generate_action_token(self.partner.id, action='unsubscribe')\n\n    def test_not_subscribed(self):\n        \"\"\"Test warning works\"\"\"\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"The address %s is already unsubscribed\" % self.partner.email)\n\n    @mute_logger('odoo.addons.website.models.ir_ui_view')\n    def test_not_subscribed_no_template(self):\n        \"\"\" Test warning works on db without template (code update w/o module update) \"\"\"\n        self.env2.ref('website_mail_channel.not_subscribed').unlink()\n        self.assertEquals(\n            self.env2['ir.model.data'].search_count([\n            ('module', '=', 'website_mail_channel'),\n            ('name', '=', 'not_subscribed'),\n        ]), 0, 'XID for template should have been deleted')\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"The address %s is already unsubscribed or was never subscribed to any mailing list\" % self.partner.email)\n\n    def test_wrong_token(self):\n        self.mailing_list.sudo().write({\n            'channel_partner_ids': [(4, self.partner.id, False)]\n        })\n        self.env2.cr.release()\n        self.token = 'XXX'\n\n        self._unsubscribe_check(\"Invalid or expired confirmation link.\")\n\n    def test_successful_unsubscribe(self):\n        self.mailing_list.sudo().write({\n            'channel_partner_ids': [(4, self.partner.id, False)]\n        })\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"You have been correctly unsubscribed\")\n\n    def _unsubscribe_check(self, text):\n        url = \"/groups/unsubscribe/{}/{}/{}\".format(\n            self.mailing_list.id, self.partner.id,\n            self.token\n        )\n        r = self.url_open(url)\n        body = ustr(r.content)\n        \n        self.assertIn(text, u' '.join(body.split()))\n", "comments": "   test warning works            self env2 cr release()          self  unsubscribe check( the address  already unsubscribed    self partner email)       mute logger( odoo addons website models ir ui view )     def test subscribed template(self)              test warning works db without template (code update w module update)            coding  utf 8        apparently httpcase properly update self env     normalize space make matching simpler ", "content": "# -*- coding: utf-8 -*-\nimport requests\n\nfrom odoo.api import Environment\nfrom odoo.tests import common\nfrom odoo.tools.misc import mute_logger, ustr\n\n\nclass TestConfirmUnsubscribe(common.HttpCase):\n    def setUp(self):\n        super(TestConfirmUnsubscribe, self).setUp()\n\n        cr = self.registry.cursor()\n        # apparently HttpCase does not properly update self.env?\n        self.env2 = env = Environment(cr, self.uid, {})\n        self.partner = env['res.partner'].create({\n            'name': 'Bob',\n            'email': 'bob@bob.bob'\n        })\n        self.mailing_list = env['mail.channel'].create({\n            'name': 'Test Mailing List',\n            'public': 'public',\n        })\n        self.token = self.mailing_list._generate_action_token(self.partner.id, action='unsubscribe')\n\n    def test_not_subscribed(self):\n        \"\"\"Test warning works\"\"\"\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"The address %s is already unsubscribed\" % self.partner.email)\n\n    @mute_logger('odoo.addons.website.models.ir_ui_view')\n    def test_not_subscribed_no_template(self):\n        \"\"\" Test warning works on db without template (code update w/o module update) \"\"\"\n        self.env2.ref('website_mail_channel.not_subscribed').unlink()\n        self.assertEquals(\n            self.env2['ir.model.data'].search_count([\n            ('module', '=', 'website_mail_channel'),\n            ('name', '=', 'not_subscribed'),\n        ]), 0, 'XID for template should have been deleted')\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"The address %s is already unsubscribed or was never subscribed to any mailing list\" % self.partner.email)\n\n    def test_wrong_token(self):\n        self.mailing_list.sudo().write({\n            'channel_partner_ids': [(4, self.partner.id, False)]\n        })\n        self.env2.cr.release()\n        self.token = 'XXX'\n\n        self._unsubscribe_check(\"Invalid or expired confirmation link.\")\n\n    def test_successful_unsubscribe(self):\n        self.mailing_list.sudo().write({\n            'channel_partner_ids': [(4, self.partner.id, False)]\n        })\n        self.env2.cr.release()\n\n        self._unsubscribe_check(\"You have been correctly unsubscribed\")\n\n    def _unsubscribe_check(self, text):\n        url = \"/groups/unsubscribe/{}/{}/{}\".format(\n            self.mailing_list.id, self.partner.id,\n            self.token\n        )\n        r = self.url_open(url)\n        body = ustr(r.content)\n        # normalize space to make matching simpler\n        self.assertIn(text, u' '.join(body.split()))\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_unsubscribe.py", "id": "eebc61bc91a3964ac780c9e2bf460c98", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_mail_channel/tests/test_unsubscribe.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
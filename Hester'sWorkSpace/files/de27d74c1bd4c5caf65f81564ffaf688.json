{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import urljoin\n\n\nclass YourUploadIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?(?:yourupload\\.com/(?:watch|embed)|embed\\.yourupload\\.com)/(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'http://yourupload.com/watch/14i14h',\n        'md5': '5e2c63385454c557f97c4c4131a393cd',\n        'info_dict': {\n            'id': '14i14h',\n            'ext': 'mp4',\n            'title': 'BigBuckBunny_320x180.mp4',\n            'thumbnail': r're:^https?://.*\\.jpe?g',\n        }\n    }, {\n        'url': 'http://www.yourupload.com/embed/14i14h',\n        'only_matching': True,\n    }, {\n        'url': 'http://embed.yourupload.com/14i14h',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        embed_url = 'http://www.yourupload.com/embed/%s' % video_id\n\n        webpage = self._download_webpage(embed_url, video_id)\n\n        title = self._og_search_title(webpage)\n        video_url = urljoin(embed_url, self._og_search_video_url(webpage))\n        thumbnail = self._og_search_thumbnail(webpage, default=None)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'http_headers': {\n                'Referer': embed_url,\n            },\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import urljoin\n\n\nclass YourUploadIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?(?:yourupload\\.com/(?:watch|embed)|embed\\.yourupload\\.com)/(?P<id>[A-Za-z0-9]+)'\n    _TESTS = [{\n        'url': 'http://yourupload.com/watch/14i14h',\n        'md5': '5e2c63385454c557f97c4c4131a393cd',\n        'info_dict': {\n            'id': '14i14h',\n            'ext': 'mp4',\n            'title': 'BigBuckBunny_320x180.mp4',\n            'thumbnail': r're:^https?://.*\\.jpe?g',\n        }\n    }, {\n        'url': 'http://www.yourupload.com/embed/14i14h',\n        'only_matching': True,\n    }, {\n        'url': 'http://embed.yourupload.com/14i14h',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        embed_url = 'http://www.yourupload.com/embed/%s' % video_id\n\n        webpage = self._download_webpage(embed_url, video_id)\n\n        title = self._og_search_title(webpage)\n        video_url = urljoin(embed_url, self._og_search_video_url(webpage))\n        thumbnail = self._og_search_thumbnail(webpage, default=None)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'http_headers': {\n                'Referer': embed_url,\n            },\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "yourupload.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/yourupload.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "sympy", "code": "from sympy import Symbol\nfrom sympy.codegen.ffunctions import isign, dsign, cmplx, kind, literal_dp\nfrom sympy.printing.fcode import fcode\n\n\ndef test_isign():\n    x = Symbol('x', integer=True)\n    assert isign(1, x) == isign(1, x)\n    assert fcode(isign(1, x), standard=95, source_format='free') == 'isign(1, x)'\n\n\ndef test_dsign():\n    x = Symbol('x')\n    assert dsign(1, x) == dsign(1, x)\n    assert fcode(dsign(literal_dp(1), x), standard=95, source_format='free') == 'dsign(1d0, x)'\n\n\ndef test_cmplx():\n    x = Symbol('x')\n    assert cmplx(1, x) == cmplx(1, x)\n\n\ndef test_kind():\n    x = Symbol('x')\n    assert kind(x) == kind(x)\n\n\ndef test_literal_dp():\n    assert fcode(literal_dp(0), source_format='free') == '0d0'\n", "comments": "", "content": "from sympy import Symbol\nfrom sympy.codegen.ffunctions import isign, dsign, cmplx, kind, literal_dp\nfrom sympy.printing.fcode import fcode\n\n\ndef test_isign():\n    x = Symbol('x', integer=True)\n    assert isign(1, x) == isign(1, x)\n    assert fcode(isign(1, x), standard=95, source_format='free') == 'isign(1, x)'\n\n\ndef test_dsign():\n    x = Symbol('x')\n    assert dsign(1, x) == dsign(1, x)\n    assert fcode(dsign(literal_dp(1), x), standard=95, source_format='free') == 'dsign(1d0, x)'\n\n\ndef test_cmplx():\n    x = Symbol('x')\n    assert cmplx(1, x) == cmplx(1, x)\n\n\ndef test_kind():\n    x = Symbol('x')\n    assert kind(x) == kind(x)\n\n\ndef test_literal_dp():\n    assert fcode(literal_dp(0), source_format='free') == '0d0'\n", "description": "A computer algebra system written in pure Python", "file_name": "test_ffunctions.py", "id": "81f1fad1f9f84649705b1ead3397978f", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/codegen/tests/test_ffunctions.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
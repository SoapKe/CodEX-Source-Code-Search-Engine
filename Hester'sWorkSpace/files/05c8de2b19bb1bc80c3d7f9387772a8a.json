{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\nimport base64\n\nfrom .common import InfoExtractor\nfrom .theplatform import ThePlatformIE\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    find_xpath_attr,\n    smuggle_url,\n    unescapeHTML,\n    update_url_query,\n    int_or_none,\n)\n\n\nclass NBCIE(AdobePassIE):\n    _VALID_URL = r'https?(?P<permalink>://(?:www\\.)?nbc\\.com/(?:classic-tv/)?[^/]+/video/[^/]+/(?P<id>n?\\d+))'\n\n    _TESTS = [\n        {\n            'url': 'http://www.nbc.com/the-tonight-show/video/jimmy-fallon-surprises-fans-at-ben-jerrys/2848237',\n            'info_dict': {\n                'id': '2848237',\n                'ext': 'mp4',\n                'title': 'Jimmy Fallon Surprises Fans at Ben & Jerry\\'s',\n                'description': 'Jimmy gives out free scoops of his new \"Tonight Dough\" ice cream flavor by surprising customers at the Ben & Jerry\\'s scoop shop.',\n                'timestamp': 1424246400,\n                'upload_date': '20150218',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                \n                'skip_download': True,\n            },\n        },\n        {\n            'url': 'http://www.nbc.com/saturday-night-live/video/star-wars-teaser/2832821',\n            'info_dict': {\n                'id': '2832821',\n                'ext': 'mp4',\n                'title': 'Star Wars Teaser',\n                'description': 'md5:0b40f9cbde5b671a7ff62fceccc4f442',\n                'timestamp': 1417852800,\n                'upload_date': '20141206',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                \n                'skip_download': True,\n            },\n            'skip': 'Only works from US',\n        },\n        {\n            \n            'url': 'http://www.nbc.com/Kings/video/goliath/n1806',\n            'info_dict': {\n                'id': '101528f5a9e8127b107e98c5e6ce4638',\n                'ext': 'mp4',\n                'title': 'Goliath',\n                'description': 'When an unknown soldier saves the life of the King\\'s son in battle, he\\'s thrust into the limelight and politics of the kingdom.',\n                'timestamp': 1237100400,\n                'upload_date': '20090315',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                'skip_download': True,\n            },\n            'skip': 'Only works from US',\n        },\n        {\n            'url': 'https://www.nbc.com/classic-tv/charles-in-charge/video/charles-in-charge-pilot/n3310',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        permalink, video_id = re.match(self._VALID_URL, url).groups()\n        permalink = 'http' + permalink\n        video_data = self._download_json(\n            'https://api.nbc.com/v3/videos', video_id, query={\n                'filter[permalink]': permalink,\n            })['data'][0]['attributes']\n        query = {\n            'mbr': 'true',\n            'manifest': 'm3u',\n        }\n        video_id = video_data['guid']\n        title = video_data['title']\n        if video_data.get('entitlement') == 'auth':\n            resource = self._get_mvpd_resource(\n                'nbcentertainment', title, video_id,\n                video_data.get('vChipRating'))\n            query['auth'] = self._extract_mvpd_auth(\n                url, video_id, 'nbcentertainment', resource)\n        theplatform_url = smuggle_url(update_url_query(\n            'http://link.theplatform.com/s/NnzsPC/media/guid/2410887629/' + video_id,\n            query), {'force_smil_url': True})\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': title,\n            'url': theplatform_url,\n            'description': video_data.get('description'),\n            'keywords': video_data.get('keywords'),\n            'season_number': int_or_none(video_data.get('seasonNumber')),\n            'episode_number': int_or_none(video_data.get('episodeNumber')),\n            'series': video_data.get('showName'),\n            'ie_key': 'ThePlatform',\n        }\n\n\nclass NBCSportsVPlayerIE(InfoExtractor):\n    _VALID_URL = r'https?://vplayer\\.nbcsports\\.com/(?:[^/]+/)+(?P<id>[0-9a-zA-Z_]+)'\n\n    _TESTS = [{\n        'url': 'https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/9CsDKds0kvHI',\n        'info_dict': {\n            'id': '9CsDKds0kvHI',\n            'ext': 'mp4',\n            'description': 'md5:df390f70a9ba7c95ff1daace988f0d8d',\n            'title': 'Tyler Kalinoski hits buzzer-beater to lift Davidson',\n            'timestamp': 1426270238,\n            'upload_date': '20150313',\n            'uploader': 'NBCU-SPORTS',\n        }\n    }, {\n        'url': 'https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/media/_hqLjQ95yx8Z',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        iframe_m = re.search(\n            r'<iframe[^>]+src=\"(?P<url>https?://vplayer\\.nbcsports\\.com/[^\"]+)\"', webpage)\n        if iframe_m:\n            return iframe_m.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        theplatform_url = self._og_search_video_url(webpage).replace(\n            'vplayer.nbcsports.com', 'player.theplatform.com')\n        return self.url_result(theplatform_url, 'ThePlatform')\n\n\nclass NBCSportsIE(InfoExtractor):\n    \n    _VALID_URL = r'https?://(?:www\\.)?nbcsports\\.com//?(?:[^/]+/)+(?P<id>[0-9a-z-]+)'\n\n    _TEST = {\n        'url': 'http://www.nbcsports.com//college-basketball/ncaab/tom-izzo-michigan-st-has-so-much-respect-duke',\n        'info_dict': {\n            'id': 'PHJSaFWbrTY9',\n            'ext': 'flv',\n            'title': 'Tom Izzo, Michigan St. has \\'so much respect\\' for Duke',\n            'description': 'md5:ecb459c9d59e0766ac9c7d5d0eda8113',\n            'uploader': 'NBCU-SPORTS',\n            'upload_date': '20150330',\n            'timestamp': 1427726529,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        return self.url_result(\n            NBCSportsVPlayerIE._extract_url(webpage), 'NBCSportsVPlayer')\n\n\nclass CSNNEIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?csnne\\.com/video/(?P<id>[0-9a-z-]+)'\n\n    _TEST = {\n        'url': 'http://www.csnne.com/video/snc-evening-update-wright-named-red-sox-no-5-starter',\n        'info_dict': {\n            'id': 'yvBLLUgQ8WU0',\n            'ext': 'mp4',\n            'title': 'SNC evening update: Wright named Red Sox\\' No. 5 starter.',\n            'description': 'md5:1753cfee40d9352b19b4c9b3e589b9e3',\n            'timestamp': 1459369979,\n            'upload_date': '20160330',\n            'uploader': 'NBCU-SPORTS',\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        return {\n            '_type': 'url_transparent',\n            'ie_key': 'ThePlatform',\n            'url': self._html_search_meta('twitter:player:stream', webpage),\n            'display_id': display_id,\n        }\n\n\nclass NBCNewsIE(ThePlatformIE):\n    _VALID_URL = r\n\n    _TESTS = [\n        {\n            'url': 'http://www.nbcnews.com/video/nbc-news/52753292',\n            'md5': '47abaac93c6eaf9ad37ee6c4463a5179',\n            'info_dict': {\n                'id': '52753292',\n                'ext': 'flv',\n                'title': 'Crew emerges after four-month Mars food study',\n                'description': 'md5:24e632ffac72b35f8b67a12d1b6ddfc1',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/watch/nbcnews-com/how-twitter-reacted-to-the-snowden-interview-269389891880',\n            'md5': 'af1adfa51312291a017720403826bb64',\n            'info_dict': {\n                'id': 'p_tweet_snow_140529',\n                'ext': 'mp4',\n                'title': 'How Twitter Reacted To The Snowden Interview',\n                'description': 'md5:65a0bd5d76fe114f3c2727aa3a81fe64',\n                'uploader': 'NBCU-NEWS',\n                'timestamp': 1401363060,\n                'upload_date': '20140529',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/feature/dateline-full-episodes/full-episode-family-business-n285156',\n            'md5': 'fdbf39ab73a72df5896b6234ff98518a',\n            'info_dict': {\n                'id': '529953347624',\n                'ext': 'mp4',\n                'title': 'FULL EPISODE: Family Business',\n                'description': 'md5:757988edbaae9d7be1d585eb5d55cc04',\n            },\n            'skip': 'This page is unavailable.',\n        },\n        {\n            'url': 'http://www.nbcnews.com/nightly-news/video/nightly-news-with-brian-williams-full-broadcast-february-4-394064451844',\n            'md5': '73135a2e0ef819107bbb55a5a9b2a802',\n            'info_dict': {\n                'id': 'nn_netcast_150204',\n                'ext': 'mp4',\n                'title': 'Nightly News with Brian Williams Full Broadcast (February 4)',\n                'description': 'md5:1c10c1eccbe84a26e5debb4381e2d3c5',\n                'timestamp': 1423104900,\n                'uploader': 'NBCU-NEWS',\n                'upload_date': '20150205',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/business/autos/volkswagen-11-million-vehicles-could-have-suspect-software-emissions-scandal-n431456',\n            'md5': 'a49e173825e5fcd15c13fc297fced39d',\n            'info_dict': {\n                'id': 'x_lon_vwhorn_150922',\n                'ext': 'mp4',\n                'title': 'Volkswagen U.S. Chief:\\xa0 We Have Totally Screwed Up',\n                'description': 'md5:c8be487b2d80ff0594c005add88d8351',\n                'upload_date': '20150922',\n                'timestamp': 1442917800,\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.today.com/video/see-the-aurora-borealis-from-space-in-stunning-new-nasa-video-669831235788',\n            'md5': '118d7ca3f0bea6534f119c68ef539f71',\n            'info_dict': {\n                'id': 'tdy_al_space_160420',\n                'ext': 'mp4',\n                'title': 'See the aurora borealis from space in stunning new NASA video',\n                'description': 'md5:74752b7358afb99939c5f8bb2d1d04b1',\n                'upload_date': '20160420',\n                'timestamp': 1461152093,\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.msnbc.com/all-in-with-chris-hayes/watch/the-chaotic-gop-immigration-vote-314487875924',\n            'md5': '6d236bf4f3dddc226633ce6e2c3f814d',\n            'info_dict': {\n                'id': 'n_hayes_Aimm_140801_272214',\n                'ext': 'mp4',\n                'title': 'The chaotic GOP immigration vote',\n                'description': 'The Republican House votes on a border bill that has no chance of getting through the Senate or signed by the President and is drawing criticism from all sides.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'timestamp': 1406937606,\n                'upload_date': '20140802',\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/watch/dateline/full-episode--deadly-betrayal-386250819952',\n            'only_matching': True,\n        },\n        {\n            \n            'url': 'http://www.nbcnews.com/widget/video-embed/701714499682',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        if video_id is not None:\n            all_info = self._download_xml('http://www.nbcnews.com/id/%s/displaymode/1219' % video_id, video_id)\n            info = all_info.find('video')\n\n            return {\n                'id': video_id,\n                'title': info.find('headline').text,\n                'ext': 'flv',\n                'url': find_xpath_attr(info, 'media', 'type', 'flashVideo').text,\n                'description': info.find('caption').text,\n                'thumbnail': find_xpath_attr(info, 'media', 'type', 'thumbnail').text,\n            }\n        else:\n            \n            video_id = mobj.group('mpx_id')\n            webpage = self._download_webpage(url, video_id)\n\n            filter_param = 'byId'\n            bootstrap_json = self._search_regex(\n                [r'(?m)(?:var\\s+(?:bootstrapJson|playlistData)|NEWS\\.videoObj)\\s*=\\s*({.+});?\\s*$',\n                 r'videoObj\\s*:\\s*({.+})', r'data-video=\"([^\"]+)\"',\n                 r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);'],\n                webpage, 'bootstrap json', default=None)\n            if bootstrap_json:\n                bootstrap = self._parse_json(\n                    bootstrap_json, video_id, transform_source=unescapeHTML)\n\n                info = None\n                if 'results' in bootstrap:\n                    info = bootstrap['results'][0]['video']\n                elif 'video' in bootstrap:\n                    info = bootstrap['video']\n                elif 'msnbcVideoInfo' in bootstrap:\n                    info = bootstrap['msnbcVideoInfo']['meta']\n                elif 'msnbcThePlatform' in bootstrap:\n                    info = bootstrap['msnbcThePlatform']['videoPlayer']['video']\n                else:\n                    info = bootstrap\n\n                if 'guid' in info:\n                    video_id = info['guid']\n                    filter_param = 'byGuid'\n                elif 'mpxId' in info:\n                    video_id = info['mpxId']\n\n            return {\n                '_type': 'url_transparent',\n                'id': video_id,\n                \n                'url': update_url_query('http://feed.theplatform.com/f/2E2eJC/nnd_NBCNews', {filter_param: video_id}),\n                'ie_key': 'ThePlatformFeed',\n            }\n\n\nclass NBCOlympicsIE(InfoExtractor):\n    IE_NAME = 'nbcolympics'\n    _VALID_URL = r'https?://www\\.nbcolympics\\.com/video/(?P<id>[a-z-]+)'\n\n    _TEST = {\n        \n        'url': 'http://www.nbcolympics.com/video/justin-roses-son-leo-was-tears-after-his-dad-won-gold',\n        'md5': '54fecf846d05429fbaa18af557ee523a',\n        'info_dict': {\n            'id': 'WjTBzDXx5AUq',\n            'display_id': 'justin-roses-son-leo-was-tears-after-his-dad-won-gold',\n            'ext': 'mp4',\n            'title': 'Rose\\'s son Leo was in tears after his dad won gold',\n            'description': 'Olympic gold medalist Justin Rose gets emotional talking to the impact his win in men\\'s golf has already had on his children.',\n            'timestamp': 1471274964,\n            'upload_date': '20160815',\n            'uploader': 'NBCU-SPORTS',\n        },\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        drupal_settings = self._parse_json(self._search_regex(\n            r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n            webpage, 'drupal settings'), display_id)\n\n        iframe_url = drupal_settings['vod']['iframe_url']\n        theplatform_url = iframe_url.replace(\n            'vplayer.nbcolympics.com', 'player.theplatform.com')\n\n        return {\n            '_type': 'url_transparent',\n            'url': theplatform_url,\n            'ie_key': ThePlatformIE.ie_key(),\n            'display_id': display_id,\n        }\n\n\nclass NBCOlympicsStreamIE(AdobePassIE):\n    IE_NAME = 'nbcolympics:stream'\n    _VALID_URL = r'https?://stream\\.nbcolympics\\.com/(?P<id>[0-9a-z-]+)'\n    _TEST = {\n        'url': 'http://stream.nbcolympics.com/2018-winter-olympics-nbcsn-evening-feb-8',\n        'info_dict': {\n            'id': '203493',\n            'ext': 'mp4',\n            'title': 're:Curling, Alpine, Luge [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n    }\n    _DATA_URL_TEMPLATE = 'http://stream.nbcolympics.com/data/%s_%s.json'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        pid = self._search_regex(r'pid\\s*=\\s*(\\d+);', webpage, 'pid')\n        resource = self._search_regex(\n            r\"resource\\s*=\\s*'(.+)';\", webpage,\n            'resource').replace(\"' + pid + '\", pid)\n        event_config = self._download_json(\n            self._DATA_URL_TEMPLATE % ('event_config', pid),\n            pid)['eventConfig']\n        title = self._live_title(event_config['eventTitle'])\n        source_url = self._download_json(\n            self._DATA_URL_TEMPLATE % ('live_sources', pid),\n            pid)['videoSources'][0]['sourceUrl']\n        media_token = self._extract_mvpd_auth(\n            url, pid, event_config.get('requestorId', 'NBCOlympics'), resource)\n        formats = self._extract_m3u8_formats(self._download_webpage(\n            'http://sp.auth.adobe.com/tvs/v1/sign', pid, query={\n                'cdn': 'akamai',\n                'mediaToken': base64.b64encode(media_token.encode()),\n                'resource': base64.b64encode(resource.encode()),\n                'url': source_url,\n            }), pid, 'mp4')\n        self._sort_formats(formats)\n\n        return {\n            'id': pid,\n            'display_id': display_id,\n            'title': title,\n            'formats': formats,\n            'is_live': True,\n        }\n", "comments": "(?x)https?://(?:www\\.)?(?:nbcnews|today|msnbc)\\.com/\n        (?:video/.+?/(?P<id>\\d+)|\n        ([^/]+/)*(?:.*-)?(?P<mpx_id>[^/?]+))\n        \n \n# m3u8 download\n# m3u8 download\n# HLS streams requires the 'hdnea3' cookie\n# Does not include https because its certificate is invalid\n# From http://www.vulture.com/2016/06/letterman-couldnt-care-less-about-late-night.html\n# \"feature\" and \"nightly-news\" pages use theplatform.com\n# http://feed.theplatform.com/f/2E2eJC/nbcnews also works\n# Geo-restricted to US\n# m3u8 download\n", "content": "from __future__ import unicode_literals\n\nimport re\nimport base64\n\nfrom .common import InfoExtractor\nfrom .theplatform import ThePlatformIE\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    find_xpath_attr,\n    smuggle_url,\n    unescapeHTML,\n    update_url_query,\n    int_or_none,\n)\n\n\nclass NBCIE(AdobePassIE):\n    _VALID_URL = r'https?(?P<permalink>://(?:www\\.)?nbc\\.com/(?:classic-tv/)?[^/]+/video/[^/]+/(?P<id>n?\\d+))'\n\n    _TESTS = [\n        {\n            'url': 'http://www.nbc.com/the-tonight-show/video/jimmy-fallon-surprises-fans-at-ben-jerrys/2848237',\n            'info_dict': {\n                'id': '2848237',\n                'ext': 'mp4',\n                'title': 'Jimmy Fallon Surprises Fans at Ben & Jerry\\'s',\n                'description': 'Jimmy gives out free scoops of his new \"Tonight Dough\" ice cream flavor by surprising customers at the Ben & Jerry\\'s scoop shop.',\n                'timestamp': 1424246400,\n                'upload_date': '20150218',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                # m3u8 download\n                'skip_download': True,\n            },\n        },\n        {\n            'url': 'http://www.nbc.com/saturday-night-live/video/star-wars-teaser/2832821',\n            'info_dict': {\n                'id': '2832821',\n                'ext': 'mp4',\n                'title': 'Star Wars Teaser',\n                'description': 'md5:0b40f9cbde5b671a7ff62fceccc4f442',\n                'timestamp': 1417852800,\n                'upload_date': '20141206',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                # m3u8 download\n                'skip_download': True,\n            },\n            'skip': 'Only works from US',\n        },\n        {\n            # HLS streams requires the 'hdnea3' cookie\n            'url': 'http://www.nbc.com/Kings/video/goliath/n1806',\n            'info_dict': {\n                'id': '101528f5a9e8127b107e98c5e6ce4638',\n                'ext': 'mp4',\n                'title': 'Goliath',\n                'description': 'When an unknown soldier saves the life of the King\\'s son in battle, he\\'s thrust into the limelight and politics of the kingdom.',\n                'timestamp': 1237100400,\n                'upload_date': '20090315',\n                'uploader': 'NBCU-COM',\n            },\n            'params': {\n                'skip_download': True,\n            },\n            'skip': 'Only works from US',\n        },\n        {\n            'url': 'https://www.nbc.com/classic-tv/charles-in-charge/video/charles-in-charge-pilot/n3310',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        permalink, video_id = re.match(self._VALID_URL, url).groups()\n        permalink = 'http' + permalink\n        video_data = self._download_json(\n            'https://api.nbc.com/v3/videos', video_id, query={\n                'filter[permalink]': permalink,\n            })['data'][0]['attributes']\n        query = {\n            'mbr': 'true',\n            'manifest': 'm3u',\n        }\n        video_id = video_data['guid']\n        title = video_data['title']\n        if video_data.get('entitlement') == 'auth':\n            resource = self._get_mvpd_resource(\n                'nbcentertainment', title, video_id,\n                video_data.get('vChipRating'))\n            query['auth'] = self._extract_mvpd_auth(\n                url, video_id, 'nbcentertainment', resource)\n        theplatform_url = smuggle_url(update_url_query(\n            'http://link.theplatform.com/s/NnzsPC/media/guid/2410887629/' + video_id,\n            query), {'force_smil_url': True})\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': title,\n            'url': theplatform_url,\n            'description': video_data.get('description'),\n            'keywords': video_data.get('keywords'),\n            'season_number': int_or_none(video_data.get('seasonNumber')),\n            'episode_number': int_or_none(video_data.get('episodeNumber')),\n            'series': video_data.get('showName'),\n            'ie_key': 'ThePlatform',\n        }\n\n\nclass NBCSportsVPlayerIE(InfoExtractor):\n    _VALID_URL = r'https?://vplayer\\.nbcsports\\.com/(?:[^/]+/)+(?P<id>[0-9a-zA-Z_]+)'\n\n    _TESTS = [{\n        'url': 'https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/9CsDKds0kvHI',\n        'info_dict': {\n            'id': '9CsDKds0kvHI',\n            'ext': 'mp4',\n            'description': 'md5:df390f70a9ba7c95ff1daace988f0d8d',\n            'title': 'Tyler Kalinoski hits buzzer-beater to lift Davidson',\n            'timestamp': 1426270238,\n            'upload_date': '20150313',\n            'uploader': 'NBCU-SPORTS',\n        }\n    }, {\n        'url': 'https://vplayer.nbcsports.com/p/BxmELC/nbcsports_embed/select/media/_hqLjQ95yx8Z',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        iframe_m = re.search(\n            r'<iframe[^>]+src=\"(?P<url>https?://vplayer\\.nbcsports\\.com/[^\"]+)\"', webpage)\n        if iframe_m:\n            return iframe_m.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        theplatform_url = self._og_search_video_url(webpage).replace(\n            'vplayer.nbcsports.com', 'player.theplatform.com')\n        return self.url_result(theplatform_url, 'ThePlatform')\n\n\nclass NBCSportsIE(InfoExtractor):\n    # Does not include https because its certificate is invalid\n    _VALID_URL = r'https?://(?:www\\.)?nbcsports\\.com//?(?:[^/]+/)+(?P<id>[0-9a-z-]+)'\n\n    _TEST = {\n        'url': 'http://www.nbcsports.com//college-basketball/ncaab/tom-izzo-michigan-st-has-so-much-respect-duke',\n        'info_dict': {\n            'id': 'PHJSaFWbrTY9',\n            'ext': 'flv',\n            'title': 'Tom Izzo, Michigan St. has \\'so much respect\\' for Duke',\n            'description': 'md5:ecb459c9d59e0766ac9c7d5d0eda8113',\n            'uploader': 'NBCU-SPORTS',\n            'upload_date': '20150330',\n            'timestamp': 1427726529,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        return self.url_result(\n            NBCSportsVPlayerIE._extract_url(webpage), 'NBCSportsVPlayer')\n\n\nclass CSNNEIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?csnne\\.com/video/(?P<id>[0-9a-z-]+)'\n\n    _TEST = {\n        'url': 'http://www.csnne.com/video/snc-evening-update-wright-named-red-sox-no-5-starter',\n        'info_dict': {\n            'id': 'yvBLLUgQ8WU0',\n            'ext': 'mp4',\n            'title': 'SNC evening update: Wright named Red Sox\\' No. 5 starter.',\n            'description': 'md5:1753cfee40d9352b19b4c9b3e589b9e3',\n            'timestamp': 1459369979,\n            'upload_date': '20160330',\n            'uploader': 'NBCU-SPORTS',\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        return {\n            '_type': 'url_transparent',\n            'ie_key': 'ThePlatform',\n            'url': self._html_search_meta('twitter:player:stream', webpage),\n            'display_id': display_id,\n        }\n\n\nclass NBCNewsIE(ThePlatformIE):\n    _VALID_URL = r'''(?x)https?://(?:www\\.)?(?:nbcnews|today|msnbc)\\.com/\n        (?:video/.+?/(?P<id>\\d+)|\n        ([^/]+/)*(?:.*-)?(?P<mpx_id>[^/?]+))\n        '''\n\n    _TESTS = [\n        {\n            'url': 'http://www.nbcnews.com/video/nbc-news/52753292',\n            'md5': '47abaac93c6eaf9ad37ee6c4463a5179',\n            'info_dict': {\n                'id': '52753292',\n                'ext': 'flv',\n                'title': 'Crew emerges after four-month Mars food study',\n                'description': 'md5:24e632ffac72b35f8b67a12d1b6ddfc1',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/watch/nbcnews-com/how-twitter-reacted-to-the-snowden-interview-269389891880',\n            'md5': 'af1adfa51312291a017720403826bb64',\n            'info_dict': {\n                'id': 'p_tweet_snow_140529',\n                'ext': 'mp4',\n                'title': 'How Twitter Reacted To The Snowden Interview',\n                'description': 'md5:65a0bd5d76fe114f3c2727aa3a81fe64',\n                'uploader': 'NBCU-NEWS',\n                'timestamp': 1401363060,\n                'upload_date': '20140529',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/feature/dateline-full-episodes/full-episode-family-business-n285156',\n            'md5': 'fdbf39ab73a72df5896b6234ff98518a',\n            'info_dict': {\n                'id': '529953347624',\n                'ext': 'mp4',\n                'title': 'FULL EPISODE: Family Business',\n                'description': 'md5:757988edbaae9d7be1d585eb5d55cc04',\n            },\n            'skip': 'This page is unavailable.',\n        },\n        {\n            'url': 'http://www.nbcnews.com/nightly-news/video/nightly-news-with-brian-williams-full-broadcast-february-4-394064451844',\n            'md5': '73135a2e0ef819107bbb55a5a9b2a802',\n            'info_dict': {\n                'id': 'nn_netcast_150204',\n                'ext': 'mp4',\n                'title': 'Nightly News with Brian Williams Full Broadcast (February 4)',\n                'description': 'md5:1c10c1eccbe84a26e5debb4381e2d3c5',\n                'timestamp': 1423104900,\n                'uploader': 'NBCU-NEWS',\n                'upload_date': '20150205',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/business/autos/volkswagen-11-million-vehicles-could-have-suspect-software-emissions-scandal-n431456',\n            'md5': 'a49e173825e5fcd15c13fc297fced39d',\n            'info_dict': {\n                'id': 'x_lon_vwhorn_150922',\n                'ext': 'mp4',\n                'title': 'Volkswagen U.S. Chief:\\xa0 We Have Totally Screwed Up',\n                'description': 'md5:c8be487b2d80ff0594c005add88d8351',\n                'upload_date': '20150922',\n                'timestamp': 1442917800,\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.today.com/video/see-the-aurora-borealis-from-space-in-stunning-new-nasa-video-669831235788',\n            'md5': '118d7ca3f0bea6534f119c68ef539f71',\n            'info_dict': {\n                'id': 'tdy_al_space_160420',\n                'ext': 'mp4',\n                'title': 'See the aurora borealis from space in stunning new NASA video',\n                'description': 'md5:74752b7358afb99939c5f8bb2d1d04b1',\n                'upload_date': '20160420',\n                'timestamp': 1461152093,\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.msnbc.com/all-in-with-chris-hayes/watch/the-chaotic-gop-immigration-vote-314487875924',\n            'md5': '6d236bf4f3dddc226633ce6e2c3f814d',\n            'info_dict': {\n                'id': 'n_hayes_Aimm_140801_272214',\n                'ext': 'mp4',\n                'title': 'The chaotic GOP immigration vote',\n                'description': 'The Republican House votes on a border bill that has no chance of getting through the Senate or signed by the President and is drawing criticism from all sides.',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n                'timestamp': 1406937606,\n                'upload_date': '20140802',\n                'uploader': 'NBCU-NEWS',\n            },\n        },\n        {\n            'url': 'http://www.nbcnews.com/watch/dateline/full-episode--deadly-betrayal-386250819952',\n            'only_matching': True,\n        },\n        {\n            # From http://www.vulture.com/2016/06/letterman-couldnt-care-less-about-late-night.html\n            'url': 'http://www.nbcnews.com/widget/video-embed/701714499682',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        if video_id is not None:\n            all_info = self._download_xml('http://www.nbcnews.com/id/%s/displaymode/1219' % video_id, video_id)\n            info = all_info.find('video')\n\n            return {\n                'id': video_id,\n                'title': info.find('headline').text,\n                'ext': 'flv',\n                'url': find_xpath_attr(info, 'media', 'type', 'flashVideo').text,\n                'description': info.find('caption').text,\n                'thumbnail': find_xpath_attr(info, 'media', 'type', 'thumbnail').text,\n            }\n        else:\n            # \"feature\" and \"nightly-news\" pages use theplatform.com\n            video_id = mobj.group('mpx_id')\n            webpage = self._download_webpage(url, video_id)\n\n            filter_param = 'byId'\n            bootstrap_json = self._search_regex(\n                [r'(?m)(?:var\\s+(?:bootstrapJson|playlistData)|NEWS\\.videoObj)\\s*=\\s*({.+});?\\s*$',\n                 r'videoObj\\s*:\\s*({.+})', r'data-video=\"([^\"]+)\"',\n                 r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);'],\n                webpage, 'bootstrap json', default=None)\n            if bootstrap_json:\n                bootstrap = self._parse_json(\n                    bootstrap_json, video_id, transform_source=unescapeHTML)\n\n                info = None\n                if 'results' in bootstrap:\n                    info = bootstrap['results'][0]['video']\n                elif 'video' in bootstrap:\n                    info = bootstrap['video']\n                elif 'msnbcVideoInfo' in bootstrap:\n                    info = bootstrap['msnbcVideoInfo']['meta']\n                elif 'msnbcThePlatform' in bootstrap:\n                    info = bootstrap['msnbcThePlatform']['videoPlayer']['video']\n                else:\n                    info = bootstrap\n\n                if 'guid' in info:\n                    video_id = info['guid']\n                    filter_param = 'byGuid'\n                elif 'mpxId' in info:\n                    video_id = info['mpxId']\n\n            return {\n                '_type': 'url_transparent',\n                'id': video_id,\n                # http://feed.theplatform.com/f/2E2eJC/nbcnews also works\n                'url': update_url_query('http://feed.theplatform.com/f/2E2eJC/nnd_NBCNews', {filter_param: video_id}),\n                'ie_key': 'ThePlatformFeed',\n            }\n\n\nclass NBCOlympicsIE(InfoExtractor):\n    IE_NAME = 'nbcolympics'\n    _VALID_URL = r'https?://www\\.nbcolympics\\.com/video/(?P<id>[a-z-]+)'\n\n    _TEST = {\n        # Geo-restricted to US\n        'url': 'http://www.nbcolympics.com/video/justin-roses-son-leo-was-tears-after-his-dad-won-gold',\n        'md5': '54fecf846d05429fbaa18af557ee523a',\n        'info_dict': {\n            'id': 'WjTBzDXx5AUq',\n            'display_id': 'justin-roses-son-leo-was-tears-after-his-dad-won-gold',\n            'ext': 'mp4',\n            'title': 'Rose\\'s son Leo was in tears after his dad won gold',\n            'description': 'Olympic gold medalist Justin Rose gets emotional talking to the impact his win in men\\'s golf has already had on his children.',\n            'timestamp': 1471274964,\n            'upload_date': '20160815',\n            'uploader': 'NBCU-SPORTS',\n        },\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        drupal_settings = self._parse_json(self._search_regex(\n            r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n            webpage, 'drupal settings'), display_id)\n\n        iframe_url = drupal_settings['vod']['iframe_url']\n        theplatform_url = iframe_url.replace(\n            'vplayer.nbcolympics.com', 'player.theplatform.com')\n\n        return {\n            '_type': 'url_transparent',\n            'url': theplatform_url,\n            'ie_key': ThePlatformIE.ie_key(),\n            'display_id': display_id,\n        }\n\n\nclass NBCOlympicsStreamIE(AdobePassIE):\n    IE_NAME = 'nbcolympics:stream'\n    _VALID_URL = r'https?://stream\\.nbcolympics\\.com/(?P<id>[0-9a-z-]+)'\n    _TEST = {\n        'url': 'http://stream.nbcolympics.com/2018-winter-olympics-nbcsn-evening-feb-8',\n        'info_dict': {\n            'id': '203493',\n            'ext': 'mp4',\n            'title': 're:Curling, Alpine, Luge [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        },\n    }\n    _DATA_URL_TEMPLATE = 'http://stream.nbcolympics.com/data/%s_%s.json'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        pid = self._search_regex(r'pid\\s*=\\s*(\\d+);', webpage, 'pid')\n        resource = self._search_regex(\n            r\"resource\\s*=\\s*'(.+)';\", webpage,\n            'resource').replace(\"' + pid + '\", pid)\n        event_config = self._download_json(\n            self._DATA_URL_TEMPLATE % ('event_config', pid),\n            pid)['eventConfig']\n        title = self._live_title(event_config['eventTitle'])\n        source_url = self._download_json(\n            self._DATA_URL_TEMPLATE % ('live_sources', pid),\n            pid)['videoSources'][0]['sourceUrl']\n        media_token = self._extract_mvpd_auth(\n            url, pid, event_config.get('requestorId', 'NBCOlympics'), resource)\n        formats = self._extract_m3u8_formats(self._download_webpage(\n            'http://sp.auth.adobe.com/tvs/v1/sign', pid, query={\n                'cdn': 'akamai',\n                'mediaToken': base64.b64encode(media_token.encode()),\n                'resource': base64.b64encode(resource.encode()),\n                'url': source_url,\n            }), pid, 'mp4')\n        self._sort_formats(formats)\n\n        return {\n            'id': pid,\n            'display_id': display_id,\n            'title': title,\n            'formats': formats,\n            'is_live': True,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "nbc.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/nbc.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
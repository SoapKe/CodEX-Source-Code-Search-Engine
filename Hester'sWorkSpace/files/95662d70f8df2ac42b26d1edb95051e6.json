{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import remove_start\n\n\nclass Ir90TvIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?90tv\\.ir/video/(?P<id>[0-9]+)/.*'\n    _TESTS = [{\n        'url': 'http://90tv.ir/video/95719/%D8%B4%D8%A7%DB%8C%D8%B9%D8%A7%D8%AA-%D9%86%D9%82%D9%84-%D9%88-%D8%A7%D9%86%D8%AA%D9%82%D8%A7%D9%84%D8%A7%D8%AA-%D9%85%D9%87%D9%85-%D9%81%D9%88%D8%AA%D8%A8%D8%A7%D9%84-%D8%A7%D8%B1%D9%88%D9%BE%D8%A7-940218',\n        'md5': '411dbd94891381960cb9e13daa47a869',\n        'info_dict': {\n            'id': '95719',\n            'ext': 'mp4',\n            'title': '\u0634\u0627\u06cc\u0639\u0627\u062a \u0646\u0642\u0644 \u0648 \u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a \u0645\u0647\u0645 \u0641\u0648\u062a\u0628\u0627\u0644 \u0627\u0631\u0648\u067e\u0627 94/02/18',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }, {\n        'url': 'http://www.90tv.ir/video/95719/%D8%B4%D8%A7%DB%8C%D8%B9%D8%A7%D8%AA-%D9%86%D9%82%D9%84-%D9%88-%D8%A7%D9%86%D8%AA%D9%82%D8%A7%D9%84%D8%A7%D8%AA-%D9%85%D9%87%D9%85-%D9%81%D9%88%D8%AA%D8%A8%D8%A7%D9%84-%D8%A7%D8%B1%D9%88%D9%BE%D8%A7-940218',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        title = remove_start(self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title'), '90tv.ir :: ')\n\n        video_url = self._search_regex(\n            r'<source[^>]+src=\"([^\"]+)\"', webpage, 'video url')\n\n        thumbnail = self._search_regex(r'poster=\"([^\"]+)\"', webpage, 'thumbnail url', fatal=False)\n\n        return {\n            'url': video_url,\n            'id': video_id,\n            'title': title,\n            'video_url': video_url,\n            'thumbnail': thumbnail,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import remove_start\n\n\nclass Ir90TvIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?90tv\\.ir/video/(?P<id>[0-9]+)/.*'\n    _TESTS = [{\n        'url': 'http://90tv.ir/video/95719/%D8%B4%D8%A7%DB%8C%D8%B9%D8%A7%D8%AA-%D9%86%D9%82%D9%84-%D9%88-%D8%A7%D9%86%D8%AA%D9%82%D8%A7%D9%84%D8%A7%D8%AA-%D9%85%D9%87%D9%85-%D9%81%D9%88%D8%AA%D8%A8%D8%A7%D9%84-%D8%A7%D8%B1%D9%88%D9%BE%D8%A7-940218',\n        'md5': '411dbd94891381960cb9e13daa47a869',\n        'info_dict': {\n            'id': '95719',\n            'ext': 'mp4',\n            'title': '\u0634\u0627\u06cc\u0639\u0627\u062a \u0646\u0642\u0644 \u0648 \u0627\u0646\u062a\u0642\u0627\u0644\u0627\u062a \u0645\u0647\u0645 \u0641\u0648\u062a\u0628\u0627\u0644 \u0627\u0631\u0648\u067e\u0627 94/02/18',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }, {\n        'url': 'http://www.90tv.ir/video/95719/%D8%B4%D8%A7%DB%8C%D8%B9%D8%A7%D8%AA-%D9%86%D9%82%D9%84-%D9%88-%D8%A7%D9%86%D8%AA%D9%82%D8%A7%D9%84%D8%A7%D8%AA-%D9%85%D9%87%D9%85-%D9%81%D9%88%D8%AA%D8%A8%D8%A7%D9%84-%D8%A7%D8%B1%D9%88%D9%BE%D8%A7-940218',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        title = remove_start(self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title'), '90tv.ir :: ')\n\n        video_url = self._search_regex(\n            r'<source[^>]+src=\"([^\"]+)\"', webpage, 'video url')\n\n        thumbnail = self._search_regex(r'poster=\"([^\"]+)\"', webpage, 'thumbnail url', fatal=False)\n\n        return {\n            'url': video_url,\n            'id': video_id,\n            'title': title,\n            'video_url': video_url,\n            'thumbnail': thumbnail,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "ir90tv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/ir90tv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
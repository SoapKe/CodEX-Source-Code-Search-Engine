{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\n\n\nclass ChooseDeliveryPackage(models.TransientModel):\n    _name = 'choose.delivery.package'\n    _description = 'Delivery Package Selection Wizard'\n\n    stock_quant_package_id = fields.Many2one(\n        'stock.quant.package',\n        string=\"Physical Package\",\n        default=lambda self: self._default_stock_quant_package_id()\n    ) \n    delivery_packaging_id = fields.Many2one(\n        'product.packaging',\n        default=lambda self: self._default_delivery_packaging_id()\n    )\n    shipping_weight = fields.Float(\n        string='Shipping Weight',\n        default=lambda self: self._default_shipping_weight()\n    )\n\n    def _default_stock_quant_package_id(self):\n        if self.env.context.get('default_stock_quant_package_id'):\n            return self.env['stock.quant.package'].browse(self.env.context['stock_quant_package_id'])\n\n    def _default_delivery_packaging_id(self):\n        res = None\n        if self.env.context.get('default_delivery_packaging_id'):\n            res = self.env['product.packaging'].browse(self.env.context['default_delivery_packaging_id'])\n        if self.env.context.get('default_stock_quant_package_id'):\n            stock_quant_package = self.env['stock.quant.package'].browse(self.env.context['default_stock_quant_package_id'])\n            res = stock_quant_package.packaging_id\n        return res\n\n    def _default_shipping_weight(self):\n        if self.env.context.get('default_stock_quant_package_id'):\n            stock_quant_package = self.env['stock.quant.package'].browse(self.env.context['default_stock_quant_package_id'])\n            return stock_quant_package.shipping_weight\n        else:\n            picking_id = self.env['stock.picking'].browse(self.env.context['active_id'])\n            move_line_ids = [po for po in picking_id.move_line_ids if po.qty_done > 0 and not po.result_package_id]\n            total_weight = sum([po.qty_done * po.product_id.weight for po in move_line_ids])\n            return total_weight\n\n    def put_in_pack(self):\n        picking_id = self.env['stock.picking'].browse(self.env.context['active_id'])\n        if not self.stock_quant_package_id:\n            stock_quant_package = picking_id._put_in_pack()\n            self.stock_quant_package_id = stock_quant_package\n        \n        if self.delivery_packaging_id:\n            self.stock_quant_package_id.packaging_id = self.delivery_packaging_id\n            if self.shipping_weight:\n                self.stock_quant_package_id.shipping_weight = self.shipping_weight\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     write shipping weight product packaging  stock quant package  needed ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\n\n\nclass ChooseDeliveryPackage(models.TransientModel):\n    _name = 'choose.delivery.package'\n    _description = 'Delivery Package Selection Wizard'\n\n    stock_quant_package_id = fields.Many2one(\n        'stock.quant.package',\n        string=\"Physical Package\",\n        default=lambda self: self._default_stock_quant_package_id()\n    ) \n    delivery_packaging_id = fields.Many2one(\n        'product.packaging',\n        default=lambda self: self._default_delivery_packaging_id()\n    )\n    shipping_weight = fields.Float(\n        string='Shipping Weight',\n        default=lambda self: self._default_shipping_weight()\n    )\n\n    def _default_stock_quant_package_id(self):\n        if self.env.context.get('default_stock_quant_package_id'):\n            return self.env['stock.quant.package'].browse(self.env.context['stock_quant_package_id'])\n\n    def _default_delivery_packaging_id(self):\n        res = None\n        if self.env.context.get('default_delivery_packaging_id'):\n            res = self.env['product.packaging'].browse(self.env.context['default_delivery_packaging_id'])\n        if self.env.context.get('default_stock_quant_package_id'):\n            stock_quant_package = self.env['stock.quant.package'].browse(self.env.context['default_stock_quant_package_id'])\n            res = stock_quant_package.packaging_id\n        return res\n\n    def _default_shipping_weight(self):\n        if self.env.context.get('default_stock_quant_package_id'):\n            stock_quant_package = self.env['stock.quant.package'].browse(self.env.context['default_stock_quant_package_id'])\n            return stock_quant_package.shipping_weight\n        else:\n            picking_id = self.env['stock.picking'].browse(self.env.context['active_id'])\n            move_line_ids = [po for po in picking_id.move_line_ids if po.qty_done > 0 and not po.result_package_id]\n            total_weight = sum([po.qty_done * po.product_id.weight for po in move_line_ids])\n            return total_weight\n\n    def put_in_pack(self):\n        picking_id = self.env['stock.picking'].browse(self.env.context['active_id'])\n        if not self.stock_quant_package_id:\n            stock_quant_package = picking_id._put_in_pack()\n            self.stock_quant_package_id = stock_quant_package\n        # write shipping weight and product_packaging on 'stock_quant_package' if needed\n        if self.delivery_packaging_id:\n            self.stock_quant_package_id.packaging_id = self.delivery_packaging_id\n            if self.shipping_weight:\n                self.stock_quant_package_id.shipping_weight = self.shipping_weight\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "choose_delivery_package.py", "id": "61390f7724353458412c0a464e6a2417", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/delivery/wizard/choose_delivery_package.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
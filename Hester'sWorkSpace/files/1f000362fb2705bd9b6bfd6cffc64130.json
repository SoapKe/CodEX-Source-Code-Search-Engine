{"author": "nvbn", "code": "import re\nimport subprocess\nfrom thefuck import utils\nfrom thefuck.utils import replace_argument\nfrom thefuck.specific.git import git_support\nfrom thefuck.shells import shell\n\n\n@git_support\ndef match(command):\n    return ('did not match any file(s) known to git.' in command.output\n            and \"Did you forget to 'git add'?\" not in command.output)\n\n\ndef get_branches():\n    proc = subprocess.Popen(\n        ['git', 'branch', '-a', '--no-color', '--no-column'],\n        stdout=subprocess.PIPE)\n    for line in proc.stdout.readlines():\n        line = line.decode('utf-8')\n        if line.startswith('*'):\n            line = line.split(' ')[1]\n        if '/' in line:\n            line = line.split('/')[-1]\n        yield line.strip()\n\n\n@git_support\ndef get_new_command(command):\n    missing_file = re.findall(\n        r\"error: pathspec '([^']*)' \"\n        r\"did not match any file\\(s\\) known to git.\", command.output)[0]\n    closest_branch = utils.get_closest(missing_file, get_branches(),\n                                       fallback_to_first=False)\n    if closest_branch:\n        return replace_argument(command.script, missing_file, closest_branch)\n    elif command.script_parts[1] == 'checkout':\n        return replace_argument(command.script, 'checkout', 'checkout -b')\n    else:\n        return shell.and_('git branch {}', '{}').format(\n            missing_file, command.script)\n", "comments": "", "content": "import re\nimport subprocess\nfrom thefuck import utils\nfrom thefuck.utils import replace_argument\nfrom thefuck.specific.git import git_support\nfrom thefuck.shells import shell\n\n\n@git_support\ndef match(command):\n    return ('did not match any file(s) known to git.' in command.output\n            and \"Did you forget to 'git add'?\" not in command.output)\n\n\ndef get_branches():\n    proc = subprocess.Popen(\n        ['git', 'branch', '-a', '--no-color', '--no-column'],\n        stdout=subprocess.PIPE)\n    for line in proc.stdout.readlines():\n        line = line.decode('utf-8')\n        if line.startswith('*'):\n            line = line.split(' ')[1]\n        if '/' in line:\n            line = line.split('/')[-1]\n        yield line.strip()\n\n\n@git_support\ndef get_new_command(command):\n    missing_file = re.findall(\n        r\"error: pathspec '([^']*)' \"\n        r\"did not match any file\\(s\\) known to git.\", command.output)[0]\n    closest_branch = utils.get_closest(missing_file, get_branches(),\n                                       fallback_to_first=False)\n    if closest_branch:\n        return replace_argument(command.script, missing_file, closest_branch)\n    elif command.script_parts[1] == 'checkout':\n        return replace_argument(command.script, 'checkout', 'checkout -b')\n    else:\n        return shell.and_('git branch {}', '{}').format(\n            missing_file, command.script)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "git_checkout.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/git_checkout.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
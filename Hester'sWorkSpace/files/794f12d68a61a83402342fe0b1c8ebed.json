{"author": "keon", "code": "\"\"\"\nYou are given an n x n 2D mat representing an image.\n\nRotate the image by 90 degrees (clockwise).\n\nFollow up:\nCould you do this in-place?\n\"\"\"\n\n\n\n\n\n\n\n\ndef rotate(mat:\"List[List[int]]\"):\n    if not mat:\n        return mat\n    mat.reverse()\n    for i in range(len(mat)):\n        for j in range(i):\n            mat[i][j], mat[j][i] = mat[j][i], mat[i][j]\n\n\nif __name__ == \"__main__\":\n    mat = [[1,2,3],\n           [4,5,6],\n           [7,8,9]]\n    print(mat)\n    rotate(mat)\n    print(mat)\n", "comments": "    you given n x n 2d mat representing image   rotate image 90 degrees (clockwise)   follow  could place         clockwise rotate    first reverse  swap symmetry    1 2 3     7 8 9     7 4 1    4 5 6     4 5 6     8 5 2    7 8 9     1 2 3     9 6 3 ", "content": "\"\"\"\nYou are given an n x n 2D mat representing an image.\n\nRotate the image by 90 degrees (clockwise).\n\nFollow up:\nCould you do this in-place?\n\"\"\"\n\n\n# clockwise rotate\n# first reverse up to down, then swap the symmetry\n# 1 2 3     7 8 9     7 4 1\n# 4 5 6  => 4 5 6  => 8 5 2\n# 7 8 9     1 2 3     9 6 3\n\ndef rotate(mat:\"List[List[int]]\"):\n    if not mat:\n        return mat\n    mat.reverse()\n    for i in range(len(mat)):\n        for j in range(i):\n            mat[i][j], mat[j][i] = mat[j][i], mat[i][j]\n\n\nif __name__ == \"__main__\":\n    mat = [[1,2,3],\n           [4,5,6],\n           [7,8,9]]\n    print(mat)\n    rotate(mat)\n    print(mat)\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "rotate_image.py", "id": "794f12d68a61a83402342fe0b1c8ebed", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/matrix/rotate_image.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
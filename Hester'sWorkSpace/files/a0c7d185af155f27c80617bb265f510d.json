{"author": "facebook", "code": "\n\n Copyright (c) 2014, Facebook, Inc.\n\n\n This source code is licensed under the BSD-style license found in the\n LICENSE file in the root directory of this source tree. An additional grant\n of patent rights can be found in the PATENTS file in the same directory.\n\nimport lldb\n\nimport fblldbbase as fb\nimport fblldbobjcruntimehelpers as runtimeHelpers\n\ndef presentViewController(viewController):\n  vc = '(%s)' % (viewController)\n  \n  if fb.evaluateBooleanExpression('%s != nil && ((BOOL)[(id)%s isKindOfClass:(Class)[UIViewController class]])' % (vc, vc)):\n    notPresented = fb.evaluateBooleanExpression('[%s presentingViewController] == nil' % vc)\n    \n    if notPresented:\n      fb.evaluateEffect('[[[[UIApplication sharedApplication] keyWindow] rootViewController] presentViewController:%s animated:YES completion:nil]' % vc)\n    else:\n      raise Exception('Argument is already presented')\n  else:\n    raise Exception('Argument must be a UIViewController')\n\ndef dismissViewController(viewController):\n  vc = '(%s)' % (viewController)\n  \n  if fb.evaluateBooleanExpression('%s != nil && ((BOOL)[(id)%s isKindOfClass:(Class)[UIViewController class]])' % (vc, vc)):\n    isPresented = fb.evaluateBooleanExpression('[%s presentingViewController] != nil' % vc)\n    \n    if isPresented:\n      fb.evaluateEffect('[(UIViewController *)%s dismissViewControllerAnimated:YES completion:nil]' % vc)\n    else:\n      raise Exception('Argument must be presented')\n  else:\n    raise Exception('Argument must be a UIViewController')\n\ndef viewControllerRecursiveDescription(vc):\n  return _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(fb.evaluateObjectExpression(vc), '', '', '')\n\ndef _viewControllerDescription(viewController):\n  vc = '(%s)' % (viewController)\n\n  if fb.evaluateBooleanExpression('[(id)%s isViewLoaded]' % (vc)):\n    result = fb.evaluateExpressionValue('(id)[[NSString alloc] initWithFormat:@\"<%%@: %%p; view = <%%@; %%p>; frame = (%%g, %%g; %%g, %%g)>\", (id)NSStringFromClass((id)[(id)%s class]), %s, (id)[(id)[(id)%s view] class], (id)[(id)%s view], ((CGRect)[(id)[(id)%s view] frame]).origin.x, ((CGRect)[(id)[(id)%s view] frame]).origin.y, ((CGRect)[(id)[(id)%s view] frame]).size.width, ((CGRect)[(id)[(id)%s view] frame]).size.height]' % (vc, vc, vc, vc, vc, vc, vc, vc))\n  else:\n    result = fb.evaluateExpressionValue('(id)[[NSString alloc] initWithFormat:@\"<%%@: %%p; view not loaded>\", (id)NSStringFromClass((id)[(id)%s class]), %s]' % (vc, vc))\n\n  if result.GetError() is not None and str(result.GetError()) != 'success':\n    return '[Error getting description.]'\n  else:\n    return result.GetObjectDescription()\n\n\ndef _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(vc, string, prefix, childPrefix):\n  isMac = runtimeHelpers.isMacintoshArch()\n\n  s = '%s%s%s\\n' % (prefix, '' if prefix == '' else ' ', _viewControllerDescription(vc))\n\n  nextPrefix = childPrefix + '   |'\n\n  numChildViewControllers = fb.evaluateIntegerExpression('(int)[(id)[%s childViewControllers] count]' % (vc))\n\n  for i in range(0, numChildViewControllers):\n    viewController = fb.evaluateExpression('(id)[(id)[%s childViewControllers] objectAtIndex:%d]' % (vc, i))\n    s += _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(viewController, string, nextPrefix, nextPrefix)\n\n  if not isMac:\n    isModal = fb.evaluateBooleanExpression('%s != nil && ((id)[(id)[(id)%s presentedViewController] presentingViewController]) == %s' % (vc, vc, vc))\n\n    if isModal:\n      modalVC = fb.evaluateObjectExpression('(id)[(id)%s presentedViewController]' % (vc))\n      s += _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(modalVC, string, childPrefix + '  *M', nextPrefix)\n      s += '\\n// \\'*M\\' means the view controller is presented modally.'\n\n  return string + s\n", "comments": "   usr bin python    copyright (c) 2014  facebook  inc     all rights reserved        this source code licensed bsd style license found    license file root directory source tree  an additional grant    patent rights found patents file directory  ", "content": "#!/usr/bin/python\n\n# Copyright (c) 2014, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the BSD-style license found in the\n# LICENSE file in the root directory of this source tree. An additional grant\n# of patent rights can be found in the PATENTS file in the same directory.\n\nimport lldb\n\nimport fblldbbase as fb\nimport fblldbobjcruntimehelpers as runtimeHelpers\n\ndef presentViewController(viewController):\n  vc = '(%s)' % (viewController)\n  \n  if fb.evaluateBooleanExpression('%s != nil && ((BOOL)[(id)%s isKindOfClass:(Class)[UIViewController class]])' % (vc, vc)):\n    notPresented = fb.evaluateBooleanExpression('[%s presentingViewController] == nil' % vc)\n    \n    if notPresented:\n      fb.evaluateEffect('[[[[UIApplication sharedApplication] keyWindow] rootViewController] presentViewController:%s animated:YES completion:nil]' % vc)\n    else:\n      raise Exception('Argument is already presented')\n  else:\n    raise Exception('Argument must be a UIViewController')\n\ndef dismissViewController(viewController):\n  vc = '(%s)' % (viewController)\n  \n  if fb.evaluateBooleanExpression('%s != nil && ((BOOL)[(id)%s isKindOfClass:(Class)[UIViewController class]])' % (vc, vc)):\n    isPresented = fb.evaluateBooleanExpression('[%s presentingViewController] != nil' % vc)\n    \n    if isPresented:\n      fb.evaluateEffect('[(UIViewController *)%s dismissViewControllerAnimated:YES completion:nil]' % vc)\n    else:\n      raise Exception('Argument must be presented')\n  else:\n    raise Exception('Argument must be a UIViewController')\n\ndef viewControllerRecursiveDescription(vc):\n  return _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(fb.evaluateObjectExpression(vc), '', '', '')\n\ndef _viewControllerDescription(viewController):\n  vc = '(%s)' % (viewController)\n\n  if fb.evaluateBooleanExpression('[(id)%s isViewLoaded]' % (vc)):\n    result = fb.evaluateExpressionValue('(id)[[NSString alloc] initWithFormat:@\"<%%@: %%p; view = <%%@; %%p>; frame = (%%g, %%g; %%g, %%g)>\", (id)NSStringFromClass((id)[(id)%s class]), %s, (id)[(id)[(id)%s view] class], (id)[(id)%s view], ((CGRect)[(id)[(id)%s view] frame]).origin.x, ((CGRect)[(id)[(id)%s view] frame]).origin.y, ((CGRect)[(id)[(id)%s view] frame]).size.width, ((CGRect)[(id)[(id)%s view] frame]).size.height]' % (vc, vc, vc, vc, vc, vc, vc, vc))\n  else:\n    result = fb.evaluateExpressionValue('(id)[[NSString alloc] initWithFormat:@\"<%%@: %%p; view not loaded>\", (id)NSStringFromClass((id)[(id)%s class]), %s]' % (vc, vc))\n\n  if result.GetError() is not None and str(result.GetError()) != 'success':\n    return '[Error getting description.]'\n  else:\n    return result.GetObjectDescription()\n\n\ndef _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(vc, string, prefix, childPrefix):\n  isMac = runtimeHelpers.isMacintoshArch()\n\n  s = '%s%s%s\\n' % (prefix, '' if prefix == '' else ' ', _viewControllerDescription(vc))\n\n  nextPrefix = childPrefix + '   |'\n\n  numChildViewControllers = fb.evaluateIntegerExpression('(int)[(id)[%s childViewControllers] count]' % (vc))\n\n  for i in range(0, numChildViewControllers):\n    viewController = fb.evaluateExpression('(id)[(id)[%s childViewControllers] objectAtIndex:%d]' % (vc, i))\n    s += _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(viewController, string, nextPrefix, nextPrefix)\n\n  if not isMac:\n    isModal = fb.evaluateBooleanExpression('%s != nil && ((id)[(id)[(id)%s presentedViewController] presentingViewController]) == %s' % (vc, vc, vc))\n\n    if isModal:\n      modalVC = fb.evaluateObjectExpression('(id)[(id)%s presentedViewController]' % (vc))\n      s += _recursiveViewControllerDescriptionWithPrefixAndChildPrefix(modalVC, string, childPrefix + '  *M', nextPrefix)\n      s += '\\n// \\'*M\\' means the view controller is presented modally.'\n\n  return string + s\n", "description": "Chisel is a collection of LLDB commands to assist debugging iOS apps.", "file_name": "fblldbviewcontrollerhelpers.py", "id": "a0c7d185af155f27c80617bb265f510d", "language": "Python", "project_name": "chisel", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/facebook-chisel/facebook-chisel-8312a63/fblldbviewcontrollerhelpers.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:09:48Z", "url": "https://github.com/facebook/chisel", "wiki": true}
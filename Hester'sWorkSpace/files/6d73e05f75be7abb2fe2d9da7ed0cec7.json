{"author": "django", "code": "from datetime import datetime\n\nfrom django.test import TestCase\n\nfrom .models import Article, Reporter, Writer\n\n\nclass M2MIntermediaryTests(TestCase):\n    def test_intermeiary(self):\n        r1 = Reporter.objects.create(first_name=\"John\", last_name=\"Smith\")\n        r2 = Reporter.objects.create(first_name=\"Jane\", last_name=\"Doe\")\n\n        a = Article.objects.create(\n            headline=\"This is a test\", pub_date=datetime(2005, 7, 27)\n        )\n\n        w1 = Writer.objects.create(reporter=r1, article=a, position=\"Main writer\")\n        w2 = Writer.objects.create(reporter=r2, article=a, position=\"Contributor\")\n\n        self.assertQuerysetEqual(\n            a.writer_set.select_related().order_by(\"-position\"), [\n                (\"John Smith\", \"Main writer\"),\n                (\"Jane Doe\", \"Contributor\"),\n            ],\n            lambda w: (str(w.reporter), w.position)\n        )\n        self.assertEqual(w1.reporter, r1)\n        self.assertEqual(w2.reporter, r2)\n\n        self.assertEqual(w1.article, a)\n        self.assertEqual(w2.article, a)\n\n        self.assertQuerysetEqual(\n            r1.writer_set.all(), [\n                (\"John Smith\", \"Main writer\")\n            ],\n            lambda w: (str(w.reporter), w.position)\n        )\n", "comments": "", "content": "from datetime import datetime\n\nfrom django.test import TestCase\n\nfrom .models import Article, Reporter, Writer\n\n\nclass M2MIntermediaryTests(TestCase):\n    def test_intermeiary(self):\n        r1 = Reporter.objects.create(first_name=\"John\", last_name=\"Smith\")\n        r2 = Reporter.objects.create(first_name=\"Jane\", last_name=\"Doe\")\n\n        a = Article.objects.create(\n            headline=\"This is a test\", pub_date=datetime(2005, 7, 27)\n        )\n\n        w1 = Writer.objects.create(reporter=r1, article=a, position=\"Main writer\")\n        w2 = Writer.objects.create(reporter=r2, article=a, position=\"Contributor\")\n\n        self.assertQuerysetEqual(\n            a.writer_set.select_related().order_by(\"-position\"), [\n                (\"John Smith\", \"Main writer\"),\n                (\"Jane Doe\", \"Contributor\"),\n            ],\n            lambda w: (str(w.reporter), w.position)\n        )\n        self.assertEqual(w1.reporter, r1)\n        self.assertEqual(w2.reporter, r2)\n\n        self.assertEqual(w1.article, a)\n        self.assertEqual(w2.article, a)\n\n        self.assertQuerysetEqual(\n            r1.writer_set.all(), [\n                (\"John Smith\", \"Main writer\")\n            ],\n            lambda w: (str(w.reporter), w.position)\n        )\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "tests.py", "id": "6d73e05f75be7abb2fe2d9da7ed0cec7", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/m2m_intermediary/tests.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
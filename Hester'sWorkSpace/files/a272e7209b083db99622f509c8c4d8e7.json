{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .nexx import (\n    NexxIE,\n    NexxEmbedIE,\n)\nfrom .spiegeltv import SpiegeltvIE\nfrom ..compat import compat_urlparse\nfrom ..utils import (\n    extract_attributes,\n    unified_strdate,\n    get_element_by_attribute,\n)\n\n\nclass SpiegelIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?spiegel\\.de/video/[^/]*-(?P<id>[0-9]+)(?:-embed|-iframe)?(?:\\.html)?(?:\n    _TESTS = [{\n        'url': 'http://www.spiegel.de/video/vulkan-tungurahua-in-ecuador-ist-wieder-aktiv-video-1259285.html',\n        'md5': '2c2754212136f35fb4b19767d242f66e',\n        'info_dict': {\n            'id': '1259285',\n            'ext': 'mp4',\n            'title': 'Vulkanausbruch in Ecuador: Der \"Feuerschlund\" ist wieder aktiv',\n            'description': 'md5:8029d8310232196eb235d27575a8b9f4',\n            'duration': 49,\n            'upload_date': '20130311',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/video/schach-wm-videoanalyse-des-fuenften-spiels-video-1309159.html',\n        'md5': 'f2cdf638d7aa47654e251e1aee360af1',\n        'info_dict': {\n            'id': '1309159',\n            'ext': 'mp4',\n            'title': 'Schach-WM in der Videoanalyse: Carlsen nutzt die Fehlgriffe des Titelverteidigers',\n            'description': 'md5:c2322b65e58f385a820c10fa03b2d088',\n            'duration': 983,\n            'upload_date': '20131115',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/video/astronaut-alexander-gerst-von-der-iss-station-beantwortet-fragen-video-1519126-embed.html',\n        'md5': 'd8eeca6bfc8f1cd6f490eb1f44695d51',\n        'info_dict': {\n            'id': '1519126',\n            'ext': 'mp4',\n            'description': 'SPIEGEL ONLINE-Nutzer durften den deutschen Astronauten Alexander Gerst \u00fcber sein Leben auf der ISS-Station befragen. Hier kommen seine Antworten auf die besten sechs Fragen.',\n            'title': 'Fragen an Astronaut Alexander Gerst: \"Bekommen Sie die Tageszeiten mit?\"',\n            'upload_date': '20140904',\n        }\n    }, {\n        'url': 'http://www.spiegel.de/video/astronaut-alexander-gerst-von-der-iss-station-beantwortet-fragen-video-1519126-iframe.html',\n        'only_matching': True,\n    }, {\n        \n        'url': 'http://www.spiegel.de/video/spiegel-tv-magazin-ueber-guellekrise-in-schleswig-holstein-video-99012776.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage, handle = self._download_webpage_handle(url, video_id)\n\n        \n        if SpiegeltvIE.suitable(handle.geturl()):\n            return self.url_result(handle.geturl(), 'Spiegeltv')\n\n        nexx_id = self._search_regex(\n            r'nexxOmniaId\\s*:\\s*(\\d+)', webpage, 'nexx id', default=None)\n        if nexx_id:\n            domain_id = NexxIE._extract_domain_id(webpage) or '748'\n            return self.url_result(\n                'nexx:%s:%s' % (domain_id, nexx_id), ie=NexxIE.ie_key(),\n                video_id=nexx_id)\n\n        video_data = extract_attributes(self._search_regex(r'(<div[^>]+id=\"spVideoElements\"[^>]+>)', webpage, 'video element', default=''))\n\n        title = video_data.get('data-video-title') or get_element_by_attribute('class', 'module-title', webpage)\n        description = video_data.get('data-video-teaser') or self._html_search_meta('description', webpage, 'description')\n\n        base_url = self._search_regex(\n            [r'server\\s*:\\s*([\"\\'])(?P<url>.+?)\\1', r'var\\s+server\\s*=\\s*\"(?P<url>[^\"]+)\\\"'],\n            webpage, 'server URL', group='url')\n\n        xml_url = base_url + video_id + '.xml'\n        idoc = self._download_xml(xml_url, video_id)\n\n        formats = []\n        for n in list(idoc):\n            if n.tag.startswith('type') and n.tag != 'type6':\n                format_id = n.tag.rpartition('type')[2]\n                video_url = base_url + n.find('./filename').text\n                formats.append({\n                    'format_id': format_id,\n                    'url': video_url,\n                    'width': int(n.find('./width').text),\n                    'height': int(n.find('./height').text),\n                    'abr': int(n.find('./audiobitrate').text),\n                    'vbr': int(n.find('./videobitrate').text),\n                    'vcodec': n.find('./codec').text,\n                    'acodec': 'MP4A',\n                })\n        duration = float(idoc[0].findall('./duration')[0].text)\n\n        self._check_formats(formats, video_id)\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description.strip() if description else None,\n            'duration': duration,\n            'upload_date': unified_strdate(video_data.get('data-video-date')),\n            'formats': formats,\n        }\n\n\nclass SpiegelArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?spiegel\\.de/(?!video/)[^?\n    IE_NAME = 'Spiegel:Article'\n    IE_DESC = 'Articles on spiegel.de'\n    _TESTS = [{\n        'url': 'http://www.spiegel.de/sport/sonst/badminton-wm-die-randsportart-soll-populaerer-werden-a-987092.html',\n        'info_dict': {\n            'id': '1516455',\n            'ext': 'mp4',\n            'title': 'Faszination Badminton: Nennt es blo\u00df nicht Federball',\n            'description': 're:^Patrick K\u00e4mnitz geh\u00f6rt.{100,}',\n            'upload_date': '20140825',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/wissenschaft/weltall/astronaut-alexander-gerst-antwortet-spiegel-online-lesern-a-989876.html',\n        'info_dict': {\n\n        },\n        'playlist_count': 6,\n    }, {\n        \n        'url': 'http://www.spiegel.de/sptv/spiegeltv/spiegel-tv-ueber-schnellste-katapult-achterbahn-der-welt-taron-a-1137884.html',\n        'info_dict': {\n            'id': '161464',\n            'ext': 'mp4',\n            'title': 'Nervenkitzel Achterbahn',\n            'alt_title': 'Karussellbauer in Deutschland',\n            'description': 'md5:ffe7b1cc59a01f585e0569949aef73cc',\n            'release_year': 2005,\n            'creator': 'SPIEGEL TV',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 2761,\n            'timestamp': 1394021479,\n            'upload_date': '20140305',\n        },\n        'params': {\n            'format': 'bestvideo',\n            'skip_download': True,\n        },\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        \n        video_link = self._search_regex(\n            r'<a href=\"([^\"]+)\" onclick=\"return spOpenVideo\\(this,', webpage,\n            'video page URL', default=None)\n        if video_link:\n            video_url = compat_urlparse.urljoin(\n                self.http_scheme() + '//spiegel.de/', video_link)\n            return self.url_result(video_url)\n\n        \n        embeds = re.findall(\n            r'<div class=\"vid_holder[0-9]+.*?</div>\\s*.*?url\\s*=\\s*\"([^\"]+)\"',\n            webpage)\n        entries = [\n            self.url_result(compat_urlparse.urljoin(\n                self.http_scheme() + '//spiegel.de/', embed_path))\n            for embed_path in embeds]\n        if embeds:\n            return self.playlist_result(entries)\n\n        return self.playlist_from_matches(\n            NexxEmbedIE._extract_urls(webpage), ie=NexxEmbedIE.ie_key())\n", "comments": "# coding: utf-8\n#.*)?$'\n# nexx video\n# 302 to spiegel.tv, like http://www.spiegel.de/video/der-film-zum-wochenende-die-wahrheit-ueber-maenner-video-99003272.html\n#]*?-(?P<id>[0-9]+)\\.html'\n# Nexx iFrame embed\n# Single video on top of the page\n# Multiple embedded videos\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .nexx import (\n    NexxIE,\n    NexxEmbedIE,\n)\nfrom .spiegeltv import SpiegeltvIE\nfrom ..compat import compat_urlparse\nfrom ..utils import (\n    extract_attributes,\n    unified_strdate,\n    get_element_by_attribute,\n)\n\n\nclass SpiegelIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?spiegel\\.de/video/[^/]*-(?P<id>[0-9]+)(?:-embed|-iframe)?(?:\\.html)?(?:#.*)?$'\n    _TESTS = [{\n        'url': 'http://www.spiegel.de/video/vulkan-tungurahua-in-ecuador-ist-wieder-aktiv-video-1259285.html',\n        'md5': '2c2754212136f35fb4b19767d242f66e',\n        'info_dict': {\n            'id': '1259285',\n            'ext': 'mp4',\n            'title': 'Vulkanausbruch in Ecuador: Der \"Feuerschlund\" ist wieder aktiv',\n            'description': 'md5:8029d8310232196eb235d27575a8b9f4',\n            'duration': 49,\n            'upload_date': '20130311',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/video/schach-wm-videoanalyse-des-fuenften-spiels-video-1309159.html',\n        'md5': 'f2cdf638d7aa47654e251e1aee360af1',\n        'info_dict': {\n            'id': '1309159',\n            'ext': 'mp4',\n            'title': 'Schach-WM in der Videoanalyse: Carlsen nutzt die Fehlgriffe des Titelverteidigers',\n            'description': 'md5:c2322b65e58f385a820c10fa03b2d088',\n            'duration': 983,\n            'upload_date': '20131115',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/video/astronaut-alexander-gerst-von-der-iss-station-beantwortet-fragen-video-1519126-embed.html',\n        'md5': 'd8eeca6bfc8f1cd6f490eb1f44695d51',\n        'info_dict': {\n            'id': '1519126',\n            'ext': 'mp4',\n            'description': 'SPIEGEL ONLINE-Nutzer durften den deutschen Astronauten Alexander Gerst \u00fcber sein Leben auf der ISS-Station befragen. Hier kommen seine Antworten auf die besten sechs Fragen.',\n            'title': 'Fragen an Astronaut Alexander Gerst: \"Bekommen Sie die Tageszeiten mit?\"',\n            'upload_date': '20140904',\n        }\n    }, {\n        'url': 'http://www.spiegel.de/video/astronaut-alexander-gerst-von-der-iss-station-beantwortet-fragen-video-1519126-iframe.html',\n        'only_matching': True,\n    }, {\n        # nexx video\n        'url': 'http://www.spiegel.de/video/spiegel-tv-magazin-ueber-guellekrise-in-schleswig-holstein-video-99012776.html',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage, handle = self._download_webpage_handle(url, video_id)\n\n        # 302 to spiegel.tv, like http://www.spiegel.de/video/der-film-zum-wochenende-die-wahrheit-ueber-maenner-video-99003272.html\n        if SpiegeltvIE.suitable(handle.geturl()):\n            return self.url_result(handle.geturl(), 'Spiegeltv')\n\n        nexx_id = self._search_regex(\n            r'nexxOmniaId\\s*:\\s*(\\d+)', webpage, 'nexx id', default=None)\n        if nexx_id:\n            domain_id = NexxIE._extract_domain_id(webpage) or '748'\n            return self.url_result(\n                'nexx:%s:%s' % (domain_id, nexx_id), ie=NexxIE.ie_key(),\n                video_id=nexx_id)\n\n        video_data = extract_attributes(self._search_regex(r'(<div[^>]+id=\"spVideoElements\"[^>]+>)', webpage, 'video element', default=''))\n\n        title = video_data.get('data-video-title') or get_element_by_attribute('class', 'module-title', webpage)\n        description = video_data.get('data-video-teaser') or self._html_search_meta('description', webpage, 'description')\n\n        base_url = self._search_regex(\n            [r'server\\s*:\\s*([\"\\'])(?P<url>.+?)\\1', r'var\\s+server\\s*=\\s*\"(?P<url>[^\"]+)\\\"'],\n            webpage, 'server URL', group='url')\n\n        xml_url = base_url + video_id + '.xml'\n        idoc = self._download_xml(xml_url, video_id)\n\n        formats = []\n        for n in list(idoc):\n            if n.tag.startswith('type') and n.tag != 'type6':\n                format_id = n.tag.rpartition('type')[2]\n                video_url = base_url + n.find('./filename').text\n                formats.append({\n                    'format_id': format_id,\n                    'url': video_url,\n                    'width': int(n.find('./width').text),\n                    'height': int(n.find('./height').text),\n                    'abr': int(n.find('./audiobitrate').text),\n                    'vbr': int(n.find('./videobitrate').text),\n                    'vcodec': n.find('./codec').text,\n                    'acodec': 'MP4A',\n                })\n        duration = float(idoc[0].findall('./duration')[0].text)\n\n        self._check_formats(formats, video_id)\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description.strip() if description else None,\n            'duration': duration,\n            'upload_date': unified_strdate(video_data.get('data-video-date')),\n            'formats': formats,\n        }\n\n\nclass SpiegelArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?spiegel\\.de/(?!video/)[^?#]*?-(?P<id>[0-9]+)\\.html'\n    IE_NAME = 'Spiegel:Article'\n    IE_DESC = 'Articles on spiegel.de'\n    _TESTS = [{\n        'url': 'http://www.spiegel.de/sport/sonst/badminton-wm-die-randsportart-soll-populaerer-werden-a-987092.html',\n        'info_dict': {\n            'id': '1516455',\n            'ext': 'mp4',\n            'title': 'Faszination Badminton: Nennt es blo\u00df nicht Federball',\n            'description': 're:^Patrick K\u00e4mnitz geh\u00f6rt.{100,}',\n            'upload_date': '20140825',\n        },\n    }, {\n        'url': 'http://www.spiegel.de/wissenschaft/weltall/astronaut-alexander-gerst-antwortet-spiegel-online-lesern-a-989876.html',\n        'info_dict': {\n\n        },\n        'playlist_count': 6,\n    }, {\n        # Nexx iFrame embed\n        'url': 'http://www.spiegel.de/sptv/spiegeltv/spiegel-tv-ueber-schnellste-katapult-achterbahn-der-welt-taron-a-1137884.html',\n        'info_dict': {\n            'id': '161464',\n            'ext': 'mp4',\n            'title': 'Nervenkitzel Achterbahn',\n            'alt_title': 'Karussellbauer in Deutschland',\n            'description': 'md5:ffe7b1cc59a01f585e0569949aef73cc',\n            'release_year': 2005,\n            'creator': 'SPIEGEL TV',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 2761,\n            'timestamp': 1394021479,\n            'upload_date': '20140305',\n        },\n        'params': {\n            'format': 'bestvideo',\n            'skip_download': True,\n        },\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        # Single video on top of the page\n        video_link = self._search_regex(\n            r'<a href=\"([^\"]+)\" onclick=\"return spOpenVideo\\(this,', webpage,\n            'video page URL', default=None)\n        if video_link:\n            video_url = compat_urlparse.urljoin(\n                self.http_scheme() + '//spiegel.de/', video_link)\n            return self.url_result(video_url)\n\n        # Multiple embedded videos\n        embeds = re.findall(\n            r'<div class=\"vid_holder[0-9]+.*?</div>\\s*.*?url\\s*=\\s*\"([^\"]+)\"',\n            webpage)\n        entries = [\n            self.url_result(compat_urlparse.urljoin(\n                self.http_scheme() + '//spiegel.de/', embed_path))\n            for embed_path in embeds]\n        if embeds:\n            return self.playlist_result(entries)\n\n        return self.playlist_from_matches(\n            NexxEmbedIE._extract_urls(webpage), ie=NexxEmbedIE.ie_key())\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "spiegel.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/spiegel.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "django", "code": "from urllib.parse import quote\n\nfrom django.contrib.contenttypes.fields import (\n    GenericForeignKey, GenericRelation,\n)\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.contrib.sites.models import SiteManager\nfrom django.db import models\n\n\nclass Site(models.Model):\n    domain = models.CharField(max_length=100)\n    objects = SiteManager()\n\n    def __str__(self):\n        return self.domain\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        return '/authors/%s/' % self.id\n\n\nclass Article(models.Model):\n    title = models.CharField(max_length=100)\n    slug = models.SlugField()\n    author = models.ForeignKey(Author, models.CASCADE)\n    date_created = models.DateTimeField()\n\n    def __str__(self):\n        return self.title\n\n\nclass SchemeIncludedURL(models.Model):\n    url = models.URLField(max_length=100)\n\n    def __str__(self):\n        return self.url\n\n    def get_absolute_url(self):\n        return self.url\n\n\nclass ConcreteModel(models.Model):\n    name = models.CharField(max_length=10)\n\n\nclass ProxyModel(ConcreteModel):\n    class Meta:\n        proxy = True\n\n\nclass FooWithoutUrl(models.Model):\n    \"\"\"\n    Fake model not defining ``get_absolute_url`` for\n    ContentTypesTests.test_shortcut_view_without_get_absolute_url()\n    \"\"\"\n    name = models.CharField(max_length=30, unique=True)\n\n    def __str__(self):\n        return self.name\n\n\nclass FooWithUrl(FooWithoutUrl):\n    \"\"\"\n    Fake model defining ``get_absolute_url`` for\n    ContentTypesTests.test_shortcut_view().\n    \"\"\"\n\n    def get_absolute_url(self):\n        return \"/users/%s/\" % quote(self.name)\n\n\nclass FooWithBrokenAbsoluteUrl(FooWithoutUrl):\n    \"\"\"\n    Fake model defining a ``get_absolute_url`` method containing an error\n    \"\"\"\n\n    def get_absolute_url(self):\n        return \"/users/%s/\" % self.unknown_field\n\n\nclass Question(models.Model):\n    text = models.CharField(max_length=200)\n    answer_set = GenericRelation('Answer')\n\n\nclass Answer(models.Model):\n    text = models.CharField(max_length=200)\n    content_type = models.ForeignKey(ContentType, models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    question = GenericForeignKey()\n\n    class Meta:\n        order_with_respect_to = 'question'\n\n    def __str__(self):\n        return self.text\n\n\nclass Post(models.Model):\n    \"\"\"An ordered tag on an item.\"\"\"\n    title = models.CharField(max_length=200)\n    content_type = models.ForeignKey(ContentType, models.CASCADE, null=True)\n    object_id = models.PositiveIntegerField(null=True)\n    parent = GenericForeignKey()\n    children = GenericRelation('Post')\n\n    class Meta:\n        order_with_respect_to = 'parent'\n\n    def __str__(self):\n        return self.title\n\n\nclass ModelWithNullFKToSite(models.Model):\n    title = models.CharField(max_length=200)\n    site = models.ForeignKey(Site, null=True, on_delete=models.CASCADE)\n    post = models.ForeignKey(Post, null=True, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n\n    def get_absolute_url(self):\n        return '/title/%s/' % quote(self.title)\n", "comments": "        fake model defining   get absolute url       contenttypestests test shortcut view without get absolute url()             name   models charfield(max length 30  unique true)      def   str  (self)          return self name   class foowithurl(foowithouturl)              fake model defining   get absolute url       contenttypestests test shortcut view()               def get absolute url(self)          return   users      quote(self name)   class foowithbrokenabsoluteurl(foowithouturl)              fake model defining   get absolute url   method containing error              def get absolute url(self)          return   users      self unknown field   class question(models model)      text   models charfield(max length 200)     answer set   genericrelation( answer )   class answer(models model)      text   models charfield(max length 200)     content type   models foreignkey(contenttype  models cascade)     object id   models positiveintegerfield()     question   genericforeignkey()      class meta          order respect    question       def   str  (self)          return self text   class post(models model)         an ordered tag item     ", "content": "from urllib.parse import quote\n\nfrom django.contrib.contenttypes.fields import (\n    GenericForeignKey, GenericRelation,\n)\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.contrib.sites.models import SiteManager\nfrom django.db import models\n\n\nclass Site(models.Model):\n    domain = models.CharField(max_length=100)\n    objects = SiteManager()\n\n    def __str__(self):\n        return self.domain\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        return '/authors/%s/' % self.id\n\n\nclass Article(models.Model):\n    title = models.CharField(max_length=100)\n    slug = models.SlugField()\n    author = models.ForeignKey(Author, models.CASCADE)\n    date_created = models.DateTimeField()\n\n    def __str__(self):\n        return self.title\n\n\nclass SchemeIncludedURL(models.Model):\n    url = models.URLField(max_length=100)\n\n    def __str__(self):\n        return self.url\n\n    def get_absolute_url(self):\n        return self.url\n\n\nclass ConcreteModel(models.Model):\n    name = models.CharField(max_length=10)\n\n\nclass ProxyModel(ConcreteModel):\n    class Meta:\n        proxy = True\n\n\nclass FooWithoutUrl(models.Model):\n    \"\"\"\n    Fake model not defining ``get_absolute_url`` for\n    ContentTypesTests.test_shortcut_view_without_get_absolute_url()\n    \"\"\"\n    name = models.CharField(max_length=30, unique=True)\n\n    def __str__(self):\n        return self.name\n\n\nclass FooWithUrl(FooWithoutUrl):\n    \"\"\"\n    Fake model defining ``get_absolute_url`` for\n    ContentTypesTests.test_shortcut_view().\n    \"\"\"\n\n    def get_absolute_url(self):\n        return \"/users/%s/\" % quote(self.name)\n\n\nclass FooWithBrokenAbsoluteUrl(FooWithoutUrl):\n    \"\"\"\n    Fake model defining a ``get_absolute_url`` method containing an error\n    \"\"\"\n\n    def get_absolute_url(self):\n        return \"/users/%s/\" % self.unknown_field\n\n\nclass Question(models.Model):\n    text = models.CharField(max_length=200)\n    answer_set = GenericRelation('Answer')\n\n\nclass Answer(models.Model):\n    text = models.CharField(max_length=200)\n    content_type = models.ForeignKey(ContentType, models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    question = GenericForeignKey()\n\n    class Meta:\n        order_with_respect_to = 'question'\n\n    def __str__(self):\n        return self.text\n\n\nclass Post(models.Model):\n    \"\"\"An ordered tag on an item.\"\"\"\n    title = models.CharField(max_length=200)\n    content_type = models.ForeignKey(ContentType, models.CASCADE, null=True)\n    object_id = models.PositiveIntegerField(null=True)\n    parent = GenericForeignKey()\n    children = GenericRelation('Post')\n\n    class Meta:\n        order_with_respect_to = 'parent'\n\n    def __str__(self):\n        return self.title\n\n\nclass ModelWithNullFKToSite(models.Model):\n    title = models.CharField(max_length=200)\n    site = models.ForeignKey(Site, null=True, on_delete=models.CASCADE)\n    post = models.ForeignKey(Post, null=True, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n\n    def get_absolute_url(self):\n        return '/title/%s/' % quote(self.title)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "111d1751b03720db9267a28cc82226ea", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/contenttypes_tests/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
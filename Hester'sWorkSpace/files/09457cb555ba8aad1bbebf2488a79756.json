{"author": "nvbn", "code": "from thefuck.utils import replace_command, for_app\nfrom difflib import get_close_matches\nimport re\n\n\ndef _get_failed_lifecycle(command):\n    return re.search(r'\\[ERROR\\] Unknown lifecycle phase \"(.+)\"',\n                     command.output)\n\n\ndef _getavailable_lifecycles(command):\n    return re.search(\n        r'Available lifecycle phases are: (.+) -> \\[Help 1\\]', command.output)\n\n\n@for_app('mvn')\ndef match(command):\n    failed_lifecycle = _get_failed_lifecycle(command)\n    available_lifecycles = _getavailable_lifecycles(command)\n    return available_lifecycles and failed_lifecycle\n\n\ndef get_new_command(command):\n    failed_lifecycle = _get_failed_lifecycle(command)\n    available_lifecycles = _getavailable_lifecycles(command)\n    if available_lifecycles and failed_lifecycle:\n        selected_lifecycle = get_close_matches(\n            failed_lifecycle.group(1), available_lifecycles.group(1).split(\", \"),\n            3, 0.6)\n        return replace_command(command, failed_lifecycle.group(1), selected_lifecycle)\n    else:\n        return []\n", "comments": "", "content": "from thefuck.utils import replace_command, for_app\nfrom difflib import get_close_matches\nimport re\n\n\ndef _get_failed_lifecycle(command):\n    return re.search(r'\\[ERROR\\] Unknown lifecycle phase \"(.+)\"',\n                     command.output)\n\n\ndef _getavailable_lifecycles(command):\n    return re.search(\n        r'Available lifecycle phases are: (.+) -> \\[Help 1\\]', command.output)\n\n\n@for_app('mvn')\ndef match(command):\n    failed_lifecycle = _get_failed_lifecycle(command)\n    available_lifecycles = _getavailable_lifecycles(command)\n    return available_lifecycles and failed_lifecycle\n\n\ndef get_new_command(command):\n    failed_lifecycle = _get_failed_lifecycle(command)\n    available_lifecycles = _getavailable_lifecycles(command)\n    if available_lifecycles and failed_lifecycle:\n        selected_lifecycle = get_close_matches(\n            failed_lifecycle.group(1), available_lifecycles.group(1).split(\", \"),\n            3, 0.6)\n        return replace_command(command, failed_lifecycle.group(1), selected_lifecycle)\n    else:\n        return []\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "mvn_unknown_lifecycle_phase.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/mvn_unknown_lifecycle_phase.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
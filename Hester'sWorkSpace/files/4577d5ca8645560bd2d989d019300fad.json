{"author": "tgalal", "code": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom yowsup.layers.protocol_iq.protocolentities import ErrorIqProtocolEntity\nfrom yowsup.layers.protocol_iq.protocolentities.iq_result import ResultIqProtocolEntity\nfrom .protocolentities import *\nimport logging\nlogger = logging.getLogger(__name__)\n\n\nclass YowGroupsProtocolLayer(YowProtocolLayer):\n\n    HANDLE = (\n        CreateGroupsIqProtocolEntity,\n        InfoGroupsIqProtocolEntity,\n        LeaveGroupsIqProtocolEntity,\n        ListGroupsIqProtocolEntity,\n        SubjectGroupsIqProtocolEntity,\n        ParticipantsGroupsIqProtocolEntity,\n        AddParticipantsIqProtocolEntity,\n        PromoteParticipantsIqProtocolEntity,\n        DemoteParticipantsIqProtocolEntity,\n        RemoveParticipantsIqProtocolEntity\n    )\n\n    def __init__(self):\n        handleMap = {\n            \"iq\": (None, self.sendIq),\n            \"notification\": (self.recvNotification, None)\n        }\n        super(YowGroupsProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Groups Iq Layer\"\n\n    def sendIq(self, entity):\n        if entity.__class__ in self.__class__.HANDLE:\n            if entity.__class__ == SubjectGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onSetSubjectSuccess, self.onSetSubjectFailed)\n            elif entity.__class__ == CreateGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onCreateGroupSuccess, self.onCreateGroupFailed)\n            elif entity.__class__ == ParticipantsGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onGetParticipantsResult)\n            elif entity.__class__ == AddParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onAddParticipantsSuccess, self.onAddParticipantsFailed)\n            elif entity.__class__ == PromoteParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onPromoteParticipantsSuccess, self.onPromoteParticipantsFailed)\n            elif entity.__class__ == DemoteParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onDemoteParticipantsSuccess, self.onDemoteParticipantsFailed)\n            elif entity.__class__ == RemoveParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onRemoveParticipantsSuccess, self.onRemoveParticipantsFailed)\n            elif entity.__class__ == ListGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onListGroupsResult)\n            elif entity.__class__ == LeaveGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onLeaveGroupSuccess, self.onLeaveGroupFailed)\n            elif entity.__class__ == InfoGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onInfoGroupSuccess, self.onInfoGroupFailed)\n            else:\n                self.entityToLower(entity)\n\n    def onCreateGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group create success\")\n        self.toUpper(SuccessCreateGroupsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onCreateGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group create failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onSetSubjectSuccess(self, node, originalIqEntity):\n        logger.info(\"Group subject change success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onSetSubjectFailed(self, node, originalIqEntity):\n        logger.error(\"Group subject change failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onGetParticipantsResult(self, node, originalIqEntity):\n        self.toUpper(ListParticipantsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onAddParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group add participants success\")\n        self.toUpper(SuccessAddParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onRemoveParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group remove participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onRemoveParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group remove participants success\")\n        self.toUpper(SuccessRemoveParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onPromoteParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group promote participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onPromoteParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group promote participants success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onDemoteParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group demote participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onDemoteParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group demote participants success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onAddParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group add participants failed\")\n        self.toUpper(FailureAddParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onListGroupsResult(self, node, originalIqEntity):\n        self.toUpper(ListGroupsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onLeaveGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group leave success\")\n        self.toUpper(SuccessLeaveGroupsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onLeaveGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group leave failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onInfoGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group info success\")\n        self.toUpper(InfoGroupsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onInfoGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group info failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def recvNotification(self, node):\n        if node[\"type\"] == \"w:gp2\":\n            if node.getChild(\"subject\"):\n                self.toUpper(SubjectGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"create\"):\n                self.toUpper(CreateGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"remove\"):\n                self.toUpper(RemoveGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"add\"):\n                self.toUpper(AddGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n", "comments": "", "content": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom yowsup.layers.protocol_iq.protocolentities import ErrorIqProtocolEntity\nfrom yowsup.layers.protocol_iq.protocolentities.iq_result import ResultIqProtocolEntity\nfrom .protocolentities import *\nimport logging\nlogger = logging.getLogger(__name__)\n\n\nclass YowGroupsProtocolLayer(YowProtocolLayer):\n\n    HANDLE = (\n        CreateGroupsIqProtocolEntity,\n        InfoGroupsIqProtocolEntity,\n        LeaveGroupsIqProtocolEntity,\n        ListGroupsIqProtocolEntity,\n        SubjectGroupsIqProtocolEntity,\n        ParticipantsGroupsIqProtocolEntity,\n        AddParticipantsIqProtocolEntity,\n        PromoteParticipantsIqProtocolEntity,\n        DemoteParticipantsIqProtocolEntity,\n        RemoveParticipantsIqProtocolEntity\n    )\n\n    def __init__(self):\n        handleMap = {\n            \"iq\": (None, self.sendIq),\n            \"notification\": (self.recvNotification, None)\n        }\n        super(YowGroupsProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Groups Iq Layer\"\n\n    def sendIq(self, entity):\n        if entity.__class__ in self.__class__.HANDLE:\n            if entity.__class__ == SubjectGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onSetSubjectSuccess, self.onSetSubjectFailed)\n            elif entity.__class__ == CreateGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onCreateGroupSuccess, self.onCreateGroupFailed)\n            elif entity.__class__ == ParticipantsGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onGetParticipantsResult)\n            elif entity.__class__ == AddParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onAddParticipantsSuccess, self.onAddParticipantsFailed)\n            elif entity.__class__ == PromoteParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onPromoteParticipantsSuccess, self.onPromoteParticipantsFailed)\n            elif entity.__class__ == DemoteParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onDemoteParticipantsSuccess, self.onDemoteParticipantsFailed)\n            elif entity.__class__ == RemoveParticipantsIqProtocolEntity:\n                self._sendIq(entity, self.onRemoveParticipantsSuccess, self.onRemoveParticipantsFailed)\n            elif entity.__class__ == ListGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onListGroupsResult)\n            elif entity.__class__ == LeaveGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onLeaveGroupSuccess, self.onLeaveGroupFailed)\n            elif entity.__class__ == InfoGroupsIqProtocolEntity:\n                self._sendIq(entity, self.onInfoGroupSuccess, self.onInfoGroupFailed)\n            else:\n                self.entityToLower(entity)\n\n    def onCreateGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group create success\")\n        self.toUpper(SuccessCreateGroupsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onCreateGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group create failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onSetSubjectSuccess(self, node, originalIqEntity):\n        logger.info(\"Group subject change success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onSetSubjectFailed(self, node, originalIqEntity):\n        logger.error(\"Group subject change failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onGetParticipantsResult(self, node, originalIqEntity):\n        self.toUpper(ListParticipantsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onAddParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group add participants success\")\n        self.toUpper(SuccessAddParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onRemoveParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group remove participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onRemoveParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group remove participants success\")\n        self.toUpper(SuccessRemoveParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onPromoteParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group promote participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onPromoteParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group promote participants success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onDemoteParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group demote participants failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onDemoteParticipantsSuccess(self, node, originalIqEntity):\n        logger.info(\"Group demote participants success\")\n        self.toUpper(ResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onAddParticipantsFailed(self, node, originalIqEntity):\n        logger.error(\"Group add participants failed\")\n        self.toUpper(FailureAddParticipantsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onListGroupsResult(self, node, originalIqEntity):\n        self.toUpper(ListGroupsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onLeaveGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group leave success\")\n        self.toUpper(SuccessLeaveGroupsIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onLeaveGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group leave failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onInfoGroupSuccess(self, node, originalIqEntity):\n        logger.info(\"Group info success\")\n        self.toUpper(InfoGroupsResultIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def onInfoGroupFailed(self, node, originalIqEntity):\n        logger.error(\"Group info failed\")\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(node))\n\n    def recvNotification(self, node):\n        if node[\"type\"] == \"w:gp2\":\n            if node.getChild(\"subject\"):\n                self.toUpper(SubjectGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"create\"):\n                self.toUpper(CreateGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"remove\"):\n                self.toUpper(RemoveGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n            elif node.getChild(\"add\"):\n                self.toUpper(AddGroupsNotificationProtocolEntity.fromProtocolTreeNode(node))\n", "description": "The python WhatsApp library", "file_name": "layer.py", "id": "4577d5ca8645560bd2d989d019300fad", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_groups/layer.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
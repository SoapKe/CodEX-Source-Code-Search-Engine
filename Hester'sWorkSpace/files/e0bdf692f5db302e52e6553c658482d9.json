{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: cl_img_install\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Install a different Cumulus Linux version.\ndeprecated:\n  removed_in: \"2.5\"\n  why: The image slot system no longer exists in Cumulus Linux.\n  alternative: n/a\ndescription:\n    - install a different version of Cumulus Linux in the inactive slot. For\n      more details go the Image Management User Guide at\n      U(http://docs.cumulusnetworks.com/).\noptions:\n    src:\n        description:\n            - The full path to the Cumulus Linux binary image. Can be a local path,\n              http or https URL. If the code version is in the name of the file,\n              the module will assume this is the version of code you wish to\n              install.\n        required: true\n    version:\n        description:\n            - Inform the module of the exact version one is installing. This\n              overrides the automatic check of version in the file name. For\n              example, if the binary file name is called CumulusLinux-2.2.3.bin,\n              and version is set to '2.5.0', then the module will assume it is\n              installing '2.5.0' not '2.2.3'. If version is not included, then\n              the module will assume '2.2.3' is the version to install.\n    switch_slot:\n        description:\n            - Switch slots after installing the image.\n              To run the installed code, reboot the switch.\n        type: bool\n\nrequirements: [\"Cumulus Linux OS\"]\n\n'''\nEXAMPLES = '''\n\n- name: Install image using using http url. Switch slots so the subsequent will load the new version\n  cl_img_install:\n    version: 2.0.1\n    src: http://10.1.1.1/CumulusLinux-2.0.1.bin\n    switch_slot: yes\n\n\n\n\n\n\n- name: Download cumulus linux to local system\n  get_url:\n    src: ftp://cumuluslinux.bin\n    dest: /root/CumulusLinux-2.0.1.bin\n\n- name: Install image from local filesystem. Get version from the filename.\n  cl_img_install:\n    src: /root/CumulusLinux-2.0.1.bin\n\n\n\n\n- name: Download cumulus linux to local system\n  get_url:\n    src: ftp://CumulusLinux-2.0.1.bin\n    dest: /root/image.bin\n\n- name: install image and switch slots. Only reboot needed\n  cl_img_install:\n    version: 2.0.1\n    src: /root/image.bin\n    switch_slot: yes\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "comments": "        module  cl img install version added   2 1  author   cumulus networks ( cumulusnetworks)  short description  install different cumulus linux version  deprecated    removed   2 5     the image slot system longer exists cumulus linux    alternative  n description        install different version cumulus linux inactive slot  for       details go image management user guide       u(http   docs cumulusnetworks com )  options      src          description                the full path cumulus linux binary image  can local path                http https url  if code version name file                module assume version code wish               install          required  true     version          description                inform module exact version one installing  this               overrides automatic check version file name  for               example  binary file name called cumuluslinux 2 2 3 bin                version set  2 5 0   module assume               installing  2 5 0   2 2 3   if version included                module assume  2 2 3  version install      switch slot          description                switch slots installing image                to run installed code  reboot switch          type  bool  requirements    cumulus linux os        examples          download install image webserver    name  install image using using http url  switch slots subsequent load new version   cl img install      version  2 0 1     src  http   10 1 1 1 cumuluslinux 2 0 1 bin     switch slot  yes     copy software ansible server switch     the module get code version filename    the code installed alternate slot slot primary    a subsequent reload run new code    name  download cumulus linux local system   get url      src  ftp   cumuluslinux bin     dest   root cumuluslinux 2 0 1 bin    name  install image local filesystem  get version filename    cl img install      src   root cumuluslinux 2 0 1 bin     if image name changed original name  use  version  option    inform module exactly code version installed    name  download cumulus linux local system   get url      src  ftp   cumuluslinux 2 0 1 bin     dest   root image bin    name  install image switch slots  only reboot needed   cl img install      version  2 0 1     src   root image bin     switch slot  yes      return       changed      description  whether interface changed     returned  changed     type  bool     sample  true msg      description  human readable report success failure     returned  always     type  string     sample   interface bond0 config updated          usr bin python        coding  utf 8        (c) 2016  cumulus networks  ce ceng cumulusnetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)     download install image webserver      copy software ansible server switch      the module get code version filename     the code installed alternate slot slot primary     a subsequent reload run new code     if image name changed original name  use  version  option     inform module exactly code version installed ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: cl_img_install\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Install a different Cumulus Linux version.\ndeprecated:\n  removed_in: \"2.5\"\n  why: The image slot system no longer exists in Cumulus Linux.\n  alternative: n/a\ndescription:\n    - install a different version of Cumulus Linux in the inactive slot. For\n      more details go the Image Management User Guide at\n      U(http://docs.cumulusnetworks.com/).\noptions:\n    src:\n        description:\n            - The full path to the Cumulus Linux binary image. Can be a local path,\n              http or https URL. If the code version is in the name of the file,\n              the module will assume this is the version of code you wish to\n              install.\n        required: true\n    version:\n        description:\n            - Inform the module of the exact version one is installing. This\n              overrides the automatic check of version in the file name. For\n              example, if the binary file name is called CumulusLinux-2.2.3.bin,\n              and version is set to '2.5.0', then the module will assume it is\n              installing '2.5.0' not '2.2.3'. If version is not included, then\n              the module will assume '2.2.3' is the version to install.\n    switch_slot:\n        description:\n            - Switch slots after installing the image.\n              To run the installed code, reboot the switch.\n        type: bool\n\nrequirements: [\"Cumulus Linux OS\"]\n\n'''\nEXAMPLES = '''\n## Download and install the image from a webserver.\n- name: Install image using using http url. Switch slots so the subsequent will load the new version\n  cl_img_install:\n    version: 2.0.1\n    src: http://10.1.1.1/CumulusLinux-2.0.1.bin\n    switch_slot: yes\n\n## Copy the software from the ansible server to the switch.\n## The module will get the code version from the filename\n## The code will be installed in the alternate slot but the slot will not be primary\n## A subsequent reload will not run the new code\n\n- name: Download cumulus linux to local system\n  get_url:\n    src: ftp://cumuluslinux.bin\n    dest: /root/CumulusLinux-2.0.1.bin\n\n- name: Install image from local filesystem. Get version from the filename.\n  cl_img_install:\n    src: /root/CumulusLinux-2.0.1.bin\n\n## If the image name has been changed from the original name, use the `version` option\n## to inform the module exactly what code version is been installed\n\n- name: Download cumulus linux to local system\n  get_url:\n    src: ftp://CumulusLinux-2.0.1.bin\n    dest: /root/image.bin\n\n- name: install image and switch slots. Only reboot needed\n  cl_img_install:\n    version: 2.0.1\n    src: /root/image.bin\n    switch_slot: yes\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "_cl_img_install.py", "id": "e0bdf692f5db302e52e6553c658482d9", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/cumulus/_cl_img_install.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
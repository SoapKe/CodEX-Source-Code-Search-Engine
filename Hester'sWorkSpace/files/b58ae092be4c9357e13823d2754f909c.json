{"author": "jazzband", "code": "from __future__ import absolute_import, unicode_literals\n\nfrom collections import OrderedDict\n\nfrom django.utils.translation import ugettext_lazy as _\n\nfrom debug_toolbar.panels import Panel\n\n\nclass HeadersPanel(Panel):\n    \n    \n    ENVIRON_FILTER = set((\n        'CONTENT_LENGTH',\n        'CONTENT_TYPE',\n        'DJANGO_SETTINGS_MODULE',\n        'GATEWAY_INTERFACE',\n        'QUERY_STRING',\n        'PATH_INFO',\n        'PYTHONPATH',\n        'REMOTE_ADDR',\n        'REMOTE_HOST',\n        'REQUEST_METHOD',\n        'SCRIPT_NAME',\n        'SERVER_NAME',\n        'SERVER_PORT',\n        'SERVER_PROTOCOL',\n        'SERVER_SOFTWARE',\n        'TZ',\n    ))\n\n    title = _(\"Headers\")\n\n    template = 'debug_toolbar/panels/headers.html'\n\n    def process_request(self, request):\n        wsgi_env = list(sorted(request.META.items()))\n        self.request_headers = OrderedDict(\n            (unmangle(k), v) for (k, v) in wsgi_env if is_http_header(k))\n        if 'Cookie' in self.request_headers:\n            self.request_headers['Cookie'] = '=> see Request panel'\n        self.environ = OrderedDict(\n            (k, v) for (k, v) in wsgi_env if k in self.ENVIRON_FILTER)\n        self.record_stats({\n            'request_headers': self.request_headers,\n            'environ': self.environ,\n        })\n\n    def generate_stats(self, request, response):\n        self.response_headers = OrderedDict(sorted(response.items()))\n        self.record_stats({\n            'response_headers': self.response_headers,\n        })\n\n\ndef is_http_header(wsgi_key):\n    \n    \n    return isinstance(wsgi_key, str) and wsgi_key.startswith('HTTP_')\n\n\ndef unmangle(wsgi_key):\n    return wsgi_key[5:].replace('_', '-').title()\n", "comments": "        a panel display http headers             list environment variables want display    the wsgi spec says keys str objects environ dict     true practice  see issues  449  482  ", "content": "from __future__ import absolute_import, unicode_literals\n\nfrom collections import OrderedDict\n\nfrom django.utils.translation import ugettext_lazy as _\n\nfrom debug_toolbar.panels import Panel\n\n\nclass HeadersPanel(Panel):\n    \"\"\"\n    A panel to display HTTP headers.\n    \"\"\"\n    # List of environment variables we want to display\n    ENVIRON_FILTER = set((\n        'CONTENT_LENGTH',\n        'CONTENT_TYPE',\n        'DJANGO_SETTINGS_MODULE',\n        'GATEWAY_INTERFACE',\n        'QUERY_STRING',\n        'PATH_INFO',\n        'PYTHONPATH',\n        'REMOTE_ADDR',\n        'REMOTE_HOST',\n        'REQUEST_METHOD',\n        'SCRIPT_NAME',\n        'SERVER_NAME',\n        'SERVER_PORT',\n        'SERVER_PROTOCOL',\n        'SERVER_SOFTWARE',\n        'TZ',\n    ))\n\n    title = _(\"Headers\")\n\n    template = 'debug_toolbar/panels/headers.html'\n\n    def process_request(self, request):\n        wsgi_env = list(sorted(request.META.items()))\n        self.request_headers = OrderedDict(\n            (unmangle(k), v) for (k, v) in wsgi_env if is_http_header(k))\n        if 'Cookie' in self.request_headers:\n            self.request_headers['Cookie'] = '=> see Request panel'\n        self.environ = OrderedDict(\n            (k, v) for (k, v) in wsgi_env if k in self.ENVIRON_FILTER)\n        self.record_stats({\n            'request_headers': self.request_headers,\n            'environ': self.environ,\n        })\n\n    def generate_stats(self, request, response):\n        self.response_headers = OrderedDict(sorted(response.items()))\n        self.record_stats({\n            'response_headers': self.response_headers,\n        })\n\n\ndef is_http_header(wsgi_key):\n    # The WSGI spec says that keys should be str objects in the environ dict,\n    # but this isn't true in practice. See issues #449 and #482.\n    return isinstance(wsgi_key, str) and wsgi_key.startswith('HTTP_')\n\n\ndef unmangle(wsgi_key):\n    return wsgi_key[5:].replace('_', '-').title()\n", "description": "A configurable set of panels that display various debug information about the current request/response.", "file_name": "headers.py", "id": "b58ae092be4c9357e13823d2754f909c", "language": "Python", "project_name": "django-debug-toolbar", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jazzband-django-debug-toolbar/jazzband-django-debug-toolbar-459e978/debug_toolbar/panels/headers.py", "save_time": "", "source": "", "update_at": "2018-03-18T09:15:08Z", "url": "https://github.com/jazzband/django-debug-toolbar", "wiki": true}
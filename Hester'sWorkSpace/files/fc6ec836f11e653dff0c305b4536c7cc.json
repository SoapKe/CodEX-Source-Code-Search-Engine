{"author": "ansible", "code": "\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests import unittest\n\nfrom ansible.config.data import ConfigData\nfrom ansible.config.manager import Setting\n\n\nmykey = Setting('mykey', 'myvalue', 'test', 'string')\nmykey2 = Setting('mykey2', 'myvalue2', ['test', 'test2'], 'list')\nmykey3 = Setting('mykey3', 'myvalue3', 11111111111, 'integer')\n\n\nclass TestConfigData(unittest.TestCase):\n\n    def setUp(self):\n        self.cdata = ConfigData()\n\n    def tearDown(self):\n        self.cdata = None\n\n    def test_update_setting(self):\n        for setting in [mykey, mykey2, mykey3]:\n            self.cdata.update_setting(setting)\n            self.assertEqual(setting, self.cdata._global_settings.get(setting.name))\n\n    def test_update_setting_with_plugin(self):\n        pass\n\n    def test_get_setting(self):\n        self.cdata._global_settings = {'mykey': mykey}\n        self.assertEqual(mykey, self.cdata.get_setting('mykey'))\n\n    def test_get_settings(self):\n        all_settings = {'mykey': mykey, 'mykey2': mykey2}\n        self.cdata._global_settings = all_settings\n\n        for setting in self.cdata.get_settings():\n            self.assertEqual(all_settings[setting.name], setting)\n", "comments": "  make coding python3 ish ", "content": "# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests import unittest\n\nfrom ansible.config.data import ConfigData\nfrom ansible.config.manager import Setting\n\n\nmykey = Setting('mykey', 'myvalue', 'test', 'string')\nmykey2 = Setting('mykey2', 'myvalue2', ['test', 'test2'], 'list')\nmykey3 = Setting('mykey3', 'myvalue3', 11111111111, 'integer')\n\n\nclass TestConfigData(unittest.TestCase):\n\n    def setUp(self):\n        self.cdata = ConfigData()\n\n    def tearDown(self):\n        self.cdata = None\n\n    def test_update_setting(self):\n        for setting in [mykey, mykey2, mykey3]:\n            self.cdata.update_setting(setting)\n            self.assertEqual(setting, self.cdata._global_settings.get(setting.name))\n\n    def test_update_setting_with_plugin(self):\n        pass\n\n    def test_get_setting(self):\n        self.cdata._global_settings = {'mykey': mykey}\n        self.assertEqual(mykey, self.cdata.get_setting('mykey'))\n\n    def test_get_settings(self):\n        all_settings = {'mykey': mykey, 'mykey2': mykey2}\n        self.cdata._global_settings = all_settings\n\n        for setting in self.cdata.get_settings():\n            self.assertEqual(all_settings[setting.name], setting)\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_data.py", "id": "fc6ec836f11e653dff0c305b4536c7cc", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/config/test_data.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
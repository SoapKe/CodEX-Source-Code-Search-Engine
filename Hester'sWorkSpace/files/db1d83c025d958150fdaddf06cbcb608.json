{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import models, _\nfrom odoo.tools import html2plaintext\n\nclass MailChannel(models.Model):\n    _inherit = 'mail.channel'\n\n    def _define_command_lead(self):\n        return {'help': _('Create a new lead (/lead lead title)')}\n\n    def _execute_command_lead(self, **kwargs):\n        partner = self.env.user.partner_id\n        key = kwargs['body']\n        channel_partners = self.env['mail.channel.partner'].search([\n            ('partner_id', '!=', partner.id),\n            ('channel_id', '=', self.id)], limit=1\n        )\n        if key.strip() == '/lead':\n            msg = self._define_command_lead()['help']\n        else:\n            description = ''.join(\n                '%s: %s\\n' % (message.author_id.name or self.anonymous_name, message.body)\n                for message in self.channel_message_ids.sorted('id')\n            )\n            lead = self.env['crm.lead'].create({\n                'name': html2plaintext(key[5:]),\n                'partner_id': channel_partners.partner_id.id,\n                'user_id': None,\n                'team_id': None,\n                'description': html2plaintext(description),\n                'referred': partner.name\n            })\n            lead._onchange_partner_id()\n            msg = _('Created a new lead: <a href=\"#\" data-oe-id=\"%s\" data-oe-model=\"crm.lead\">%s</a>') % (lead.id, lead.name)\n        self._send_transient_message(partner, msg)\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import models, _\nfrom odoo.tools import html2plaintext\n\nclass MailChannel(models.Model):\n    _inherit = 'mail.channel'\n\n    def _define_command_lead(self):\n        return {'help': _('Create a new lead (/lead lead title)')}\n\n    def _execute_command_lead(self, **kwargs):\n        partner = self.env.user.partner_id\n        key = kwargs['body']\n        channel_partners = self.env['mail.channel.partner'].search([\n            ('partner_id', '!=', partner.id),\n            ('channel_id', '=', self.id)], limit=1\n        )\n        if key.strip() == '/lead':\n            msg = self._define_command_lead()['help']\n        else:\n            description = ''.join(\n                '%s: %s\\n' % (message.author_id.name or self.anonymous_name, message.body)\n                for message in self.channel_message_ids.sorted('id')\n            )\n            lead = self.env['crm.lead'].create({\n                'name': html2plaintext(key[5:]),\n                'partner_id': channel_partners.partner_id.id,\n                'user_id': None,\n                'team_id': None,\n                'description': html2plaintext(description),\n                'referred': partner.name\n            })\n            lead._onchange_partner_id()\n            msg = _('Created a new lead: <a href=\"#\" data-oe-id=\"%s\" data-oe-model=\"crm.lead\">%s</a>') % (lead.id, lead.name)\n        self._send_transient_message(partner, msg)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "mail_channel.py", "id": "db1d83c025d958150fdaddf06cbcb608", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/crm_livechat/models/mail_channel.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
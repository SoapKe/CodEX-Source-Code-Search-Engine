{"author": "fxsjy", "code": "\nimport sys\nimport jieba\nfrom argparse import ArgumentParser\nfrom ._compat import *\n\nparser = ArgumentParser(usage=\"%s -m jieba [options] filename\" % sys.executable, description=\"Jieba command line interface.\", epilog=\"If no filename specified, use STDIN instead.\")\nparser.add_argument(\"-d\", \"--delimiter\", metavar=\"DELIM\", default=' / ',\n                    nargs='?', const=' ',\n                    help=\"use DELIM instead of ' / ' for word delimiter; or a space if it is used without DELIM\")\nparser.add_argument(\"-p\", \"--pos\", metavar=\"DELIM\", nargs='?', const='_',\n                    help=\"enable POS tagging; if DELIM is specified, use DELIM instead of '_' for POS delimiter\")\nparser.add_argument(\"-D\", \"--dict\", help=\"use DICT as dictionary\")\nparser.add_argument(\"-u\", \"--user-dict\",\n                    help=\"use USER_DICT together with the default dictionary or DICT (if specified)\")\nparser.add_argument(\"-a\", \"--cut-all\",\n                    action=\"store_true\", dest=\"cutall\", default=False,\n                    help=\"full pattern cutting (ignored with POS tagging)\")\nparser.add_argument(\"-n\", \"--no-hmm\", dest=\"hmm\", action=\"store_false\",\n                    default=True, help=\"don't use the Hidden Markov Model\")\nparser.add_argument(\"-q\", \"--quiet\", action=\"store_true\", default=False,\n                    help=\"don't print loading messages to stderr\")\nparser.add_argument(\"-V\", '--version', action='version',\n                    version=\"Jieba \" + jieba.__version__)\nparser.add_argument(\"filename\", nargs='?', help=\"input file\")\n\nargs = parser.parse_args()\n\nif args.quiet:\n    jieba.setLogLevel(60)\nif args.pos:\n    import jieba.posseg\n    posdelim = args.pos\n    def cutfunc(sentence, _, HMM=True):\n        for w, f in jieba.posseg.cut(sentence, HMM):\n            yield w + posdelim + f\nelse:\n    cutfunc = jieba.cut\n\ndelim = text_type(args.delimiter)\ncutall = args.cutall\nhmm = args.hmm\nfp = open(args.filename, 'r') if args.filename else sys.stdin\n\nif args.dict:\n    jieba.initialize(args.dict)\nelse:\n    jieba.initialize()\nif args.user_dict:\n    jieba.load_userdict(args.user_dict)\n\nln = fp.readline()\nwhile ln:\n    l = ln.rstrip('\\r\\n')\n    result = delim.join(cutfunc(ln.rstrip('\\r\\n'), cutall, hmm))\n    if PY2:\n        result = result.encode(default_encoding)\n    print(result)\n    ln = fp.readline()\n\nfp.close()\n", "comments": "   jieba command line interface     ", "content": "\"\"\"Jieba command line interface.\"\"\"\nimport sys\nimport jieba\nfrom argparse import ArgumentParser\nfrom ._compat import *\n\nparser = ArgumentParser(usage=\"%s -m jieba [options] filename\" % sys.executable, description=\"Jieba command line interface.\", epilog=\"If no filename specified, use STDIN instead.\")\nparser.add_argument(\"-d\", \"--delimiter\", metavar=\"DELIM\", default=' / ',\n                    nargs='?', const=' ',\n                    help=\"use DELIM instead of ' / ' for word delimiter; or a space if it is used without DELIM\")\nparser.add_argument(\"-p\", \"--pos\", metavar=\"DELIM\", nargs='?', const='_',\n                    help=\"enable POS tagging; if DELIM is specified, use DELIM instead of '_' for POS delimiter\")\nparser.add_argument(\"-D\", \"--dict\", help=\"use DICT as dictionary\")\nparser.add_argument(\"-u\", \"--user-dict\",\n                    help=\"use USER_DICT together with the default dictionary or DICT (if specified)\")\nparser.add_argument(\"-a\", \"--cut-all\",\n                    action=\"store_true\", dest=\"cutall\", default=False,\n                    help=\"full pattern cutting (ignored with POS tagging)\")\nparser.add_argument(\"-n\", \"--no-hmm\", dest=\"hmm\", action=\"store_false\",\n                    default=True, help=\"don't use the Hidden Markov Model\")\nparser.add_argument(\"-q\", \"--quiet\", action=\"store_true\", default=False,\n                    help=\"don't print loading messages to stderr\")\nparser.add_argument(\"-V\", '--version', action='version',\n                    version=\"Jieba \" + jieba.__version__)\nparser.add_argument(\"filename\", nargs='?', help=\"input file\")\n\nargs = parser.parse_args()\n\nif args.quiet:\n    jieba.setLogLevel(60)\nif args.pos:\n    import jieba.posseg\n    posdelim = args.pos\n    def cutfunc(sentence, _, HMM=True):\n        for w, f in jieba.posseg.cut(sentence, HMM):\n            yield w + posdelim + f\nelse:\n    cutfunc = jieba.cut\n\ndelim = text_type(args.delimiter)\ncutall = args.cutall\nhmm = args.hmm\nfp = open(args.filename, 'r') if args.filename else sys.stdin\n\nif args.dict:\n    jieba.initialize(args.dict)\nelse:\n    jieba.initialize()\nif args.user_dict:\n    jieba.load_userdict(args.user_dict)\n\nln = fp.readline()\nwhile ln:\n    l = ln.rstrip('\\r\\n')\n    result = delim.join(cutfunc(ln.rstrip('\\r\\n'), cutall, hmm))\n    if PY2:\n        result = result.encode(default_encoding)\n    print(result)\n    ln = fp.readline()\n\nfp.close()\n", "description": "\u7ed3\u5df4\u4e2d\u6587\u5206\u8bcd", "file_name": "__main__.py", "id": "48d1b468fe1206e859074be758e798a4", "language": "Python", "project_name": "jieba", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/fxsjy-jieba/fxsjy-jieba-cb0de29/jieba/__main__.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:12:20Z", "url": "https://github.com/fxsjy/jieba", "wiki": true}
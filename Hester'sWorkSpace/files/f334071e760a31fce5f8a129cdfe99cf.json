{"author": "django", "code": "from django.contrib.contenttypes.fields import (\n    GenericForeignKey, GenericRelation,\n)\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.db import models\n\n\nclass Square(models.Model):\n    root = models.IntegerField()\n    square = models.PositiveIntegerField()\n\n    def __str__(self):\n        return \"%s ** 2 == %s\" % (self.root, self.square)\n\n\nclass Person(models.Model):\n    first_name = models.CharField(max_length=20)\n    last_name = models.CharField(max_length=20)\n\n    def __str__(self):\n        return '%s %s' % (self.first_name, self.last_name)\n\n\nclass SchoolClass(models.Model):\n    year = models.PositiveIntegerField()\n    day = models.CharField(max_length=9, blank=True)\n    last_updated = models.DateTimeField()\n\n\nclass VeryLongModelNameZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ(models.Model):\n    primary_key_is_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.AutoField(primary_key=True)\n    charfield_is_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.CharField(max_length=100)\n    m2m_also_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.ManyToManyField(Person, blank=True)\n\n\nclass Tag(models.Model):\n    name = models.CharField(max_length=30)\n    content_type = models.ForeignKey(ContentType, models.CASCADE, related_name='backend_tags')\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey('content_type', 'object_id')\n\n\nclass Post(models.Model):\n    name = models.CharField(max_length=30)\n    text = models.TextField()\n    tags = GenericRelation('Tag')\n\n    class Meta:\n        db_table = 'CaseSensitive_Post'\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass ReporterProxy(Reporter):\n    class Meta:\n        proxy = True\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    reporter_proxy = models.ForeignKey(\n        ReporterProxy,\n        models.SET_NULL,\n        null=True,\n        related_name='reporter_proxy',\n    )\n\n    def __str__(self):\n        return self.headline\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=30)\n    date = models.DateField()\n    time = models.TimeField()\n    last_modified = models.DateTimeField()\n\n    def __str__(self):\n        return self.name\n\n\nclass Object(models.Model):\n    related_objects = models.ManyToManyField(\"self\", db_constraint=False, symmetrical=False)\n\n    def __str__(self):\n        return str(self.id)\n\n\nclass ObjectReference(models.Model):\n    obj = models.ForeignKey(Object, models.CASCADE, db_constraint=False)\n\n    def __str__(self):\n        return str(self.obj_id)\n\n\nclass RawData(models.Model):\n    raw_data = models.BinaryField()\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=255, unique=True)\n\n\nclass Book(models.Model):\n    author = models.ForeignKey(Author, models.CASCADE, to_field='name')\n", "comments": "", "content": "from django.contrib.contenttypes.fields import (\n    GenericForeignKey, GenericRelation,\n)\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.db import models\n\n\nclass Square(models.Model):\n    root = models.IntegerField()\n    square = models.PositiveIntegerField()\n\n    def __str__(self):\n        return \"%s ** 2 == %s\" % (self.root, self.square)\n\n\nclass Person(models.Model):\n    first_name = models.CharField(max_length=20)\n    last_name = models.CharField(max_length=20)\n\n    def __str__(self):\n        return '%s %s' % (self.first_name, self.last_name)\n\n\nclass SchoolClass(models.Model):\n    year = models.PositiveIntegerField()\n    day = models.CharField(max_length=9, blank=True)\n    last_updated = models.DateTimeField()\n\n\nclass VeryLongModelNameZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ(models.Model):\n    primary_key_is_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.AutoField(primary_key=True)\n    charfield_is_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.CharField(max_length=100)\n    m2m_also_quite_long_zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = models.ManyToManyField(Person, blank=True)\n\n\nclass Tag(models.Model):\n    name = models.CharField(max_length=30)\n    content_type = models.ForeignKey(ContentType, models.CASCADE, related_name='backend_tags')\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey('content_type', 'object_id')\n\n\nclass Post(models.Model):\n    name = models.CharField(max_length=30)\n    text = models.TextField()\n    tags = GenericRelation('Tag')\n\n    class Meta:\n        db_table = 'CaseSensitive_Post'\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n\n    def __str__(self):\n        return \"%s %s\" % (self.first_name, self.last_name)\n\n\nclass ReporterProxy(Reporter):\n    class Meta:\n        proxy = True\n\n\nclass Article(models.Model):\n    headline = models.CharField(max_length=100)\n    pub_date = models.DateField()\n    reporter = models.ForeignKey(Reporter, models.CASCADE)\n    reporter_proxy = models.ForeignKey(\n        ReporterProxy,\n        models.SET_NULL,\n        null=True,\n        related_name='reporter_proxy',\n    )\n\n    def __str__(self):\n        return self.headline\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=30)\n    date = models.DateField()\n    time = models.TimeField()\n    last_modified = models.DateTimeField()\n\n    def __str__(self):\n        return self.name\n\n\nclass Object(models.Model):\n    related_objects = models.ManyToManyField(\"self\", db_constraint=False, symmetrical=False)\n\n    def __str__(self):\n        return str(self.id)\n\n\nclass ObjectReference(models.Model):\n    obj = models.ForeignKey(Object, models.CASCADE, db_constraint=False)\n\n    def __str__(self):\n        return str(self.obj_id)\n\n\nclass RawData(models.Model):\n    raw_data = models.BinaryField()\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=255, unique=True)\n\n\nclass Book(models.Model):\n    author = models.ForeignKey(Author, models.CASCADE, to_field='name')\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "f334071e760a31fce5f8a129cdfe99cf", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/backends/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestLongestIncreasingSubseq(object):\n\n    def test_longest_increasing_subseq(self):\n        subseq = Subsequence()\n        assert_raises(TypeError, subseq.longest_inc_subseq, None)\n        assert_equal(subseq.longest_inc_subseq([]), [])\n        seq = [3, 4, -1, 0, 6, 2, 3]\n        expected = [-1, 0, 2, 3]\n        assert_equal(subseq.longest_inc_subseq(seq), expected)\n        print('Success: test_longest_increasing_subseq')\n\n\ndef main():\n    test = TestLongestIncreasingSubseq()\n    test.test_longest_increasing_subseq()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestLongestIncreasingSubseq(object):\n\n    def test_longest_increasing_subseq(self):\n        subseq = Subsequence()\n        assert_raises(TypeError, subseq.longest_inc_subseq, None)\n        assert_equal(subseq.longest_inc_subseq([]), [])\n        seq = [3, 4, -1, 0, 6, 2, 3]\n        expected = [-1, 0, 2, 3]\n        assert_equal(subseq.longest_inc_subseq(seq), expected)\n        print('Success: test_longest_increasing_subseq')\n\n\ndef main():\n    test = TestLongestIncreasingSubseq()\n    test.test_longest_increasing_subseq()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_longest_increasing_subseq.py", "id": "7dfb189f19112c1f8eb15b89fc035f54", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/recursion_dynamic/longest_inc_subseq/test_longest_increasing_subseq.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
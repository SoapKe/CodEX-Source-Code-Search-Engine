{"author": "HelloZeroNet", "code": "import logging\nimport re\nimport time\n\nfrom Config import config\nfrom Plugin import PluginManager\n\nallow_reload = False  \n\nlog = logging.getLogger(\"ZeronamePlugin\")\n\n\n@PluginManager.registerTo(\"SiteManager\")\nclass SiteManagerPlugin(object):\n    site_zeroname = None\n    db_domains = None\n    db_domains_modified = None\n\n    def load(self, *args, **kwargs):\n        super(SiteManagerPlugin, self).load(*args, **kwargs)\n        if not self.get(config.bit_resolver):\n            self.need(config.bit_resolver)  \n\n    \n    def isAddress(self, address):\n        if self.isDomain(address):\n            return True\n        else:\n            return super(SiteManagerPlugin, self).isAddress(address)\n\n    \n    def isDomain(self, address):\n        return re.match(\"(.*?)([A-Za-z0-9_-]+\\.bit)$\", address)\n\n    \n    \n    def resolveDomain(self, domain):\n        domain = domain.lower()\n        if not self.site_zeroname:\n            self.site_zeroname = self.need(config.bit_resolver)\n\n        site_zeroname_modified = self.site_zeroname.content_manager.contents.get(\"content.json\", {}).get(\"modified\", 0)\n        if not self.db_domains or self.db_domains_modified != site_zeroname_modified:\n            self.site_zeroname.needFile(\"data/names.json\", priority=10)\n            s = time.time()\n            self.db_domains = self.site_zeroname.storage.loadJson(\"data/names.json\")\n            log.debug(\n                \"Domain db with %s entries loaded in %.3fs (modification: %s -> %s)\" %\n                (len(self.db_domains), time.time() - s, self.db_domains_modified, site_zeroname_modified)\n            )\n            self.db_domains_modified = site_zeroname_modified\n        return self.db_domains.get(domain)\n\n    \n    \n    def need(self, address, *args, **kwargs):\n        if self.isDomain(address):  \n            address_resolved = self.resolveDomain(address)\n            if address_resolved:\n                address = address_resolved\n            else:\n                return None\n\n        return super(SiteManagerPlugin, self).need(address, *args, **kwargs)\n\n    \n    def get(self, address):\n        if self.sites is None:  \n            self.load()\n        if self.isDomain(address):  \n            address_resolved = self.resolveDomain(address)\n            if address_resolved:  \n                site = self.sites.get(address_resolved)\n                if site:\n                    site_domain = site.settings.get(\"domain\")\n                    if site_domain != address:\n                        site.settings[\"domain\"] = address\n            else:  \n                site = self.sites.get(address)\n\n        else:  \n            site = self.sites.get(address)\n        return site\n", "comments": "  no reload supported    need zeroname site    checks valid address    return  true address domain    resolve domain    return  the address none    return create site start download site files    return  site none dns resolve failed    its looks like domain    return  site object none found    not loaded yet    its looks like domain    domain found    domain found    access site address ", "content": "import logging\nimport re\nimport time\n\nfrom Config import config\nfrom Plugin import PluginManager\n\nallow_reload = False  # No reload supported\n\nlog = logging.getLogger(\"ZeronamePlugin\")\n\n\n@PluginManager.registerTo(\"SiteManager\")\nclass SiteManagerPlugin(object):\n    site_zeroname = None\n    db_domains = None\n    db_domains_modified = None\n\n    def load(self, *args, **kwargs):\n        super(SiteManagerPlugin, self).load(*args, **kwargs)\n        if not self.get(config.bit_resolver):\n            self.need(config.bit_resolver)  # Need ZeroName site\n\n    # Checks if its a valid address\n    def isAddress(self, address):\n        if self.isDomain(address):\n            return True\n        else:\n            return super(SiteManagerPlugin, self).isAddress(address)\n\n    # Return: True if the address is domain\n    def isDomain(self, address):\n        return re.match(\"(.*?)([A-Za-z0-9_-]+\\.bit)$\", address)\n\n    # Resolve domain\n    # Return: The address or None\n    def resolveDomain(self, domain):\n        domain = domain.lower()\n        if not self.site_zeroname:\n            self.site_zeroname = self.need(config.bit_resolver)\n\n        site_zeroname_modified = self.site_zeroname.content_manager.contents.get(\"content.json\", {}).get(\"modified\", 0)\n        if not self.db_domains or self.db_domains_modified != site_zeroname_modified:\n            self.site_zeroname.needFile(\"data/names.json\", priority=10)\n            s = time.time()\n            self.db_domains = self.site_zeroname.storage.loadJson(\"data/names.json\")\n            log.debug(\n                \"Domain db with %s entries loaded in %.3fs (modification: %s -> %s)\" %\n                (len(self.db_domains), time.time() - s, self.db_domains_modified, site_zeroname_modified)\n            )\n            self.db_domains_modified = site_zeroname_modified\n        return self.db_domains.get(domain)\n\n    # Return or create site and start download site files\n    # Return: Site or None if dns resolve failed\n    def need(self, address, *args, **kwargs):\n        if self.isDomain(address):  # Its looks like a domain\n            address_resolved = self.resolveDomain(address)\n            if address_resolved:\n                address = address_resolved\n            else:\n                return None\n\n        return super(SiteManagerPlugin, self).need(address, *args, **kwargs)\n\n    # Return: Site object or None if not found\n    def get(self, address):\n        if self.sites is None:  # Not loaded yet\n            self.load()\n        if self.isDomain(address):  # Its looks like a domain\n            address_resolved = self.resolveDomain(address)\n            if address_resolved:  # Domain found\n                site = self.sites.get(address_resolved)\n                if site:\n                    site_domain = site.settings.get(\"domain\")\n                    if site_domain != address:\n                        site.settings[\"domain\"] = address\n            else:  # Domain not found\n                site = self.sites.get(address)\n\n        else:  # Access by site address\n            site = self.sites.get(address)\n        return site\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "SiteManagerPlugin.py", "id": "8d00ad915f04d3e5e5b5b03f505ffe99", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/plugins/Zeroname/SiteManagerPlugin.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
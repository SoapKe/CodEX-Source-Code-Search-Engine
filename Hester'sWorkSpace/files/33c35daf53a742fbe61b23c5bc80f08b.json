{"author": "django", "code": "import unittest\n\nfrom django.core.exceptions import ValidationError\n\n\nclass TestValidationError(unittest.TestCase):\n    def test_messages_concatenates_error_dict_values(self):\n        message_dict = {}\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), [])\n        message_dict['field1'] = ['E1', 'E2']\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), ['E1', 'E2'])\n        message_dict['field2'] = ['E3', 'E4']\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), ['E1', 'E2', 'E3', 'E4'])\n", "comments": "", "content": "import unittest\n\nfrom django.core.exceptions import ValidationError\n\n\nclass TestValidationError(unittest.TestCase):\n    def test_messages_concatenates_error_dict_values(self):\n        message_dict = {}\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), [])\n        message_dict['field1'] = ['E1', 'E2']\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), ['E1', 'E2'])\n        message_dict['field2'] = ['E3', 'E4']\n        exception = ValidationError(message_dict)\n        self.assertEqual(sorted(exception.messages), ['E1', 'E2', 'E3', 'E4'])\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "test_validation_error.py", "id": "33c35daf53a742fbe61b23c5bc80f08b", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/test_exceptions/test_validation_error.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
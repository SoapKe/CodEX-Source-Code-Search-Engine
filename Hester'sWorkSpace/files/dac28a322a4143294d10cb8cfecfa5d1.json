{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\n\nclass PaymentAdviceReport(models.Model):\n    _name = \"payment.advice.report\"\n    _description = \"Payment Advice Analysis\"\n    _auto = False\n\n    name = fields.Char(readonly=True)\n    date = fields.Date(readonly=True)\n    year = fields.Char(readonly=True)\n    month = fields.Selection([('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'),\n        ('10', 'October'), ('11', 'November'), ('12', 'December')], readonly=True)\n    day = fields.Char(readonly=True)\n    state = fields.Selection([\n        ('draft', 'Draft'),\n        ('confirm', 'Confirmed'),\n        ('cancel', 'Cancelled'),\n    ], string='Status', index=True, readonly=True)\n    employee_id = fields.Many2one('hr.employee', string='Employee', readonly=True)\n    nbr = fields.Integer(string='# Payment Lines', readonly=True)\n    number = fields.Char(readonly=True)\n    bysal = fields.Float(string='By Salary', readonly=True)\n    bank_id = fields.Many2one('res.bank', string='Bank', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n    cheque_nos = fields.Char(string='Cheque Numbers', readonly=True)\n    neft = fields.Boolean(string='NEFT Transaction', readonly=True)\n    ifsc_code = fields.Char(string='IFSC Code', readonly=True)\n    employee_bank_no = fields.Char(string='Employee Bank Account', required=True)\n\n    @api.model_cr\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view payment_advice_report as (\n                select\n                    min(l.id) as id,\n                    sum(l.bysal) as bysal,\n                    p.name,\n                    p.state,\n                    p.date,\n                    p.number,\n                    p.company_id,\n                    p.bank_id,\n                    p.chaque_nos as cheque_nos,\n                    p.neft,\n                    l.employee_id,\n                    l.ifsc_code,\n                    l.name as employee_bank_no,\n                    to_char(p.date, 'YYYY') as year,\n                    to_char(p.date, 'MM') as month,\n                    to_char(p.date, 'YYYY-MM-DD') as day,\n                    1 as nbr\n                from\n                    hr_payroll_advice as p\n                    left join hr_payroll_advice_line as l on (p.id=l.advice_id)\n                where\n                    l.employee_id IS NOT NULL\n                group by\n                    p.number,p.name,p.date,p.state,p.company_id,p.bank_id,p.chaque_nos,p.neft,\n                    l.employee_id,l.advice_id,l.bysal,l.ifsc_code, l.name\n            )\n        \"\"\")\n", "comments": "                create replace view payment advice report (                 select                     min(l id) id                      sum(l bysal) bysal                      p name                      p state                      p date                      p number                      p company id                      p bank id                      p chaque nos cheque nos                      p neft                      l employee id                      l ifsc code                      l name employee bank                      char(p date   yyyy ) year                      char(p date   mm ) month                      char(p date   yyyy mm dd ) day                      1 nbr                                     hr payroll advice p                     left join hr payroll advice line l (p id l advice id)                                     l employee id is not null                 group                     p number p name p date p state p company id p bank id p chaque nos p neft                      l employee id l advice id l bysal l ifsc code  l name             )                    coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\n\nclass PaymentAdviceReport(models.Model):\n    _name = \"payment.advice.report\"\n    _description = \"Payment Advice Analysis\"\n    _auto = False\n\n    name = fields.Char(readonly=True)\n    date = fields.Date(readonly=True)\n    year = fields.Char(readonly=True)\n    month = fields.Selection([('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'),\n        ('10', 'October'), ('11', 'November'), ('12', 'December')], readonly=True)\n    day = fields.Char(readonly=True)\n    state = fields.Selection([\n        ('draft', 'Draft'),\n        ('confirm', 'Confirmed'),\n        ('cancel', 'Cancelled'),\n    ], string='Status', index=True, readonly=True)\n    employee_id = fields.Many2one('hr.employee', string='Employee', readonly=True)\n    nbr = fields.Integer(string='# Payment Lines', readonly=True)\n    number = fields.Char(readonly=True)\n    bysal = fields.Float(string='By Salary', readonly=True)\n    bank_id = fields.Many2one('res.bank', string='Bank', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n    cheque_nos = fields.Char(string='Cheque Numbers', readonly=True)\n    neft = fields.Boolean(string='NEFT Transaction', readonly=True)\n    ifsc_code = fields.Char(string='IFSC Code', readonly=True)\n    employee_bank_no = fields.Char(string='Employee Bank Account', required=True)\n\n    @api.model_cr\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view payment_advice_report as (\n                select\n                    min(l.id) as id,\n                    sum(l.bysal) as bysal,\n                    p.name,\n                    p.state,\n                    p.date,\n                    p.number,\n                    p.company_id,\n                    p.bank_id,\n                    p.chaque_nos as cheque_nos,\n                    p.neft,\n                    l.employee_id,\n                    l.ifsc_code,\n                    l.name as employee_bank_no,\n                    to_char(p.date, 'YYYY') as year,\n                    to_char(p.date, 'MM') as month,\n                    to_char(p.date, 'YYYY-MM-DD') as day,\n                    1 as nbr\n                from\n                    hr_payroll_advice as p\n                    left join hr_payroll_advice_line as l on (p.id=l.advice_id)\n                where\n                    l.employee_id IS NOT NULL\n                group by\n                    p.number,p.name,p.date,p.state,p.company_id,p.bank_id,p.chaque_nos,p.neft,\n                    l.employee_id,l.advice_id,l.bysal,l.ifsc_code, l.name\n            )\n        \"\"\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "payment_advice_report.py", "id": "dac28a322a4143294d10cb8cfecfa5d1", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_in_hr_payroll/report/payment_advice_report.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
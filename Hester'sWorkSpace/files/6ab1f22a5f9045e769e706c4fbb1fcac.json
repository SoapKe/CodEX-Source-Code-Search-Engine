{"author": "certbot", "code": "\"\"\"\nGiven an ACME account key as input, deactivate the account.\n\nThis can be useful if you created an account with a non-Certbot client and now\nwant to deactivate it.\n\nPrivate key should be in PKCS\n\nTo provide the URL for the ACME server you want to use, set it in the $DIRECTORY\nenvironment variable, e.g.:\n\nDIRECTORY=https://acme-staging.api.letsencrypt.org/directory python \\\n    deactivate.py private_key.pem\n\"\"\"\nimport os\nimport sys\n\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nimport josepy as jose\n\nfrom acme import client as acme_client\nfrom acme import errors as acme_errors\nfrom acme import messages\n\nDIRECTORY = os.getenv('DIRECTORY', 'http://localhost:4000/directory')\n\nif len(sys.argv) != 2:\n    print(\"Usage: python deactivate.py private_key.pem\")\n    sys.exit(1)\n\ndata = open(sys.argv[1], \"r\").read()\nkey = jose.JWKRSA(key=serialization.load_pem_private_key(\n    data, None, default_backend()))\n\nnet = acme_client.ClientNetwork(key, verify_ssl=False,\n                                user_agent=\"acme account deactivator\")\n\nclient = acme_client.Client(DIRECTORY, key=key, net=net)\ntry:\n    \n    \n    client.register()\nexcept acme_errors.ConflictError as e:\n    location = e.location\nif location is None:\n    raise \"Key was not previously registered (but now is).\"\nclient.deactivate_registration(messages.RegistrationResource(uri=location))\n", "comments": "    given acme account key input  deactivate account   this useful created account non certbot client want deactivate   private key pkcs 8 pem form   to provide url acme server want use  set  directory environment variable  e g    directory https   acme staging api letsencrypt org directory python       deactivate py private key pem       8 pem form     we expect fail give us conflict response location    header pointing account url  ", "content": "\"\"\"\nGiven an ACME account key as input, deactivate the account.\n\nThis can be useful if you created an account with a non-Certbot client and now\nwant to deactivate it.\n\nPrivate key should be in PKCS#8 PEM form.\n\nTo provide the URL for the ACME server you want to use, set it in the $DIRECTORY\nenvironment variable, e.g.:\n\nDIRECTORY=https://acme-staging.api.letsencrypt.org/directory python \\\n    deactivate.py private_key.pem\n\"\"\"\nimport os\nimport sys\n\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nimport josepy as jose\n\nfrom acme import client as acme_client\nfrom acme import errors as acme_errors\nfrom acme import messages\n\nDIRECTORY = os.getenv('DIRECTORY', 'http://localhost:4000/directory')\n\nif len(sys.argv) != 2:\n    print(\"Usage: python deactivate.py private_key.pem\")\n    sys.exit(1)\n\ndata = open(sys.argv[1], \"r\").read()\nkey = jose.JWKRSA(key=serialization.load_pem_private_key(\n    data, None, default_backend()))\n\nnet = acme_client.ClientNetwork(key, verify_ssl=False,\n                                user_agent=\"acme account deactivator\")\n\nclient = acme_client.Client(DIRECTORY, key=key, net=net)\ntry:\n    # We expect this to fail and give us a Conflict response with a Location\n    # header pointing at the account's URL.\n    client.register()\nexcept acme_errors.ConflictError as e:\n    location = e.location\nif location is None:\n    raise \"Key was not previously registered (but now is).\"\nclient.deactivate_registration(messages.RegistrationResource(uri=location))\n", "description": "Certbot is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.  It can also act as a client for any other CA that uses the ACME protocol.", "file_name": "deactivate.py", "id": "6ab1f22a5f9045e769e706c4fbb1fcac", "language": "Python", "project_name": "certbot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/certbot-certbot/certbot-certbot-1d0e3b1/tools/deactivate.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:23Z", "url": "https://github.com/certbot/certbot", "wiki": false}
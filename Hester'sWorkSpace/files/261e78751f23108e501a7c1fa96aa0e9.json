{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unified_strdate,\n)\nfrom ..compat import compat_urlparse\n\n\nclass DWIE(InfoExtractor):\n    IE_NAME = 'dw'\n    _VALID_URL = r'https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+(?:av|e)-(?P<id>\\d+)'\n    _TESTS = [{\n        \n        'url': 'http://www.dw.com/en/intelligent-light/av-19112290',\n        'md5': '7372046e1815c5a534b43f3c3c36e6e9',\n        'info_dict': {\n            'id': '19112290',\n            'ext': 'mp4',\n            'title': 'Intelligent light',\n            'description': 'md5:90e00d5881719f2a6a5827cb74985af1',\n            'upload_date': '20160311',\n        }\n    }, {\n        \n        'url': 'http://www.dw.com/en/worldlink-my-business/av-19111941',\n        'md5': '2814c9a1321c3a51f8a7aeb067a360dd',\n        'info_dict': {\n            'id': '19111941',\n            'ext': 'mp3',\n            'title': 'WorldLink: My business',\n            'description': 'md5:bc9ca6e4e063361e21c920c53af12405',\n            'upload_date': '20160311',\n        }\n    }, {\n        \n        'url': 'http://www.dw.com/en/documentaries-welcome-to-the-90s-2016-05-21/e-19220158-9798',\n        'md5': '56b6214ef463bfb9a3b71aeb886f3cf1',\n        'info_dict': {\n            'id': '19274438',\n            'ext': 'mp4',\n            'title': 'Welcome to the 90s \u2013 Hip Hop',\n            'description': 'Welcome to the 90s - The Golden Decade of Hip Hop',\n            'upload_date': '20160521',\n        },\n        'skip': 'Video removed',\n    }]\n\n    def _real_extract(self, url):\n        media_id = self._match_id(url)\n        webpage = self._download_webpage(url, media_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        title = hidden_inputs['media_title']\n        media_id = hidden_inputs.get('media_id') or media_id\n\n        if hidden_inputs.get('player_type') == 'video' and hidden_inputs.get('stream_file') == '1':\n            formats = self._extract_smil_formats(\n                'http://www.dw.com/smil/v-%s' % media_id, media_id,\n                transform_source=lambda s: s.replace(\n                    'rtmp://tv-od.dw.de/flash/',\n                    'http://tv-download.dw.de/dwtv_video/flv/'))\n            self._sort_formats(formats)\n        else:\n            formats = [{'url': hidden_inputs['file_name']}]\n\n        upload_date = hidden_inputs.get('display_date')\n        if not upload_date:\n            upload_date = self._html_search_regex(\n                r'<span[^>]+class=\"date\">([0-9.]+)\\s*\\|', webpage,\n                'upload date', default=None)\n            upload_date = unified_strdate(upload_date)\n\n        return {\n            'id': media_id,\n            'title': title,\n            'description': self._og_search_description(webpage),\n            'thumbnail': hidden_inputs.get('preview_image'),\n            'duration': int_or_none(hidden_inputs.get('file_duration')),\n            'upload_date': upload_date,\n            'formats': formats,\n        }\n\n\nclass DWArticleIE(InfoExtractor):\n    IE_NAME = 'dw:article'\n    _VALID_URL = r'https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+a-(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.dw.com/en/no-hope-limited-options-for-refugees-in-idomeni/a-19111009',\n        'md5': '8ca657f9d068bbef74d6fc38b97fc869',\n        'info_dict': {\n            'id': '19105868',\n            'ext': 'mp4',\n            'title': 'The harsh life of refugees in Idomeni',\n            'description': 'md5:196015cc7e48ebf474db9399420043c7',\n            'upload_date': '20160310',\n        }\n    }\n\n    def _real_extract(self, url):\n        article_id = self._match_id(url)\n        webpage = self._download_webpage(url, article_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        media_id = hidden_inputs['media_id']\n        media_path = self._search_regex(r'href=\"([^\"]+av-%s)\"\\s+class=\"overlayLink\"' % media_id, webpage, 'media url')\n        media_url = compat_urlparse.urljoin(url, media_path)\n        return self.url_result(media_url, 'DW', media_id)\n", "comments": "# coding: utf-8\n# video\n# audio\n# DW documentaries, only last for one or two weeks\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unified_strdate,\n)\nfrom ..compat import compat_urlparse\n\n\nclass DWIE(InfoExtractor):\n    IE_NAME = 'dw'\n    _VALID_URL = r'https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+(?:av|e)-(?P<id>\\d+)'\n    _TESTS = [{\n        # video\n        'url': 'http://www.dw.com/en/intelligent-light/av-19112290',\n        'md5': '7372046e1815c5a534b43f3c3c36e6e9',\n        'info_dict': {\n            'id': '19112290',\n            'ext': 'mp4',\n            'title': 'Intelligent light',\n            'description': 'md5:90e00d5881719f2a6a5827cb74985af1',\n            'upload_date': '20160311',\n        }\n    }, {\n        # audio\n        'url': 'http://www.dw.com/en/worldlink-my-business/av-19111941',\n        'md5': '2814c9a1321c3a51f8a7aeb067a360dd',\n        'info_dict': {\n            'id': '19111941',\n            'ext': 'mp3',\n            'title': 'WorldLink: My business',\n            'description': 'md5:bc9ca6e4e063361e21c920c53af12405',\n            'upload_date': '20160311',\n        }\n    }, {\n        # DW documentaries, only last for one or two weeks\n        'url': 'http://www.dw.com/en/documentaries-welcome-to-the-90s-2016-05-21/e-19220158-9798',\n        'md5': '56b6214ef463bfb9a3b71aeb886f3cf1',\n        'info_dict': {\n            'id': '19274438',\n            'ext': 'mp4',\n            'title': 'Welcome to the 90s \u2013 Hip Hop',\n            'description': 'Welcome to the 90s - The Golden Decade of Hip Hop',\n            'upload_date': '20160521',\n        },\n        'skip': 'Video removed',\n    }]\n\n    def _real_extract(self, url):\n        media_id = self._match_id(url)\n        webpage = self._download_webpage(url, media_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        title = hidden_inputs['media_title']\n        media_id = hidden_inputs.get('media_id') or media_id\n\n        if hidden_inputs.get('player_type') == 'video' and hidden_inputs.get('stream_file') == '1':\n            formats = self._extract_smil_formats(\n                'http://www.dw.com/smil/v-%s' % media_id, media_id,\n                transform_source=lambda s: s.replace(\n                    'rtmp://tv-od.dw.de/flash/',\n                    'http://tv-download.dw.de/dwtv_video/flv/'))\n            self._sort_formats(formats)\n        else:\n            formats = [{'url': hidden_inputs['file_name']}]\n\n        upload_date = hidden_inputs.get('display_date')\n        if not upload_date:\n            upload_date = self._html_search_regex(\n                r'<span[^>]+class=\"date\">([0-9.]+)\\s*\\|', webpage,\n                'upload date', default=None)\n            upload_date = unified_strdate(upload_date)\n\n        return {\n            'id': media_id,\n            'title': title,\n            'description': self._og_search_description(webpage),\n            'thumbnail': hidden_inputs.get('preview_image'),\n            'duration': int_or_none(hidden_inputs.get('file_duration')),\n            'upload_date': upload_date,\n            'formats': formats,\n        }\n\n\nclass DWArticleIE(InfoExtractor):\n    IE_NAME = 'dw:article'\n    _VALID_URL = r'https?://(?:www\\.)?dw\\.com/(?:[^/]+/)+a-(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.dw.com/en/no-hope-limited-options-for-refugees-in-idomeni/a-19111009',\n        'md5': '8ca657f9d068bbef74d6fc38b97fc869',\n        'info_dict': {\n            'id': '19105868',\n            'ext': 'mp4',\n            'title': 'The harsh life of refugees in Idomeni',\n            'description': 'md5:196015cc7e48ebf474db9399420043c7',\n            'upload_date': '20160310',\n        }\n    }\n\n    def _real_extract(self, url):\n        article_id = self._match_id(url)\n        webpage = self._download_webpage(url, article_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        media_id = hidden_inputs['media_id']\n        media_path = self._search_regex(r'href=\"([^\"]+av-%s)\"\\s+class=\"overlayLink\"' % media_id, webpage, 'media url')\n        media_url = compat_urlparse.urljoin(url, media_path)\n        return self.url_result(media_url, 'DW', media_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "dw.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/dw.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "localstack", "code": "import logging\nimport traceback\nfrom localstack.config import PORT_DYNAMODB, DATA_DIR\nfrom localstack.constants import DEFAULT_PORT_DYNAMODB_BACKEND\nfrom localstack.utils.aws import aws_stack\nfrom localstack.utils.common import mkdir, wait_for_port_open\nfrom localstack.services import install\nfrom localstack.services.infra import get_service_protocol, start_proxy_for_service, do_run\nfrom localstack.services.install import ROOT_PATH\n\nLOGGER = logging.getLogger(__name__)\n\n\ndef check_dynamodb(expect_shutdown=False, print_error=False):\n    out = None\n    try:\n        \n        wait_for_port_open(DEFAULT_PORT_DYNAMODB_BACKEND)\n        \n        out = aws_stack.connect_to_service(service_name='dynamodb').list_tables()\n    except Exception as e:\n        if print_error:\n            LOGGER.error('DynamoDB health check failed: %s %s' % (e, traceback.format_exc()))\n    if expect_shutdown:\n        assert out is None\n    else:\n        assert isinstance(out['TableNames'], list)\n\n\ndef start_dynamodb(port=PORT_DYNAMODB, async=False, update_listener=None):\n    install.install_dynamodb_local()\n    backend_port = DEFAULT_PORT_DYNAMODB_BACKEND\n    ddb_data_dir_param = '-inMemory'\n    if DATA_DIR:\n        ddb_data_dir = '%s/dynamodb' % DATA_DIR\n        mkdir(ddb_data_dir)\n        ddb_data_dir_param = '-dbPath %s' % ddb_data_dir\n    cmd = ('cd %s/infra/dynamodb/; java -Djava.library.path=./DynamoDBLocal_lib ' +\n        '-jar DynamoDBLocal.jar -sharedDb -port %s %s') % (ROOT_PATH, backend_port, ddb_data_dir_param)\n    print('Starting mock DynamoDB (%s port %s)...' % (get_service_protocol(), port))\n    start_proxy_for_service('dynamodb', port, backend_port, update_listener)\n    return do_run(cmd, async)\n", "comments": "  wait port opened    check dynamodb ", "content": "import logging\nimport traceback\nfrom localstack.config import PORT_DYNAMODB, DATA_DIR\nfrom localstack.constants import DEFAULT_PORT_DYNAMODB_BACKEND\nfrom localstack.utils.aws import aws_stack\nfrom localstack.utils.common import mkdir, wait_for_port_open\nfrom localstack.services import install\nfrom localstack.services.infra import get_service_protocol, start_proxy_for_service, do_run\nfrom localstack.services.install import ROOT_PATH\n\nLOGGER = logging.getLogger(__name__)\n\n\ndef check_dynamodb(expect_shutdown=False, print_error=False):\n    out = None\n    try:\n        # wait for port to be opened\n        wait_for_port_open(DEFAULT_PORT_DYNAMODB_BACKEND)\n        # check DynamoDB\n        out = aws_stack.connect_to_service(service_name='dynamodb').list_tables()\n    except Exception as e:\n        if print_error:\n            LOGGER.error('DynamoDB health check failed: %s %s' % (e, traceback.format_exc()))\n    if expect_shutdown:\n        assert out is None\n    else:\n        assert isinstance(out['TableNames'], list)\n\n\ndef start_dynamodb(port=PORT_DYNAMODB, async=False, update_listener=None):\n    install.install_dynamodb_local()\n    backend_port = DEFAULT_PORT_DYNAMODB_BACKEND\n    ddb_data_dir_param = '-inMemory'\n    if DATA_DIR:\n        ddb_data_dir = '%s/dynamodb' % DATA_DIR\n        mkdir(ddb_data_dir)\n        ddb_data_dir_param = '-dbPath %s' % ddb_data_dir\n    cmd = ('cd %s/infra/dynamodb/; java -Djava.library.path=./DynamoDBLocal_lib ' +\n        '-jar DynamoDBLocal.jar -sharedDb -port %s %s') % (ROOT_PATH, backend_port, ddb_data_dir_param)\n    print('Starting mock DynamoDB (%s port %s)...' % (get_service_protocol(), port))\n    start_proxy_for_service('dynamodb', port, backend_port, update_listener)\n    return do_run(cmd, async)\n", "description": "\ud83d\udcbb  A fully functional local AWS cloud stack. Develop and test your cloud apps offline!", "file_name": "dynamodb_starter.py", "id": "537fba9025f9db3f99f95f9f715b7681", "language": "Python", "project_name": "localstack", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/localstack-localstack/localstack-localstack-865ec3a/localstack/services/dynamodb/dynamodb_starter.py", "save_time": "", "source": "", "update_at": "2018-03-14T00:04:55Z", "url": "https://github.com/localstack/localstack", "wiki": true}
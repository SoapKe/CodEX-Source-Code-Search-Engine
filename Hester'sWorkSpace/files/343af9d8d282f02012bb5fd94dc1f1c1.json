{"author": "kivy", "code": "print('main.py was successfully called')\nprint('this is the new main.py')\n\nimport os\nprint('imported os')\n\ntry:\n    print('contents of ./lib/python2.7/site-packages/ etc.')\n    print(os.listdir('./lib'))\n    print(os.listdir('./lib/python2.7'))\n    print(os.listdir('./lib/python2.7/site-packages'))\nexcept OSError:\n    print('could not look in dirs')\n    print('this is expected on desktop')\n\nimport flask\nprint('flask1???')\n\nprint('contents of this dir', os.listdir('./'))\n\nimport flask\nprint('flask???')\n\nimport sys\nprint('pythonpath is', sys.path)\n\n\nfrom flask import Flask\napp = Flask(__name__)\n\nfrom flask import (Flask, url_for, render_template, request, redirect,\n                   flash)\n\nprint('imported flask etc')\nprint('importing pyjnius')\n\nfrom jnius import autoclass\nContext = autoclass('android.content.Context')\nPythonActivity = autoclass('org.kivy.android.PythonActivity')\nactivity = PythonActivity.mActivity\n\nvibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)\n\nActivityInfo = autoclass('android.content.pm.ActivityInfo')\n\n@app.route('/')\ndef page1():\n    return render_template('index.html')\n\n@app.route('/page2')\ndef page2():\n    return render_template('page2.html')\n\n@app.route('/vibrate')\ndef vibrate():\n    args = request.args\n    if 'time' not in args:\n        print('ERROR: asked to vibrate but without time argument')\n    print('asked to vibrate', args['time'])\n\n    vibrator.vibrate(float(args['time']) * 1000)\n    print('vibrated')\n\n@app.route('/loadUrl')\ndef loadUrl():\n    args = request.args\n    if 'url' not in args:\n        print('ERROR: asked to open an url but without url argument')\n    print('asked to open url', args['url'])\n    activity.loadUrl(args['url'])\n\n@app.route('/orientation')\ndef orientation():\n    args = request.args\n    if 'dir' not in args:\n        print('ERROR: asked to orient but no dir specified')\n    direction = args['dir']\n    if direction not in ('horizontal', 'vertical'):\n        print('ERROR: asked to orient to neither horizontal nor vertical')\n\n    if direction == 'horizontal':\n        activity.setRequestedOrientation(\n            ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE)\n    else:\n        activity.setRequestedOrientation(\n            ActivityInfo.SCREEN_ORIENTATION_PORTRAIT)\n\n\nfrom os import curdir\nfrom os.path import realpath\nprint('curdir', realpath(curdir))\nif realpath(curdir).startswith('/data'):\n    app.run(debug=False)\nelse:\n    app.run(debug=True)\n", "comments": "", "content": "print('main.py was successfully called')\nprint('this is the new main.py')\n\nimport os\nprint('imported os')\n\ntry:\n    print('contents of ./lib/python2.7/site-packages/ etc.')\n    print(os.listdir('./lib'))\n    print(os.listdir('./lib/python2.7'))\n    print(os.listdir('./lib/python2.7/site-packages'))\nexcept OSError:\n    print('could not look in dirs')\n    print('this is expected on desktop')\n\nimport flask\nprint('flask1???')\n\nprint('contents of this dir', os.listdir('./'))\n\nimport flask\nprint('flask???')\n\nimport sys\nprint('pythonpath is', sys.path)\n\n\nfrom flask import Flask\napp = Flask(__name__)\n\nfrom flask import (Flask, url_for, render_template, request, redirect,\n                   flash)\n\nprint('imported flask etc')\nprint('importing pyjnius')\n\nfrom jnius import autoclass\nContext = autoclass('android.content.Context')\nPythonActivity = autoclass('org.kivy.android.PythonActivity')\nactivity = PythonActivity.mActivity\n\nvibrator = activity.getSystemService(Context.VIBRATOR_SERVICE)\n\nActivityInfo = autoclass('android.content.pm.ActivityInfo')\n\n@app.route('/')\ndef page1():\n    return render_template('index.html')\n\n@app.route('/page2')\ndef page2():\n    return render_template('page2.html')\n\n@app.route('/vibrate')\ndef vibrate():\n    args = request.args\n    if 'time' not in args:\n        print('ERROR: asked to vibrate but without time argument')\n    print('asked to vibrate', args['time'])\n\n    vibrator.vibrate(float(args['time']) * 1000)\n    print('vibrated')\n\n@app.route('/loadUrl')\ndef loadUrl():\n    args = request.args\n    if 'url' not in args:\n        print('ERROR: asked to open an url but without url argument')\n    print('asked to open url', args['url'])\n    activity.loadUrl(args['url'])\n\n@app.route('/orientation')\ndef orientation():\n    args = request.args\n    if 'dir' not in args:\n        print('ERROR: asked to orient but no dir specified')\n    direction = args['dir']\n    if direction not in ('horizontal', 'vertical'):\n        print('ERROR: asked to orient to neither horizontal nor vertical')\n\n    if direction == 'horizontal':\n        activity.setRequestedOrientation(\n            ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE)\n    else:\n        activity.setRequestedOrientation(\n            ActivityInfo.SCREEN_ORIENTATION_PORTRAIT)\n\n\nfrom os import curdir\nfrom os.path import realpath\nprint('curdir', realpath(curdir))\nif realpath(curdir).startswith('/data'):\n    app.run(debug=False)\nelse:\n    app.run(debug=True)\n", "description": "Turn your Python application into an Android APK", "file_name": "main.py", "id": "343af9d8d282f02012bb5fd94dc1f1c1", "language": "Python", "project_name": "python-for-android", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/kivy-python-for-android/kivy-python-for-android-a036f44/testapps/testapp_flask/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:42:42Z", "url": "https://github.com/kivy/python-for-android", "wiki": false}
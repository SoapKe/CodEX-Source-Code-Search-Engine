{"author": "ansible", "code": "\n\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_banner\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage multiline banners on network devices\ndescription:\n  - This will configure both login and motd banners on network devices.\n    It allows playbooks to add or remote\n    banner text from the active running configuration.\noptions:\n  banner:\n    description:\n      - Specifies which banner that should be\n        configured on the remote device.\n    required: true\n    choices: ['login', 'motd']\n  text:\n    description:\n      - The banner text that should be\n        present in the remote device running configuration.  This argument\n        accepts a multiline string, with no empty lines. Requires I(state=present).\n  state:\n    description:\n      - Specifies whether or not the configuration is\n        present in the current devices active running configuration.\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure the login banner\n  net_banner:\n    banner: login\n    text: |\n      this is my login banner\n      that contains a multiline\n      string\n    state: present\n\n- name: remove the motd banner\n  net_banner:\n    banner: motd\n    state: absent\n\n- name: Configure banner from file\n  net_banner:\n    banner:  motd\n    text: \"{{ lookup('file', './config_partial/raw_banner.cfg') }}\"\n    state: present\n\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - banner login\n    - this is my login banner\n    - that contains a multiline\n    - string\n\"\"\"\n", "comments": "        module  net banner version added   2 4  author   ricardo carrillo cruz ( rcarrillocruz)  short description  manage multiline banners network devices description      this configure login motd banners network devices      it allows playbooks add remote     banner text active running configuration  options    banner      description          specifies banner         configured remote device      required  true     choices    login    motd     text      description          the banner text         present remote device running configuration   this argument         accepts multiline string  empty lines  requires i(state present)    state      description          specifies whether configuration         present current devices active running configuration      default  present     choices    present    absent        examples         name  configure login banner   net banner      banner  login     text          login banner       contains multiline       string     state  present    name  remove motd banner   net banner      banner  motd     state  absent    name  configure banner file   net banner      banner   motd     text      lookup( file      config partial raw banner cfg )         state  present       return       commands    description  the list configuration mode commands send device   returned  always  except platforms use netconf transport manage device    type  list   sample        banner login       login banner       contains multiline       string         usr bin python    copyright  ansible project    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# Copyright: Ansible Project\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_banner\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage multiline banners on network devices\ndescription:\n  - This will configure both login and motd banners on network devices.\n    It allows playbooks to add or remote\n    banner text from the active running configuration.\noptions:\n  banner:\n    description:\n      - Specifies which banner that should be\n        configured on the remote device.\n    required: true\n    choices: ['login', 'motd']\n  text:\n    description:\n      - The banner text that should be\n        present in the remote device running configuration.  This argument\n        accepts a multiline string, with no empty lines. Requires I(state=present).\n  state:\n    description:\n      - Specifies whether or not the configuration is\n        present in the current devices active running configuration.\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure the login banner\n  net_banner:\n    banner: login\n    text: |\n      this is my login banner\n      that contains a multiline\n      string\n    state: present\n\n- name: remove the motd banner\n  net_banner:\n    banner: motd\n    state: absent\n\n- name: Configure banner from file\n  net_banner:\n    banner:  motd\n    text: \"{{ lookup('file', './config_partial/raw_banner.cfg') }}\"\n    state: present\n\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - banner login\n    - this is my login banner\n    - that contains a multiline\n    - string\n\"\"\"\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "net_banner.py", "id": "afc4cc1f50d1f82eef14749b7aa942e8", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/system/net_banner.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
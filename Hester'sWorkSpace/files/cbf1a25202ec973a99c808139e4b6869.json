{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_l2_interface\nversion_added: \"2.4\"\nauthor: \"Ganesh Nalawade (@ganeshrn)\"\nshort_description: Manage Layer-2 interface on network devices\ndescription:\n  - This module provides declarative management of Layer-2 interface\n    on network devices.\noptions:\n  name:\n    description:\n      - Name of the interface excluding any logical unit number.\n  aggregate:\n    description:\n      - List of Layer-2 interface definitions.\n  mode:\n    description:\n      - Mode in which interface needs to be configured.\n    default: access\n    choices: ['access', 'trunk']\n  access_vlan:\n    description:\n      - Configure given VLAN in access port.\n  trunk_vlans:\n    description:\n      - List of VLANs to be configured in trunk port.\n  native_vlan:\n    description:\n      - Native VLAN to be configured in trunk port.\n  trunk_allowed_vlans:\n    description:\n      - List of allowed VLAN's in a given trunk port.\n  state:\n    description:\n      - State of the Layer-2 Interface configuration.\n    default: present\n    choices: ['present', 'absent',]\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure Layer-2 interface\n  net_l2_interface:\n    name: gigabitethernet0/0/1\n    mode: access\n    access_vlan: 30\n\n- name: remove Layer-2 interface configuration\n  net_l2_interface:\n    name: gigabitethernet0/0/1\n    state: absent\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - interface gigabitethernet0/0/1\n    - switchport mode access\n    - switchport access vlan 30\n\"\"\"\n", "comments": "        module  net l2 interface version added   2 4  author   ganesh nalawade ( ganeshrn)  short description  manage layer 2 interface network devices description      this module provides declarative management layer 2 interface     network devices  options    name      description          name interface excluding logical unit number    aggregate      description          list layer 2 interface definitions    mode      description          mode interface needs configured      default  access     choices    access    trunk     access vlan      description          configure given vlan access port    trunk vlans      description          list vlans configured trunk port    native vlan      description          native vlan configured trunk port    trunk allowed vlans      description          list allowed vlan given trunk port    state      description          state layer 2 interface configuration      default  present     choices    present    absent         examples         name  configure layer 2 interface   net l2 interface      name  gigabitethernet0 0 1     mode  access     access vlan  30    name  remove layer 2 interface configuration   net l2 interface      name  gigabitethernet0 0 1     state  absent      return       commands    description  the list configuration mode commands send device   returned  always  except platforms use netconf transport manage device    type  list   sample        interface gigabitethernet0 0 1       switchport mode access       switchport access vlan 30         usr bin python        coding  utf 8        (c) 2017  ansible red hat  inc    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_l2_interface\nversion_added: \"2.4\"\nauthor: \"Ganesh Nalawade (@ganeshrn)\"\nshort_description: Manage Layer-2 interface on network devices\ndescription:\n  - This module provides declarative management of Layer-2 interface\n    on network devices.\noptions:\n  name:\n    description:\n      - Name of the interface excluding any logical unit number.\n  aggregate:\n    description:\n      - List of Layer-2 interface definitions.\n  mode:\n    description:\n      - Mode in which interface needs to be configured.\n    default: access\n    choices: ['access', 'trunk']\n  access_vlan:\n    description:\n      - Configure given VLAN in access port.\n  trunk_vlans:\n    description:\n      - List of VLANs to be configured in trunk port.\n  native_vlan:\n    description:\n      - Native VLAN to be configured in trunk port.\n  trunk_allowed_vlans:\n    description:\n      - List of allowed VLAN's in a given trunk port.\n  state:\n    description:\n      - State of the Layer-2 Interface configuration.\n    default: present\n    choices: ['present', 'absent',]\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: configure Layer-2 interface\n  net_l2_interface:\n    name: gigabitethernet0/0/1\n    mode: access\n    access_vlan: 30\n\n- name: remove Layer-2 interface configuration\n  net_l2_interface:\n    name: gigabitethernet0/0/1\n    state: absent\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - interface gigabitethernet0/0/1\n    - switchport mode access\n    - switchport access vlan 30\n\"\"\"\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "net_l2_interface.py", "id": "cbf1a25202ec973a99c808139e4b6869", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/layer2/net_l2_interface.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
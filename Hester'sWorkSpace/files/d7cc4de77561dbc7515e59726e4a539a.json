{"author": "rushter", "code": "from sklearn.datasets import make_classification\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\n\nfrom mla.naive_bayes import NaiveBayesClassifier\n\n\ndef classification():\n    \n    X, y = make_classification(n_samples=1000, n_features=10, n_informative=10,\n                               random_state=1111, n_classes=2, class_sep=2.5,\n                               n_redundant=0)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1,\n                                                        random_state=1111)\n\n    model = NaiveBayesClassifier()\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)[:, 1]\n\n    print('classification accuracy', roc_auc_score(y_test, predictions))\n\n\nif __name__ == '__main__':\n    classification()\n", "comments": "  generate random binary classification problem  ", "content": "from sklearn.datasets import make_classification\nfrom sklearn.metrics import roc_auc_score\nfrom sklearn.model_selection import train_test_split\n\nfrom mla.naive_bayes import NaiveBayesClassifier\n\n\ndef classification():\n    # Generate a random binary classification problem.\n    X, y = make_classification(n_samples=1000, n_features=10, n_informative=10,\n                               random_state=1111, n_classes=2, class_sep=2.5,\n                               n_redundant=0)\n    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1,\n                                                        random_state=1111)\n\n    model = NaiveBayesClassifier()\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)[:, 1]\n\n    print('classification accuracy', roc_auc_score(y_test, predictions))\n\n\nif __name__ == '__main__':\n    classification()\n", "description": "Minimal and clean examples of machine learning algorithms", "file_name": "naive_bayes.py", "id": "d7cc4de77561dbc7515e59726e4a539a", "language": "Python", "project_name": "MLAlgorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rushter-MLAlgorithms/rushter-MLAlgorithms-d398777/examples/naive_bayes.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:25:48Z", "url": "https://github.com/rushter/MLAlgorithms", "wiki": false}
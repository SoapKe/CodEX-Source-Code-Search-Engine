{"author": "keon", "code": "import random\n\nmy_chain = {\n    'A': {'A': 0.6,\n          'E': 0.4},\n    'E': {'A': 0.7,\n          'E': 0.3}\n}\n\ndef __choose_state(state_map):\n    choice = random.random()\n    probability_reached = 0\n    for state, probability in state_map.items():\n        probability_reached += probability\n        if probability_reached > choice:\n            return state\n\ndef next_state(chain, current_state):\n    next_state_map = chain.get(current_state)\n    next_state = __choose_state(next_state_map)\n    return next_state\n\ndef iterating_markov_chain(chain, state):\n    while True:\n        state = next_state(chain, state)\n        yield state\n", "comments": "", "content": "import random\n\nmy_chain = {\n    'A': {'A': 0.6,\n          'E': 0.4},\n    'E': {'A': 0.7,\n          'E': 0.3}\n}\n\ndef __choose_state(state_map):\n    choice = random.random()\n    probability_reached = 0\n    for state, probability in state_map.items():\n        probability_reached += probability\n        if probability_reached > choice:\n            return state\n\ndef next_state(chain, current_state):\n    next_state_map = chain.get(current_state)\n    next_state = __choose_state(next_state_map)\n    return next_state\n\ndef iterating_markov_chain(chain, state):\n    while True:\n        state = next_state(chain, state)\n        yield state\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "markov_chain.py", "id": "1572b532049f463587c001feebd627e4", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/graph/markov_chain.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
{"author": "HelloZeroNet", "code": "from . import string_type\n\ndef encode(obj):\n    \n\n    if isinstance(obj, string_type):\n        return '{0}:{1}'.format(len(obj), obj)\n    elif isinstance(obj, int):\n        return 'i{0}e'.format(obj)\n    elif isinstance(obj, list):\n        values = ''.join([encode(o) for o in obj])\n\n        return 'l{0}e'.format(values)\n    elif isinstance(obj, dict):\n        items = sorted(obj.items())\n        values = ''.join([encode(str(key)) + encode(value) for key, value in items])\n\n        return 'd{0}e'.format(values)\n    else:\n        raise TypeError('Unsupported type: {0}. Must be one of: str, int, list, dict.'.format(type(obj)))\n", "comments": "        bencodes object  the object must instance  str  int  list  dict          ", "content": "from . import string_type\n\ndef encode(obj):\n    '''\n    Bencodes the object. The object must be an instance of: str, int, list, or dict.\n    '''\n\n    if isinstance(obj, string_type):\n        return '{0}:{1}'.format(len(obj), obj)\n    elif isinstance(obj, int):\n        return 'i{0}e'.format(obj)\n    elif isinstance(obj, list):\n        values = ''.join([encode(o) for o in obj])\n\n        return 'l{0}e'.format(values)\n    elif isinstance(obj, dict):\n        items = sorted(obj.items())\n        values = ''.join([encode(str(key)) + encode(value) for key, value in items])\n\n        return 'd{0}e'.format(values)\n    else:\n        raise TypeError('Unsupported type: {0}. Must be one of: str, int, list, dict.'.format(type(obj)))\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "encode.py", "id": "c33d9dcc675803b34ac609f4b22c8938", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/src/lib/bencode/encode.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
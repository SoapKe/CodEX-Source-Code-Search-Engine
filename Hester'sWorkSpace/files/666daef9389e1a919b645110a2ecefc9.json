{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    clean_html,\n    int_or_none,\n    parse_duration,\n    update_url_query,\n    str_or_none,\n)\n\n\nclass UOLIE(InfoExtractor):\n    IE_NAME = 'uol.com.br'\n    _VALID_URL = r'https?://(?:.+?\\.)?uol\\.com\\.br/.*?(?:(?:mediaId|v)=|view/(?:[a-z0-9]+/)?|video(?:=|/(?:\\d{4}/\\d{2}/\\d{2}/)?))(?P<id>\\d+|[\\w-]+-[A-Z0-9]+)'\n    _TESTS = [{\n        'url': 'http://player.mais.uol.com.br/player_video_v3.swf?mediaId=15951931',\n        'md5': '25291da27dc45e0afb5718a8603d3816',\n        'info_dict': {\n            'id': '15951931',\n            'ext': 'mp4',\n            'title': 'Miss simpatia \u00e9 encontrada morta',\n            'description': 'md5:3f8c11a0c0556d66daf7e5b45ef823b2',\n        }\n    }, {\n        'url': 'http://tvuol.uol.com.br/video/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326',\n        'md5': 'e41a2fb7b7398a3a46b6af37b15c00c9',\n        'info_dict': {\n            'id': '15954259',\n            'ext': 'mp4',\n            'title': 'Inc\u00eandio destr\u00f3i uma das maiores casas noturnas de Londres',\n            'description': 'Em Londres, um inc\u00eandio destruiu uma das maiores boates da cidade. N\u00e3o h\u00e1 informa\u00e7\u00f5es sobre v\u00edtimas.',\n        }\n    }, {\n        'url': 'http://mais.uol.com.br/static/uolplayer/index.html?mediaId=15951931',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/15954259',\n        'only_matching': True,\n    }, {\n        'url': 'http://noticias.band.uol.com.br/brasilurgente/video/2016/08/05/15951931/miss-simpatia-e-encontrada-morta.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://videos.band.uol.com.br/programa.asp?e=noticias&pr=brasil-urgente&v=15951931&t=Policia-desmonte-base-do-PCC-na-Cracolandia',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/cphaa0gl2x8r/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326',\n        'only_matching': True,\n    }, {\n        'url': 'http://noticias.uol.com.br//videos/assistir.htm?video=rafaela-silva-inspira-criancas-no-judo-04024D983968D4C95326',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/e0qbgxid79uv/15275470',\n        'only_matching': True,\n    }]\n\n    _FORMATS = {\n        '2': {\n            'width': 640,\n            'height': 360,\n        },\n        '5': {\n            'width': 1080,\n            'height': 720,\n        },\n        '6': {\n            'width': 426,\n            'height': 240,\n        },\n        '7': {\n            'width': 1920,\n            'height': 1080,\n        },\n        '8': {\n            'width': 192,\n            'height': 144,\n        },\n        '9': {\n            'width': 568,\n            'height': 320,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        media_id = None\n\n        if video_id.isdigit():\n            media_id = video_id\n\n        if not media_id:\n            embed_page = self._download_webpage(\n                'https://jsuol.com.br/c/tv/uol/embed/?params=[embed,%s]' % video_id,\n                video_id, 'Downloading embed page', fatal=False)\n            if embed_page:\n                media_id = self._search_regex(\n                    (r'uol\\.com\\.br/(\\d+)', r'mediaId=(\\d+)'),\n                    embed_page, 'media id', default=None)\n\n        if not media_id:\n            webpage = self._download_webpage(url, video_id)\n            media_id = self._search_regex(r'mediaId=(\\d+)', webpage, 'media id')\n\n        video_data = self._download_json(\n            'http://mais.uol.com.br/apiuol/v3/player/getMedia/%s.json' % media_id,\n            media_id)['item']\n        title = video_data['title']\n\n        query = {\n            'ver': video_data.get('numRevision', 2),\n            'r': 'http://mais.uol.com.br',\n        }\n        formats = []\n        for f in video_data.get('formats', []):\n            f_url = f.get('url') or f.get('secureUrl')\n            if not f_url:\n                continue\n            format_id = str_or_none(f.get('id'))\n            fmt = {\n                'format_id': format_id,\n                'url': update_url_query(f_url, query),\n            }\n            fmt.update(self._FORMATS.get(format_id, {}))\n            formats.append(fmt)\n        self._sort_formats(formats)\n\n        tags = []\n        for tag in video_data.get('tags', []):\n            tag_description = tag.get('description')\n            if not tag_description:\n                continue\n            tags.append(tag_description)\n\n        return {\n            'id': media_id,\n            'title': title,\n            'description': clean_html(video_data.get('desMedia')),\n            'thumbnail': video_data.get('thumbnail'),\n            'duration': int_or_none(video_data.get('durationSeconds')) or parse_duration(video_data.get('duration')),\n            'tags': tags,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    clean_html,\n    int_or_none,\n    parse_duration,\n    update_url_query,\n    str_or_none,\n)\n\n\nclass UOLIE(InfoExtractor):\n    IE_NAME = 'uol.com.br'\n    _VALID_URL = r'https?://(?:.+?\\.)?uol\\.com\\.br/.*?(?:(?:mediaId|v)=|view/(?:[a-z0-9]+/)?|video(?:=|/(?:\\d{4}/\\d{2}/\\d{2}/)?))(?P<id>\\d+|[\\w-]+-[A-Z0-9]+)'\n    _TESTS = [{\n        'url': 'http://player.mais.uol.com.br/player_video_v3.swf?mediaId=15951931',\n        'md5': '25291da27dc45e0afb5718a8603d3816',\n        'info_dict': {\n            'id': '15951931',\n            'ext': 'mp4',\n            'title': 'Miss simpatia \u00e9 encontrada morta',\n            'description': 'md5:3f8c11a0c0556d66daf7e5b45ef823b2',\n        }\n    }, {\n        'url': 'http://tvuol.uol.com.br/video/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326',\n        'md5': 'e41a2fb7b7398a3a46b6af37b15c00c9',\n        'info_dict': {\n            'id': '15954259',\n            'ext': 'mp4',\n            'title': 'Inc\u00eandio destr\u00f3i uma das maiores casas noturnas de Londres',\n            'description': 'Em Londres, um inc\u00eandio destruiu uma das maiores boates da cidade. N\u00e3o h\u00e1 informa\u00e7\u00f5es sobre v\u00edtimas.',\n        }\n    }, {\n        'url': 'http://mais.uol.com.br/static/uolplayer/index.html?mediaId=15951931',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/15954259',\n        'only_matching': True,\n    }, {\n        'url': 'http://noticias.band.uol.com.br/brasilurgente/video/2016/08/05/15951931/miss-simpatia-e-encontrada-morta.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://videos.band.uol.com.br/programa.asp?e=noticias&pr=brasil-urgente&v=15951931&t=Policia-desmonte-base-do-PCC-na-Cracolandia',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/cphaa0gl2x8r/incendio-destroi-uma-das-maiores-casas-noturnas-de-londres-04024E9A3268D4C95326',\n        'only_matching': True,\n    }, {\n        'url': 'http://noticias.uol.com.br//videos/assistir.htm?video=rafaela-silva-inspira-criancas-no-judo-04024D983968D4C95326',\n        'only_matching': True,\n    }, {\n        'url': 'http://mais.uol.com.br/view/e0qbgxid79uv/15275470',\n        'only_matching': True,\n    }]\n\n    _FORMATS = {\n        '2': {\n            'width': 640,\n            'height': 360,\n        },\n        '5': {\n            'width': 1080,\n            'height': 720,\n        },\n        '6': {\n            'width': 426,\n            'height': 240,\n        },\n        '7': {\n            'width': 1920,\n            'height': 1080,\n        },\n        '8': {\n            'width': 192,\n            'height': 144,\n        },\n        '9': {\n            'width': 568,\n            'height': 320,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        media_id = None\n\n        if video_id.isdigit():\n            media_id = video_id\n\n        if not media_id:\n            embed_page = self._download_webpage(\n                'https://jsuol.com.br/c/tv/uol/embed/?params=[embed,%s]' % video_id,\n                video_id, 'Downloading embed page', fatal=False)\n            if embed_page:\n                media_id = self._search_regex(\n                    (r'uol\\.com\\.br/(\\d+)', r'mediaId=(\\d+)'),\n                    embed_page, 'media id', default=None)\n\n        if not media_id:\n            webpage = self._download_webpage(url, video_id)\n            media_id = self._search_regex(r'mediaId=(\\d+)', webpage, 'media id')\n\n        video_data = self._download_json(\n            'http://mais.uol.com.br/apiuol/v3/player/getMedia/%s.json' % media_id,\n            media_id)['item']\n        title = video_data['title']\n\n        query = {\n            'ver': video_data.get('numRevision', 2),\n            'r': 'http://mais.uol.com.br',\n        }\n        formats = []\n        for f in video_data.get('formats', []):\n            f_url = f.get('url') or f.get('secureUrl')\n            if not f_url:\n                continue\n            format_id = str_or_none(f.get('id'))\n            fmt = {\n                'format_id': format_id,\n                'url': update_url_query(f_url, query),\n            }\n            fmt.update(self._FORMATS.get(format_id, {}))\n            formats.append(fmt)\n        self._sort_formats(formats)\n\n        tags = []\n        for tag in video_data.get('tags', []):\n            tag_description = tag.get('description')\n            if not tag_description:\n                continue\n            tags.append(tag_description)\n\n        return {\n            'id': media_id,\n            'title': title,\n            'description': clean_html(video_data.get('desMedia')),\n            'thumbnail': video_data.get('thumbnail'),\n            'duration': int_or_none(video_data.get('durationSeconds')) or parse_duration(video_data.get('duration')),\n            'tags': tags,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "uol.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/uol.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
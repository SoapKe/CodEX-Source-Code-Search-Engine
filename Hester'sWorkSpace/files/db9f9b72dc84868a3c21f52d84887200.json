{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.utils.numbers import base36_encode, base36_decode, \\\n    base32_encode, base32_decode\n\n\ndef test_base36():\n    assert [base36_encode(x) for x in range(128)] == [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n        'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n        '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1A', '1B', '1C', '1D', '1E',\n        '1F', '1G', '1H', '1I', '1J', '1K', '1L', '1M', '1N', '1O', '1P', '1Q', '1R', '1S', '1T',\n        '1U', '1V', '1W', '1X', '1Y', '1Z', '20', '21', '22', '23', '24', '25', '26', '27', '28',\n        '29', '2A', '2B', '2C', '2D', '2E', '2F', '2G', '2H', '2I', '2J', '2K', '2L', '2M', '2N',\n        '2O', '2P', '2Q', '2R', '2S', '2T', '2U', '2V', '2W', '2X', '2Y', '2Z', '30', '31', '32',\n        '33', '34', '35', '36', '37', '38', '39', '3A', '3B', '3C', '3D', '3E', '3F', '3G', '3H',\n        '3I', '3J'\n    ]\n\n    assert [base36_decode(base36_encode(x)) for x in range(128)] == list(map(int, range(128)))\n\n\ndef test_base32():\n    assert [base32_encode(x) for x in range(128)] == [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n        'J', 'K', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z', '10', '11', '12',\n        '13', '14', '15', '16', '17', '18', '19', '1A', '1B', '1C', '1D', '1E', '1F', '1G', '1H',\n        '1J', '1K', '1M', '1N', '1P', '1Q', '1R', '1S', '1T', '1V', '1W', '1X', '1Y', '1Z', '20',\n        '21', '22', '23', '24', '25', '26', '27', '28', '29', '2A', '2B', '2C', '2D', '2E', '2F',\n        '2G', '2H', '2J', '2K', '2M', '2N', '2P', '2Q', '2R', '2S', '2T', '2V', '2W', '2X', '2Y',\n        '2Z', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3A', '3B', '3C', '3D',\n        '3E', '3F', '3G', '3H', '3J', '3K', '3M', '3N', '3P', '3Q', '3R', '3S', '3T', '3V', '3W',\n        '3X', '3Y', '3Z'\n    ]\n\n    assert [base32_decode(base32_encode(x)) for x in range(128)] == list(map(int, range(128)))\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.utils.numbers import base36_encode, base36_decode, \\\n    base32_encode, base32_decode\n\n\ndef test_base36():\n    assert [base36_encode(x) for x in range(128)] == [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n        'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n        '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1A', '1B', '1C', '1D', '1E',\n        '1F', '1G', '1H', '1I', '1J', '1K', '1L', '1M', '1N', '1O', '1P', '1Q', '1R', '1S', '1T',\n        '1U', '1V', '1W', '1X', '1Y', '1Z', '20', '21', '22', '23', '24', '25', '26', '27', '28',\n        '29', '2A', '2B', '2C', '2D', '2E', '2F', '2G', '2H', '2I', '2J', '2K', '2L', '2M', '2N',\n        '2O', '2P', '2Q', '2R', '2S', '2T', '2U', '2V', '2W', '2X', '2Y', '2Z', '30', '31', '32',\n        '33', '34', '35', '36', '37', '38', '39', '3A', '3B', '3C', '3D', '3E', '3F', '3G', '3H',\n        '3I', '3J'\n    ]\n\n    assert [base36_decode(base36_encode(x)) for x in range(128)] == list(map(int, range(128)))\n\n\ndef test_base32():\n    assert [base32_encode(x) for x in range(128)] == [\n        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n        'J', 'K', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z', '10', '11', '12',\n        '13', '14', '15', '16', '17', '18', '19', '1A', '1B', '1C', '1D', '1E', '1F', '1G', '1H',\n        '1J', '1K', '1M', '1N', '1P', '1Q', '1R', '1S', '1T', '1V', '1W', '1X', '1Y', '1Z', '20',\n        '21', '22', '23', '24', '25', '26', '27', '28', '29', '2A', '2B', '2C', '2D', '2E', '2F',\n        '2G', '2H', '2J', '2K', '2M', '2N', '2P', '2Q', '2R', '2S', '2T', '2V', '2W', '2X', '2Y',\n        '2Z', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3A', '3B', '3C', '3D',\n        '3E', '3F', '3G', '3H', '3J', '3K', '3M', '3N', '3P', '3Q', '3R', '3S', '3T', '3V', '3W',\n        '3X', '3Y', '3Z'\n    ]\n\n    assert [base32_decode(base32_encode(x)) for x in range(128)] == list(map(int, range(128)))\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_numbers.py", "id": "db9f9b72dc84868a3c21f52d84887200", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/utils/test_numbers.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import ValidationError\n\n\nclass Documentation(models.Model):\n    _name = 'forum.documentation.toc'\n    _description = 'Documentation ToC'\n    _inherit = ['website.seo.metadata']\n    _order = \"parent_left\"\n    _parent_order = \"sequence, name\"\n    _parent_store = True\n\n    sequence = fields.Integer('Sequence')\n    name = fields.Char('Name', required=True, translate=True)\n    introduction = fields.Html('Introduction', translate=True)\n    parent_id = fields.Many2one('forum.documentation.toc', string='Parent Table Of Content', ondelete='cascade')\n    child_ids = fields.One2many('forum.documentation.toc', 'parent_id', string='Children Table Of Content')\n    parent_left = fields.Integer(string='Left Parent', index=True)\n    parent_right = fields.Integer(string='Right Parent', index=True)\n    post_ids = fields.One2many('forum.post', 'documentation_toc_id', string='Posts')\n    forum_id = fields.Many2one('forum.forum', string='Forum', required=True)\n\n    @api.multi\n    def name_get(self):\n        res = []\n        for record in self:\n            name = record.name\n            if record.parent_id:\n                name = record.parent_id.name + ' / ' + name\n            res.append((record.id, name))\n        return res\n\n    @api.constrains('parent_id')\n    def _check_parent_id(self):\n        if not self._check_recursion():\n            raise ValidationError(_('Error ! You cannot create recursive categories.'))\n\n\nclass DocumentationStage(models.Model):\n    _name = 'forum.documentation.stage'\n    _description = 'Post Stage'\n    _order = 'sequence'\n\n    sequence = fields.Integer('Sequence')\n    name = fields.Char(string='Stage Name', required=True, translate=True)\n", "comments": "      coding  utf 8     ", "content": "# -*- coding: utf-8 -*-\n\nfrom odoo import api, fields, models, _\nfrom odoo.exceptions import ValidationError\n\n\nclass Documentation(models.Model):\n    _name = 'forum.documentation.toc'\n    _description = 'Documentation ToC'\n    _inherit = ['website.seo.metadata']\n    _order = \"parent_left\"\n    _parent_order = \"sequence, name\"\n    _parent_store = True\n\n    sequence = fields.Integer('Sequence')\n    name = fields.Char('Name', required=True, translate=True)\n    introduction = fields.Html('Introduction', translate=True)\n    parent_id = fields.Many2one('forum.documentation.toc', string='Parent Table Of Content', ondelete='cascade')\n    child_ids = fields.One2many('forum.documentation.toc', 'parent_id', string='Children Table Of Content')\n    parent_left = fields.Integer(string='Left Parent', index=True)\n    parent_right = fields.Integer(string='Right Parent', index=True)\n    post_ids = fields.One2many('forum.post', 'documentation_toc_id', string='Posts')\n    forum_id = fields.Many2one('forum.forum', string='Forum', required=True)\n\n    @api.multi\n    def name_get(self):\n        res = []\n        for record in self:\n            name = record.name\n            if record.parent_id:\n                name = record.parent_id.name + ' / ' + name\n            res.append((record.id, name))\n        return res\n\n    @api.constrains('parent_id')\n    def _check_parent_id(self):\n        if not self._check_recursion():\n            raise ValidationError(_('Error ! You cannot create recursive categories.'))\n\n\nclass DocumentationStage(models.Model):\n    _name = 'forum.documentation.stage'\n    _description = 'Post Stage'\n    _order = 'sequence'\n\n    sequence = fields.Integer('Sequence')\n    name = fields.Char(string='Stage Name', required=True, translate=True)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "forum_documentation_toc.py", "id": "6f44eecd7ccd8ced6be23103f20d8548", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_forum_doc/models/forum_documentation_toc.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
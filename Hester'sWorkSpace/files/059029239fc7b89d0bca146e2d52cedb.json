{"author": "nvbn", "code": "import pytest\n\nfrom thefuck.rules.aws_cli import match, get_new_command\nfrom thefuck.types import Command\n\n\nno_suggestions = \n\n\n@pytest.mark.parametrize('command', [\n    Command('aws dynamdb scan', misspelled_command),\n    Command('aws dynamodb scn', misspelled_subcommand),\n    Command('aws dynamodb t-item',\n            misspelled_subcommand_with_multiple_options)])\ndef test_match(command):\n    assert match(command)\n\n\ndef test_not_match():\n    assert not match(Command('aws dynamodb invalid', no_suggestions))\n\n\n@pytest.mark.parametrize('command, result', [\n    (Command('aws dynamdb scan', misspelled_command),\n     ['aws dynamodb scan']),\n    (Command('aws dynamodb scn', misspelled_subcommand),\n     ['aws dynamodb scan']),\n    (Command('aws dynamodb t-item',\n             misspelled_subcommand_with_multiple_options),\n     ['aws dynamodb put-item', 'aws dynamodb get-item'])])\ndef test_get_new_command(command, result):\n    assert get_new_command(command) == result\n", "comments": "\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument command: Invalid choice, valid choices are:\n\ndynamodb                                 | dynamodbstreams\nec2                                      | ecr\n'''\n\n\nmisspelled_command = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument command: Invalid choice, valid choices are:\n\ndynamodb                                 | dynamodbstreams\nec2                                      | ecr\n\n\nInvalid choice: 'dynamdb', maybe you meant:\n\n  * dynamodb\n'''\n\n\nmisspelled_subcommand = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument operation: Invalid choice, valid choices are:\n\nquery                                    | scan\nupdate-item                              | update-table\n\n\nInvalid choice: 'scn', maybe you meant:\n\n  * scan\n'''\n\n\nmisspelled_subcommand_with_multiple_options = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument operation: Invalid choice, valid choices are:\n\ndescribe-table                           | get-item\nlist-tables                              | put-item\n\n\nInvalid choice: 't-item', maybe you meant:\n\n  * put-item\n  * get-item\n\n\n\n", "content": "import pytest\n\nfrom thefuck.rules.aws_cli import match, get_new_command\nfrom thefuck.types import Command\n\n\nno_suggestions = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument command: Invalid choice, valid choices are:\n\ndynamodb                                 | dynamodbstreams\nec2                                      | ecr\n'''\n\n\nmisspelled_command = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument command: Invalid choice, valid choices are:\n\ndynamodb                                 | dynamodbstreams\nec2                                      | ecr\n\n\nInvalid choice: 'dynamdb', maybe you meant:\n\n  * dynamodb\n'''\n\n\nmisspelled_subcommand = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument operation: Invalid choice, valid choices are:\n\nquery                                    | scan\nupdate-item                              | update-table\n\n\nInvalid choice: 'scn', maybe you meant:\n\n  * scan\n'''\n\n\nmisspelled_subcommand_with_multiple_options = '''\\\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\naws: error: argument operation: Invalid choice, valid choices are:\n\ndescribe-table                           | get-item\nlist-tables                              | put-item\n\n\nInvalid choice: 't-item', maybe you meant:\n\n  * put-item\n  * get-item\n'''\n\n\n@pytest.mark.parametrize('command', [\n    Command('aws dynamdb scan', misspelled_command),\n    Command('aws dynamodb scn', misspelled_subcommand),\n    Command('aws dynamodb t-item',\n            misspelled_subcommand_with_multiple_options)])\ndef test_match(command):\n    assert match(command)\n\n\ndef test_not_match():\n    assert not match(Command('aws dynamodb invalid', no_suggestions))\n\n\n@pytest.mark.parametrize('command, result', [\n    (Command('aws dynamdb scan', misspelled_command),\n     ['aws dynamodb scan']),\n    (Command('aws dynamodb scn', misspelled_subcommand),\n     ['aws dynamodb scan']),\n    (Command('aws dynamodb t-item',\n             misspelled_subcommand_with_multiple_options),\n     ['aws dynamodb put-item', 'aws dynamodb get-item'])])\ndef test_get_new_command(command, result):\n    assert get_new_command(command) == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_aws_cli.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_aws_cli.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport json\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    js_to_json,\n)\n\n\nclass KrasViewIE(InfoExtractor):\n    IE_DESC = '\u041a\u0440\u0430\u0441\u0432\u044c\u044e'\n    _VALID_URL = r'https?://krasview\\.ru/(?:video|embed)/(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://krasview.ru/video/512228',\n        'md5': '3b91003cf85fc5db277870c8ebd98eae',\n        'info_dict': {\n            'id': '512228',\n            'ext': 'mp4',\n            'title': '\u0421\u043d\u0435\u0433, \u043b\u0451\u0434, \u0437\u0430\u043d\u043e\u0441\u044b',\n            'description': '\u0421\u043d\u044f\u0442\u043e \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u041d\u044f\u0433\u0430\u043d\u044c, \u0432 \u0425\u0430\u043d\u0442\u044b-\u041c\u0430\u043d\u0441\u0438\u0439\u0441\u043a\u043e\u043c \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u043c \u043e\u043a\u0440\u0443\u0433\u0435.',\n            'duration': 27,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n        'params': {\n            'skip_download': 'Not accessible from Travis CI server',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        flashvars = json.loads(js_to_json(self._search_regex(\n            r'video_Init\\(({.+?})', webpage, 'flashvars')))\n\n        video_url = flashvars['url']\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = flashvars.get('image') or self._og_search_thumbnail(webpage)\n        duration = int_or_none(flashvars.get('duration'))\n        width = int_or_none(self._og_search_property(\n            'video:width', webpage, 'video width', default=None))\n        height = int_or_none(self._og_search_property(\n            'video:height', webpage, 'video height', default=None))\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'width': width,\n            'height': height,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport json\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    js_to_json,\n)\n\n\nclass KrasViewIE(InfoExtractor):\n    IE_DESC = '\u041a\u0440\u0430\u0441\u0432\u044c\u044e'\n    _VALID_URL = r'https?://krasview\\.ru/(?:video|embed)/(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://krasview.ru/video/512228',\n        'md5': '3b91003cf85fc5db277870c8ebd98eae',\n        'info_dict': {\n            'id': '512228',\n            'ext': 'mp4',\n            'title': '\u0421\u043d\u0435\u0433, \u043b\u0451\u0434, \u0437\u0430\u043d\u043e\u0441\u044b',\n            'description': '\u0421\u043d\u044f\u0442\u043e \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u041d\u044f\u0433\u0430\u043d\u044c, \u0432 \u0425\u0430\u043d\u0442\u044b-\u041c\u0430\u043d\u0441\u0438\u0439\u0441\u043a\u043e\u043c \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u043c \u043e\u043a\u0440\u0443\u0433\u0435.',\n            'duration': 27,\n            'thumbnail': r're:^https?://.*\\.jpg',\n        },\n        'params': {\n            'skip_download': 'Not accessible from Travis CI server',\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        flashvars = json.loads(js_to_json(self._search_regex(\n            r'video_Init\\(({.+?})', webpage, 'flashvars')))\n\n        video_url = flashvars['url']\n        title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage, default=None)\n        thumbnail = flashvars.get('image') or self._og_search_thumbnail(webpage)\n        duration = int_or_none(flashvars.get('duration'))\n        width = int_or_none(self._og_search_property(\n            'video:width', webpage, 'video width', default=None))\n        height = int_or_none(self._og_search_property(\n            'video:height', webpage, 'video height', default=None))\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'width': width,\n            'height': height,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "krasview.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/krasview.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
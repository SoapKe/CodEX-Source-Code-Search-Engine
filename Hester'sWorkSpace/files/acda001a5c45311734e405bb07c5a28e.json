{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass PodomaticIE(InfoExtractor):\n    IE_NAME = 'podomatic'\n    _VALID_URL = r\n\n    _TESTS = [{\n        'url': 'http://scienceteachingtips.podomatic.com/entry/2009-01-02T16_03_35-08_00',\n        'md5': '84bb855fcf3429e6bf72460e1eed782d',\n        'info_dict': {\n            'id': '2009-01-02T16_03_35-08_00',\n            'ext': 'mp3',\n            'uploader': 'Science Teaching Tips',\n            'uploader_id': 'scienceteachingtips',\n            'title': '64.  When the Moon Hits Your Eye',\n            'duration': 446,\n        }\n    }, {\n        'url': 'http://ostbahnhof.podomatic.com/entry/2013-11-15T16_31_21-08_00',\n        'md5': 'd2cf443931b6148e27638650e2638297',\n        'info_dict': {\n            'id': '2013-11-15T16_31_21-08_00',\n            'ext': 'mp3',\n            'uploader': 'Ostbahnhof / Techno Mix',\n            'uploader_id': 'ostbahnhof',\n            'title': 'Einunddreizig',\n            'duration': 3799,\n        }\n    }, {\n        'url': 'https://www.podomatic.com/podcasts/scienceteachingtips/episodes/2009-01-02T16_03_35-08_00',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        channel = mobj.group('channel') or mobj.group('channel_2')\n\n        json_url = (('%s://%s.podomatic.com/entry/embed_params/%s' +\n                     '?permalink=true&rtmp=0') %\n                    (mobj.group('proto'), channel, video_id))\n        data_json = self._download_webpage(\n            json_url, video_id, 'Downloading video info')\n        data = json.loads(data_json)\n\n        video_url = data['downloadLink']\n        if not video_url:\n            video_url = '%s/%s' % (data['streamer'].replace('rtmp', 'http'), data['mediaLocation'])\n        uploader = data['podcast']\n        title = data['title']\n        thumbnail = data['imageLocation']\n        duration = int_or_none(data.get('length'), 1000)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'uploader': uploader,\n            'uploader_id': channel,\n            'thumbnail': thumbnail,\n            'duration': duration,\n        }\n", "comments": "(?x)\n                    (?P<proto>https?)://\n                        (?:\n                            (?P<channel>[^.]+)\\.podomatic\\.com/entry|\n                            (?:www\\.)?podomatic\\.com/podcasts/(?P<channel_2>[^/]+)/episodes\n                        )/\n                        (?P<id>[^/?#&]+)\n                \n \n", "content": "from __future__ import unicode_literals\n\nimport json\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass PodomaticIE(InfoExtractor):\n    IE_NAME = 'podomatic'\n    _VALID_URL = r'''(?x)\n                    (?P<proto>https?)://\n                        (?:\n                            (?P<channel>[^.]+)\\.podomatic\\.com/entry|\n                            (?:www\\.)?podomatic\\.com/podcasts/(?P<channel_2>[^/]+)/episodes\n                        )/\n                        (?P<id>[^/?#&]+)\n                '''\n\n    _TESTS = [{\n        'url': 'http://scienceteachingtips.podomatic.com/entry/2009-01-02T16_03_35-08_00',\n        'md5': '84bb855fcf3429e6bf72460e1eed782d',\n        'info_dict': {\n            'id': '2009-01-02T16_03_35-08_00',\n            'ext': 'mp3',\n            'uploader': 'Science Teaching Tips',\n            'uploader_id': 'scienceteachingtips',\n            'title': '64.  When the Moon Hits Your Eye',\n            'duration': 446,\n        }\n    }, {\n        'url': 'http://ostbahnhof.podomatic.com/entry/2013-11-15T16_31_21-08_00',\n        'md5': 'd2cf443931b6148e27638650e2638297',\n        'info_dict': {\n            'id': '2013-11-15T16_31_21-08_00',\n            'ext': 'mp3',\n            'uploader': 'Ostbahnhof / Techno Mix',\n            'uploader_id': 'ostbahnhof',\n            'title': 'Einunddreizig',\n            'duration': 3799,\n        }\n    }, {\n        'url': 'https://www.podomatic.com/podcasts/scienceteachingtips/episodes/2009-01-02T16_03_35-08_00',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        channel = mobj.group('channel') or mobj.group('channel_2')\n\n        json_url = (('%s://%s.podomatic.com/entry/embed_params/%s' +\n                     '?permalink=true&rtmp=0') %\n                    (mobj.group('proto'), channel, video_id))\n        data_json = self._download_webpage(\n            json_url, video_id, 'Downloading video info')\n        data = json.loads(data_json)\n\n        video_url = data['downloadLink']\n        if not video_url:\n            video_url = '%s/%s' % (data['streamer'].replace('rtmp', 'http'), data['mediaLocation'])\n        uploader = data['podcast']\n        title = data['title']\n        thumbnail = data['imageLocation']\n        duration = int_or_none(data.get('length'), 1000)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'uploader': uploader,\n            'uploader_id': channel,\n            'thumbnail': thumbnail,\n            'duration': duration,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "podomatic.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/podomatic.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
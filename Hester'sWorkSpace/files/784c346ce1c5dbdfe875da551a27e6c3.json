{"author": "USArmyResearchLab", "code": "import dshell\nimport util\nimport dpkt\nimport datetime\nimport binascii\n\n\nclass DshellDecoder(dshell.Decoder):\n\n    def __init__(self):\n        dshell.Decoder.__init__(self,\n                                name='ether',\n                                description='raw ethernet capture decoder',\n                                filter='',\n                                author='twp', asdatetime=True\n                                )\n\n    def rawHandler(self, dlen, data, ts, **kw):\n        if self.verbose:\n            self.log(\"%.06f %d\\n%s\" % (ts, dlen, util.hexPlusAscii(str(data))))\n        eth = dpkt.ethernet.Ethernet(str(data))\n        src = binascii.hexlify(eth.src)\n        dst = binascii.hexlify(eth.dst)\n        self.alert('%6x->%6x %4x len %d' % (long(src, 16), long(dst, 16), eth.type,\n                                            len(eth.data)), type=eth.type, bytes=len(eth.data), src=src, dst=dst, ts=ts)\n\nif __name__ == '__main__':\n    dObj = DshellDecoder()\n    print dObj\nelse:\n    dObj = DshellDecoder()\n", "comments": "", "content": "import dshell\nimport util\nimport dpkt\nimport datetime\nimport binascii\n\n\nclass DshellDecoder(dshell.Decoder):\n\n    def __init__(self):\n        dshell.Decoder.__init__(self,\n                                name='ether',\n                                description='raw ethernet capture decoder',\n                                filter='',\n                                author='twp', asdatetime=True\n                                )\n\n    def rawHandler(self, dlen, data, ts, **kw):\n        if self.verbose:\n            self.log(\"%.06f %d\\n%s\" % (ts, dlen, util.hexPlusAscii(str(data))))\n        eth = dpkt.ethernet.Ethernet(str(data))\n        src = binascii.hexlify(eth.src)\n        dst = binascii.hexlify(eth.dst)\n        self.alert('%6x->%6x %4x len %d' % (long(src, 16), long(dst, 16), eth.type,\n                                            len(eth.data)), type=eth.type, bytes=len(eth.data), src=src, dst=dst, ts=ts)\n\nif __name__ == '__main__':\n    dObj = DshellDecoder()\n    print dObj\nelse:\n    dObj = DshellDecoder()\n", "description": "Dshell is a network forensic analysis framework.", "file_name": "ether.py", "id": "784c346ce1c5dbdfe875da551a27e6c3", "language": "Python", "project_name": "Dshell", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/USArmyResearchLab-Dshell/USArmyResearchLab-Dshell-5850adf/decoders/protocol/ether.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:01:29Z", "url": "https://github.com/USArmyResearchLab/Dshell", "wiki": true}
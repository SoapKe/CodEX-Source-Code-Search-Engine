{"author": "django", "code": "\nfrom django.db import models\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n    email = models.EmailField()\n\n    class Meta:\n        ordering = ('first_name', 'last_name')\n\n    def __str__(self):\n        return (\"%s %s\" % (self.first_name, self.last_name)).strip()\n", "comments": "    transactions  django handles transactions three different ways  the default commit transaction upon write  decorate function get commit success behavior  alternatively  manage transaction manually      ", "content": "\"\"\"\nTransactions\n\nDjango handles transactions in three different ways. The default is to commit\neach transaction upon a write, but you can decorate a function to get\ncommit-on-success behavior. Alternatively, you can manage the transaction\nmanually.\n\"\"\"\nfrom django.db import models\n\n\nclass Reporter(models.Model):\n    first_name = models.CharField(max_length=30)\n    last_name = models.CharField(max_length=30)\n    email = models.EmailField()\n\n    class Meta:\n        ordering = ('first_name', 'last_name')\n\n    def __str__(self):\n        return (\"%s %s\" % (self.first_name, self.last_name)).strip()\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "233a3f14025b2778c9318b80b6787ecb", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/transactions/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "pallets", "code": "\n\n    if not hasattr(g, 'sqlite_db'):\n        g.sqlite_db = connect_db()\n    return g.sqlite_db\n\n\n@bp.route('/')\ndef show_entries():\n    db = get_db()\n    cur = db.execute('select title, text from entries order by id desc')\n    entries = cur.fetchall()\n    return render_template('show_entries.html', entries=entries)\n\n\n@bp.route('/add', methods=['POST'])\ndef add_entry():\n    if not session.get('logged_in'):\n        abort(401)\n    db = get_db()\n    db.execute('insert into entries (title, text) values (?, ?)',\n               [request.form['title'], request.form['text']])\n    db.commit()\n    flash('New entry was successfully posted')\n    return redirect(url_for('flaskr.show_entries'))\n\n\n@bp.route('/login', methods=['GET', 'POST'])\ndef login():\n    error = None\n    if request.method == 'POST':\n        if request.form['username'] != current_app.config['USERNAME']:\n            error = 'Invalid username'\n        elif request.form['password'] != current_app.config['PASSWORD']:\n            error = 'Invalid password'\n        else:\n            session['logged_in'] = True\n            flash('You were logged in')\n            return redirect(url_for('flaskr.show_entries'))\n    return render_template('login.html', error=error)\n\n\n@bp.route('/logout')\ndef logout():\n    session.pop('logged_in', None)\n    flash('You were logged out')\n    return redirect(url_for('flaskr.show_entries'))\n", "comments": "\n    Flaskr\n    ~~~~~~\n\n    A microblog example application written as Flask tutorial with\n    Flask and sqlite3.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nfrom sqlite3 import dbapi2 as sqlite3\nfrom flask import Blueprint, request, session, g, redirect, url_for, abort, \\\n     render_template, flash, current_app\n\n\n# create our blueprint :)\nbp = Blueprint('flaskr', __name__)\n\n\ndef connect_db():\n    \"\"\"Connects to the specific database.\"\"\"\n    rv = sqlite3.connect(current_app.config['DATABASE'])\n    rv.row_factory = sqlite3.Row\n    return rv\n\n\ndef init_db():\n    \"\"\"Initializes the database.\"\"\"\n    db = get_db()\n    with current_app.open_resource('schema.sql', mode='r') as f:\n        db.cursor().executescript(f.read())\n    db.commit()\n\n\ndef get_db():\n    \"\"\"Opens a new database connection if there is none yet for the\n    current application context.\n    \n \n# -*- coding: utf-8 -*-\n", "content": "# -*- coding: utf-8 -*-\n\"\"\"\n    Flaskr\n    ~~~~~~\n\n    A microblog example application written as Flask tutorial with\n    Flask and sqlite3.\n\n    :copyright: \u00a9 2010 by the Pallets team.\n    :license: BSD, see LICENSE for more details.\n\"\"\"\n\nfrom sqlite3 import dbapi2 as sqlite3\nfrom flask import Blueprint, request, session, g, redirect, url_for, abort, \\\n     render_template, flash, current_app\n\n\n# create our blueprint :)\nbp = Blueprint('flaskr', __name__)\n\n\ndef connect_db():\n    \"\"\"Connects to the specific database.\"\"\"\n    rv = sqlite3.connect(current_app.config['DATABASE'])\n    rv.row_factory = sqlite3.Row\n    return rv\n\n\ndef init_db():\n    \"\"\"Initializes the database.\"\"\"\n    db = get_db()\n    with current_app.open_resource('schema.sql', mode='r') as f:\n        db.cursor().executescript(f.read())\n    db.commit()\n\n\ndef get_db():\n    \"\"\"Opens a new database connection if there is none yet for the\n    current application context.\n    \"\"\"\n    if not hasattr(g, 'sqlite_db'):\n        g.sqlite_db = connect_db()\n    return g.sqlite_db\n\n\n@bp.route('/')\ndef show_entries():\n    db = get_db()\n    cur = db.execute('select title, text from entries order by id desc')\n    entries = cur.fetchall()\n    return render_template('show_entries.html', entries=entries)\n\n\n@bp.route('/add', methods=['POST'])\ndef add_entry():\n    if not session.get('logged_in'):\n        abort(401)\n    db = get_db()\n    db.execute('insert into entries (title, text) values (?, ?)',\n               [request.form['title'], request.form['text']])\n    db.commit()\n    flash('New entry was successfully posted')\n    return redirect(url_for('flaskr.show_entries'))\n\n\n@bp.route('/login', methods=['GET', 'POST'])\ndef login():\n    error = None\n    if request.method == 'POST':\n        if request.form['username'] != current_app.config['USERNAME']:\n            error = 'Invalid username'\n        elif request.form['password'] != current_app.config['PASSWORD']:\n            error = 'Invalid password'\n        else:\n            session['logged_in'] = True\n            flash('You were logged in')\n            return redirect(url_for('flaskr.show_entries'))\n    return render_template('login.html', error=error)\n\n\n@bp.route('/logout')\ndef logout():\n    session.pop('logged_in', None)\n    flash('You were logged out')\n    return redirect(url_for('flaskr.show_entries'))\n", "description": "The Python micro framework for building web applications.", "file_name": "flaskr.py", "language": "Python", "project_name": "flask", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pallets_flask/pallets-flask-a2ea186/examples/flaskr/flaskr/blueprints/flaskr.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:52:03Z", "url": "https://github.com/pallets/flask", "wiki": false}
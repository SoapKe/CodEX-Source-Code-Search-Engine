{"author": "nvbn", "code": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import for_app, eager, get_closest, cache\n\nregex = re.compile(r'Warning: Task \"(.*)\" not found.')\n\n\n@for_app('grunt')\ndef match(command):\n    return regex.findall(command.output)\n\n\n@cache('Gruntfile.js')\n@eager\ndef _get_all_tasks():\n    proc = Popen(['grunt', '--help'], stdout=PIPE)\n    should_yield = False\n    for line in proc.stdout.readlines():\n        line = line.decode().strip()\n\n        if 'Available tasks' in line:\n            should_yield = True\n            continue\n\n        if should_yield and not line:\n            return\n\n        if '  ' in line:\n            yield line.split(' ')[0]\n\n\ndef get_new_command(command):\n    misspelled_task = regex.findall(command.output)[0].split(':')[0]\n    tasks = _get_all_tasks()\n    fixed = get_closest(misspelled_task, tasks)\n    return command.script.replace(' {}'.format(misspelled_task),\n                                  ' {}'.format(fixed))\n", "comments": "", "content": "import re\nfrom subprocess import Popen, PIPE\nfrom thefuck.utils import for_app, eager, get_closest, cache\n\nregex = re.compile(r'Warning: Task \"(.*)\" not found.')\n\n\n@for_app('grunt')\ndef match(command):\n    return regex.findall(command.output)\n\n\n@cache('Gruntfile.js')\n@eager\ndef _get_all_tasks():\n    proc = Popen(['grunt', '--help'], stdout=PIPE)\n    should_yield = False\n    for line in proc.stdout.readlines():\n        line = line.decode().strip()\n\n        if 'Available tasks' in line:\n            should_yield = True\n            continue\n\n        if should_yield and not line:\n            return\n\n        if '  ' in line:\n            yield line.split(' ')[0]\n\n\ndef get_new_command(command):\n    misspelled_task = regex.findall(command.output)[0].split(':')[0]\n    tasks = _get_all_tasks()\n    fixed = get_closest(misspelled_task, tasks)\n    return command.script.replace(' {}'.format(misspelled_task),\n                                  ' {}'.format(fixed))\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "grunt_task_not_found.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/grunt_task_not_found.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "getsentry", "code": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nimport os\nimport six\n\nfrom sentry.testutils import CliTestCase\nfrom sentry.runner.commands.init import init\n\n\nclass InitTest(CliTestCase):\n    command = init\n\n    def test_simple(self):\n        with self.runner.isolated_filesystem():\n            rv = self.invoke('config')\n            assert rv.exit_code == 0, rv.output\n            contents = os.listdir('config')\n            assert set(contents) == {'sentry.conf.py', 'config.yml'}\n\n            \n            ctx = {'__file__': 'sentry.conf.py'}\n            with open('config/sentry.conf.py') as fp:\n                six.exec_(fp.read(), ctx)\n            assert 'DEBUG' in ctx\n\n            \n            from sentry.utils.yaml import safe_load\n            with open('config/config.yml', 'rb') as fp:\n                ctx = safe_load(fp)\n            assert 'system.secret-key' in ctx\n\n    def test_no_directory(self):\n        rv = self.invoke('sentry.conf.py')\n        assert rv.exit_code != 0, rv.output\n", "comments": "      coding  utf 8        make sure python file valid    make sure yaml file valid ", "content": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nimport os\nimport six\n\nfrom sentry.testutils import CliTestCase\nfrom sentry.runner.commands.init import init\n\n\nclass InitTest(CliTestCase):\n    command = init\n\n    def test_simple(self):\n        with self.runner.isolated_filesystem():\n            rv = self.invoke('config')\n            assert rv.exit_code == 0, rv.output\n            contents = os.listdir('config')\n            assert set(contents) == {'sentry.conf.py', 'config.yml'}\n\n            # Make sure the python file is valid\n            ctx = {'__file__': 'sentry.conf.py'}\n            with open('config/sentry.conf.py') as fp:\n                six.exec_(fp.read(), ctx)\n            assert 'DEBUG' in ctx\n\n            # Make sure the yaml file is valid\n            from sentry.utils.yaml import safe_load\n            with open('config/config.yml', 'rb') as fp:\n                ctx = safe_load(fp)\n            assert 'system.secret-key' in ctx\n\n    def test_no_directory(self):\n        rv = self.invoke('sentry.conf.py')\n        assert rv.exit_code != 0, rv.output\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_init.py", "id": "dd361e33c88d31ec37bb55d4efcc5bc3", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/runner/commands/test_init.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.grep_arguments_order import get_new_command, match\nfrom thefuck.types import Command\n\noutput = 'grep: {}: No such file or directory'.format\n\n\n@pytest.fixture(autouse=True)\ndef os_path(monkeypatch):\n    monkeypatch.setattr('os.path.isfile', lambda x: not x.startswith('-'))\n\n\n@pytest.mark.parametrize('script, file', [\n    ('grep test.py test', 'test'),\n    ('grep -lir . test', 'test'),\n    ('egrep test.py test', 'test'),\n    ('egrep -lir . test', 'test')])\ndef test_match(script, file):\n    assert match(Command(script, output(file)))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('cat test.py', output('test')),\n    ('grep test test.py', ''),\n    ('grep -lir test .', ''),\n    ('egrep test test.py', ''),\n    ('egrep -lir test .', '')])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output, result', [\n    ('grep test.py test', output('test'), 'grep test test.py'),\n    ('grep -lir . test', output('test'), 'grep -lir test .'),\n    ('grep . test -lir', output('test'), 'grep test -lir .'),\n    ('egrep test.py test', output('test'), 'egrep test test.py'),\n    ('egrep -lir . test', output('test'), 'egrep -lir test .'),\n    ('egrep . test -lir', output('test'), 'egrep test -lir .')])\ndef test_get_new_command(script, output, result):\n    assert get_new_command(Command(script, output)) == result\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.grep_arguments_order import get_new_command, match\nfrom thefuck.types import Command\n\noutput = 'grep: {}: No such file or directory'.format\n\n\n@pytest.fixture(autouse=True)\ndef os_path(monkeypatch):\n    monkeypatch.setattr('os.path.isfile', lambda x: not x.startswith('-'))\n\n\n@pytest.mark.parametrize('script, file', [\n    ('grep test.py test', 'test'),\n    ('grep -lir . test', 'test'),\n    ('egrep test.py test', 'test'),\n    ('egrep -lir . test', 'test')])\ndef test_match(script, file):\n    assert match(Command(script, output(file)))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('cat test.py', output('test')),\n    ('grep test test.py', ''),\n    ('grep -lir test .', ''),\n    ('egrep test test.py', ''),\n    ('egrep -lir test .', '')])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output, result', [\n    ('grep test.py test', output('test'), 'grep test test.py'),\n    ('grep -lir . test', output('test'), 'grep -lir test .'),\n    ('grep . test -lir', output('test'), 'grep test -lir .'),\n    ('egrep test.py test', output('test'), 'egrep test test.py'),\n    ('egrep -lir . test', output('test'), 'egrep -lir test .'),\n    ('egrep . test -lir', output('test'), 'egrep test -lir .')])\ndef test_get_new_command(script, output, result):\n    assert get_new_command(Command(script, output)) == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_grep_arguments_order.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_grep_arguments_order.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
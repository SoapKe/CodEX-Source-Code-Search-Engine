{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: cl_license\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Install licenses for Cumulus Linux\ndeprecated:\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  removed_in: \"2.5\"\n  alternative: Use M(nclu) instead.\ndescription:\n    - Installs a Cumulus Linux license. The module reports no change of status\n      when a license is installed.\n      For more details go the Cumulus Linux License Documentation at\n      U(http://docs.cumulusnetwork.com) and the Licensing KB Site at\n      U(https://support.cumulusnetworks.com/hc/en-us/sections/200507688)\nnotes:\n    - To activate a license for the FIRST time, the switchd service must be\n      restarted. This action is disruptive. The license renewal process occurs\n      via the Cumulus Networks Customer Portal -\n      U(http://customers.cumulusnetworks.com).\n    - A non-EULA license is REQUIRED for automation. Manually install the\n      license on a test switch, using the command \"cl-license -i <license_file>\"\n      to confirm the license is a Non-EULA license.\n      See EXAMPLES, for the proper way to issue this notify action.\noptions:\n    src:\n        description:\n            - The full path to the license. Can be local path or HTTP URL.\n        required: true\n    force:\n        description:\n            - Force installation of a license. Typically not needed.\n              It is recommended to manually run this command via the ansible\n              command. A reload of switchd is not required. Running the force\n              option in a playbook will break the idempotent state machine of\n              the module and cause the switchd notification to kick in all the\n              time, causing a disruption.\n        choices:\n            - yes\n            - no\n\n'''\nEXAMPLES = '''\n\n\n- hosts: all\n  tasks:\n    - name: install license using http url\n      cl_license:\n        src: http://10.1.1.1/license.txt\n      notify: restart switchd\n\n    - name: Triggers switchd to be restarted right away, before play, or role\n            is over. This is desired behaviour\n      meta: flush_handlers\n\n    - name: Configure interfaces\n      template:\n        src: interfaces.j2\n        dest: /etc/network/interfaces\n      notify: restart networking\n\n  handlers:\n   - name: restart switchd\n     service:\n      name: switchd\n      state: restarted\n   - name: restart networking\n     service:\n      name: networking\n      state: reloaded\n\n\n\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "comments": "        module  cl license version added   2 1  author   cumulus networks ( cumulusnetworks)  short description  install licenses cumulus linux deprecated     the m(nclu) module designed easier use individuals new cumulus linux exposing nclu interface automatable way    removed   2 5    alternative  use m(nclu) instead  description        installs cumulus linux license  the module reports change status       license installed        for details go cumulus linux license documentation       u(http   docs cumulusnetwork com) licensing kb site       u(https   support cumulusnetworks com hc en us sections 200507688) notes        to activate license first time  switchd service must       restarted  this action disruptive  the license renewal process occurs       via cumulus networks customer portal         u(http   customers cumulusnetworks com)        a non eula license required automation  manually install       license test switch  using command  cl license   license file         confirm license non eula license        see examples  proper way issue notify action  options      src          description                the full path license  can local path http url          required  true     force          description                force installation license  typically needed                it recommended manually run command via ansible               command  a reload switchd required  running force               option playbook break idempotent state machine               module cause switchd notification kick               time  causing disruption          choices                yes                    examples         example playbook using cl license module manage licenses cumulus linux    hosts    tasks        name  install license using http url       cl license          src  http   10 1 1 1 license txt       notify  restart switchd        name  triggers switchd restarted right away  play  role              this desired behaviour       meta  flush handlers        name  configure interfaces       template          src  interfaces j2         dest   etc network interfaces       notify  restart networking    handlers       name  restart switchd      service        name  switchd       state  restarted      name  restart networking      service        name  networking       state  reloaded    force switches accept new license  typically needed   ansible  cl license   src  http   10 1 1 1 new lic  force yes   u root      return       changed      description  whether interface changed     returned  changed     type  bool     sample  true msg      description  human readable report success failure     returned  always     type  string     sample   interface bond0 config updated          usr bin python        coding  utf 8        (c) 2016  cumulus networks  ce ceng cumulusnetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    example playbook using cl license module manage licenses cumulus linux    force switches accept new license  typically needed    ansible  cl license   src  http   10 1 1 1 new lic  force yes   u root ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: cl_license\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Install licenses for Cumulus Linux\ndeprecated:\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  removed_in: \"2.5\"\n  alternative: Use M(nclu) instead.\ndescription:\n    - Installs a Cumulus Linux license. The module reports no change of status\n      when a license is installed.\n      For more details go the Cumulus Linux License Documentation at\n      U(http://docs.cumulusnetwork.com) and the Licensing KB Site at\n      U(https://support.cumulusnetworks.com/hc/en-us/sections/200507688)\nnotes:\n    - To activate a license for the FIRST time, the switchd service must be\n      restarted. This action is disruptive. The license renewal process occurs\n      via the Cumulus Networks Customer Portal -\n      U(http://customers.cumulusnetworks.com).\n    - A non-EULA license is REQUIRED for automation. Manually install the\n      license on a test switch, using the command \"cl-license -i <license_file>\"\n      to confirm the license is a Non-EULA license.\n      See EXAMPLES, for the proper way to issue this notify action.\noptions:\n    src:\n        description:\n            - The full path to the license. Can be local path or HTTP URL.\n        required: true\n    force:\n        description:\n            - Force installation of a license. Typically not needed.\n              It is recommended to manually run this command via the ansible\n              command. A reload of switchd is not required. Running the force\n              option in a playbook will break the idempotent state machine of\n              the module and cause the switchd notification to kick in all the\n              time, causing a disruption.\n        choices:\n            - yes\n            - no\n\n'''\nEXAMPLES = '''\n# Example playbook using the cl_license module to manage licenses on Cumulus Linux\n\n- hosts: all\n  tasks:\n    - name: install license using http url\n      cl_license:\n        src: http://10.1.1.1/license.txt\n      notify: restart switchd\n\n    - name: Triggers switchd to be restarted right away, before play, or role\n            is over. This is desired behaviour\n      meta: flush_handlers\n\n    - name: Configure interfaces\n      template:\n        src: interfaces.j2\n        dest: /etc/network/interfaces\n      notify: restart networking\n\n  handlers:\n   - name: restart switchd\n     service:\n      name: switchd\n      state: restarted\n   - name: restart networking\n     service:\n      name: networking\n      state: reloaded\n\n# Force all switches to accept a new license. Typically not needed\n# ansible -m cl_license -a \"src='http://10.1.1.1/new_lic' force=yes\" -u root all\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "_cl_license.py", "id": "e9c2d0a8caae3d97f914c284c83dfdea", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/cumulus/_cl_license.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
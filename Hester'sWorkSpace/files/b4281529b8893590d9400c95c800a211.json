{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import unified_strdate\n\n\nclass StreetVoiceIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:.+?\\.)?streetvoice\\.com/[^/]+/songs/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://streetvoice.com/skippylu/songs/94440/',\n        'md5': '15974627fc01a29e492c98593c2fd472',\n        'info_dict': {\n            'id': '94440',\n            'ext': 'mp3',\n            'title': '\u8f38',\n            'description': 'Crispy\u8106\u6a02\u5718 - \u8f38',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 260,\n            'upload_date': '20091018',\n            'uploader': 'Crispy\u8106\u6a02\u5718',\n            'uploader_id': '627810',\n        }\n    }, {\n        'url': 'http://tw.streetvoice.com/skippylu/songs/94440/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        song_id = self._match_id(url)\n\n        song = self._download_json(\n            'https://streetvoice.com/api/v1/public/song/%s/' % song_id, song_id, data=b'')\n\n        title = song['name']\n        author = song['user']['nickname']\n\n        return {\n            'id': song_id,\n            'url': song['file'],\n            'title': title,\n            'description': '%s - %s' % (author, title),\n            'thumbnail': self._proto_relative_url(song.get('image'), 'http:'),\n            'duration': song.get('length'),\n            'upload_date': unified_strdate(song.get('created_at')),\n            'uploader': author,\n            'uploader_id': compat_str(song['user']['id']),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import unified_strdate\n\n\nclass StreetVoiceIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:.+?\\.)?streetvoice\\.com/[^/]+/songs/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://streetvoice.com/skippylu/songs/94440/',\n        'md5': '15974627fc01a29e492c98593c2fd472',\n        'info_dict': {\n            'id': '94440',\n            'ext': 'mp3',\n            'title': '\u8f38',\n            'description': 'Crispy\u8106\u6a02\u5718 - \u8f38',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 260,\n            'upload_date': '20091018',\n            'uploader': 'Crispy\u8106\u6a02\u5718',\n            'uploader_id': '627810',\n        }\n    }, {\n        'url': 'http://tw.streetvoice.com/skippylu/songs/94440/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        song_id = self._match_id(url)\n\n        song = self._download_json(\n            'https://streetvoice.com/api/v1/public/song/%s/' % song_id, song_id, data=b'')\n\n        title = song['name']\n        author = song['user']['nickname']\n\n        return {\n            'id': song_id,\n            'url': song['file'],\n            'title': title,\n            'description': '%s - %s' % (author, title),\n            'thumbnail': self._proto_relative_url(song.get('image'), 'http:'),\n            'duration': song.get('length'),\n            'upload_date': unified_strdate(song.get('created_at')),\n            'uploader': author,\n            'uploader_id': compat_str(song['user']['id']),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "streetvoice.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/streetvoice.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
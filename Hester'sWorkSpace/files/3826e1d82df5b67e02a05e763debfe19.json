{"author": "django", "code": "\"\"\"\nRegression tests for Django built-in views.\n\"\"\"\n\nfrom django.db import models\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        return '/authors/%s/' % self.id\n\n\nclass BaseArticle(models.Model):\n    \"\"\"\n    An abstract article Model so that we can create article models with and\n    without a get_absolute_url method (for create_update generic views tests).\n    \"\"\"\n    title = models.CharField(max_length=100)\n    slug = models.SlugField()\n    author = models.ForeignKey(Author, models.CASCADE)\n\n    class Meta:\n        abstract = True\n\n    def __str__(self):\n        return self.title\n\n\nclass Article(BaseArticle):\n    date_created = models.DateTimeField()\n\n\nclass UrlArticle(BaseArticle):\n    \"\"\"\n    An Article class with a get_absolute_url defined.\n    \"\"\"\n    date_created = models.DateTimeField()\n\n    def get_absolute_url(self):\n        return '/urlarticles/%s/' % self.slug\n    get_absolute_url.purge = True\n\n\nclass DateArticle(BaseArticle):\n    \"\"\"\n    An article Model with a DateField instead of DateTimeField,\n    for testing \n    \"\"\"\n    date_created = models.DateField()\n", "comments": "    regression tests django built views       django db import models   class author(models model)      name   models charfield(max length 100)      def   str  (self)          return self name      def get absolute url(self)          return   authors      self id   class basearticle(models model)              an abstract article model create article models     without get absolute url method (for create update generic views tests)              title   models charfield(max length 100)     slug   models slugfield()     author   models foreignkey(author  models cascade)      class meta          abstract   true      def   str  (self)          return self title   class article(basearticle)      date created   models datetimefield()   class urlarticle(basearticle)              an article class get absolute url defined              date created   models datetimefield()      def get absolute url(self)          return   urlarticles      self slug     get absolute url purge   true   class datearticle(basearticle)              an article model datefield instead datetimefield      testing  7602           7602 ", "content": "\"\"\"\nRegression tests for Django built-in views.\n\"\"\"\n\nfrom django.db import models\n\n\nclass Author(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        return '/authors/%s/' % self.id\n\n\nclass BaseArticle(models.Model):\n    \"\"\"\n    An abstract article Model so that we can create article models with and\n    without a get_absolute_url method (for create_update generic views tests).\n    \"\"\"\n    title = models.CharField(max_length=100)\n    slug = models.SlugField()\n    author = models.ForeignKey(Author, models.CASCADE)\n\n    class Meta:\n        abstract = True\n\n    def __str__(self):\n        return self.title\n\n\nclass Article(BaseArticle):\n    date_created = models.DateTimeField()\n\n\nclass UrlArticle(BaseArticle):\n    \"\"\"\n    An Article class with a get_absolute_url defined.\n    \"\"\"\n    date_created = models.DateTimeField()\n\n    def get_absolute_url(self):\n        return '/urlarticles/%s/' % self.slug\n    get_absolute_url.purge = True\n\n\nclass DateArticle(BaseArticle):\n    \"\"\"\n    An article Model with a DateField instead of DateTimeField,\n    for testing #7602\n    \"\"\"\n    date_created = models.DateField()\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "3826e1d82df5b67e02a05e763debfe19", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django-django/django-django-274e3e2/tests/view_tests/models.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:39:10Z", "url": "https://github.com/django/django", "wiki": false}
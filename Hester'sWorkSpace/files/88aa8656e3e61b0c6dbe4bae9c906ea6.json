{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.adb_unknown_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef output():\n    return \n\n\n@pytest.mark.parametrize('script', [\n    ('adb lgcat'),\n    ('adb puhs')])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', [\n    'git branch foo',\n    'abd push'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_command', [\n    ('adb puhs test.bin /sdcard/test.bin', 'adb push test.bin /sdcard/test.bin'),\n    ('adb -s 1111 logcta', 'adb -s 1111 logcat'),\n    ('adb -P 666 pulll /sdcard/test.bin', 'adb -P 666 pull /sdcard/test.bin'),\n    ('adb -d logcatt', 'adb -d logcat'),\n    ('adb -e reboott', 'adb -e reboot')])\ndef test_get_new_command(script, output, new_command):\n    assert get_new_command(Command(script, output)) == new_command\n", "comments": "Android Debug Bridge version 1.0.31\n\n -d                            - directs command to the only connected USB device\n                                 returns an error if more than one USB device is present.\n -e                            - directs command to the only running emulator.\n                                 returns an error if more than one emulator is running.\n -s <specific device>          - directs command to the device or emulator with the given\n                                 serial number or qualifier. Overrides ANDROID_SERIAL\n                                 environment variable.\n\n\n\n", "content": "import pytest\nfrom thefuck.rules.adb_unknown_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef output():\n    return '''Android Debug Bridge version 1.0.31\n\n -d                            - directs command to the only connected USB device\n                                 returns an error if more than one USB device is present.\n -e                            - directs command to the only running emulator.\n                                 returns an error if more than one emulator is running.\n -s <specific device>          - directs command to the device or emulator with the given\n                                 serial number or qualifier. Overrides ANDROID_SERIAL\n                                 environment variable.\n'''\n\n\n@pytest.mark.parametrize('script', [\n    ('adb lgcat'),\n    ('adb puhs')])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', [\n    'git branch foo',\n    'abd push'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, new_command', [\n    ('adb puhs test.bin /sdcard/test.bin', 'adb push test.bin /sdcard/test.bin'),\n    ('adb -s 1111 logcta', 'adb -s 1111 logcat'),\n    ('adb -P 666 pulll /sdcard/test.bin', 'adb -P 666 pull /sdcard/test.bin'),\n    ('adb -d logcatt', 'adb -d logcat'),\n    ('adb -e reboott', 'adb -e reboot')])\ndef test_get_new_command(script, output, new_command):\n    assert get_new_command(Command(script, output)) == new_command\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_adb_unknown_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_adb_unknown_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
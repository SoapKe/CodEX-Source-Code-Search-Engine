{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestProdThree(object):\n\n    def test_prod_three(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.max_prod_three, None)\n        assert_raises(ValueError, solution.max_prod_three, [1, 2])\n        assert_equal(solution.max_prod_three([5, -2, 3]), -30)\n        assert_equal(solution.max_prod_three([5, -2, 3, 1, -1, 4]), 60)\n        print('Success: test_prod_three')\n\n\ndef main():\n    test = TestProdThree()\n    test.test_prod_three()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestProdThree(object):\n\n    def test_prod_three(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.max_prod_three, None)\n        assert_raises(ValueError, solution.max_prod_three, [1, 2])\n        assert_equal(solution.max_prod_three([5, -2, 3]), -30)\n        assert_equal(solution.max_prod_three([5, -2, 3, 1, -1, 4]), 60)\n        print('Success: test_prod_three')\n\n\ndef main():\n    test = TestProdThree()\n    test.test_prod_three()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_prod_three.py", "id": "9ed6bda8db9020b255268fda39ccc7e8", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/online_judges/prod_three/test_prod_three.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
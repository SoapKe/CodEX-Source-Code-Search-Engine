{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: hpilo_boot\nversion_added: \"2.3\"\nauthor: Dag Wieers (@dagwieers)\nshort_description: Boot system using specific media through HP iLO interface\ndescription:\n- \"This module boots a system through its HP iLO interface. The boot media\n  can be one of: cdrom, floppy, hdd, network or usb.\"\n- This module requires the hpilo python module.\noptions:\n  host:\n    description:\n    - The HP iLO hostname/address that is linked to the physical system.\n    required: true\n  login:\n    description:\n    - The login name to authenticate to the HP iLO interface.\n    default: Administrator\n  password:\n    description:\n    - The password to authenticate to the HP iLO interface.\n    default: admin\n  media:\n    description:\n    - The boot media to boot the system from\n    default: network\n    choices: [ \"cdrom\", \"floppy\", \"hdd\", \"network\", \"normal\", \"usb\" ]\n  image:\n    description:\n    - The URL of a cdrom, floppy or usb boot media image.\n      protocol://username:password@hostname:port/filename\n    - protocol is either 'http' or 'https'\n    - username:password is optional\n    - port is optional\n  state:\n    description:\n    - The state of the boot media.\n    - \"no_boot: Do not boot from the device\"\n    - \"boot_once: Boot from the device once and then notthereafter\"\n    - \"boot_always: Boot from the device each time the serveris rebooted\"\n    - \"connect: Connect the virtual media device and set to boot_always\"\n    - \"disconnect: Disconnects the virtual media device and set to no_boot\"\n    - \"poweroff: Power off the server\"\n    default: boot_once\n    choices: [ \"boot_always\", \"boot_once\", \"connect\", \"disconnect\", \"no_boot\", \"poweroff\" ]\n  force:\n    description:\n    - Whether to force a reboot (even when the system is already booted).\n    - As a safeguard, without force, hpilo_boot will refuse to reboot a server that is already running.\n    default: no\n    choices: [ \"yes\", \"no\" ]\n  ssl_version:\n    description:\n      - Change the ssl_version used.\n    default: TLSv1\n    choices: [ \"SSLv3\", \"SSLv23\", \"TLSv1\", \"TLSv1_1\", \"TLSv1_2\" ]\n    version_added: '2.4'\nrequirements:\n- hpilo\nnotes:\n- To use a USB key image you need to specify floppy as boot media.\n- This module ought to be run from a system that can access the HP iLO\n  interface directly, either by using C(local_action) or using C(delegate_to).\n'''\n\nEXAMPLES = r'''\n- name: Task to boot a system using an ISO from an HP iLO interface only if the system is an HP server\n  hpilo_boot:\n    host: YOUR_ILO_ADDRESS\n    login: YOUR_ILO_LOGIN\n    password: YOUR_ILO_PASSWORD\n    media: cdrom\n    image: http://some-web-server/iso/boot.iso\n  when: cmdb_hwmodel.startswith('HP ')\n  delegate_to: localhost\n\n- name: Power off a server\n  hpilo_boot:\n    host: YOUR_ILO_HOST\n    login: YOUR_ILO_LOGIN\n    password: YOUR_ILO_PASSWORD\n    state: poweroff\n  delegate_to: localhost\n'''\n\nRETURN = '''\n\n'''\n\nimport time\nimport warnings\n\ntry:\n    import hpilo\n    HAS_HPILO = True\nexcept ImportError:\n    HAS_HPILO = False\n\nfrom ansible.module_utils.basic import AnsibleModule\n\n\n\nwarnings.simplefilter('ignore')\n\n\ndef main():\n\n    module = AnsibleModule(\n        argument_spec=dict(\n            host=dict(type='str', required=True),\n            login=dict(type='str', default='Administrator'),\n            password=dict(type='str', default='admin', no_log=True),\n            media=dict(type='str', choices=['cdrom', 'floppy', 'rbsu', 'hdd', 'network', 'normal', 'usb']),\n            image=dict(type='str'),\n            state=dict(type='str', default='boot_once', choices=['boot_always', 'boot_once', 'connect', 'disconnect', 'no_boot', 'poweroff']),\n            force=dict(type='bool', default=False),\n            ssl_version=dict(type='str', default='TLSv1', choices=['SSLv3', 'SSLv23', 'TLSv1', 'TLSv1_1', 'TLSv1_2']),\n        )\n    )\n\n    if not HAS_HPILO:\n        module.fail_json(msg='The hpilo python module is required')\n\n    host = module.params['host']\n    login = module.params['login']\n    password = module.params['password']\n    media = module.params['media']\n    image = module.params['image']\n    state = module.params['state']\n    force = module.params['force']\n    ssl_version = getattr(hpilo.ssl, 'PROTOCOL_' + module.params.get('ssl_version').upper().replace('V', 'v'))\n\n    ilo = hpilo.Ilo(host, login=login, password=password, ssl_version=ssl_version)\n    changed = False\n    status = {}\n    power_status = 'UNKNOWN'\n\n    if media and state in ('boot_always', 'boot_once', 'connect', 'disconnect', 'no_boot'):\n\n        \n        try:\n            ilo.set_one_time_boot(media)\n        except hpilo.IloError:\n            time.sleep(60)\n            ilo.set_one_time_boot(media)\n\n        \n        if image:\n            ilo.insert_virtual_media(media, image)\n            changed = True\n\n        if media == 'cdrom':\n            ilo.set_vm_status('cdrom', state, True)\n            status = ilo.get_vm_status()\n            changed = True\n        elif media in ('floppy', 'usb'):\n            ilo.set_vf_status(state, True)\n            status = ilo.get_vf_status()\n            changed = True\n\n    \n    if state in ('boot_once', 'boot_always') or force:\n\n        power_status = ilo.get_host_power_status()\n\n        if not force and power_status == 'ON':\n            module.fail_json(msg='HP iLO (%s) reports that the server is already powered on !' % host)\n\n        if power_status == 'ON':\n            ilo.warm_boot_server()\n()\n            changed = True\n        else:\n            ilo.press_pwr_btn()\n()\n#            ilo.set_host_power(host_power=True)\n            changed = True\n\n    elif state in ('poweroff'):\n\n        power_status = ilo.get_host_power_status()\n\n        if not power_status == 'OFF':\n            ilo.hold_pwr_btn()\n#            ilo.set_host_power(host_power=False)\n            changed = True\n\n    module.exit_json(changed=changed, power=power_status, **status)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  hpilo boot version added   2 3  author  dag wieers ( dagwieers) short description  boot system using specific media hp ilo interface description     this module boots system hp ilo interface  the boot media   one  cdrom  floppy  hdd  network usb     this module requires hpilo python module  options    host      description        the hp ilo hostname address linked physical system      required  true   login      description        the login name authenticate hp ilo interface      default  administrator   password      description        the password authenticate hp ilo interface      default  admin   media      description        the boot media boot system     default  network     choices     cdrom    floppy    hdd    network    normal    usb      image      description        the url cdrom  floppy usb boot media image        protocol   username password hostname port filename       protocol either  http   https        username password optional       port optional   state      description        the state boot media         boot  do boot device         boot  boot device notthereafter         boot always  boot device time serveris rebooted         connect  connect virtual media device set boot always         disconnect  disconnects virtual media device set boot         poweroff  power server      default  boot     choices     boot always    boot    connect    disconnect    boot    poweroff      force      description        whether force reboot (even system already booted)        as safeguard  without force  hpilo boot refuse reboot server already running      default      choices     yes         ssl version      description          change ssl version used      default  tlsv1     choices     sslv3    sslv23    tlsv1    tlsv1 1    tlsv1 2        version added   2 4  requirements    hpilo notes    to use usb key image need specify floppy boot media    this module ought run system access hp ilo   interface directly  either using c(local action) using c(delegate to)       examples   r      name  task boot system using iso hp ilo interface system hp server   hpilo boot      host  your ilo address     login  your ilo login     password  your ilo password     media  cdrom     image  http   web server iso boot iso    cmdb hwmodel startswith( hp  )   delegate  localhost    name  power server   hpilo boot      host  your ilo host     login  your ilo login     password  your ilo password     state  poweroff   delegate  localhost      return         default return values         usr bin python        coding  utf 8        copyright 2012 dag wieers  dag wieers com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    default return values    suppress warnings hpilo    workaround  error communicating ilo  problem manipulating ev    todo  verify image url exists works    only perform boot state boot boot always  case want force reboot               ilo cold boot server()               ilo reset server()               ilo set host power(host power true)               ilo set host power(host power false) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# Copyright 2012 Dag Wieers <dag@wieers.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: hpilo_boot\nversion_added: \"2.3\"\nauthor: Dag Wieers (@dagwieers)\nshort_description: Boot system using specific media through HP iLO interface\ndescription:\n- \"This module boots a system through its HP iLO interface. The boot media\n  can be one of: cdrom, floppy, hdd, network or usb.\"\n- This module requires the hpilo python module.\noptions:\n  host:\n    description:\n    - The HP iLO hostname/address that is linked to the physical system.\n    required: true\n  login:\n    description:\n    - The login name to authenticate to the HP iLO interface.\n    default: Administrator\n  password:\n    description:\n    - The password to authenticate to the HP iLO interface.\n    default: admin\n  media:\n    description:\n    - The boot media to boot the system from\n    default: network\n    choices: [ \"cdrom\", \"floppy\", \"hdd\", \"network\", \"normal\", \"usb\" ]\n  image:\n    description:\n    - The URL of a cdrom, floppy or usb boot media image.\n      protocol://username:password@hostname:port/filename\n    - protocol is either 'http' or 'https'\n    - username:password is optional\n    - port is optional\n  state:\n    description:\n    - The state of the boot media.\n    - \"no_boot: Do not boot from the device\"\n    - \"boot_once: Boot from the device once and then notthereafter\"\n    - \"boot_always: Boot from the device each time the serveris rebooted\"\n    - \"connect: Connect the virtual media device and set to boot_always\"\n    - \"disconnect: Disconnects the virtual media device and set to no_boot\"\n    - \"poweroff: Power off the server\"\n    default: boot_once\n    choices: [ \"boot_always\", \"boot_once\", \"connect\", \"disconnect\", \"no_boot\", \"poweroff\" ]\n  force:\n    description:\n    - Whether to force a reboot (even when the system is already booted).\n    - As a safeguard, without force, hpilo_boot will refuse to reboot a server that is already running.\n    default: no\n    choices: [ \"yes\", \"no\" ]\n  ssl_version:\n    description:\n      - Change the ssl_version used.\n    default: TLSv1\n    choices: [ \"SSLv3\", \"SSLv23\", \"TLSv1\", \"TLSv1_1\", \"TLSv1_2\" ]\n    version_added: '2.4'\nrequirements:\n- hpilo\nnotes:\n- To use a USB key image you need to specify floppy as boot media.\n- This module ought to be run from a system that can access the HP iLO\n  interface directly, either by using C(local_action) or using C(delegate_to).\n'''\n\nEXAMPLES = r'''\n- name: Task to boot a system using an ISO from an HP iLO interface only if the system is an HP server\n  hpilo_boot:\n    host: YOUR_ILO_ADDRESS\n    login: YOUR_ILO_LOGIN\n    password: YOUR_ILO_PASSWORD\n    media: cdrom\n    image: http://some-web-server/iso/boot.iso\n  when: cmdb_hwmodel.startswith('HP ')\n  delegate_to: localhost\n\n- name: Power off a server\n  hpilo_boot:\n    host: YOUR_ILO_HOST\n    login: YOUR_ILO_LOGIN\n    password: YOUR_ILO_PASSWORD\n    state: poweroff\n  delegate_to: localhost\n'''\n\nRETURN = '''\n# Default return values\n'''\n\nimport time\nimport warnings\n\ntry:\n    import hpilo\n    HAS_HPILO = True\nexcept ImportError:\n    HAS_HPILO = False\n\nfrom ansible.module_utils.basic import AnsibleModule\n\n\n# Suppress warnings from hpilo\nwarnings.simplefilter('ignore')\n\n\ndef main():\n\n    module = AnsibleModule(\n        argument_spec=dict(\n            host=dict(type='str', required=True),\n            login=dict(type='str', default='Administrator'),\n            password=dict(type='str', default='admin', no_log=True),\n            media=dict(type='str', choices=['cdrom', 'floppy', 'rbsu', 'hdd', 'network', 'normal', 'usb']),\n            image=dict(type='str'),\n            state=dict(type='str', default='boot_once', choices=['boot_always', 'boot_once', 'connect', 'disconnect', 'no_boot', 'poweroff']),\n            force=dict(type='bool', default=False),\n            ssl_version=dict(type='str', default='TLSv1', choices=['SSLv3', 'SSLv23', 'TLSv1', 'TLSv1_1', 'TLSv1_2']),\n        )\n    )\n\n    if not HAS_HPILO:\n        module.fail_json(msg='The hpilo python module is required')\n\n    host = module.params['host']\n    login = module.params['login']\n    password = module.params['password']\n    media = module.params['media']\n    image = module.params['image']\n    state = module.params['state']\n    force = module.params['force']\n    ssl_version = getattr(hpilo.ssl, 'PROTOCOL_' + module.params.get('ssl_version').upper().replace('V', 'v'))\n\n    ilo = hpilo.Ilo(host, login=login, password=password, ssl_version=ssl_version)\n    changed = False\n    status = {}\n    power_status = 'UNKNOWN'\n\n    if media and state in ('boot_always', 'boot_once', 'connect', 'disconnect', 'no_boot'):\n\n        # Workaround for: Error communicating with iLO: Problem manipulating EV\n        try:\n            ilo.set_one_time_boot(media)\n        except hpilo.IloError:\n            time.sleep(60)\n            ilo.set_one_time_boot(media)\n\n        # TODO: Verify if image URL exists/works\n        if image:\n            ilo.insert_virtual_media(media, image)\n            changed = True\n\n        if media == 'cdrom':\n            ilo.set_vm_status('cdrom', state, True)\n            status = ilo.get_vm_status()\n            changed = True\n        elif media in ('floppy', 'usb'):\n            ilo.set_vf_status(state, True)\n            status = ilo.get_vf_status()\n            changed = True\n\n    # Only perform a boot when state is boot_once or boot_always, or in case we want to force a reboot\n    if state in ('boot_once', 'boot_always') or force:\n\n        power_status = ilo.get_host_power_status()\n\n        if not force and power_status == 'ON':\n            module.fail_json(msg='HP iLO (%s) reports that the server is already powered on !' % host)\n\n        if power_status == 'ON':\n            ilo.warm_boot_server()\n#            ilo.cold_boot_server()\n            changed = True\n        else:\n            ilo.press_pwr_btn()\n#            ilo.reset_server()\n#            ilo.set_host_power(host_power=True)\n            changed = True\n\n    elif state in ('poweroff'):\n\n        power_status = ilo.get_host_power_status()\n\n        if not power_status == 'OFF':\n            ilo.hold_pwr_btn()\n#            ilo.set_host_power(host_power=False)\n            changed = True\n\n    module.exit_json(changed=changed, power=power_status, **status)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "hpilo_boot.py", "id": "8c39a63fb2ce56d2d93894fa6a20161a", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/remote_management/hpilo/hpilo_boot.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
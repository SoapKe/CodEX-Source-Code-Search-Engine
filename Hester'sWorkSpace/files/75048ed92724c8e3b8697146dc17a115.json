{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: cl_bridge\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Configures a bridge port on Cumulus Linux\ndeprecated:\n  removed_in: \"2.5\"\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  alternative: Use M(nclu) instead.\ndescription:\n    - Configures a bridge interface on Cumulus Linux To configure a bond port\n      use the cl_bond module. To configure any other type of interface use the\n      cl_interface module. Follow the guidelines for bridging found in the\n      Cumulus User Guide at U(http://docs.cumulusnetworks.com)\noptions:\n    name:\n        description:\n            - Name of the interface.\n        required: true\n    alias_name:\n        description:\n            - Description of the port.\n    ipv4:\n        description:\n            - List of IPv4 addresses to configure on the interface.\n              In the form I(X.X.X.X/YY).\n    ipv6:\n        description:\n            - List of IPv6 addresses to configure on the interface.\n              In the form I(X:X:X::X/YYY).\n    addr_method:\n        description:\n            - Configures the port to use DHCP.\n              To enable this feature use the option I(dhcp).\n        choices: ['dhcp']\n    mtu:\n        description:\n            - Set MTU. Configure Jumbo Frame by setting MTU to I(9000).\n    virtual_ip:\n        description:\n            - Define IPv4 virtual IP used by the Cumulus Linux VRR feature.\n    virtual_mac:\n        description:\n            - Define Ethernet mac associated with Cumulus Linux VRR feature.\n    vids:\n        description:\n            - In vlan-aware mode, lists VLANs defined under the interface.\n    pvid:\n        description:\n            - In vlan-aware mode, defines vlan that is the untagged vlan.\n    stp:\n        description:\n            - Enables spanning tree Protocol. As of Cumulus Linux 2.5 the default\n              bridging mode, only per vlan RSTP or 802.1d is supported. For the\n              vlan aware mode, only common instance STP is supported\n        default: 'yes'\n        choices: ['yes', 'no']\n    ports:\n        description:\n            - List of bridge members.\n        required: True\n    vlan_aware:\n        description:\n            - Enables vlan-aware mode.\n        choices: ['yes', 'no']\n    mstpctl_treeprio:\n        description:\n            - Set spanning tree root priority. Must be a multiple of 4096.\n    location:\n        description:\n            - Interface directory location.\n        default:\n            - '/etc/network/interfaces.d'\n\n\nrequirements: [ Alternate Debian network interface manager\nifupdown2 @ github.com/CumulusNetworks/ifupdown2 ]\nnotes:\n    - As this module writes the interface directory location, ensure that\n      ``/etc/network/interfaces`` has a 'source /etc/network/interfaces.d/\\*' or\n      whatever path is mentioned in the ``location`` attribute.\n\n    - For the config to be activated, i.e installed in the kernel,\n      \"service networking reload\" needs be be executed. See EXAMPLES section.\n'''\n\nEXAMPLES = '''\n# Options ['virtual_mac', 'virtual_ip'] are required together\n\n- cl_bridge:\n    name: br0\n    ports: 'swp1-12'\n    vlan_aware: 'yes'\n  notify: reload networking\n\n\n- cl_bridge:\n    name: bridge\n    ports: 'swp1-12'\n    vlan_aware: 'yes'\n    vids: '1-100'\n  notify: reload networking\n\n\n\n\n- cl_bridge:\n    name: \"{{ item.key }}\"\n    ports: \"{{ item.value.ports }}\"\n    vlan_aware: \"{{ item.value.vlan_aware|default(omit) }}\"\n    ipv4:  \"{{ item.value.ipv4|default(omit) }}\"\n    ipv6: \"{{ item.value.ipv6|default(omit) }}\"\n    alias_name: \"{{ item.value.alias_name|default(omit) }}\"\n    addr_method: \"{{ item.value.addr_method|default(omit) }}\"\n    mtu: \"{{ item.value.mtu|default(omit) }}\"\n    vids: \"{{ item.value.vids|default(omit) }}\"\n    virtual_ip: \"{{ item.value.virtual_ip|default(omit) }}\"\n    virtual_mac: \"{{ item.value.virtual_mac|default(omit) }}\"\n    mstpctl_treeprio: \"{{ item.value.mstpctl_treeprio|default(omit) }}\"\n  with_dict: \"{{ cl_bridges }}\"\n  notify: reload networking\n\n\n\n---\ncl_bridge:\n  br0:\n    alias_name: 'vlan aware bridge'\n    ports: ['swp1', 'swp3']\n    vlan_aware: true\n    vids: ['1-100']\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "comments": "        module  cl bridge version added   2 1  author   cumulus networks ( cumulusnetworks)  short description  configures bridge port cumulus linux deprecated    removed   2 5     the m(nclu) module designed easier use individuals new cumulus linux exposing nclu interface automatable way    alternative  use m(nclu) instead  description        configures bridge interface cumulus linux to configure bond port       use cl bond module  to configure type interface use       cl interface module  follow guidelines bridging found       cumulus user guide u(http   docs cumulusnetworks com) options      name          description                name interface          required  true     alias name          description                description port      ipv4          description                list ipv4 addresses configure interface                in form i(x x x x yy)      ipv6          description                list ipv6 addresses configure interface                in form i(x x x  x yyy)      addr method          description                configures port use dhcp                to enable feature use option i(dhcp)          choices    dhcp       mtu          description                set mtu  configure jumbo frame setting mtu i(9000)      virtual ip          description                define ipv4 virtual ip used cumulus linux vrr feature      virtual mac          description                define ethernet mac associated cumulus linux vrr feature      vids          description                in vlan aware mode  lists vlans defined interface      pvid          description                in vlan aware mode  defines vlan untagged vlan      stp          description                enables spanning tree protocol  as cumulus linux 2 5 default               bridging mode  per vlan rstp 802 1d supported  for               vlan aware mode  common instance stp supported         default   yes          choices    yes          ports          description                list bridge members          required  true     vlan aware          description                enables vlan aware mode          choices    yes          mstpctl treeprio          description                set spanning tree root priority  must multiple 4096      location          description                interface directory location          default                  etc network interfaces    requirements    alternate debian network interface manager ifupdown2   github com cumulusnetworks ifupdown2   notes        as module writes interface directory location  ensure          etc network interfaces    source  etc network interfaces           whatever path mentioned   location   attribute         for config activated  e installed kernel         service networking reload  needs executed  see examples section       examples         options   virtual mac    virtual ip   required together   configure bridge vlan aware bridge    cl bridge      name  br0     ports   swp1 12      vlan aware   yes    notify  reload networking    configure bridge interface define default set vlans   cl bridge      name  bridge     ports   swp1 12      vlan aware   yes      vids   1 100    notify  reload networking    define cl bridge tasks file   write interface config variables file   options want    cl bridge      name      item key         ports      item value ports         vlan aware      item value vlan aware default(omit)         ipv4       item value ipv4 default(omit)         ipv6      item value ipv6 default(omit)         alias name      item value alias name default(omit)         addr method      item value addr method default(omit)         mtu      item value mtu default(omit)         vids      item value vids default(omit)         virtual ip      item value virtual ip default(omit)         virtual mac      item value virtual mac default(omit)         mstpctl treeprio      item value mstpctl treeprio default(omit)       dict      cl bridges       notify  reload networking    in vars file                    cl bridge    br0      alias name   vlan aware bridge      ports    swp1    swp3       vlan aware  true     vids    1 100        return       changed      description  whether interface changed     returned  changed     type  bool     sample  true msg      description  human readable report success failure     returned  always     type  string     sample   interface bond0 config updated          usr bin python        coding  utf 8        (c) 2016  cumulus networks  ce ceng cumulusnetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    options   virtual mac    virtual ip   required together    configure bridge vlan aware bridge     configure bridge interface define default set vlans    define cl bridge tasks file    write interface config variables file    options want     in vars file                 ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2016, Cumulus Networks <ce-ceng@cumulusnetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['deprecated'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = r'''\n---\nmodule: cl_bridge\nversion_added: \"2.1\"\nauthor: \"Cumulus Networks (@CumulusNetworks)\"\nshort_description: Configures a bridge port on Cumulus Linux\ndeprecated:\n  removed_in: \"2.5\"\n  why: The M(nclu) module is designed to be easier to use for individuals who are new to Cumulus Linux by exposing the NCLU interface in an automatable way.\n  alternative: Use M(nclu) instead.\ndescription:\n    - Configures a bridge interface on Cumulus Linux To configure a bond port\n      use the cl_bond module. To configure any other type of interface use the\n      cl_interface module. Follow the guidelines for bridging found in the\n      Cumulus User Guide at U(http://docs.cumulusnetworks.com)\noptions:\n    name:\n        description:\n            - Name of the interface.\n        required: true\n    alias_name:\n        description:\n            - Description of the port.\n    ipv4:\n        description:\n            - List of IPv4 addresses to configure on the interface.\n              In the form I(X.X.X.X/YY).\n    ipv6:\n        description:\n            - List of IPv6 addresses to configure on the interface.\n              In the form I(X:X:X::X/YYY).\n    addr_method:\n        description:\n            - Configures the port to use DHCP.\n              To enable this feature use the option I(dhcp).\n        choices: ['dhcp']\n    mtu:\n        description:\n            - Set MTU. Configure Jumbo Frame by setting MTU to I(9000).\n    virtual_ip:\n        description:\n            - Define IPv4 virtual IP used by the Cumulus Linux VRR feature.\n    virtual_mac:\n        description:\n            - Define Ethernet mac associated with Cumulus Linux VRR feature.\n    vids:\n        description:\n            - In vlan-aware mode, lists VLANs defined under the interface.\n    pvid:\n        description:\n            - In vlan-aware mode, defines vlan that is the untagged vlan.\n    stp:\n        description:\n            - Enables spanning tree Protocol. As of Cumulus Linux 2.5 the default\n              bridging mode, only per vlan RSTP or 802.1d is supported. For the\n              vlan aware mode, only common instance STP is supported\n        default: 'yes'\n        choices: ['yes', 'no']\n    ports:\n        description:\n            - List of bridge members.\n        required: True\n    vlan_aware:\n        description:\n            - Enables vlan-aware mode.\n        choices: ['yes', 'no']\n    mstpctl_treeprio:\n        description:\n            - Set spanning tree root priority. Must be a multiple of 4096.\n    location:\n        description:\n            - Interface directory location.\n        default:\n            - '/etc/network/interfaces.d'\n\n\nrequirements: [ Alternate Debian network interface manager\nifupdown2 @ github.com/CumulusNetworks/ifupdown2 ]\nnotes:\n    - As this module writes the interface directory location, ensure that\n      ``/etc/network/interfaces`` has a 'source /etc/network/interfaces.d/\\*' or\n      whatever path is mentioned in the ``location`` attribute.\n\n    - For the config to be activated, i.e installed in the kernel,\n      \"service networking reload\" needs be be executed. See EXAMPLES section.\n'''\n\nEXAMPLES = '''\n# Options ['virtual_mac', 'virtual_ip'] are required together\n# configure a bridge vlan aware bridge.\n- cl_bridge:\n    name: br0\n    ports: 'swp1-12'\n    vlan_aware: 'yes'\n  notify: reload networking\n\n# configure bridge interface to define a default set of vlans\n- cl_bridge:\n    name: bridge\n    ports: 'swp1-12'\n    vlan_aware: 'yes'\n    vids: '1-100'\n  notify: reload networking\n\n# define cl_bridge once in tasks file\n# then write interface config in variables file\n# with just the options you want.\n- cl_bridge:\n    name: \"{{ item.key }}\"\n    ports: \"{{ item.value.ports }}\"\n    vlan_aware: \"{{ item.value.vlan_aware|default(omit) }}\"\n    ipv4:  \"{{ item.value.ipv4|default(omit) }}\"\n    ipv6: \"{{ item.value.ipv6|default(omit) }}\"\n    alias_name: \"{{ item.value.alias_name|default(omit) }}\"\n    addr_method: \"{{ item.value.addr_method|default(omit) }}\"\n    mtu: \"{{ item.value.mtu|default(omit) }}\"\n    vids: \"{{ item.value.vids|default(omit) }}\"\n    virtual_ip: \"{{ item.value.virtual_ip|default(omit) }}\"\n    virtual_mac: \"{{ item.value.virtual_mac|default(omit) }}\"\n    mstpctl_treeprio: \"{{ item.value.mstpctl_treeprio|default(omit) }}\"\n  with_dict: \"{{ cl_bridges }}\"\n  notify: reload networking\n\n# In vars file\n# ============\n---\ncl_bridge:\n  br0:\n    alias_name: 'vlan aware bridge'\n    ports: ['swp1', 'swp3']\n    vlan_aware: true\n    vids: ['1-100']\n'''\n\nRETURN = '''\nchanged:\n    description: whether the interface was changed\n    returned: changed\n    type: bool\n    sample: True\nmsg:\n    description: human-readable report of success or failure\n    returned: always\n    type: string\n    sample: \"interface bond0 config updated\"\n'''\n\nfrom ansible.module_utils.common.removed import removed_module\n\nif __name__ == '__main__':\n    removed_module()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "_cl_bridge.py", "id": "75048ed92724c8e3b8697146dc17a115", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/cumulus/_cl_bridge.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
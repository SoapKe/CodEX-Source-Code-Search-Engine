{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass UFCTVIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ufc\\.tv/video/(?P<id>[^/]+)'\n    _TEST = {\n        'url': 'https://www.ufc.tv/video/ufc-219-countdown-full-episode',\n        'info_dict': {\n            'id': '34167',\n            'ext': 'mp4',\n            'title': 'UFC 219 Countdown: Full Episode',\n            'description': 'md5:26d4e8bf4665ae5878842d7050c3c646',\n            'timestamp': 1513962360,\n            'upload_date': '20171222',\n        },\n        'params': {\n            \n            'skip_download': True,\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        video_data = self._download_json(url, display_id, query={\n            'format': 'json',\n        })\n        video_id = str(video_data['id'])\n        title = video_data['name']\n        m3u8_url = self._download_json(\n            'https://www.ufc.tv/service/publishpoint', video_id, query={\n                'type': 'video',\n                'format': 'json',\n                'id': video_id,\n            }, headers={\n                'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0_1 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A402 Safari/604.1',\n            })['path']\n        m3u8_url = m3u8_url.replace('_iphone.', '.')\n        formats = self._extract_m3u8_formats(m3u8_url, video_id, 'mp4')\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': video_data.get('description'),\n            'duration': parse_duration(video_data.get('runtime')),\n            'timestamp': parse_iso8601(video_data.get('releaseDate')),\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass UFCTVIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ufc\\.tv/video/(?P<id>[^/]+)'\n    _TEST = {\n        'url': 'https://www.ufc.tv/video/ufc-219-countdown-full-episode',\n        'info_dict': {\n            'id': '34167',\n            'ext': 'mp4',\n            'title': 'UFC 219 Countdown: Full Episode',\n            'description': 'md5:26d4e8bf4665ae5878842d7050c3c646',\n            'timestamp': 1513962360,\n            'upload_date': '20171222',\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        video_data = self._download_json(url, display_id, query={\n            'format': 'json',\n        })\n        video_id = str(video_data['id'])\n        title = video_data['name']\n        m3u8_url = self._download_json(\n            'https://www.ufc.tv/service/publishpoint', video_id, query={\n                'type': 'video',\n                'format': 'json',\n                'id': video_id,\n            }, headers={\n                'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0_1 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A402 Safari/604.1',\n            })['path']\n        m3u8_url = m3u8_url.replace('_iphone.', '.')\n        formats = self._extract_m3u8_formats(m3u8_url, video_id, 'mp4')\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': video_data.get('description'),\n            'duration': parse_duration(video_data.get('runtime')),\n            'timestamp': parse_iso8601(video_data.get('releaseDate')),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "ufctv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/ufctv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
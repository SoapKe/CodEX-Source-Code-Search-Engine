{"author": "chiphuyen", "code": "\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL']='2'\n\nimport numpy as np\nimport tensorflow as tf\n\nN_SAMPLES = 1000\nNUM_THREADS = 4\n\n# create 1000 random samples, each is a 1D array from the normal distribution (10, 1)\ndata = 10 * np.random.randn(N_SAMPLES, 4) + 1 \n\ntarget = np.random.randint(0, 2, size=N_SAMPLES) \n\nqueue = tf.FIFOQueue(capacity=50, dtypes=[tf.float32, tf.int32], shapes=[[4], []])\n\nenqueue_op = queue.enqueue_many([data, target])\ndata_sample, label_sample = queue.dequeue()\n\n\n\n\nqr = tf.train.QueueRunner(queue, [enqueue_op] * NUM_THREADS)\nwith tf.Session() as sess:\n\t\n\tcoord = tf.train.Coordinator()\n\tenqueue_threads = qr.create_threads(sess, coord=coord, start=True)\n\ttry:\n\t\tfor step in range(100): \n\t\t\tif coord.should_stop():\n\t\t\t\tbreak\n\t\t\tdata_batch, label_batch = sess.run([data_sample, label_sample])\n\t\t\tprint(data_batch)\n\t\t\tprint(label_batch)\n\texcept Exception as e:\n\t\tcoord.request_stop(e)\n\tfinally:\n\t\tcoord.request_stop()\n\t\tcoord.join(enqueue_threads)", "comments": "    example demonstrate use queues author  chip huyen prepared class cs 20si   tensorflow deep learning research  cs20si stanford edu        generating simple data    create 1000 random samples  1d array normal distribution (10  1)    create 1000 random labels 0 1    create ops something data sample label sample    create num threads enqueue    create coordinator  launch queue runner threads     100 iterations ", "content": "\"\"\" Example to demonstrate how to use queues\nAuthor: Chip Huyen\nPrepared for the class CS 20SI: \"TensorFlow for Deep Learning Research\"\ncs20si.stanford.edu\n\"\"\"\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL']='2'\n\nimport numpy as np\nimport tensorflow as tf\n\nN_SAMPLES = 1000\nNUM_THREADS = 4\n# Generating some simple data\n# create 1000 random samples, each is a 1D array from the normal distribution (10, 1)\ndata = 10 * np.random.randn(N_SAMPLES, 4) + 1 \n# create 1000 random labels of 0 and 1\ntarget = np.random.randint(0, 2, size=N_SAMPLES) \n\nqueue = tf.FIFOQueue(capacity=50, dtypes=[tf.float32, tf.int32], shapes=[[4], []])\n\nenqueue_op = queue.enqueue_many([data, target])\ndata_sample, label_sample = queue.dequeue()\n\n# create ops that do something with data_sample and label_sample\n\n# create NUM_THREADS to do enqueue\nqr = tf.train.QueueRunner(queue, [enqueue_op] * NUM_THREADS)\nwith tf.Session() as sess:\n\t# create a coordinator, launch the queue runner threads.\n\tcoord = tf.train.Coordinator()\n\tenqueue_threads = qr.create_threads(sess, coord=coord, start=True)\n\ttry:\n\t\tfor step in range(100): # do to 100 iterations\n\t\t\tif coord.should_stop():\n\t\t\t\tbreak\n\t\t\tdata_batch, label_batch = sess.run([data_sample, label_sample])\n\t\t\tprint(data_batch)\n\t\t\tprint(label_batch)\n\texcept Exception as e:\n\t\tcoord.request_stop(e)\n\tfinally:\n\t\tcoord.request_stop()\n\t\tcoord.join(enqueue_threads)", "description": "This repository contains code examples for the Stanford's course: TensorFlow for Deep Learning Research. ", "file_name": "09_queue_example.py", "id": "d6523e4e96082a3e1d90f98490985a70", "language": "Python", "project_name": "stanford-tensorflow-tutorials", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/chiphuyen-stanford-tensorflow-tutorials/chiphuyen-stanford-tensorflow-tutorials-54c48f5/2017/examples/09_queue_example.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:38:24Z", "url": "https://github.com/chiphuyen/stanford-tensorflow-tutorials", "wiki": true}
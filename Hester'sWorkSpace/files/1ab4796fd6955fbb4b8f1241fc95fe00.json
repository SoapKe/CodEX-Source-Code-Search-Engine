{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urlparse\nfrom ..utils import (\n    clean_html,\n    get_element_by_class,\n    int_or_none,\n    parse_iso8601,\n    remove_start,\n    unified_timestamp,\n)\n\n\nclass NextMediaIE(InfoExtractor):\n    IE_DESC = '\u860b\u679c\u65e5\u5831'\n    _VALID_URL = r'https?://hk\\.apple\\.nextmedia\\.com/[^/]+/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://hk.apple.nextmedia.com/realtime/news/20141108/53109199',\n        'md5': 'dff9fad7009311c421176d1ac90bfe4f',\n        'info_dict': {\n            'id': '53109199',\n            'ext': 'mp4',\n            'title': '\u3010\u4f54\u9818\u91d1\u9418\u301150\u5916\u570b\u9818\u4e8b\u8b70\u54e1\u6490\u5834 \u8b9a\u5b78\u751f\u52c7\u6562\u9999\u6e2f\u6709\u5e0c\u671b',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:28222b9912b6665a21011b034c70fcc7',\n            'timestamp': 1415456273,\n            'upload_date': '20141108',\n        }\n    }]\n\n    _URL_PATTERN = r'\\{ url: \\'(.+)\\' \\}'\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        page = self._download_webpage(url, news_id)\n        return self._extract_from_nextmedia_page(news_id, url, page)\n\n    def _extract_from_nextmedia_page(self, news_id, url, page):\n        redirection_url = self._search_regex(\n            r'window\\.location\\.href\\s*=\\s*([\\'\"])(?P<url>(?!\\1).+)\\1',\n            page, 'redirection URL', default=None, group='url')\n        if redirection_url:\n            return self.url_result(compat_urlparse.urljoin(url, redirection_url))\n\n        title = self._fetch_title(page)\n        video_url = self._search_regex(self._URL_PATTERN, page, 'video url')\n\n        attrs = {\n            'id': news_id,\n            'title': title,\n            'url': video_url,  \n            'thumbnail': self._fetch_thumbnail(page),\n            'description': self._fetch_description(page),\n        }\n\n        timestamp = self._fetch_timestamp(page)\n        if timestamp:\n            attrs['timestamp'] = timestamp\n        else:\n            attrs['upload_date'] = self._fetch_upload_date(url)\n\n        return attrs\n\n    def _fetch_title(self, page):\n        return self._og_search_title(page)\n\n    def _fetch_thumbnail(self, page):\n        return self._og_search_thumbnail(page)\n\n    def _fetch_timestamp(self, page):\n        dateCreated = self._search_regex('\"dateCreated\":\"([^\"]+)\"', page, 'created time')\n        return parse_iso8601(dateCreated)\n\n    def _fetch_upload_date(self, url):\n        return self._search_regex(self._VALID_URL, url, 'upload date', group='date')\n\n    def _fetch_description(self, page):\n        return self._og_search_property('description', page)\n\n\nclass NextMediaActionNewsIE(NextMediaIE):\n    IE_DESC = '\u860b\u679c\u65e5\u5831 - \u52d5\u65b0\u805e'\n    _VALID_URL = r'https?://hk\\.dv\\.nextmedia\\.com/actionnews/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)/\\d+'\n    _TESTS = [{\n        'url': 'http://hk.dv.nextmedia.com/actionnews/hit/20150121/19009428/20061460',\n        'md5': '05fce8ffeed7a5e00665d4b7cf0f9201',\n        'info_dict': {\n            'id': '19009428',\n            'ext': 'mp4',\n            'title': '\u3010\u58f9\u9031\u520a\u3011\u7d3010\u5e74\u7537\u53cb\u5077\u98df\u300050\u6b72\u90b5\u7f8e\u742a\u518d\u5931\u6200',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:cd802fad1f40fd9ea178c1e2af02d659',\n            'timestamp': 1421791200,\n            'upload_date': '20150120',\n        }\n    }]\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        actionnews_page = self._download_webpage(url, news_id)\n        article_url = self._og_search_url(actionnews_page)\n        article_page = self._download_webpage(article_url, news_id)\n        return self._extract_from_nextmedia_page(news_id, url, article_page)\n\n\nclass AppleDailyIE(NextMediaIE):\n    IE_DESC = '\u81fa\u7063\u860b\u679c\u65e5\u5831'\n    _VALID_URL = r'https?://(www|ent)\\.appledaily\\.com\\.tw/[^/]+/[^/]+/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)(/.*)?'\n    _TESTS = [{\n        'url': 'http://ent.appledaily.com.tw/enews/article/entertainment/20150128/36354694',\n        'md5': 'a843ab23d150977cc55ef94f1e2c1e4d',\n        'info_dict': {\n            'id': '36354694',\n            'ext': 'mp4',\n            'title': '\u5468\u4ead\u7fbd\u8d70\u904e\u6469\u9435\u9670\u973e2\u7537\u966a\u5403 \u4e5d\u628a\u5200\u5b64\u5bd2\u770b\u91ab\u751f',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:2acd430e59956dc47cd7f67cb3c003f4',\n            'upload_date': '20150128',\n        }\n    }, {\n        'url': 'http://www.appledaily.com.tw/realtimenews/article/strange/20150128/550549/%E4%B8%8D%E6%BB%BF%E8%A2%AB%E8%B8%A9%E8%85%B3%E3%80%80%E5%B1%B1%E6%9D%B1%E5%85%A9%E5%A4%A7%E5%AA%BD%E4%B8%80%E8%B7%AF%E6%89%93%E4%B8%8B%E8%BB%8A',\n        'md5': '86b4e9132d158279c7883822d94ccc49',\n        'info_dict': {\n            'id': '550549',\n            'ext': 'mp4',\n            'title': '\u4e0d\u6eff\u88ab\u8e29\u8173\u3000\u5c71\u6771\u5169\u5927\u5abd\u4e00\u8def\u6253\u4e0b\u8eca',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:175b4260c1d7c085993474217e4ab1b4',\n            'upload_date': '20150128',\n        }\n    }, {\n        'url': 'http://www.appledaily.com.tw/animation/realtimenews/new/20150128/5003671',\n        'md5': '03df296d95dedc2d5886debbb80cb43f',\n        'info_dict': {\n            'id': '5003671',\n            'ext': 'mp4',\n            'title': '20\u6b63\u59b9\u71b1\u821e\u3000\u300a\u5200\u9f8d\u50b3\u8aaaOnline\u300b\u706b\u8fa3\u4e0a\u5e02',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:23c0aac567dc08c9c16a3161a2c2e3cd',\n            'upload_date': '20150128',\n        },\n        'skip': 'redirect to http://www.appledaily.com.tw/animation/',\n    }, {\n        \n        'url': 'http://www.appledaily.com.tw/animation/realtimenews/new/20150128/5003673/',\n        'md5': 'b06182cd386ea7bc6115ec7ff0f72aeb',\n        'info_dict': {\n            'id': '5003673',\n            'ext': 'mp4',\n            'title': '\u534a\u591c\u5c3f\u5c3f\u3000\u597d\u50cf\u6703\u770b\u5230___',\n            'description': 'md5:61d2da7fe117fede148706cdb85ac066',\n            'upload_date': '20150128',\n        },\n        'expected_warnings': [\n            'video thumbnail',\n        ],\n        'skip': 'redirect to http://www.appledaily.com.tw/animation/',\n    }, {\n        'url': 'http://www.appledaily.com.tw/appledaily/article/supplement/20140417/35770334/',\n        'md5': 'eaa20e6b9df418c912d7f5dec2ba734d',\n        'info_dict': {\n            'id': '35770334',\n            'ext': 'mp4',\n            'title': '\u5496\u5561\u5360\u535c\u6e2c XU\u88dd\u719f\u6307\u6578',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:7b859991a6a4fedbdf3dd3b66545c748',\n            'upload_date': '20140417',\n        },\n    }, {\n        'url': 'http://www.appledaily.com.tw/actionnews/appledaily/7/20161003/960588/',\n        'only_matching': True,\n    }, {\n        \n        'url': 'http://ent.appledaily.com.tw/section/article/headline/20150128/36354694',\n        'only_matching': True,\n    }]\n\n    _URL_PATTERN = r'\\{url: \\'(.+)\\'\\}'\n\n    def _fetch_title(self, page):\n        return (self._html_search_regex(r'<h1 id=\"h1\">([^<>]+)</h1>', page, 'news title', default=None) or\n                self._html_search_meta('description', page, 'news title'))\n\n    def _fetch_thumbnail(self, page):\n        return self._html_search_regex(r\"setInitialImage\\(\\'([^']+)'\\)\", page, 'video thumbnail', fatal=False)\n\n    def _fetch_timestamp(self, page):\n        return None\n\n    def _fetch_description(self, page):\n        return self._html_search_meta('description', page, 'news description')\n\n\nclass NextTVIE(InfoExtractor):\n    IE_DESC = '\u58f9\u96fb\u8996'\n    _VALID_URL = r'https?://(?:www\\.)?nexttv\\.com\\.tw/(?:[^/]+/)+(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://www.nexttv.com.tw/news/realtime/politics/11779671',\n        'info_dict': {\n            'id': '11779671',\n            'ext': 'mp4',\n            'title': '\u300c\u8d85\u6536\u7a05\u300d\u8fd14\u5343\u5104\uff01\u3000\u85cd\u8b70\u54e1\u7c72\u767c\u6d88\u8cbb\u5238',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1484825400,\n            'upload_date': '20170119',\n            'view_count': int,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<h1[^>]*>([^<]+)</h1>', webpage, 'title')\n\n        data = self._hidden_inputs(webpage)\n\n        video_url = data['ntt-vod-src-detailview']\n\n        date_str = get_element_by_class('date', webpage)\n        timestamp = unified_timestamp(date_str + '+0800') if date_str else None\n\n        view_count = int_or_none(remove_start(\n            clean_html(get_element_by_class('click', webpage)), '\u9ede\u95b1\uff1a'))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': data.get('ntt-vod-img-src'),\n            'timestamp': timestamp,\n            'view_count': view_count,\n        }\n", "comments": "# coding: utf-8\n# ext can be inferred from url\n# No thumbnail\n# Redirected from http://ent.appledaily.com.tw/enews/article/entertainment/20150128/36354694\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urlparse\nfrom ..utils import (\n    clean_html,\n    get_element_by_class,\n    int_or_none,\n    parse_iso8601,\n    remove_start,\n    unified_timestamp,\n)\n\n\nclass NextMediaIE(InfoExtractor):\n    IE_DESC = '\u860b\u679c\u65e5\u5831'\n    _VALID_URL = r'https?://hk\\.apple\\.nextmedia\\.com/[^/]+/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://hk.apple.nextmedia.com/realtime/news/20141108/53109199',\n        'md5': 'dff9fad7009311c421176d1ac90bfe4f',\n        'info_dict': {\n            'id': '53109199',\n            'ext': 'mp4',\n            'title': '\u3010\u4f54\u9818\u91d1\u9418\u301150\u5916\u570b\u9818\u4e8b\u8b70\u54e1\u6490\u5834 \u8b9a\u5b78\u751f\u52c7\u6562\u9999\u6e2f\u6709\u5e0c\u671b',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:28222b9912b6665a21011b034c70fcc7',\n            'timestamp': 1415456273,\n            'upload_date': '20141108',\n        }\n    }]\n\n    _URL_PATTERN = r'\\{ url: \\'(.+)\\' \\}'\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        page = self._download_webpage(url, news_id)\n        return self._extract_from_nextmedia_page(news_id, url, page)\n\n    def _extract_from_nextmedia_page(self, news_id, url, page):\n        redirection_url = self._search_regex(\n            r'window\\.location\\.href\\s*=\\s*([\\'\"])(?P<url>(?!\\1).+)\\1',\n            page, 'redirection URL', default=None, group='url')\n        if redirection_url:\n            return self.url_result(compat_urlparse.urljoin(url, redirection_url))\n\n        title = self._fetch_title(page)\n        video_url = self._search_regex(self._URL_PATTERN, page, 'video url')\n\n        attrs = {\n            'id': news_id,\n            'title': title,\n            'url': video_url,  # ext can be inferred from url\n            'thumbnail': self._fetch_thumbnail(page),\n            'description': self._fetch_description(page),\n        }\n\n        timestamp = self._fetch_timestamp(page)\n        if timestamp:\n            attrs['timestamp'] = timestamp\n        else:\n            attrs['upload_date'] = self._fetch_upload_date(url)\n\n        return attrs\n\n    def _fetch_title(self, page):\n        return self._og_search_title(page)\n\n    def _fetch_thumbnail(self, page):\n        return self._og_search_thumbnail(page)\n\n    def _fetch_timestamp(self, page):\n        dateCreated = self._search_regex('\"dateCreated\":\"([^\"]+)\"', page, 'created time')\n        return parse_iso8601(dateCreated)\n\n    def _fetch_upload_date(self, url):\n        return self._search_regex(self._VALID_URL, url, 'upload date', group='date')\n\n    def _fetch_description(self, page):\n        return self._og_search_property('description', page)\n\n\nclass NextMediaActionNewsIE(NextMediaIE):\n    IE_DESC = '\u860b\u679c\u65e5\u5831 - \u52d5\u65b0\u805e'\n    _VALID_URL = r'https?://hk\\.dv\\.nextmedia\\.com/actionnews/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)/\\d+'\n    _TESTS = [{\n        'url': 'http://hk.dv.nextmedia.com/actionnews/hit/20150121/19009428/20061460',\n        'md5': '05fce8ffeed7a5e00665d4b7cf0f9201',\n        'info_dict': {\n            'id': '19009428',\n            'ext': 'mp4',\n            'title': '\u3010\u58f9\u9031\u520a\u3011\u7d3010\u5e74\u7537\u53cb\u5077\u98df\u300050\u6b72\u90b5\u7f8e\u742a\u518d\u5931\u6200',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:cd802fad1f40fd9ea178c1e2af02d659',\n            'timestamp': 1421791200,\n            'upload_date': '20150120',\n        }\n    }]\n\n    def _real_extract(self, url):\n        news_id = self._match_id(url)\n        actionnews_page = self._download_webpage(url, news_id)\n        article_url = self._og_search_url(actionnews_page)\n        article_page = self._download_webpage(article_url, news_id)\n        return self._extract_from_nextmedia_page(news_id, url, article_page)\n\n\nclass AppleDailyIE(NextMediaIE):\n    IE_DESC = '\u81fa\u7063\u860b\u679c\u65e5\u5831'\n    _VALID_URL = r'https?://(www|ent)\\.appledaily\\.com\\.tw/[^/]+/[^/]+/[^/]+/(?P<date>\\d+)/(?P<id>\\d+)(/.*)?'\n    _TESTS = [{\n        'url': 'http://ent.appledaily.com.tw/enews/article/entertainment/20150128/36354694',\n        'md5': 'a843ab23d150977cc55ef94f1e2c1e4d',\n        'info_dict': {\n            'id': '36354694',\n            'ext': 'mp4',\n            'title': '\u5468\u4ead\u7fbd\u8d70\u904e\u6469\u9435\u9670\u973e2\u7537\u966a\u5403 \u4e5d\u628a\u5200\u5b64\u5bd2\u770b\u91ab\u751f',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:2acd430e59956dc47cd7f67cb3c003f4',\n            'upload_date': '20150128',\n        }\n    }, {\n        'url': 'http://www.appledaily.com.tw/realtimenews/article/strange/20150128/550549/%E4%B8%8D%E6%BB%BF%E8%A2%AB%E8%B8%A9%E8%85%B3%E3%80%80%E5%B1%B1%E6%9D%B1%E5%85%A9%E5%A4%A7%E5%AA%BD%E4%B8%80%E8%B7%AF%E6%89%93%E4%B8%8B%E8%BB%8A',\n        'md5': '86b4e9132d158279c7883822d94ccc49',\n        'info_dict': {\n            'id': '550549',\n            'ext': 'mp4',\n            'title': '\u4e0d\u6eff\u88ab\u8e29\u8173\u3000\u5c71\u6771\u5169\u5927\u5abd\u4e00\u8def\u6253\u4e0b\u8eca',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:175b4260c1d7c085993474217e4ab1b4',\n            'upload_date': '20150128',\n        }\n    }, {\n        'url': 'http://www.appledaily.com.tw/animation/realtimenews/new/20150128/5003671',\n        'md5': '03df296d95dedc2d5886debbb80cb43f',\n        'info_dict': {\n            'id': '5003671',\n            'ext': 'mp4',\n            'title': '20\u6b63\u59b9\u71b1\u821e\u3000\u300a\u5200\u9f8d\u50b3\u8aaaOnline\u300b\u706b\u8fa3\u4e0a\u5e02',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:23c0aac567dc08c9c16a3161a2c2e3cd',\n            'upload_date': '20150128',\n        },\n        'skip': 'redirect to http://www.appledaily.com.tw/animation/',\n    }, {\n        # No thumbnail\n        'url': 'http://www.appledaily.com.tw/animation/realtimenews/new/20150128/5003673/',\n        'md5': 'b06182cd386ea7bc6115ec7ff0f72aeb',\n        'info_dict': {\n            'id': '5003673',\n            'ext': 'mp4',\n            'title': '\u534a\u591c\u5c3f\u5c3f\u3000\u597d\u50cf\u6703\u770b\u5230___',\n            'description': 'md5:61d2da7fe117fede148706cdb85ac066',\n            'upload_date': '20150128',\n        },\n        'expected_warnings': [\n            'video thumbnail',\n        ],\n        'skip': 'redirect to http://www.appledaily.com.tw/animation/',\n    }, {\n        'url': 'http://www.appledaily.com.tw/appledaily/article/supplement/20140417/35770334/',\n        'md5': 'eaa20e6b9df418c912d7f5dec2ba734d',\n        'info_dict': {\n            'id': '35770334',\n            'ext': 'mp4',\n            'title': '\u5496\u5561\u5360\u535c\u6e2c XU\u88dd\u719f\u6307\u6578',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'description': 'md5:7b859991a6a4fedbdf3dd3b66545c748',\n            'upload_date': '20140417',\n        },\n    }, {\n        'url': 'http://www.appledaily.com.tw/actionnews/appledaily/7/20161003/960588/',\n        'only_matching': True,\n    }, {\n        # Redirected from http://ent.appledaily.com.tw/enews/article/entertainment/20150128/36354694\n        'url': 'http://ent.appledaily.com.tw/section/article/headline/20150128/36354694',\n        'only_matching': True,\n    }]\n\n    _URL_PATTERN = r'\\{url: \\'(.+)\\'\\}'\n\n    def _fetch_title(self, page):\n        return (self._html_search_regex(r'<h1 id=\"h1\">([^<>]+)</h1>', page, 'news title', default=None) or\n                self._html_search_meta('description', page, 'news title'))\n\n    def _fetch_thumbnail(self, page):\n        return self._html_search_regex(r\"setInitialImage\\(\\'([^']+)'\\)\", page, 'video thumbnail', fatal=False)\n\n    def _fetch_timestamp(self, page):\n        return None\n\n    def _fetch_description(self, page):\n        return self._html_search_meta('description', page, 'news description')\n\n\nclass NextTVIE(InfoExtractor):\n    IE_DESC = '\u58f9\u96fb\u8996'\n    _VALID_URL = r'https?://(?:www\\.)?nexttv\\.com\\.tw/(?:[^/]+/)+(?P<id>\\d+)'\n\n    _TEST = {\n        'url': 'http://www.nexttv.com.tw/news/realtime/politics/11779671',\n        'info_dict': {\n            'id': '11779671',\n            'ext': 'mp4',\n            'title': '\u300c\u8d85\u6536\u7a05\u300d\u8fd14\u5343\u5104\uff01\u3000\u85cd\u8b70\u54e1\u7c72\u767c\u6d88\u8cbb\u5238',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1484825400,\n            'upload_date': '20170119',\n            'view_count': int,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<h1[^>]*>([^<]+)</h1>', webpage, 'title')\n\n        data = self._hidden_inputs(webpage)\n\n        video_url = data['ntt-vod-src-detailview']\n\n        date_str = get_element_by_class('date', webpage)\n        timestamp = unified_timestamp(date_str + '+0800') if date_str else None\n\n        view_count = int_or_none(remove_start(\n            clean_html(get_element_by_class('click', webpage)), '\u9ede\u95b1\uff1a'))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': data.get('ntt-vod-img-src'),\n            'timestamp': timestamp,\n            'view_count': view_count,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "nextmedia.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/nextmedia.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
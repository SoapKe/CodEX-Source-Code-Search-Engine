{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unescapeHTML,\n)\n\n\nclass BildIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?bild\\.de/(?:[^/]+/)+(?P<display_id>[^/]+)-(?P<id>\\d+)(?:,auto=true)?\\.bild\\.html'\n    IE_DESC = 'Bild.de'\n    _TEST = {\n        'url': 'http://www.bild.de/video/clip/apple-ipad-air/das-koennen-die-neuen-ipads-38184146.bild.html',\n        'md5': 'dd495cbd99f2413502a1713a1156ac8a',\n        'info_dict': {\n            'id': '38184146',\n            'ext': 'mp4',\n            'title': 'Das k\u00f6nnen die  neuen iPads',\n            'description': 'md5:a4058c4fa2a804ab59c00d7244bbf62f',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 196,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video_data = self._download_json(\n            url.split('.bild.html')[0] + ',view=json.bild.html', video_id)\n\n        return {\n            'id': video_id,\n            'title': unescapeHTML(video_data['title']).strip(),\n            'description': unescapeHTML(video_data.get('description')),\n            'url': video_data['clipList'][0]['srces'][0]['src'],\n            'thumbnail': video_data.get('poster'),\n            'duration': int_or_none(video_data.get('durationSec')),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unescapeHTML,\n)\n\n\nclass BildIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?bild\\.de/(?:[^/]+/)+(?P<display_id>[^/]+)-(?P<id>\\d+)(?:,auto=true)?\\.bild\\.html'\n    IE_DESC = 'Bild.de'\n    _TEST = {\n        'url': 'http://www.bild.de/video/clip/apple-ipad-air/das-koennen-die-neuen-ipads-38184146.bild.html',\n        'md5': 'dd495cbd99f2413502a1713a1156ac8a',\n        'info_dict': {\n            'id': '38184146',\n            'ext': 'mp4',\n            'title': 'Das k\u00f6nnen die  neuen iPads',\n            'description': 'md5:a4058c4fa2a804ab59c00d7244bbf62f',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 196,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video_data = self._download_json(\n            url.split('.bild.html')[0] + ',view=json.bild.html', video_id)\n\n        return {\n            'id': video_id,\n            'title': unescapeHTML(video_data['title']).strip(),\n            'description': unescapeHTML(video_data.get('description')),\n            'url': video_data['clipList'][0]['srces'][0]['src'],\n            'thumbnail': video_data.get('poster'),\n            'duration': int_or_none(video_data.get('durationSec')),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "bild.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/bild.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
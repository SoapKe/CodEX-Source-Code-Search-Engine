{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom lxml import objectify\n\nfrom odoo.addons.payment.tests.common import PaymentAcquirerCommon\nfrom odoo.addons.payment_adyen.controllers.main import AdyenController\nfrom werkzeug import urls\n\n\nclass AdyenCommon(PaymentAcquirerCommon):\n\n    def setUp(self):\n        super(AdyenCommon, self).setUp()\n\n        # some CC (always use expiration date 06 / 2016, cvc 737, cid 7373 (amex))\n        self.amex = (('370000000000002', '7373'))\n        self.dinersclub = (('36006666333344', '737'))\n        self.discover = (('6011601160116611', '737'), ('644564456445644', '737'))\n        self.jcb = (('3530111333300000', '737'))\n        self.mastercard = (('5555444433331111', '737'), ('5555555555554444', '737'))\n        self.visa = (('4111 1111 1111 1111', '737'), ('4444333322221111', '737'))\n        self.mcdebit = (('5500000000000004', '737'))\n        self.visadebit = (('4400000000000008', '737'))\n        self.maestro = (('6731012345678906', '737'))\n        self.laser = (('630495060000000000', '737'))\n        self.hipercard = (('6062828888666688', '737'))\n        self.dsmastercard = (('521234567890 1234', '737', 'user', 'password'))\n        self.dsvisa = (('4212345678901237', '737', 'user', 'password'))\n        self.mistercash = (('6703444444444449', None, 'user', 'password'))\n\n\nclass AdyenForm(AdyenCommon):\n\n    def test_10_adyen_form_render(self):\n        \n        adyen = self.env.ref('payment.payment_acquirer_adyen')\n        self.assertEqual(adyen.environment, 'test', 'test without test environment')\n\n        \n        \n        \n\n        base_url = self.env['ir.config_parameter'].get_param('web.base.url')\n        form_values = {\n            'merchantAccount': 'OpenERPCOM',\n            'merchantReference': 'test_ref0',\n            'skinCode': 'cbqYWvVL',\n            'paymentAmount': '1',\n            'currencyCode': 'EUR',\n            'resURL': urls.url_join(base_url, AdyenController._return_url),\n        }\n\n        \n        res = adyen.render(\n            'test_ref0', 0.01, self.currency_euro.id,\n            partner_id=None,\n            partner_values=self.buyer_values)\n\n        \n        tree = objectify.fromstring(res)\n        self.assertEqual(tree.get('action'), 'https://test.adyen.com/hpp/pay.shtml', 'adyen: wrong form POST url')\n        for form_input in tree.input:\n            if form_input.get('name') in ['submit', 'shipBeforeDate', 'sessionValidity', 'shopperLocale', 'merchantSig']:\n                continue\n            self.assertEqual(\n                form_input.get('value'),\n                form_values[form_input.get('name')],\n                'adyen: wrong value for input %s: received %s instead of %s' % (form_input.get('name'), form_input.get('value'), form_values[form_input.get('name')])\n            )\n", "comments": "      coding  utf 8        cc (always use expiration date 06   2016  cvc 737  cid 7373 (amex))    sure stupid things                                                test  button direct rendering                                                render button    check form result ", "content": "# -*- coding: utf-8 -*-\n\nfrom lxml import objectify\n\nfrom odoo.addons.payment.tests.common import PaymentAcquirerCommon\nfrom odoo.addons.payment_adyen.controllers.main import AdyenController\nfrom werkzeug import urls\n\n\nclass AdyenCommon(PaymentAcquirerCommon):\n\n    def setUp(self):\n        super(AdyenCommon, self).setUp()\n\n        # some CC (always use expiration date 06 / 2016, cvc 737, cid 7373 (amex))\n        self.amex = (('370000000000002', '7373'))\n        self.dinersclub = (('36006666333344', '737'))\n        self.discover = (('6011601160116611', '737'), ('644564456445644', '737'))\n        self.jcb = (('3530111333300000', '737'))\n        self.mastercard = (('5555444433331111', '737'), ('5555555555554444', '737'))\n        self.visa = (('4111 1111 1111 1111', '737'), ('4444333322221111', '737'))\n        self.mcdebit = (('5500000000000004', '737'))\n        self.visadebit = (('4400000000000008', '737'))\n        self.maestro = (('6731012345678906', '737'))\n        self.laser = (('630495060000000000', '737'))\n        self.hipercard = (('6062828888666688', '737'))\n        self.dsmastercard = (('521234567890 1234', '737', 'user', 'password'))\n        self.dsvisa = (('4212345678901237', '737', 'user', 'password'))\n        self.mistercash = (('6703444444444449', None, 'user', 'password'))\n\n\nclass AdyenForm(AdyenCommon):\n\n    def test_10_adyen_form_render(self):\n        # be sure not to do stupid things\n        adyen = self.env.ref('payment.payment_acquirer_adyen')\n        self.assertEqual(adyen.environment, 'test', 'test without test environment')\n\n        # ----------------------------------------\n        # Test: button direct rendering\n        # ----------------------------------------\n\n        base_url = self.env['ir.config_parameter'].get_param('web.base.url')\n        form_values = {\n            'merchantAccount': 'OpenERPCOM',\n            'merchantReference': 'test_ref0',\n            'skinCode': 'cbqYWvVL',\n            'paymentAmount': '1',\n            'currencyCode': 'EUR',\n            'resURL': urls.url_join(base_url, AdyenController._return_url),\n        }\n\n        # render the button\n        res = adyen.render(\n            'test_ref0', 0.01, self.currency_euro.id,\n            partner_id=None,\n            partner_values=self.buyer_values)\n\n        # check form result\n        tree = objectify.fromstring(res)\n        self.assertEqual(tree.get('action'), 'https://test.adyen.com/hpp/pay.shtml', 'adyen: wrong form POST url')\n        for form_input in tree.input:\n            if form_input.get('name') in ['submit', 'shipBeforeDate', 'sessionValidity', 'shopperLocale', 'merchantSig']:\n                continue\n            self.assertEqual(\n                form_input.get('value'),\n                form_values[form_input.get('name')],\n                'adyen: wrong value for input %s: received %s instead of %s' % (form_input.get('name'), form_input.get('value'), form_values[form_input.get('name')])\n            )\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_adyen.py", "id": "4a6e7d6b304b11e8240abb0de20e2649", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/payment_adyen/tests/test_adyen.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
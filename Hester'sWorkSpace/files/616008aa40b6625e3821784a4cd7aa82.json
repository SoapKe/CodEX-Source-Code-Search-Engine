{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom .common import TestAccountBudgetCommon\nfrom odoo.fields import Date\n\nimport datetime\n\n\n\n\nclass TestAccountBudget(TestAccountBudgetCommon):\n\n    def test_account_budget(self):\n\n        \n        budget = self.env['crossovered.budget'].create({\n            'date_from': Date.from_string('%s-01-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-12-31' % (datetime.datetime.now().year + 1)),\n            'name': 'Budget %s' % (datetime.datetime.now().year + 1),\n            'state': 'draft'\n        })\n\n        \n        \n        self.env['crossovered.budget.lines'].create({\n            'crossovered_budget_id': budget.id,\n            'analytic_account_id': self.ref('analytic.analytic_partners_camp_to_camp'),\n            'date_from': Date.from_string('%s-01-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-12-31' % (datetime.datetime.now().year + 1)),\n            'general_budget_id': self.account_budget_post_purchase0.id,\n            'planned_amount': 10000.0,\n        })\n        self.env['crossovered.budget.lines'].create({\n            'crossovered_budget_id': budget.id,\n            'analytic_account_id': self.ref('analytic.analytic_our_super_product'),\n            'date_from': Date.from_string('%s-09-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-09-30' % (datetime.datetime.now().year + 1)),\n            'general_budget_id': self.account_budget_post_sales0.id,\n            'planned_amount': 400000.0,\n        })\n        \n        self.assertEqual(budget.state, 'draft')\n\n        \n        \n        budget.action_budget_confirm()\n\n        \n        self.assertEqual(budget.state, 'confirm')\n\n        \n        \n        budget.action_budget_validate()\n\n        \n        self.assertEqual(budget.state, 'validate')\n\n        \n        \n        budget.action_budget_done()\n\n        \n        self.assertEqual(budget.state, 'done')\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details                                                                  tests                                                                 creating crossovered budget record    i created two different budget lines    modifying crossovered budget record    i check initially budget  draft  state    i pressed confirm button confirm budget    performing action confirm module crossovered budget    i check budget  confirmed  state    i pressed validate button validate budget    performing action validate module crossovered budget    i check budget  validated  state    i pressed done button set budget  done  state    performing action done module crossovered budget    i check budget  done  state ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom .common import TestAccountBudgetCommon\nfrom odoo.fields import Date\n\nimport datetime\n\n# ---------------------------------------------------------\n# Tests\n# ---------------------------------------------------------\nclass TestAccountBudget(TestAccountBudgetCommon):\n\n    def test_account_budget(self):\n\n        # Creating a crossovered.budget record\n        budget = self.env['crossovered.budget'].create({\n            'date_from': Date.from_string('%s-01-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-12-31' % (datetime.datetime.now().year + 1)),\n            'name': 'Budget %s' % (datetime.datetime.now().year + 1),\n            'state': 'draft'\n        })\n\n        # I created two different budget lines\n        # Modifying a crossovered.budget record\n        self.env['crossovered.budget.lines'].create({\n            'crossovered_budget_id': budget.id,\n            'analytic_account_id': self.ref('analytic.analytic_partners_camp_to_camp'),\n            'date_from': Date.from_string('%s-01-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-12-31' % (datetime.datetime.now().year + 1)),\n            'general_budget_id': self.account_budget_post_purchase0.id,\n            'planned_amount': 10000.0,\n        })\n        self.env['crossovered.budget.lines'].create({\n            'crossovered_budget_id': budget.id,\n            'analytic_account_id': self.ref('analytic.analytic_our_super_product'),\n            'date_from': Date.from_string('%s-09-01' % (datetime.datetime.now().year + 1)),\n            'date_to': Date.from_string('%s-09-30' % (datetime.datetime.now().year + 1)),\n            'general_budget_id': self.account_budget_post_sales0.id,\n            'planned_amount': 400000.0,\n        })\n        # I check that Initially Budget is in \"draft\" state\n        self.assertEqual(budget.state, 'draft')\n\n        # I pressed the confirm button to confirm the Budget\n        # Performing an action confirm on module crossovered.budget\n        budget.action_budget_confirm()\n\n        # I check that budget is in \"Confirmed\" state\n        self.assertEqual(budget.state, 'confirm')\n\n        # I pressed the validate button to validate the Budget\n        # Performing an action validate on module crossovered.budget\n        budget.action_budget_validate()\n\n        # I check that budget is in \"Validated\" state\n        self.assertEqual(budget.state, 'validate')\n\n        # I pressed the done button to set the Budget to \"Done\" state\n        # Performing an action done on module crossovered.budget\n        budget.action_budget_done()\n\n        # I check that budget is in \"done\" state\n        self.assertEqual(budget.state, 'done')\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_account_budget.py", "id": "616008aa40b6625e3821784a4cd7aa82", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/account_budget/tests/test_account_budget.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
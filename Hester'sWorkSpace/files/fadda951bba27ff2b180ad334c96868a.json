{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport base64\n\nfrom odoo import api, models\nfrom odoo.tools import pycompat\n\n\nclass MailTemplate(models.Model):\n    _inherit = 'mail.template'\n\n    @api.multi\n    def generate_email(self, res_ids, fields=None):\n        \"\"\" Method overridden in order to add an attachment containing the ISR\n        to the draft message when opening the 'send by mail' wizard on an invoice.\n        This attachment generation will only occur if all the required data are\n        present on the invoice. Otherwise, no ISR attachment will be created, and\n        the mail will only contain the invoice (as defined in the mother method).\n        \"\"\"\n        rslt = super(MailTemplate, self).generate_email(res_ids, fields)\n\n        multi_mode = True\n        if isinstance(res_ids, pycompat.integer_types):\n            res_ids = [res_ids]\n            multi_mode = False\n\n        res_ids_to_templates = self.get_email_template(res_ids)\n        for res_id in res_ids:\n            related_model = self.env[self.model_id.model].browse(res_id)\n\n            if related_model._name == 'account.invoice' and related_model.l10n_ch_isr_valid:\n                \n                template = res_ids_to_templates[res_id]\n                report_name = 'ISR-' + self.render_template(template.report_name, template.model, res_id) + '.pdf'\n\n                pdf = self.env.ref('l10n_ch.l10n_ch_isr_report').render_qweb_pdf([res_id])[0]\n                pdf = base64.b64encode(pdf)\n\n                attachments_list = multi_mode and rslt[res_id]['attachments'] or rslt['attachments']\n                attachments_list.append((report_name, pdf))\n        return rslt\n", "comments": "    method overridden order add attachment containing isr         draft message opening  send mail  wizard invoice          this attachment generation occur required data         present invoice  otherwise  isr attachment created          mail contain invoice (as defined mother method)                     coding  utf 8        part odoo  see license file full copyright licensing details    we add attachment containing isr ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport base64\n\nfrom odoo import api, models\nfrom odoo.tools import pycompat\n\n\nclass MailTemplate(models.Model):\n    _inherit = 'mail.template'\n\n    @api.multi\n    def generate_email(self, res_ids, fields=None):\n        \"\"\" Method overridden in order to add an attachment containing the ISR\n        to the draft message when opening the 'send by mail' wizard on an invoice.\n        This attachment generation will only occur if all the required data are\n        present on the invoice. Otherwise, no ISR attachment will be created, and\n        the mail will only contain the invoice (as defined in the mother method).\n        \"\"\"\n        rslt = super(MailTemplate, self).generate_email(res_ids, fields)\n\n        multi_mode = True\n        if isinstance(res_ids, pycompat.integer_types):\n            res_ids = [res_ids]\n            multi_mode = False\n\n        res_ids_to_templates = self.get_email_template(res_ids)\n        for res_id in res_ids:\n            related_model = self.env[self.model_id.model].browse(res_id)\n\n            if related_model._name == 'account.invoice' and related_model.l10n_ch_isr_valid:\n                #We add an attachment containing the ISR\n                template = res_ids_to_templates[res_id]\n                report_name = 'ISR-' + self.render_template(template.report_name, template.model, res_id) + '.pdf'\n\n                pdf = self.env.ref('l10n_ch.l10n_ch_isr_report').render_qweb_pdf([res_id])[0]\n                pdf = base64.b64encode(pdf)\n\n                attachments_list = multi_mode and rslt[res_id]['attachments'] or rslt['attachments']\n                attachments_list.append((report_name, pdf))\n        return rslt\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "mail_template.py", "id": "fadda951bba27ff2b180ad334c96868a", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_ch/models/mail_template.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
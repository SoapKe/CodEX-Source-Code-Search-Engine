{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSolution(object):\n\n    def test_find_busiest_period(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.find_busiest_period, None)\n        assert_equal(solution.find_busiest_period([]), None)\n        data = [\n            Data(3, 2, EventType.EXIT),\n            Data(1, 2, EventType.ENTER),\n            Data(3, 1, EventType.ENTER),\n            Data(7, 3, EventType.ENTER),\n            Data(9, 2, EventType.EXIT),\n            Data(8, 2, EventType.EXIT),\n        ]\n        assert_equal(solution.find_busiest_period(data), Period(7, 8))\n        print('Success: test_find_busiest_period')\n\n\ndef main():\n    test = TestSolution()\n    test.test_find_busiest_period()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSolution(object):\n\n    def test_find_busiest_period(self):\n        solution = Solution()\n        assert_raises(TypeError, solution.find_busiest_period, None)\n        assert_equal(solution.find_busiest_period([]), None)\n        data = [\n            Data(3, 2, EventType.EXIT),\n            Data(1, 2, EventType.ENTER),\n            Data(3, 1, EventType.ENTER),\n            Data(7, 3, EventType.ENTER),\n            Data(9, 2, EventType.EXIT),\n            Data(8, 2, EventType.EXIT),\n        ]\n        assert_equal(solution.find_busiest_period(data), Period(7, 8))\n        print('Success: test_find_busiest_period')\n\n\ndef main():\n    test = TestSolution()\n    test.test_find_busiest_period()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_find_busiest_period.py", "id": "2a7e7a5e9da0b0d90f72c90a30c5e1db", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/online_judges/busiest_period/test_find_busiest_period.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:58:04Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
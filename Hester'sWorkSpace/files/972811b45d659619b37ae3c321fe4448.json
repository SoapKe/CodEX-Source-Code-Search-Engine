{"author": "powerline", "code": "\n\nfrom __future__ import (unicode_literals, division, absolute_import, print_function)\n\nimport argparse\n\nfrom getpass import getpass\n\nfrom github import Github\n\n\np = argparse.ArgumentParser(description='Powerline release script')\np.add_argument('-u', '--user', type=str, metavar='USER', help='Github username.', required=True)\np.add_argument('-p', '--password', type=str, metavar='PASS', help='Github password. You will be prompted if it is not supplied.')\n\nif __name__ == '__main__':\n\targs = p.parse_args()\n\tuser = args.user\n\tpassword = args.password or getpass('Password for {0}: '.format(user))\n\tgh = Github(user, password)\n\tgrepo = gh.get_repo('powerline/powerline')\n\tfor pr in grepo.get_pulls():\n\t\tif pr.base.ref != 'develop':\n\t\t\tissue = grepo.get_issue(pr.number)\n\t\t\tissue.create_comment('PRs to any branch, but develop, are not accepted.', )\n\t\t\tissue.add_to_labels('s:invalid')\n\t\t\tissue.edit(state='closed')\n", "comments": "   usr bin env python    vim fileencoding utf 8 noet ", "content": "#!/usr/bin/env python\n# vim:fileencoding=utf-8:noet\nfrom __future__ import (unicode_literals, division, absolute_import, print_function)\n\nimport argparse\n\nfrom getpass import getpass\n\nfrom github import Github\n\n\np = argparse.ArgumentParser(description='Powerline release script')\np.add_argument('-u', '--user', type=str, metavar='USER', help='Github username.', required=True)\np.add_argument('-p', '--password', type=str, metavar='PASS', help='Github password. You will be prompted if it is not supplied.')\n\nif __name__ == '__main__':\n\targs = p.parse_args()\n\tuser = args.user\n\tpassword = args.password or getpass('Password for {0}: '.format(user))\n\tgh = Github(user, password)\n\tgrepo = gh.get_repo('powerline/powerline')\n\tfor pr in grepo.get_pulls():\n\t\tif pr.base.ref != 'develop':\n\t\t\tissue = grepo.get_issue(pr.number)\n\t\t\tissue.create_comment('PRs to any branch, but develop, are not accepted.', )\n\t\t\tissue.add_to_labels('s:invalid')\n\t\t\tissue.edit(state='closed')\n", "description": "Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, tmux, IPython, Awesome and Qtile.", "file_name": "purge-PRs.py", "id": "972811b45d659619b37ae3c321fe4448", "language": "Python", "project_name": "powerline", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/powerline-powerline/powerline-powerline-d36850f/tools/purge-PRs.py", "save_time": "", "source": "", "update_at": "2018-03-18T09:00:33Z", "url": "https://github.com/powerline/powerline", "wiki": false}
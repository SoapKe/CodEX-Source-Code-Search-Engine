{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .vimple import SprutoBaseIE\n\n\nclass MyviIE(SprutoBaseIE):\n    _VALID_URL = r\n    _TESTS = [{\n        'url': 'http://myvi.ru/player/embed/html/oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wObeRTZaCATzucDQIDph8hQU0',\n        'md5': '571bbdfba9f9ed229dc6d34cc0f335bf',\n        'info_dict': {\n            'id': 'f16b2bbd-cde8-481c-a981-7cd48605df43',\n            'ext': 'mp4',\n            'title': '\u0445\u043e\u0437\u044f\u0438\u043d \u0436\u0438\u0437\u043d\u0438',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 25,\n        },\n    }, {\n        'url': 'http://myvi.ru/player/content/preloader.swf?id=oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wOYf1WFpPfc_bWTKGVf_Zafr0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.ru/player/api/Video/Get/oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wObeRTZaCATzucDQIDph8hQU0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.tv/embed/html/oTGTNWdyz4Zwy_u1nraolwZ1odenTd9WkTnRfIL9y8VOgHYqOHApE575x4_xxS9Vn0?ap=0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.ru/player/flash/ocp2qZrHI-eZnHKQBK4cZV60hslH8LALnk0uBfKsB-Q4WnY26SeGoYPi8HWHxu0O30',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.myvi.ru/watch/YwbqszQynUaHPn_s82sx0Q2',\n        'only_matching': True,\n    }, {\n        'url': 'myvi:YwbqszQynUaHPn_s82sx0Q2',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def _extract_url(cls, webpage):\n        mobj = re.search(\n            r'<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//myvi\\.(?:ru/player|tv)/(?:embed/html|flash)/[^\"]+)\\1', webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        spruto = self._download_json(\n            'http://myvi.ru/player/api/Video/Get/%s?sig' % video_id, video_id)['sprutoData']\n\n        return self._extract_spruto(spruto, video_id)\n\n\nclass MyviEmbedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?myvi\\.tv/(?:[^?]+\\?.*?\\bv=|embed/)(?P<id>[\\da-z]+)'\n    _TESTS = [{\n        'url': 'https://www.myvi.tv/embed/ccdqic3wgkqwpb36x9sxg43t4r',\n        'info_dict': {\n            'id': 'b3ea0663-3234-469d-873e-7fecf36b31d1',\n            'ext': 'mp4',\n            'title': '\u0422\u0432\u043e\u044f (original song).mp4',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 277,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'https://www.myvi.tv/idmi6o?v=ccdqic3wgkqwpb36x9sxg43t4r\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return False if MyviIE.suitable(url) else super(MyviEmbedIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'https://www.myvi.tv/embed/%s' % video_id, video_id)\n\n        myvi_id = self._search_regex(\n            r'CreatePlayer\\s*\\(\\s*[\"\\'].*?\\bv=([\\da-zA-Z_]+)',\n            webpage, 'video id')\n\n        return self.url_result('myvi:%s' % myvi_id, ie=MyviIE.ie_key())\n", "comments": "(?x)\n                        (?:\n                            https?://\n                                (?:www\\.)?\n                                myvi\\.\n                                (?:\n                                    (?:ru/player|tv)/\n                                    (?:\n                                        (?:\n                                            embed/html|\n                                            flash|\n                                            api/Video/Get\n                                        )/|\n                                        content/preloader\\.swf\\?.*\\bid=\n                                    )|\n                                    ru/watch/\n                                )|\n                            myvi:\n                        )\n                        (?P<id>[\\da-zA-Z_-]+)\n                    \n \n# coding: utf-8\n#watch',\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .vimple import SprutoBaseIE\n\n\nclass MyviIE(SprutoBaseIE):\n    _VALID_URL = r'''(?x)\n                        (?:\n                            https?://\n                                (?:www\\.)?\n                                myvi\\.\n                                (?:\n                                    (?:ru/player|tv)/\n                                    (?:\n                                        (?:\n                                            embed/html|\n                                            flash|\n                                            api/Video/Get\n                                        )/|\n                                        content/preloader\\.swf\\?.*\\bid=\n                                    )|\n                                    ru/watch/\n                                )|\n                            myvi:\n                        )\n                        (?P<id>[\\da-zA-Z_-]+)\n                    '''\n    _TESTS = [{\n        'url': 'http://myvi.ru/player/embed/html/oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wObeRTZaCATzucDQIDph8hQU0',\n        'md5': '571bbdfba9f9ed229dc6d34cc0f335bf',\n        'info_dict': {\n            'id': 'f16b2bbd-cde8-481c-a981-7cd48605df43',\n            'ext': 'mp4',\n            'title': '\u0445\u043e\u0437\u044f\u0438\u043d \u0436\u0438\u0437\u043d\u0438',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 25,\n        },\n    }, {\n        'url': 'http://myvi.ru/player/content/preloader.swf?id=oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wOYf1WFpPfc_bWTKGVf_Zafr0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.ru/player/api/Video/Get/oOy4euHA6LVwNNAjhD9_Jq5Ha2Qf0rtVMVFMAZav8wObeRTZaCATzucDQIDph8hQU0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.tv/embed/html/oTGTNWdyz4Zwy_u1nraolwZ1odenTd9WkTnRfIL9y8VOgHYqOHApE575x4_xxS9Vn0?ap=0',\n        'only_matching': True,\n    }, {\n        'url': 'http://myvi.ru/player/flash/ocp2qZrHI-eZnHKQBK4cZV60hslH8LALnk0uBfKsB-Q4WnY26SeGoYPi8HWHxu0O30',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.myvi.ru/watch/YwbqszQynUaHPn_s82sx0Q2',\n        'only_matching': True,\n    }, {\n        'url': 'myvi:YwbqszQynUaHPn_s82sx0Q2',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def _extract_url(cls, webpage):\n        mobj = re.search(\n            r'<iframe[^>]+?src=([\"\\'])(?P<url>(?:https?:)?//myvi\\.(?:ru/player|tv)/(?:embed/html|flash)/[^\"]+)\\1', webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        spruto = self._download_json(\n            'http://myvi.ru/player/api/Video/Get/%s?sig' % video_id, video_id)['sprutoData']\n\n        return self._extract_spruto(spruto, video_id)\n\n\nclass MyviEmbedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?myvi\\.tv/(?:[^?]+\\?.*?\\bv=|embed/)(?P<id>[\\da-z]+)'\n    _TESTS = [{\n        'url': 'https://www.myvi.tv/embed/ccdqic3wgkqwpb36x9sxg43t4r',\n        'info_dict': {\n            'id': 'b3ea0663-3234-469d-873e-7fecf36b31d1',\n            'ext': 'mp4',\n            'title': '\u0422\u0432\u043e\u044f (original song).mp4',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 277,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'https://www.myvi.tv/idmi6o?v=ccdqic3wgkqwpb36x9sxg43t4r#watch',\n        'only_matching': True,\n    }]\n\n    @classmethod\n    def suitable(cls, url):\n        return False if MyviIE.suitable(url) else super(MyviEmbedIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'https://www.myvi.tv/embed/%s' % video_id, video_id)\n\n        myvi_id = self._search_regex(\n            r'CreatePlayer\\s*\\(\\s*[\"\\'].*?\\bv=([\\da-zA-Z_]+)',\n            webpage, 'video id')\n\n        return self.url_result('myvi:%s' % myvi_id, ie=MyviIE.ie_key())\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "myvi.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/myvi.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
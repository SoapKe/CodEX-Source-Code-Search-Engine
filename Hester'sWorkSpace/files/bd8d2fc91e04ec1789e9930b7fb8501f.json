{"author": "sympy", "code": "from __future__ import print_function, division\n\nimport sys\nfrom time import time\n\nfrom sympy.ntheory.residue_ntheory import (discrete_log,\n        _discrete_log_trial_mul, _discrete_log_shanks_steps,\n        _discrete_log_pollard_rho, _discrete_log_pohlig_hellman)\n\n\n# Cyclic group (Z/pZ)* with p prime, order p - 1 and generator g\ndata_set_1 = [\n        \n        [191, 190, 19],\n        [46639, 46638, 6],\n        [14789363, 14789362, 2],\n        [4254225211, 4254225210, 2],\n        [432751500361, 432751500360, 7],\n        [158505390797053, 158505390797052, 2],\n        [6575202655312007, 6575202655312006, 5],\n        [8430573471995353769, 8430573471995353768, 3],\n        [3938471339744997827267, 3938471339744997827266, 2],\n        [875260951364705563393093, 875260951364705563393092, 5],\n    ]\n\n\n# Cyclic sub-groups of (Z/nZ)* with prime order p and generator g\n# (n, p are primes and n = 2 * p + 1)\ndata_set_2 = [\n        \n        [227, 113, 3],\n        [2447, 1223, 2],\n        [24527, 12263, 2],\n        [245639, 122819, 2],\n        [2456747, 1228373, 3],\n        [24567899, 12283949, 3],\n        [245679023, 122839511, 2],\n        [2456791307, 1228395653, 3],\n        [24567913439, 12283956719, 2],\n        [245679135407, 122839567703, 2],\n        [2456791354763, 1228395677381, 3],\n        [24567913550903, 12283956775451, 2],\n        [245679135509519, 122839567754759, 2],\n    ]\n\n\n# Cyclic sub-groups of (Z/nZ)* with smooth order o and generator g\ndata_set_3 = [\n        \n        [2**118, 2**116, 3],\n    ]\n\n\ndef bench_discrete_log(data_set, algo=None):\n    if algo is None:\n        f = discrete_log\n    elif algo == 'trial':\n        f = _discrete_log_trial_mul\n    elif algo == 'shanks':\n        f = _discrete_log_shanks_steps\n    elif algo == 'rho':\n        f = _discrete_log_pollard_rho\n    elif algo == 'ph':\n        f = _discrete_log_pohlig_hellman\n    else:\n        raise ValueError(\"Argument 'algo' should be one\"\n                \" of ('trial', 'shanks', 'rho' or 'ph')\")\n\n    for i, data in enumerate(data_set):\n        for j, (n, p, g) in enumerate(data):\n            t = time()\n            l = f(n, pow(g, p - 1, n), g, p)\n            t = time() - t\n            print('[%02d-%03d] %15.10f' % (i, j, t))\n            assert l == p - 1\n\n\nif __name__ == '__main__':\n    algo = sys.argv[1] \\\n            if len(sys.argv) > 1 else None\n    data_set = [\n            data_set_1,\n            data_set_2,\n            data_set_3,\n        ]\n    bench_discrete_log(data_set, algo)\n", "comments": "  cyclic group (z pz)  p prime  order p   1 generator g    p  p   1  g    cyclic sub groups (z nz)  prime order p generator g    (n  p primes n   2   p   1)    n  p  g    cyclic sub groups (z nz)  smooth order generator g    n   g ", "content": "from __future__ import print_function, division\n\nimport sys\nfrom time import time\n\nfrom sympy.ntheory.residue_ntheory import (discrete_log,\n        _discrete_log_trial_mul, _discrete_log_shanks_steps,\n        _discrete_log_pollard_rho, _discrete_log_pohlig_hellman)\n\n\n# Cyclic group (Z/pZ)* with p prime, order p - 1 and generator g\ndata_set_1 = [\n        # p, p - 1, g\n        [191, 190, 19],\n        [46639, 46638, 6],\n        [14789363, 14789362, 2],\n        [4254225211, 4254225210, 2],\n        [432751500361, 432751500360, 7],\n        [158505390797053, 158505390797052, 2],\n        [6575202655312007, 6575202655312006, 5],\n        [8430573471995353769, 8430573471995353768, 3],\n        [3938471339744997827267, 3938471339744997827266, 2],\n        [875260951364705563393093, 875260951364705563393092, 5],\n    ]\n\n\n# Cyclic sub-groups of (Z/nZ)* with prime order p and generator g\n# (n, p are primes and n = 2 * p + 1)\ndata_set_2 = [\n        # n, p, g\n        [227, 113, 3],\n        [2447, 1223, 2],\n        [24527, 12263, 2],\n        [245639, 122819, 2],\n        [2456747, 1228373, 3],\n        [24567899, 12283949, 3],\n        [245679023, 122839511, 2],\n        [2456791307, 1228395653, 3],\n        [24567913439, 12283956719, 2],\n        [245679135407, 122839567703, 2],\n        [2456791354763, 1228395677381, 3],\n        [24567913550903, 12283956775451, 2],\n        [245679135509519, 122839567754759, 2],\n    ]\n\n\n# Cyclic sub-groups of (Z/nZ)* with smooth order o and generator g\ndata_set_3 = [\n        # n, o, g\n        [2**118, 2**116, 3],\n    ]\n\n\ndef bench_discrete_log(data_set, algo=None):\n    if algo is None:\n        f = discrete_log\n    elif algo == 'trial':\n        f = _discrete_log_trial_mul\n    elif algo == 'shanks':\n        f = _discrete_log_shanks_steps\n    elif algo == 'rho':\n        f = _discrete_log_pollard_rho\n    elif algo == 'ph':\n        f = _discrete_log_pohlig_hellman\n    else:\n        raise ValueError(\"Argument 'algo' should be one\"\n                \" of ('trial', 'shanks', 'rho' or 'ph')\")\n\n    for i, data in enumerate(data_set):\n        for j, (n, p, g) in enumerate(data):\n            t = time()\n            l = f(n, pow(g, p - 1, n), g, p)\n            t = time() - t\n            print('[%02d-%03d] %15.10f' % (i, j, t))\n            assert l == p - 1\n\n\nif __name__ == '__main__':\n    algo = sys.argv[1] \\\n            if len(sys.argv) > 1 else None\n    data_set = [\n            data_set_1,\n            data_set_2,\n            data_set_3,\n        ]\n    bench_discrete_log(data_set, algo)\n", "description": "A computer algebra system written in pure Python", "file_name": "bench_discrete_log.py", "id": "bd8d2fc91e04ec1789e9930b7fb8501f", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/benchmarks/bench_discrete_log.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
{"author": "Zulko", "code": "# -*- coding: utf-8 -*-\n\nfrom os.path import join\nimport sys\nimport pytest\nfrom moviepy.editor import *\nsys.path.append(\"tests\")\nfrom test_helper import TMP_DIR\n\ndef test_clips_array():\n    red = ColorClip((1024,800), color=(255,0,0))\n    green = ColorClip((1024,800), color=(0,255,0))\n    blue = ColorClip((1024,800), color=(0,0,255))\n\n    video = clips_array([[red, green, blue]])\n\n    with pytest.raises(ValueError,\n                       message=\"Expecting ValueError (duration not set)\"):\n       video.resize(width=480).write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n    video.close()\n    red.close()\n    green.close()\n    blue.close()\n\ndef test_clips_array_duration():\n    for i in range(20):\n        red = ColorClip((1024,800), color=(255,0,0))\n        green = ColorClip((1024,800), color=(0,255,0))\n        blue = ColorClip((1024,800), color=(0,0,255))\n\n        with clips_array([[red, green, blue]]).set_duration(5) as video:\n            with pytest.raises(AttributeError,\n                               message=\"Expecting ValueError (fps not set)\"):\n                 video.write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n\n\n        \n        red.fps = green.fps = blue.fps = 30\n\n        with clips_array([[red, green, blue]]).set_duration(5) as video:\n            video.write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n\n        red.close()\n        green.close()\n        blue.close()\n", "comments": "   compositing tests use pytest            coding  utf 8       one work correctly ", "content": "# -*- coding: utf-8 -*-\n\"\"\"Compositing tests for use with pytest.\"\"\"\nfrom os.path import join\nimport sys\nimport pytest\nfrom moviepy.editor import *\nsys.path.append(\"tests\")\nfrom test_helper import TMP_DIR\n\ndef test_clips_array():\n    red = ColorClip((1024,800), color=(255,0,0))\n    green = ColorClip((1024,800), color=(0,255,0))\n    blue = ColorClip((1024,800), color=(0,0,255))\n\n    video = clips_array([[red, green, blue]])\n\n    with pytest.raises(ValueError,\n                       message=\"Expecting ValueError (duration not set)\"):\n       video.resize(width=480).write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n    video.close()\n    red.close()\n    green.close()\n    blue.close()\n\ndef test_clips_array_duration():\n    for i in range(20):\n        red = ColorClip((1024,800), color=(255,0,0))\n        green = ColorClip((1024,800), color=(0,255,0))\n        blue = ColorClip((1024,800), color=(0,0,255))\n\n        with clips_array([[red, green, blue]]).set_duration(5) as video:\n            with pytest.raises(AttributeError,\n                               message=\"Expecting ValueError (fps not set)\"):\n                 video.write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n\n\n        #this one should work correctly\n        red.fps = green.fps = blue.fps = 30\n\n        with clips_array([[red, green, blue]]).set_duration(5) as video:\n            video.write_videofile(join(TMP_DIR, \"test_clips_array.mp4\"))\n\n        red.close()\n        green.close()\n        blue.close()\n", "description": "Video editing with Python", "file_name": "test_compositing.py", "id": "1561597c6f5f434e05b2b8aa0ae2b54f", "language": "Python", "project_name": "moviepy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/Zulko-moviepy/Zulko-moviepy-6cbd4f3/tests/test_compositing.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:21:24Z", "url": "https://github.com/Zulko/moviepy", "wiki": true}
{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.history import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture(autouse=True)\ndef history_without_current(mocker):\n    return mocker.patch(\n        'thefuck.rules.history.get_valid_history_without_current',\n        return_value=['ls cat', 'diff x'])\n\n\n@pytest.mark.parametrize('script', ['ls cet', 'daff x'])\ndef test_match(script):\n    assert match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script', ['apt-get', 'nocommand y'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('ls cet', 'ls cat'),\n    ('daff x', 'diff x')])\ndef test_get_new_command(script, result):\n    assert get_new_command(Command(script, '')) == result\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.history import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture(autouse=True)\ndef history_without_current(mocker):\n    return mocker.patch(\n        'thefuck.rules.history.get_valid_history_without_current',\n        return_value=['ls cat', 'diff x'])\n\n\n@pytest.mark.parametrize('script', ['ls cet', 'daff x'])\ndef test_match(script):\n    assert match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script', ['apt-get', 'nocommand y'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('ls cet', 'ls cat'),\n    ('daff x', 'diff x')])\ndef test_get_new_command(script, result):\n    assert get_new_command(Command(script, '')) == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_history.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_history.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
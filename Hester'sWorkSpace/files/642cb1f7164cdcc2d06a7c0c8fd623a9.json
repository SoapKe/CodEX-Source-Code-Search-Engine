{"author": "audreyr", "code": "# -*- coding: utf-8 -*-\n\n\"\"\"\ntest_cookiecutter_local_with_input\n----------------------------------\n\nTests formerly known from a unittest residing in test_main.py named\nTestCookiecutterLocalWithInput.test_cookiecutter_local_with_input\nTestCookiecutterLocalWithInput.test_cookiecutter_input_extra_context\n\"\"\"\n\nimport os\nimport pytest\n\nfrom cookiecutter import main, utils\n\n\n@pytest.fixture(scope='function')\ndef remove_additional_dirs(request):\n    \"\"\"\n    Remove special directories which are created during the tests.\n    \"\"\"\n    def fin_remove_additional_dirs():\n        if os.path.isdir('fake-project'):\n            utils.rmtree('fake-project')\n        if os.path.isdir('fake-project-input-extra'):\n            utils.rmtree('fake-project-input-extra')\n    request.addfinalizer(fin_remove_additional_dirs)\n\n\n@pytest.mark.usefixtures('clean_system', 'remove_additional_dirs')\ndef test_cookiecutter_local_with_input(monkeypatch):\n    monkeypatch.setattr(\n        'cookiecutter.prompt.read_user_variable',\n        lambda var, default: default\n    )\n    main.cookiecutter('tests/fake-repo-pre/', no_input=False)\n    assert os.path.isdir('tests/fake-repo-pre/{{cookiecutter.repo_name}}')\n    assert not os.path.isdir('tests/fake-repo-pre/fake-project')\n    assert os.path.isdir('fake-project')\n    assert os.path.isfile('fake-project/README.rst')\n    assert not os.path.exists('fake-project/json/')\n\n\n@pytest.mark.usefixtures('clean_system', 'remove_additional_dirs')\ndef test_cookiecutter_input_extra_context(monkeypatch):\n    \"\"\"\n    `Call cookiecutter()` with `no_input=False` and `extra_context`\n    \"\"\"\n    monkeypatch.setattr(\n        'cookiecutter.prompt.read_user_variable',\n        lambda var, default: default\n    )\n    main.cookiecutter(\n        'tests/fake-repo-pre',\n        no_input=False,\n        extra_context={'repo_name': 'fake-project-input-extra'}\n    )\n    assert os.path.isdir('fake-project-input-extra')\n", "comments": "    test cookiecutter local input                                     tests formerly known unittest residing test main py named testcookiecutterlocalwithinput test cookiecutter local input testcookiecutterlocalwithinput test cookiecutter input extra context      import os import pytest  cookiecutter import main  utils    pytest fixture(scope  function ) def remove additional dirs(request)              remove special directories created tests              def fin remove additional dirs()          os path isdir( fake project )              utils rmtree( fake project )         os path isdir( fake project input extra )              utils rmtree( fake project input extra )     request addfinalizer(fin remove additional dirs)    pytest mark usefixtures( clean system    remove additional dirs ) def test cookiecutter local input(monkeypatch)      monkeypatch setattr(          cookiecutter prompt read user variable           lambda var  default  default     )     main cookiecutter( tests fake repo pre    input false)     assert os path isdir( tests fake repo pre   cookiecutter repo name   )     assert os path isdir( tests fake repo pre fake project )     assert os path isdir( fake project )     assert os path isfile( fake project readme rst )     assert os path exists( fake project json  )    pytest mark usefixtures( clean system    remove additional dirs ) def test cookiecutter input extra context(monkeypatch)               call cookiecutter()   input false   extra context                 coding  utf 8     ", "content": "# -*- coding: utf-8 -*-\n\n\"\"\"\ntest_cookiecutter_local_with_input\n----------------------------------\n\nTests formerly known from a unittest residing in test_main.py named\nTestCookiecutterLocalWithInput.test_cookiecutter_local_with_input\nTestCookiecutterLocalWithInput.test_cookiecutter_input_extra_context\n\"\"\"\n\nimport os\nimport pytest\n\nfrom cookiecutter import main, utils\n\n\n@pytest.fixture(scope='function')\ndef remove_additional_dirs(request):\n    \"\"\"\n    Remove special directories which are created during the tests.\n    \"\"\"\n    def fin_remove_additional_dirs():\n        if os.path.isdir('fake-project'):\n            utils.rmtree('fake-project')\n        if os.path.isdir('fake-project-input-extra'):\n            utils.rmtree('fake-project-input-extra')\n    request.addfinalizer(fin_remove_additional_dirs)\n\n\n@pytest.mark.usefixtures('clean_system', 'remove_additional_dirs')\ndef test_cookiecutter_local_with_input(monkeypatch):\n    monkeypatch.setattr(\n        'cookiecutter.prompt.read_user_variable',\n        lambda var, default: default\n    )\n    main.cookiecutter('tests/fake-repo-pre/', no_input=False)\n    assert os.path.isdir('tests/fake-repo-pre/{{cookiecutter.repo_name}}')\n    assert not os.path.isdir('tests/fake-repo-pre/fake-project')\n    assert os.path.isdir('fake-project')\n    assert os.path.isfile('fake-project/README.rst')\n    assert not os.path.exists('fake-project/json/')\n\n\n@pytest.mark.usefixtures('clean_system', 'remove_additional_dirs')\ndef test_cookiecutter_input_extra_context(monkeypatch):\n    \"\"\"\n    `Call cookiecutter()` with `no_input=False` and `extra_context`\n    \"\"\"\n    monkeypatch.setattr(\n        'cookiecutter.prompt.read_user_variable',\n        lambda var, default: default\n    )\n    main.cookiecutter(\n        'tests/fake-repo-pre',\n        no_input=False,\n        extra_context={'repo_name': 'fake-project-input-extra'}\n    )\n    assert os.path.isdir('fake-project-input-extra')\n", "description": "A command-line utility that creates projects from cookiecutters (project templates). E.g. Python package projects, jQuery plugin projects.", "file_name": "test_cookiecutter_local_with_input.py", "id": "642cb1f7164cdcc2d06a7c0c8fd623a9", "language": "Python", "project_name": "cookiecutter", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/audreyr-cookiecutter/audreyr-cookiecutter-7154cf2/tests/test_cookiecutter_local_with_input.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:52:22Z", "url": "https://github.com/audreyr/cookiecutter", "wiki": true}
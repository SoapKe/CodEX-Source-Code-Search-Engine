{"author": "facebook", "code": "\n\n Copyright (c) 2014, Facebook, Inc.\n\n\n This source code is licensed under the BSD-style license found in the\n LICENSE file in the root directory of this source tree. An additional grant\n of patent rights can be found in the PATENTS file in the same directory.\n\nimport lldb\n\nclass FBInputHandler:\n  def __init__(self, debugger, callback):\n    self.debugger = debugger\n    self.callback = callback\n    self.inputReader = lldb.SBInputReader()\n    self.inputReader.Initialize(\n                                debugger,\n                                self.handleInput,\n                                lldb.eInputReaderGranularityLine,\n                                None,\n                                None,  prompt\n                                True  echo\n                                )\n\n  def isValid(self):\n    return not self.inputReader.IsDone()\n\n  def start(self):\n    self.debugger.PushInputReader(self.inputReader)\n\n  def stop(self):\n    self.inputReader.SetIsDone(True)\n\n  def handleInput(self, inputReader, notification, bytes):\n    if notification == lldb.eInputReaderGotToken:\n      self.callback(bytes)\n    elif notification == lldb.eInputReaderInterrupt:\n      self.stop()\n\n    return len(bytes)\n", "comments": "   usr bin python    copyright (c) 2014  facebook  inc     all rights reserved        this source code licensed bsd style license found    license file root directory source tree  an additional grant    patent rights found patents file directory     prompt    echo ", "content": "#!/usr/bin/python\n\n# Copyright (c) 2014, Facebook, Inc.\n# All rights reserved.\n#\n# This source code is licensed under the BSD-style license found in the\n# LICENSE file in the root directory of this source tree. An additional grant\n# of patent rights can be found in the PATENTS file in the same directory.\n\nimport lldb\n\nclass FBInputHandler:\n  def __init__(self, debugger, callback):\n    self.debugger = debugger\n    self.callback = callback\n    self.inputReader = lldb.SBInputReader()\n    self.inputReader.Initialize(\n                                debugger,\n                                self.handleInput,\n                                lldb.eInputReaderGranularityLine,\n                                None,\n                                None, # prompt\n                                True # echo\n                                )\n\n  def isValid(self):\n    return not self.inputReader.IsDone()\n\n  def start(self):\n    self.debugger.PushInputReader(self.inputReader)\n\n  def stop(self):\n    self.inputReader.SetIsDone(True)\n\n  def handleInput(self, inputReader, notification, bytes):\n    if notification == lldb.eInputReaderGotToken:\n      self.callback(bytes)\n    elif notification == lldb.eInputReaderInterrupt:\n      self.stop()\n\n    return len(bytes)\n", "description": "Chisel is a collection of LLDB commands to assist debugging iOS apps.", "file_name": "fblldbinputhelpers.py", "id": "4f6ccea58402d0b8799c3fc22fd150ad", "language": "Python", "project_name": "chisel", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/facebook-chisel/facebook-chisel-8312a63/fblldbinputhelpers.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:09:48Z", "url": "https://github.com/facebook/chisel", "wiki": true}
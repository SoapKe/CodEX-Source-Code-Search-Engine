{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nimport json\n\nfrom odoo import http\nfrom odoo.http import request\nfrom odoo.tools import html_escape as escape\n\n\nclass GoogleMap(http.Controller):\n    '''\n    This class generates on-the-fly partner maps that can be reused in every\n    website page. To do so, just use an ``<iframe ...>`` whose ``src``\n    attribute points to ``/google_map`` (this controller generates a complete\n    HTML5 page).\n\n    URL query parameters:\n    - ``partner_ids``: a comma-separated list of ids (partners to be shown)\n    - ``partner_url``: the base-url to display the partner\n        (eg: if ``partner_url`` is ``/partners/``, when the user will click on\n        a partner on the map, it will be redirected to <myodoo>.com/partners/<id>)\n\n    In order to resize the map, simply resize the ``iframe`` with CSS\n    directives ``width`` and ``height``.\n    '''\n\n    @http.route(['/google_map'], type='http', auth=\"public\", website=True)\n    def google_map(self, *arg, **post):\n        clean_ids = []\n        for partner_id in post.get('partner_ids', \"\").split(\",\"):\n            try:\n                clean_ids.append(int(partner_id))\n            except ValueError:\n                pass\n        partners = request.env['res.partner'].sudo().search([(\"id\", \"in\", clean_ids),\n                                                             ('website_published', '=', True), ('is_company', '=', True)])\n        partner_data = {\n            \"counter\": len(partners),\n            \"partners\": []\n        }\n        for partner in partners.with_context({'show_address': True}):\n            \n            partner_data[\"partners\"].append({\n                'id': partner.id,\n                'name': escape(partner.name),\n                'address': escape('\\n'.join(partner.name_get()[0][1].split('\\n')[1:])),\n                'latitude': escape(str(partner.partner_latitude)),\n                'longitude': escape(str(partner.partner_longitude)),\n            })\n        if 'customers' in post.get('partner_url', ''):\n            partner_url = '/customers/'\n        else:\n            partner_url = '/partners/'\n\n        google_maps_api_key = request.env['ir.config_parameter'].sudo().get_param('google_maps_api_key')\n        values = {\n            'partner_url': partner_url,\n            'partner_data': json.dumps(partner_data),\n            'google_maps_api_key': google_maps_api_key,\n        }\n        return request.render(\"website_google_map.google_map\", values)\n", "comments": "        this class generates fly partner maps reused every     website page  to  use    iframe        whose   src       attribute points    google map   (this controller generates complete     html5 page)       url query parameters          partner ids    comma separated list ids (partners shown)         partner url    base url display partner         (eg    partner url      partners     user click         partner map  redirected  myodoo  com partners  id )      in order resize map  simply resize   iframe   css     directives   width     height                   coding  utf 8        part odoo  see license file full copyright licensing details     todo master  use  escape   esc  qweb template  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\nimport json\n\nfrom odoo import http\nfrom odoo.http import request\nfrom odoo.tools import html_escape as escape\n\n\nclass GoogleMap(http.Controller):\n    '''\n    This class generates on-the-fly partner maps that can be reused in every\n    website page. To do so, just use an ``<iframe ...>`` whose ``src``\n    attribute points to ``/google_map`` (this controller generates a complete\n    HTML5 page).\n\n    URL query parameters:\n    - ``partner_ids``: a comma-separated list of ids (partners to be shown)\n    - ``partner_url``: the base-url to display the partner\n        (eg: if ``partner_url`` is ``/partners/``, when the user will click on\n        a partner on the map, it will be redirected to <myodoo>.com/partners/<id>)\n\n    In order to resize the map, simply resize the ``iframe`` with CSS\n    directives ``width`` and ``height``.\n    '''\n\n    @http.route(['/google_map'], type='http', auth=\"public\", website=True)\n    def google_map(self, *arg, **post):\n        clean_ids = []\n        for partner_id in post.get('partner_ids', \"\").split(\",\"):\n            try:\n                clean_ids.append(int(partner_id))\n            except ValueError:\n                pass\n        partners = request.env['res.partner'].sudo().search([(\"id\", \"in\", clean_ids),\n                                                             ('website_published', '=', True), ('is_company', '=', True)])\n        partner_data = {\n            \"counter\": len(partners),\n            \"partners\": []\n        }\n        for partner in partners.with_context({'show_address': True}):\n            # TODO in master, do not use `escape` but `t-esc` in the qweb template.\n            partner_data[\"partners\"].append({\n                'id': partner.id,\n                'name': escape(partner.name),\n                'address': escape('\\n'.join(partner.name_get()[0][1].split('\\n')[1:])),\n                'latitude': escape(str(partner.partner_latitude)),\n                'longitude': escape(str(partner.partner_longitude)),\n            })\n        if 'customers' in post.get('partner_url', ''):\n            partner_url = '/customers/'\n        else:\n            partner_url = '/partners/'\n\n        google_maps_api_key = request.env['ir.config_parameter'].sudo().get_param('google_maps_api_key')\n        values = {\n            'partner_url': partner_url,\n            'partner_data': json.dumps(partner_data),\n            'google_maps_api_key': google_maps_api_key,\n        }\n        return request.render(\"website_google_map.google_map\", values)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "4a65c23e2557874a9b6cc4ff334fbb1b", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_google_map/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
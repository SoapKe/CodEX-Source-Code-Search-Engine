{"author": "ansible", "code": "'''\nCreate GCE resources for use in integration tests.\n\nTakes a prefix as a command-line argument and creates two persistent disks named\n${prefix}-base and ${prefix}-extra and a snapshot of the base disk named\n${prefix}-snapshot. prefix will be forced to lowercase, to ensure the names are\nlegal GCE resource names.\n'''\n\nimport gce_credentials\nimport optparse\nimport sys\n\n\ndef parse_args():\n    parser = optparse.OptionParser(\n        usage=\"%s [options] <prefix>\" % (sys.argv[0],), description=__doc__\n    )\n    gce_credentials.add_credentials_options(parser)\n    parser.add_option(\n        \"--prefix\",\n        action=\"store\",\n        dest=\"prefix\",\n        help=\"String used to prefix GCE resource names (default: %default)\"\n    )\n\n    (opts, args) = parser.parse_args()\n    gce_credentials.check_required(opts, parser)\n    if not args:\n        parser.error(\"Missing required argument: name prefix\")\n    return (opts, args)\n\n\nif __name__ == '__main__':\n\n    (opts, args) = parse_args()\n    gce = gce_credentials.get_gce_driver(opts)\n    prefix = args[0].lower()\n    try:\n        base_volume = gce.create_volume(\n            size=10, name=prefix + '-base', location='us-central1-a')\n        gce.create_volume_snapshot(base_volume, name=prefix + '-snapshot')\n        gce.create_volume(size=10, name=prefix + '-extra', location='us-central1-a')\n    except KeyboardInterrupt as e:\n        print(\"\\nExiting on user command.\")\n", "comments": "    create gce resources use integration tests   takes prefix command line argument creates two persistent disks named   prefix  base   prefix  extra snapshot base disk named   prefix  snapshot  prefix forced lowercase  ensure names legal gce resource names      ", "content": "'''\nCreate GCE resources for use in integration tests.\n\nTakes a prefix as a command-line argument and creates two persistent disks named\n${prefix}-base and ${prefix}-extra and a snapshot of the base disk named\n${prefix}-snapshot. prefix will be forced to lowercase, to ensure the names are\nlegal GCE resource names.\n'''\n\nimport gce_credentials\nimport optparse\nimport sys\n\n\ndef parse_args():\n    parser = optparse.OptionParser(\n        usage=\"%s [options] <prefix>\" % (sys.argv[0],), description=__doc__\n    )\n    gce_credentials.add_credentials_options(parser)\n    parser.add_option(\n        \"--prefix\",\n        action=\"store\",\n        dest=\"prefix\",\n        help=\"String used to prefix GCE resource names (default: %default)\"\n    )\n\n    (opts, args) = parser.parse_args()\n    gce_credentials.check_required(opts, parser)\n    if not args:\n        parser.error(\"Missing required argument: name prefix\")\n    return (opts, args)\n\n\nif __name__ == '__main__':\n\n    (opts, args) = parse_args()\n    gce = gce_credentials.get_gce_driver(opts)\n    prefix = args[0].lower()\n    try:\n        base_volume = gce.create_volume(\n            size=10, name=prefix + '-base', location='us-central1-a')\n        gce.create_volume_snapshot(base_volume, name=prefix + '-snapshot')\n        gce.create_volume(size=10, name=prefix + '-extra', location='us-central1-a')\n    except KeyboardInterrupt as e:\n        print(\"\\nExiting on user command.\")\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "setup_gce.py", "id": "0c76ed6aaf678ad91cb6215338524eba", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/legacy/setup_gce.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
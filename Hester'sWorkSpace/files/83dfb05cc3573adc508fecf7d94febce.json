{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.prove_recursively import match, get_new_command\nfrom thefuck.types import Command\n\n\noutput = \n\n\n@pytest.fixture\ndef isdir(mocker):\n    return mocker.patch('thefuck.rules.prove_recursively'\n                        '.os.path.isdir')\n\n\n@pytest.mark.parametrize('script, output', [\n    ('prove -lv t', output),\n    ('prove app/t', output)])\ndef test_match(isdir, script, output):\n    isdir.return_value = True\n    command = Command(script, output)\n    assert match(command)\n\n\n@pytest.mark.parametrize('script, output, isdir_result', [\n    ('prove -lv t', output, False),\n    ('prove -r t', output, True),\n    ('prove --recurse t', output, True)])\ndef test_not_match(isdir, script, output, isdir_result):\n    isdir.return_value = isdir_result\n    command = Command(script, output)\n    assert not match(command)\n\n\n@pytest.mark.parametrize('before, after', [\n    ('prove -lv t', 'prove -r -lv t'),\n    ('prove t', 'prove -r t')])\ndef test_get_new_command(before, after):\n    command = Command(before, output)\n    assert get_new_command(command) == after\n", "comments": "Files=0, Tests=0,  0 wallclock secs ( 0.00 usr +  0.00 sys =  0.00 CPU)\nResult: NOTESTS\nS\n", "content": "import pytest\nfrom thefuck.rules.prove_recursively import match, get_new_command\nfrom thefuck.types import Command\n\n\noutput = '''Files=0, Tests=0,  0 wallclock secs ( 0.00 usr +  0.00 sys =  0.00 CPU)\nResult: NOTESTS'''\n\n\n@pytest.fixture\ndef isdir(mocker):\n    return mocker.patch('thefuck.rules.prove_recursively'\n                        '.os.path.isdir')\n\n\n@pytest.mark.parametrize('script, output', [\n    ('prove -lv t', output),\n    ('prove app/t', output)])\ndef test_match(isdir, script, output):\n    isdir.return_value = True\n    command = Command(script, output)\n    assert match(command)\n\n\n@pytest.mark.parametrize('script, output, isdir_result', [\n    ('prove -lv t', output, False),\n    ('prove -r t', output, True),\n    ('prove --recurse t', output, True)])\ndef test_not_match(isdir, script, output, isdir_result):\n    isdir.return_value = isdir_result\n    command = Command(script, output)\n    assert not match(command)\n\n\n@pytest.mark.parametrize('before, after', [\n    ('prove -lv t', 'prove -r -lv t'),\n    ('prove t', 'prove -r t')])\ndef test_get_new_command(before, after):\n    command = Command(before, output)\n    assert get_new_command(command) == after\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_prove_recursively.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_prove_recursively.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "HelloZeroNet", "code": "import re\n\nfrom Plugin import PluginManager\n\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n\n    def __init__(self, *args, **kwargs):\n        from Site import SiteManager\n        self.site_manager = SiteManager.site_manager\n        super(UiRequestPlugin, self).__init__(*args, **kwargs)\n\n    \n    def actionSiteMedia(self, path, **kwargs):\n        match = re.match(\"/media/(?P<address>[A-Za-z0-9-]+\\.[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", path)\n        if match:  \n            domain = match.group(\"address\")\n            address = self.site_manager.resolveDomain(domain)\n            if address:\n                path = \"/media/\" + address + match.group(\"inner_path\")\n        return super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)  \n\n@PluginManager.registerTo(\"ConfigPlugin\")\nclass ConfigPlugin(object):\n    def createArguments(self):\n        group = self.parser.add_argument_group(\"Zeroname plugin\")\n        group.add_argument('--bit_resolver', help='ZeroNet site to resolve .bit domains', default=\"1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F\", metavar=\"address\")\n\n        return super(ConfigPlugin, self).createArguments()\n", "comments": "media request its valid domain resolve first get wrapper frame output", "content": "import re\n\nfrom Plugin import PluginManager\n\n\n@PluginManager.registerTo(\"UiRequest\")\nclass UiRequestPlugin(object):\n\n    def __init__(self, *args, **kwargs):\n        from Site import SiteManager\n        self.site_manager = SiteManager.site_manager\n        super(UiRequestPlugin, self).__init__(*args, **kwargs)\n\n    # Media request\n    def actionSiteMedia(self, path, **kwargs):\n        match = re.match(\"/media/(?P<address>[A-Za-z0-9-]+\\.[A-Za-z0-9\\.-]+)(?P<inner_path>/.*|$)\", path)\n        if match:  # Its a valid domain, resolve first\n            domain = match.group(\"address\")\n            address = self.site_manager.resolveDomain(domain)\n            if address:\n                path = \"/media/\" + address + match.group(\"inner_path\")\n        return super(UiRequestPlugin, self).actionSiteMedia(path, **kwargs)  # Get the wrapper frame output\n\n@PluginManager.registerTo(\"ConfigPlugin\")\nclass ConfigPlugin(object):\n    def createArguments(self):\n        group = self.parser.add_argument_group(\"Zeroname plugin\")\n        group.add_argument('--bit_resolver', help='ZeroNet site to resolve .bit domains', default=\"1Name2NXVi1RDPDgf5617UoW7xA6YrhM9F\", metavar=\"address\")\n\n        return super(ConfigPlugin, self).createArguments()\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "UiRequestPlugin.py", "id": "019cdd99531969118b82deca225a23cb", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-3bdb6a2/plugins/Zeroname/UiRequestPlugin.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:21:08Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
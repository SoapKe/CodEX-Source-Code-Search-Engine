{"author": "keon", "code": "\n# Each person is described by a pair of integers (h, k),\n\n\n\n\n\n\n\n\n\n\n# [[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\n\n# [[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n\ndef reconstruct_queue(people):\n    \"\"\"\n    :type people: List[List[int]]\n    :rtype: List[List[int]]\n    \"\"\"\n    queue = []\n    people.sort(key=lambda x: (-x[0], x[1]))\n    for h, k in people:\n        queue.insert(k, (h, k))\n    return queue\n\n\n", "comments": "         type people  list list int        rtype  list list int              suppose random list people standing queue     each person described pair integers (h  k)     h height person k number people    front person height greater equal h     write algorithm reconstruct queue     note     the number people less 1 100     example    input       7 0    4 4    7 1    5 0    6 1    5 2      output       5 0    7 0    5 2    6 1    4 4    7 1   ", "content": "# Suppose you have a random list of people standing in a queue.\n# Each person is described by a pair of integers (h, k),\n# where h is the height of the person and k is the number of people\n# in front of this person who have a height greater than or equal to h.\n# Write an algorithm to reconstruct the queue.\n\n# Note:\n# The number of people is less than 1,100.\n\n# Example\n\n# Input:\n# [[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\n# Output:\n# [[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n\ndef reconstruct_queue(people):\n    \"\"\"\n    :type people: List[List[int]]\n    :rtype: List[List[int]]\n    \"\"\"\n    queue = []\n    people.sort(key=lambda x: (-x[0], x[1]))\n    for h, k in people:\n        queue.insert(k, (h, k))\n    return queue\n\n\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "reconstruct_queue.py", "id": "1e42aab7de88f4e845b1e35510a578db", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/queues/reconstruct_queue.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
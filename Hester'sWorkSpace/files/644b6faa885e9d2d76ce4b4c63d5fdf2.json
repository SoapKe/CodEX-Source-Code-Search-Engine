{"author": "rg3", "code": "\n\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass TudouPlaylistIE(InfoExtractor):\n    IE_NAME = 'tudou:playlist'\n    _VALID_URL = r'https?://(?:www\\.)?tudou\\.com/listplay/(?P<id>[\\w-]{11})\\.html'\n    _TESTS = [{\n        'url': 'http://www.tudou.com/listplay/zzdE77v6Mmo.html',\n        'info_dict': {\n            'id': 'zzdE77v6Mmo',\n        },\n        'playlist_mincount': 209,\n    }]\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n        playlist_data = self._download_json(\n            'http://www.tudou.com/tvp/plist.action?lcode=%s' % playlist_id, playlist_id)\n        entries = [self.url_result(\n            'http://www.tudou.com/programs/view/%s' % item['icode'],\n            'Tudou', item['icode'],\n            item['kw']) for item in playlist_data['items']]\n        return self.playlist_result(entries, playlist_id)\n\n\nclass TudouAlbumIE(InfoExtractor):\n    IE_NAME = 'tudou:album'\n    _VALID_URL = r'https?://(?:www\\.)?tudou\\.com/album(?:cover|play)/(?P<id>[\\w-]{11})'\n    _TESTS = [{\n        'url': 'http://www.tudou.com/albumplay/v5qckFJvNJg.html',\n        'info_dict': {\n            'id': 'v5qckFJvNJg',\n        },\n        'playlist_mincount': 45,\n    }]\n\n    def _real_extract(self, url):\n        album_id = self._match_id(url)\n        album_data = self._download_json(\n            'http://www.tudou.com/tvp/alist.action?acode=%s' % album_id, album_id)\n        entries = [self.url_result(\n            'http://www.tudou.com/programs/view/%s' % item['icode'],\n            'Tudou', item['icode'],\n            item['kw']) for item in album_data['items']]\n        return self.playlist_result(entries, album_id)\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\n\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass TudouPlaylistIE(InfoExtractor):\n    IE_NAME = 'tudou:playlist'\n    _VALID_URL = r'https?://(?:www\\.)?tudou\\.com/listplay/(?P<id>[\\w-]{11})\\.html'\n    _TESTS = [{\n        'url': 'http://www.tudou.com/listplay/zzdE77v6Mmo.html',\n        'info_dict': {\n            'id': 'zzdE77v6Mmo',\n        },\n        'playlist_mincount': 209,\n    }]\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n        playlist_data = self._download_json(\n            'http://www.tudou.com/tvp/plist.action?lcode=%s' % playlist_id, playlist_id)\n        entries = [self.url_result(\n            'http://www.tudou.com/programs/view/%s' % item['icode'],\n            'Tudou', item['icode'],\n            item['kw']) for item in playlist_data['items']]\n        return self.playlist_result(entries, playlist_id)\n\n\nclass TudouAlbumIE(InfoExtractor):\n    IE_NAME = 'tudou:album'\n    _VALID_URL = r'https?://(?:www\\.)?tudou\\.com/album(?:cover|play)/(?P<id>[\\w-]{11})'\n    _TESTS = [{\n        'url': 'http://www.tudou.com/albumplay/v5qckFJvNJg.html',\n        'info_dict': {\n            'id': 'v5qckFJvNJg',\n        },\n        'playlist_mincount': 45,\n    }]\n\n    def _real_extract(self, url):\n        album_id = self._match_id(url)\n        album_data = self._download_json(\n            'http://www.tudou.com/tvp/alist.action?acode=%s' % album_id, album_id)\n        entries = [self.url_result(\n            'http://www.tudou.com/programs/view/%s' % item['icode'],\n            'Tudou', item['icode'],\n            item['kw']) for item in album_data['items']]\n        return self.playlist_result(entries, album_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tudou.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tudou.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
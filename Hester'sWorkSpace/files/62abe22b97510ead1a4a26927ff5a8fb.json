{"author": "ansible", "code": "\n (c) 2017 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport re\nimport json\n\nfrom itertools import chain\n\nfrom ansible.module_utils._text import to_bytes, to_text\nfrom ansible.module_utils.network.common.utils import to_list\nfrom ansible.plugins.cliconf import CliconfBase, enable_mode\n\n\nclass Cliconf(CliconfBase):\n\n    def get_device_info(self):\n        device_info = {}\n\n        device_info['network_os'] = 'ios'\n        reply = self.get(b'show version')\n        data = to_text(reply, errors='surrogate_or_strict').strip()\n\n        match = re.search(r'Version (\\S+),', data)\n        if match:\n            device_info['network_os_version'] = match.group(1)\n\n        match = re.search(r'^Cisco (.+) \\(revision', data, re.M)\n        if match:\n            device_info['network_os_model'] = match.group(1)\n\n        match = re.search(r'^(.+) uptime', data, re.M)\n        if match:\n            device_info['network_os_hostname'] = match.group(1)\n\n        return device_info\n\n    @enable_mode\n    def get_config(self, source='running', format='text', flags=None):\n        if source not in ('running', 'startup'):\n            return self.invalid_params(\"fetching configuration from %s is not supported\" % source)\n        if source == 'running':\n            cmd = 'show running-config '\n            if not flags:\n                flags = ['all']\n        else:\n            cmd = 'show startup-config'\n\n        cmd += ' '.join(to_list(flags))\n        cmd = cmd.strip()\n\n        return self.send_command(cmd)\n\n    @enable_mode\n    def edit_config(self, command):\n        for cmd in chain(['configure terminal'], to_list(command), ['end']):\n            if isinstance(cmd, dict):\n                command = cmd['command']\n                prompt = cmd['prompt']\n                answer = cmd['answer']\n                newline = cmd.get('newline', True)\n            else:\n                command = cmd\n                prompt = None\n                answer = None\n                newline = True\n\n            self.send_command(command, prompt, answer, False, newline)\n\n    def get(self, command, prompt=None, answer=None, sendonly=False):\n        return self.send_command(command, prompt=prompt, answer=answer, sendonly=sendonly)\n\n    def get_capabilities(self):\n        result = {}\n        result['rpc'] = self.get_base_rpc()\n        result['network_api'] = 'cliconf'\n        result['device_info'] = self.get_device_info()\n        return json.dumps(result)\n", "comments": "     (c) 2017 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       ", "content": "#\n# (c) 2017 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n#\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nimport re\nimport json\n\nfrom itertools import chain\n\nfrom ansible.module_utils._text import to_bytes, to_text\nfrom ansible.module_utils.network.common.utils import to_list\nfrom ansible.plugins.cliconf import CliconfBase, enable_mode\n\n\nclass Cliconf(CliconfBase):\n\n    def get_device_info(self):\n        device_info = {}\n\n        device_info['network_os'] = 'ios'\n        reply = self.get(b'show version')\n        data = to_text(reply, errors='surrogate_or_strict').strip()\n\n        match = re.search(r'Version (\\S+),', data)\n        if match:\n            device_info['network_os_version'] = match.group(1)\n\n        match = re.search(r'^Cisco (.+) \\(revision', data, re.M)\n        if match:\n            device_info['network_os_model'] = match.group(1)\n\n        match = re.search(r'^(.+) uptime', data, re.M)\n        if match:\n            device_info['network_os_hostname'] = match.group(1)\n\n        return device_info\n\n    @enable_mode\n    def get_config(self, source='running', format='text', flags=None):\n        if source not in ('running', 'startup'):\n            return self.invalid_params(\"fetching configuration from %s is not supported\" % source)\n        if source == 'running':\n            cmd = 'show running-config '\n            if not flags:\n                flags = ['all']\n        else:\n            cmd = 'show startup-config'\n\n        cmd += ' '.join(to_list(flags))\n        cmd = cmd.strip()\n\n        return self.send_command(cmd)\n\n    @enable_mode\n    def edit_config(self, command):\n        for cmd in chain(['configure terminal'], to_list(command), ['end']):\n            if isinstance(cmd, dict):\n                command = cmd['command']\n                prompt = cmd['prompt']\n                answer = cmd['answer']\n                newline = cmd.get('newline', True)\n            else:\n                command = cmd\n                prompt = None\n                answer = None\n                newline = True\n\n            self.send_command(command, prompt, answer, False, newline)\n\n    def get(self, command, prompt=None, answer=None, sendonly=False):\n        return self.send_command(command, prompt=prompt, answer=answer, sendonly=sendonly)\n\n    def get_capabilities(self):\n        result = {}\n        result['rpc'] = self.get_base_rpc()\n        result['network_api'] = 'cliconf'\n        result['device_info'] = self.get_device_info()\n        return json.dumps(result)\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "ios.py", "id": "62abe22b97510ead1a4a26927ff5a8fb", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/plugins/cliconf/ios.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
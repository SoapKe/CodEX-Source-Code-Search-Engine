{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass HuajiaoIE(InfoExtractor):\n    IE_DESC = '\u82b1\u6912\u76f4\u64ad'\n    _VALID_URL = r'https?://(?:www\\.)?huajiao\\.com/l/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.huajiao.com/l/38941232',\n        'md5': 'd08bf9ac98787d24d1e4c0283f2d372d',\n        'info_dict': {\n            'id': '38941232',\n            'ext': 'mp4',\n            'title': '\n            'description': 're:.*',\n            'duration': 2424.0,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1475866459,\n            'upload_date': '20161007',\n            'uploader': 'Penny_\u4f59\u59ff\u6600',\n            'uploader_id': '75206005',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        feed_json = self._search_regex(\n            r'var\\s+feed\\s*=\\s*({.+})', webpage, 'feed json')\n        feed = self._parse_json(feed_json, video_id)\n\n        description = self._html_search_meta(\n            'description', webpage, 'description', fatal=False)\n\n        def get(section, field):\n            return feed.get(section, {}).get(field)\n\n        return {\n            'id': video_id,\n            'title': feed['feed']['formated_title'],\n            'description': description,\n            'duration': parse_duration(get('feed', 'duration')),\n            'thumbnail': get('feed', 'image'),\n            'timestamp': parse_iso8601(feed.get('creatime'), ' '),\n            'uploader': get('author', 'nickname'),\n            'uploader_id': get('author', 'uid'),\n            'formats': self._extract_m3u8_formats(\n                feed['feed']['m3u8'], video_id, 'mp4', 'm3u8_native'),\n        }\n", "comments": "# coding: utf-8\n#\u65b0\u4eba\u6c42\u5173\u6ce8#',\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass HuajiaoIE(InfoExtractor):\n    IE_DESC = '\u82b1\u6912\u76f4\u64ad'\n    _VALID_URL = r'https?://(?:www\\.)?huajiao\\.com/l/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.huajiao.com/l/38941232',\n        'md5': 'd08bf9ac98787d24d1e4c0283f2d372d',\n        'info_dict': {\n            'id': '38941232',\n            'ext': 'mp4',\n            'title': '#\u65b0\u4eba\u6c42\u5173\u6ce8#',\n            'description': 're:.*',\n            'duration': 2424.0,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1475866459,\n            'upload_date': '20161007',\n            'uploader': 'Penny_\u4f59\u59ff\u6600',\n            'uploader_id': '75206005',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        feed_json = self._search_regex(\n            r'var\\s+feed\\s*=\\s*({.+})', webpage, 'feed json')\n        feed = self._parse_json(feed_json, video_id)\n\n        description = self._html_search_meta(\n            'description', webpage, 'description', fatal=False)\n\n        def get(section, field):\n            return feed.get(section, {}).get(field)\n\n        return {\n            'id': video_id,\n            'title': feed['feed']['formated_title'],\n            'description': description,\n            'duration': parse_duration(get('feed', 'duration')),\n            'thumbnail': get('feed', 'image'),\n            'timestamp': parse_iso8601(feed.get('creatime'), ' '),\n            'uploader': get('author', 'nickname'),\n            'uploader_id': get('author', 'uid'),\n            'formats': self._extract_m3u8_formats(\n                feed['feed']['m3u8'], video_id, 'mp4', 'm3u8_native'),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "huajiao.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/huajiao.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
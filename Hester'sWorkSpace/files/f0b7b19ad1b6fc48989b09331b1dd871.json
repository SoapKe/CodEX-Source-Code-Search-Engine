{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, models\n\n\nclass MrpBomCost(models.AbstractModel):\n    _name = 'report.mrp.mrp_bom_cost_report'\n\n    @api.multi\n    def get_lines(self, boms):\n        product_lines = []\n        for bom in boms:\n            products = bom.product_id\n            if not products:\n                products = bom.product_tmpl_id.product_variant_ids\n            for product in products:\n                attributes = []\n                for value in product.attribute_value_ids:\n                    attributes += [(value.attribute_id.name, value.name)]\n                result, result2 = bom.explode(product, 1)\n                product_line = {'bom': bom, 'name': product.name, 'lines': [], 'total': 0.0,\n                                'currency': self.env.user.company_id.currency_id,\n                                'product_uom_qty': bom.product_qty,\n                                'product_uom': bom.product_uom_id,\n                                'attributes': attributes}\n                total = 0.0\n                for bom_line, line_data in result2:\n                    price_uom = bom_line.product_id.uom_id._compute_price(bom_line.product_id.standard_price, bom_line.product_uom_id)\n                    line = {\n                        'product_id': bom_line.product_id,\n                        'product_uom_qty': line_data['qty'], \n                        'product_uom': bom_line.product_uom_id,\n                        'price_unit': price_uom,\n                        'total_price': price_uom * line_data['qty'],\n                    }\n                    total += line['total_price']\n                    product_line['lines'] += [line]\n                product_line['total'] = total\n                product_lines += [product_line]\n        return product_lines\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        boms = self.env['mrp.bom'].browse(docids)\n        res = self.get_lines(boms)\n        return {'lines': res}\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details    line data needed phantom bom explosion ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, models\n\n\nclass MrpBomCost(models.AbstractModel):\n    _name = 'report.mrp.mrp_bom_cost_report'\n\n    @api.multi\n    def get_lines(self, boms):\n        product_lines = []\n        for bom in boms:\n            products = bom.product_id\n            if not products:\n                products = bom.product_tmpl_id.product_variant_ids\n            for product in products:\n                attributes = []\n                for value in product.attribute_value_ids:\n                    attributes += [(value.attribute_id.name, value.name)]\n                result, result2 = bom.explode(product, 1)\n                product_line = {'bom': bom, 'name': product.name, 'lines': [], 'total': 0.0,\n                                'currency': self.env.user.company_id.currency_id,\n                                'product_uom_qty': bom.product_qty,\n                                'product_uom': bom.product_uom_id,\n                                'attributes': attributes}\n                total = 0.0\n                for bom_line, line_data in result2:\n                    price_uom = bom_line.product_id.uom_id._compute_price(bom_line.product_id.standard_price, bom_line.product_uom_id)\n                    line = {\n                        'product_id': bom_line.product_id,\n                        'product_uom_qty': line_data['qty'], #line_data needed for phantom bom explosion\n                        'product_uom': bom_line.product_uom_id,\n                        'price_unit': price_uom,\n                        'total_price': price_uom * line_data['qty'],\n                    }\n                    total += line['total_price']\n                    product_line['lines'] += [line]\n                product_line['total'] = total\n                product_lines += [product_line]\n        return product_lines\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        boms = self.env['mrp.bom'].browse(docids)\n        res = self.get_lines(boms)\n        return {'lines': res}\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "mrp_bom_cost_report.py", "id": "f0b7b19ad1b6fc48989b09331b1dd871", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/mrp/report/mrp_bom_cost_report.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
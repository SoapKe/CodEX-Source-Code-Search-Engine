{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_iso8601,\n    int_or_none,\n    xpath_attr,\n    xpath_element,\n)\n\n\nclass TwentyFourVideoIE(InfoExtractor):\n    IE_NAME = '24video'\n    _VALID_URL = r'https?://(?P<host>(?:www\\.)?24video\\.(?:net|me|xxx|sex|tube|adult))/(?:video/(?:view|xml)/|player/new24_play\\.swf\\?id=)(?P<id>\\d+)'\n\n    _TESTS = [{\n        'url': 'http://www.24video.net/video/view/1044982',\n        'md5': 'e09fc0901d9eaeedac872f154931deeb',\n        'info_dict': {\n            'id': '1044982',\n            'ext': 'mp4',\n            'title': '\u042d\u0440\u043e\u0442\u0438\u043a\u0430 \u043a\u0430\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u043a\u0430',\n            'description': '\u041a\u0430\u043a \u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043f\u043e\u0440\u043d\u043e \u0432 \u043a\u0430\u043c\u0435\u043d\u043d\u043e\u043c \u0432\u0435\u043a\u0435.',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': 'SUPERTELO',\n            'duration': 31,\n            'timestamp': 1275937857,\n            'upload_date': '20100607',\n            'age_limit': 18,\n            'like_count': int,\n            'dislike_count': int,\n        },\n    }, {\n        'url': 'http://www.24video.net/player/new24_play.swf?id=1044982',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.24video.me/video/view/1044982',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.24video.tube/video/view/2363750',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        host = mobj.group('host')\n\n        webpage = self._download_webpage(\n            'http://%s/video/view/%s' % (host, video_id), video_id)\n\n        title = self._og_search_title(webpage)\n        description = self._html_search_regex(\n            r'<(p|span)[^>]+itemprop=\"description\"[^>]*>(?P<description>[^<]+)</\\1>',\n            webpage, 'description', fatal=False, group='description')\n        thumbnail = self._og_search_thumbnail(webpage)\n        duration = int_or_none(self._og_search_property(\n            'duration', webpage, 'duration', fatal=False))\n        timestamp = parse_iso8601(self._search_regex(\n            r'<time[^>]+\\bdatetime=\"([^\"]+)\"[^>]+itemprop=\"uploadDate\"',\n            webpage, 'upload date', fatal=False))\n\n        uploader = self._html_search_regex(\n            r'class=\"video-uploaded\"[^>]*>\\s*<a href=\"/jsecUser/movies/[^\"]+\"[^>]*>([^<]+)</a>',\n            webpage, 'uploader', fatal=False)\n\n        view_count = int_or_none(self._html_search_regex(\n            r'<span class=\"video-views\">(\\d+) \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440',\n            webpage, 'view count', fatal=False))\n        comment_count = int_or_none(self._html_search_regex(\n            r'<a[^>]+href=\"\n            webpage, 'comment count', default=None))\n\n        \n        self._download_xml(\n            r'http://%s/video/xml/%s?mode=init' % (host, video_id),\n            video_id, 'Downloading init XML')\n\n        video_xml = self._download_xml(\n            'http://%s/video/xml/%s?mode=play' % (host, video_id),\n            video_id, 'Downloading video XML')\n\n        video = xpath_element(video_xml, './/video', 'video', fatal=True)\n\n        formats = [{\n            'url': xpath_attr(video, '', 'url', 'video URL', fatal=True),\n        }]\n\n        like_count = int_or_none(video.get('ratingPlus'))\n        dislike_count = int_or_none(video.get('ratingMinus'))\n        age_limit = 18 if video.get('adult') == 'true' else 0\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'duration': duration,\n            'timestamp': timestamp,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n#tab-comments\"[^>]*>(\\d+) \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438',\n# Sets some cookies\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_iso8601,\n    int_or_none,\n    xpath_attr,\n    xpath_element,\n)\n\n\nclass TwentyFourVideoIE(InfoExtractor):\n    IE_NAME = '24video'\n    _VALID_URL = r'https?://(?P<host>(?:www\\.)?24video\\.(?:net|me|xxx|sex|tube|adult))/(?:video/(?:view|xml)/|player/new24_play\\.swf\\?id=)(?P<id>\\d+)'\n\n    _TESTS = [{\n        'url': 'http://www.24video.net/video/view/1044982',\n        'md5': 'e09fc0901d9eaeedac872f154931deeb',\n        'info_dict': {\n            'id': '1044982',\n            'ext': 'mp4',\n            'title': '\u042d\u0440\u043e\u0442\u0438\u043a\u0430 \u043a\u0430\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u043a\u0430',\n            'description': '\u041a\u0430\u043a \u0441\u043c\u043e\u0442\u0440\u0435\u043b\u0438 \u043f\u043e\u0440\u043d\u043e \u0432 \u043a\u0430\u043c\u0435\u043d\u043d\u043e\u043c \u0432\u0435\u043a\u0435.',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'uploader': 'SUPERTELO',\n            'duration': 31,\n            'timestamp': 1275937857,\n            'upload_date': '20100607',\n            'age_limit': 18,\n            'like_count': int,\n            'dislike_count': int,\n        },\n    }, {\n        'url': 'http://www.24video.net/player/new24_play.swf?id=1044982',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.24video.me/video/view/1044982',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.24video.tube/video/view/2363750',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        host = mobj.group('host')\n\n        webpage = self._download_webpage(\n            'http://%s/video/view/%s' % (host, video_id), video_id)\n\n        title = self._og_search_title(webpage)\n        description = self._html_search_regex(\n            r'<(p|span)[^>]+itemprop=\"description\"[^>]*>(?P<description>[^<]+)</\\1>',\n            webpage, 'description', fatal=False, group='description')\n        thumbnail = self._og_search_thumbnail(webpage)\n        duration = int_or_none(self._og_search_property(\n            'duration', webpage, 'duration', fatal=False))\n        timestamp = parse_iso8601(self._search_regex(\n            r'<time[^>]+\\bdatetime=\"([^\"]+)\"[^>]+itemprop=\"uploadDate\"',\n            webpage, 'upload date', fatal=False))\n\n        uploader = self._html_search_regex(\n            r'class=\"video-uploaded\"[^>]*>\\s*<a href=\"/jsecUser/movies/[^\"]+\"[^>]*>([^<]+)</a>',\n            webpage, 'uploader', fatal=False)\n\n        view_count = int_or_none(self._html_search_regex(\n            r'<span class=\"video-views\">(\\d+) \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440',\n            webpage, 'view count', fatal=False))\n        comment_count = int_or_none(self._html_search_regex(\n            r'<a[^>]+href=\"#tab-comments\"[^>]*>(\\d+) \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438',\n            webpage, 'comment count', default=None))\n\n        # Sets some cookies\n        self._download_xml(\n            r'http://%s/video/xml/%s?mode=init' % (host, video_id),\n            video_id, 'Downloading init XML')\n\n        video_xml = self._download_xml(\n            'http://%s/video/xml/%s?mode=play' % (host, video_id),\n            video_id, 'Downloading video XML')\n\n        video = xpath_element(video_xml, './/video', 'video', fatal=True)\n\n        formats = [{\n            'url': xpath_attr(video, '', 'url', 'video URL', fatal=True),\n        }]\n\n        like_count = int_or_none(video.get('ratingPlus'))\n        dislike_count = int_or_none(video.get('ratingMinus'))\n        age_limit = 18 if video.get('adult') == 'true' else 0\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'duration': duration,\n            'timestamp': timestamp,\n            'view_count': view_count,\n            'comment_count': comment_count,\n            'like_count': like_count,\n            'dislike_count': dislike_count,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "twentyfourvideo.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/twentyfourvideo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "webpy", "code": "import unittest\nimport web\n\nurls = (\n    \"/\", \"index\",\n    \"/hello/(.*)\", \"hello\",\n    \"/cookie\", \"cookie\",\n    \"/setcookie\", \"setcookie\",\n    \"/redirect\", \"redirect\",\n)\napp = web.application(urls, globals())\n\nclass index:\n    def GET(self):\n        return \"welcome\"\n\nclass hello:\n    def GET(self, name):\n        name = name or 'world'\n        return \"hello, \" + name + '!'\n\nclass cookie:\n    def GET(self):\n        return \",\".join(sorted(web.cookies().keys()))\n\nclass setcookie:\n    def GET(self):\n        i = web.input()\n        for k, v in i.items():\n            web.setcookie(k, v)\n        return \"done\"\n\nclass redirect:\n    def GET(self):\n        i = web.input(url='/')\n        raise web.seeother(i.url)\n\nclass BrowserTest(unittest.TestCase):\n    def testCookies(self):\n        b = app.browser()\n        b.open('http://0.0.0.0/setcookie?x=1&y=2')\n        b.open('http://0.0.0.0/cookie')\n        self.assertEquals(b.text, 'x,y')\n\n    def testNotfound(self):\n        b = app.browser()\n        b.open('http://0.0.0.0/notfound')\n        self.assertEquals(b.status, 404)\n\n    def testRedirect(self):\n        b = app.browser()\n\n        b.open('http://0.0.0.0:8080/redirect')\n        self.assertEquals(b.url, 'http://0.0.0.0:8080/')\n        b.open('http://0.0.0.0:8080/redirect?url=/hello/foo')\n        self.assertEquals(b.url, 'http://0.0.0.0:8080/hello/foo')\n\n        b.open('https://0.0.0.0:8080/redirect')\n        self.assertEquals(b.url, 'https://0.0.0.0:8080/')\n        b.open('https://0.0.0.0:8080/redirect?url=/hello/foo')\n        self.assertEquals(b.url, 'https://0.0.0.0:8080/hello/foo')\n", "comments": "", "content": "import unittest\nimport web\n\nurls = (\n    \"/\", \"index\",\n    \"/hello/(.*)\", \"hello\",\n    \"/cookie\", \"cookie\",\n    \"/setcookie\", \"setcookie\",\n    \"/redirect\", \"redirect\",\n)\napp = web.application(urls, globals())\n\nclass index:\n    def GET(self):\n        return \"welcome\"\n\nclass hello:\n    def GET(self, name):\n        name = name or 'world'\n        return \"hello, \" + name + '!'\n\nclass cookie:\n    def GET(self):\n        return \",\".join(sorted(web.cookies().keys()))\n\nclass setcookie:\n    def GET(self):\n        i = web.input()\n        for k, v in i.items():\n            web.setcookie(k, v)\n        return \"done\"\n\nclass redirect:\n    def GET(self):\n        i = web.input(url='/')\n        raise web.seeother(i.url)\n\nclass BrowserTest(unittest.TestCase):\n    def testCookies(self):\n        b = app.browser()\n        b.open('http://0.0.0.0/setcookie?x=1&y=2')\n        b.open('http://0.0.0.0/cookie')\n        self.assertEquals(b.text, 'x,y')\n\n    def testNotfound(self):\n        b = app.browser()\n        b.open('http://0.0.0.0/notfound')\n        self.assertEquals(b.status, 404)\n\n    def testRedirect(self):\n        b = app.browser()\n\n        b.open('http://0.0.0.0:8080/redirect')\n        self.assertEquals(b.url, 'http://0.0.0.0:8080/')\n        b.open('http://0.0.0.0:8080/redirect?url=/hello/foo')\n        self.assertEquals(b.url, 'http://0.0.0.0:8080/hello/foo')\n\n        b.open('https://0.0.0.0:8080/redirect')\n        self.assertEquals(b.url, 'https://0.0.0.0:8080/')\n        b.open('https://0.0.0.0:8080/redirect?url=/hello/foo')\n        self.assertEquals(b.url, 'https://0.0.0.0:8080/hello/foo')\n", "description": "web.py is a web framework for python that is as simple as it is powerful. ", "file_name": "test_browser.py", "id": "a135d3d01b53e28375d5abf718877a81", "language": "Python", "project_name": "webpy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/webpy-webpy/webpy-webpy-817c979/tests/test_browser.py", "save_time": "", "source": "", "update_at": "2018-03-16T08:06:22Z", "url": "https://github.com/webpy/webpy", "wiki": false}
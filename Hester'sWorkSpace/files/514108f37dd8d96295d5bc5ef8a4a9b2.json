{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.utils.avatar import get_letter_avatar\n\n\ndef test_letter_avatar():\n    \n    letter_avatar = get_letter_avatar('Jane Doe', 'janedoe@example.com')\n    assert 'JD' in letter_avatar\n    assert '#f868bc' in letter_avatar  \n    assert 'svg' in letter_avatar\n\n    \n    letter_avatar = get_letter_avatar('johnsmith@example.com', 2)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  \n\n    \n    letter_avatar = get_letter_avatar(None, '127.0.0.1')\n    assert '?' in letter_avatar\n    assert '#ec5e44' in letter_avatar  \n\n    \n    letter_avatar = get_letter_avatar('johnsmith@example.com ', 2)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  \n\n     for html\n    letter_avatar = get_letter_avatar('Jane Doe', 'janedoe@example.com', use_svg=False)\n    assert 'JD' in letter_avatar\n    assert '#f868bc' in letter_avatar  \n    assert 'span' in letter_avatar\n\n     for html\n    letter_avatar = get_letter_avatar('johnsmith@example.com', 2, use_svg=False)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  \n\n     for html\n    letter_avatar = get_letter_avatar(None, '127.0.0.1', use_svg=False)\n    assert '?' in letter_avatar\n    assert '#ec5e44' in letter_avatar  \n", "comments": "  test name display name email identifier    pink    test email display name id identifier    green    test display name ip address identifier    red    test display name trailing spaces    green    test name display name email identifier html    pink    test email display name id identifier html    green    test display name ip address identifier html    red ", "content": "from __future__ import absolute_import\n\nfrom sentry.utils.avatar import get_letter_avatar\n\n\ndef test_letter_avatar():\n    # Test name as display name and email as identifier\n    letter_avatar = get_letter_avatar('Jane Doe', 'janedoe@example.com')\n    assert 'JD' in letter_avatar\n    assert '#f868bc' in letter_avatar  # pink\n    assert 'svg' in letter_avatar\n\n    # Test email as display name and id as identifier\n    letter_avatar = get_letter_avatar('johnsmith@example.com', 2)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  # green\n\n    # Test no display name and ip address as identifier\n    letter_avatar = get_letter_avatar(None, '127.0.0.1')\n    assert '?' in letter_avatar\n    assert '#ec5e44' in letter_avatar  # red\n\n    # Test display name with trailing spaces\n    letter_avatar = get_letter_avatar('johnsmith@example.com ', 2)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  # green\n\n    # Test name as display name and email as identifier for html\n    letter_avatar = get_letter_avatar('Jane Doe', 'janedoe@example.com', use_svg=False)\n    assert 'JD' in letter_avatar\n    assert '#f868bc' in letter_avatar  # pink\n    assert 'span' in letter_avatar\n\n    # Test email as display name and id as identifier for html\n    letter_avatar = get_letter_avatar('johnsmith@example.com', 2, use_svg=False)\n    assert 'J' in letter_avatar\n    assert '#57be8c' in letter_avatar  # green\n\n    # Test no display name and ip address as identifier for html\n    letter_avatar = get_letter_avatar(None, '127.0.0.1', use_svg=False)\n    assert '?' in letter_avatar\n    assert '#ec5e44' in letter_avatar  # red\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_letter_avatar.py", "id": "514108f37dd8d96295d5bc5ef8a4a9b2", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/utils/test_letter_avatar.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
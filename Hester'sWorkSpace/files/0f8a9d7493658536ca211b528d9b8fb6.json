{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom odoo.tests import common\n\n\nclass TestSparseFields(common.TransactionCase):\n\n    def test_sparse(self):\n        \n        record = self.env['sparse_fields.test'].create({})\n        self.assertFalse(record.data)\n\n        partner = self.env.ref('base.main_partner')\n        values = [\n            ('boolean', True),\n            ('integer', 42),\n            ('float', 3.14),\n            ('char', 'John'),\n            ('selection', 'two'),\n            ('partner', partner.id),\n        ]\n        for n, (key, val) in enumerate(values):\n            record.write({key: val})\n            self.assertEqual(record.data, dict(values[:n+1]))\n\n        for key, val in values[:-1]:\n            self.assertEqual(record[key], val)\n        self.assertEqual(record.partner, partner)\n\n        for n, (key, val) in enumerate(values):\n            record.write({key: False})\n            self.assertEqual(record.data, dict(values[n+1:]))\n\n        \n        names = [name for name, _ in values]\n        domain = [('model', '=', 'sparse_fields.test'), ('name', 'in', names)]\n        fields = self.env['ir.model.fields'].search(domain)\n        self.assertEqual(len(fields), len(names))\n        for field in fields:\n            self.assertEqual(field.serialization_field_id.name, 'data')\n", "comments": "    test sparse fields             coding  utf 8        check reflection sparse fields  ir model fields  ", "content": "# -*- coding: utf-8 -*-\n\nfrom odoo.tests import common\n\n\nclass TestSparseFields(common.TransactionCase):\n\n    def test_sparse(self):\n        \"\"\" test sparse fields. \"\"\"\n        record = self.env['sparse_fields.test'].create({})\n        self.assertFalse(record.data)\n\n        partner = self.env.ref('base.main_partner')\n        values = [\n            ('boolean', True),\n            ('integer', 42),\n            ('float', 3.14),\n            ('char', 'John'),\n            ('selection', 'two'),\n            ('partner', partner.id),\n        ]\n        for n, (key, val) in enumerate(values):\n            record.write({key: val})\n            self.assertEqual(record.data, dict(values[:n+1]))\n\n        for key, val in values[:-1]:\n            self.assertEqual(record[key], val)\n        self.assertEqual(record.partner, partner)\n\n        for n, (key, val) in enumerate(values):\n            record.write({key: False})\n            self.assertEqual(record.data, dict(values[n+1:]))\n\n        # check reflection of sparse fields in 'ir.model.fields'\n        names = [name for name, _ in values]\n        domain = [('model', '=', 'sparse_fields.test'), ('name', 'in', names)]\n        fields = self.env['ir.model.fields'].search(domain)\n        self.assertEqual(len(fields), len(names))\n        for field in fields:\n            self.assertEqual(field.serialization_field_id.name, 'data')\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "test_sparse_fields.py", "id": "0f8a9d7493658536ca211b528d9b8fb6", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/base_sparse_field/tests/test_sparse_fields.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
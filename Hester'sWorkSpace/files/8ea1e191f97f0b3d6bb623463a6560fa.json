{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    smuggle_url,\n)\n\n\nclass TVAIE(InfoExtractor):\n    _VALID_URL = r'https?://videos\\.tva\\.ca/details/_(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://videos.tva.ca/details/_5596811470001',\n        'info_dict': {\n            'id': '5596811470001',\n            'ext': 'mp4',\n            'title': 'Un extrait de l\\'\u00e9pisode du dimanche 8 octobre 2017 !',\n            'uploader_id': '5481942443001',\n            'upload_date': '20171003',\n            'timestamp': 1507064617,\n        },\n        'params': {\n            \n            'skip_download': True,\n        }\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/5481942443001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            'https://videos.tva.ca/proxy/item/_' + video_id, video_id, headers={\n                'Accept': 'application/json',\n            }, query={\n                'appId': '5955fc5f23eec60006c951f1',\n            })\n\n        def get_attribute(key):\n            for attribute in video_data.get('attributes', []):\n                if attribute.get('key') == key:\n                    return attribute.get('value')\n            return None\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': get_attribute('title'),\n            'url': smuggle_url(self.BRIGHTCOVE_URL_TEMPLATE % video_id, {'geo_countries': ['CA']}),\n            'description': get_attribute('description'),\n            'thumbnail': get_attribute('image-background') or get_attribute('image-landscape'),\n            'duration': float_or_none(get_attribute('video-duration'), 1000),\n            'ie_key': 'BrightcoveNew',\n        }\n", "comments": "# coding: utf-8\n# m3u8 download\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    float_or_none,\n    smuggle_url,\n)\n\n\nclass TVAIE(InfoExtractor):\n    _VALID_URL = r'https?://videos\\.tva\\.ca/details/_(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://videos.tva.ca/details/_5596811470001',\n        'info_dict': {\n            'id': '5596811470001',\n            'ext': 'mp4',\n            'title': 'Un extrait de l\\'\u00e9pisode du dimanche 8 octobre 2017 !',\n            'uploader_id': '5481942443001',\n            'upload_date': '20171003',\n            'timestamp': 1507064617,\n        },\n        'params': {\n            # m3u8 download\n            'skip_download': True,\n        }\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/5481942443001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            'https://videos.tva.ca/proxy/item/_' + video_id, video_id, headers={\n                'Accept': 'application/json',\n            }, query={\n                'appId': '5955fc5f23eec60006c951f1',\n            })\n\n        def get_attribute(key):\n            for attribute in video_data.get('attributes', []):\n                if attribute.get('key') == key:\n                    return attribute.get('value')\n            return None\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': get_attribute('title'),\n            'url': smuggle_url(self.BRIGHTCOVE_URL_TEMPLATE % video_id, {'geo_countries': ['CA']}),\n            'description': get_attribute('description'),\n            'thumbnail': get_attribute('image-background') or get_attribute('image-landscape'),\n            'duration': float_or_none(get_attribute('video-duration'), 1000),\n            'ie_key': 'BrightcoveNew',\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tva.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tva.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
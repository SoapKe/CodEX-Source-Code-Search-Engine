{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import (\n    compat_urlparse,\n    compat_urllib_parse_urlencode,\n)\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    parse_iso8601,\n    qualities,\n)\n\n\nclass PlaytvakIE(InfoExtractor):\n    IE_DESC = 'Playtvak.cz, iDNES.cz and Lidovky.cz'\n    _VALID_URL = r'https?://(?:.+?\\.)?(?:playtvak|idnes|lidovky|metro)\\.cz/.*\\?(?:c|idvideo)=(?P<id>[^&]+)'\n    _TESTS = [{\n        'url': 'http://www.playtvak.cz/vyzente-vosy-a-srsne-ze-zahrady-dn5-/hodinovy-manzel.aspx?c=A150730_150323_hodinovy-manzel_kuko',\n        'md5': '4525ae312c324b4be2f4603cc78ceb4a',\n        'info_dict': {\n            'id': 'A150730_150323_hodinovy-manzel_kuko',\n            'ext': 'mp4',\n            'title': 'Vy\u017ee\u0148te vosy a sr\u0161n\u011b ze zahrady',\n            'description': 'md5:4436e61b7df227a093778efb7e373571',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'duration': 279,\n            'timestamp': 1438732860,\n            'upload_date': '20150805',\n            'is_live': False,\n        }\n    }, {  \n        'url': 'http://slowtv.playtvak.cz/planespotting-0pr-/planespotting.aspx?c=A150624_164934_planespotting_cat',\n        'info_dict': {\n            'id': 'A150624_164934_planespotting_cat',\n            'ext': 'flv',\n            'title': 're:^Planespotting [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': 'Sledujte provoz na ranveji Leti\u0161t\u011b V\u00e1clava Havla v Praze',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,  \n        },\n    }, {  \n        'url': 'https://slowtv.playtvak.cz/zive-sledujte-vlaky-v-primem-prenosu-dwi-/hlavni-nadrazi.aspx?c=A151218_145728_hlavni-nadrazi_plap',\n        'info_dict': {\n            'id': 'A151218_145728_hlavni-nadrazi_plap',\n            'ext': 'flv',\n            'title': 're:^Hlavn\u00ed n\u00e1dra\u017e\u00ed [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,  \n        },\n    }, {  \n        'url': 'http://zpravy.idnes.cz/pes-zavreny-v-aute-rozbijeni-okynek-v-aute-fj5-/domaci.aspx?c=A150809_104116_domaci_pku',\n        'md5': '819832ba33cd7016e58a6658577fe289',\n        'info_dict': {\n            'id': 'A150809_104116_domaci_pku',\n            'ext': 'mp4',\n            'title': 'Zav\u0159eli jsme mra\u017eenou pizzu do auta. Upekla se',\n            'description': 'md5:01e73f02329e2e5760bd5eed4d42e3c2',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'duration': 39,\n            'timestamp': 1438969140,\n            'upload_date': '20150807',\n            'is_live': False,\n        }\n    }, {  \n        'url': 'http://www.lidovky.cz/dalsi-demonstrace-v-praze-o-migraci-duq-/video.aspx?c=A150808_214044_ln-video_ELE',\n        'md5': 'c7209ac4ba9d234d4ad5bab7485bcee8',\n        'info_dict': {\n            'id': 'A150808_214044_ln-video_ELE',\n            'ext': 'mp4',\n            'title': 'T\u00e1hni! Demonstrace proti imigrant\u016fm budila emoce',\n            'description': 'md5:97c81d589a9491fbfa323c9fa3cca72c',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'timestamp': 1439052180,\n            'upload_date': '20150808',\n            'is_live': False,\n        }\n    }, {  \n        'url': 'http://www.metro.cz/video-pod-billboardem-se-na-vltavske-roztocil-kolotoc-deti-vozil-jen-par-hodin-1hx-/metro-extra.aspx?c=A141111_173251_metro-extra_row',\n        'md5': '84fc1deedcac37b7d4a6ccae7c716668',\n        'info_dict': {\n            'id': 'A141111_173251_metro-extra_row',\n            'ext': 'mp4',\n            'title': 'Recesist\u00e9 ud\u011blali z billboardu koloto\u010d',\n            'description': 'md5:7369926049588c3989a66c9c1a043c4c',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'timestamp': 1415725500,\n            'upload_date': '20141111',\n            'is_live': False,\n        }\n    }, {\n        'url': 'http://www.playtvak.cz/embed.aspx?idvideo=V150729_141549_play-porad_kuko',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        info_url = self._html_search_regex(\n            r'Misc\\.video(?:FLV)?\\(\\s*{\\s*data\\s*:\\s*\"([^\"]+)\"', webpage, 'info url')\n\n        parsed_url = compat_urlparse.urlparse(info_url)\n\n        qs = compat_urlparse.parse_qs(parsed_url.query)\n        qs.update({\n            'reklama': ['0'],\n            'type': ['js'],\n        })\n\n        info_url = compat_urlparse.urlunparse(\n            parsed_url._replace(query=compat_urllib_parse_urlencode(qs, True)))\n\n        json_info = self._download_json(\n            info_url, video_id,\n            transform_source=lambda s: s[s.index('{'):s.rindex('}') + 1])\n\n        item = None\n        for i in json_info['items']:\n            if i.get('type') == 'video' or i.get('type') == 'stream':\n                item = i\n                break\n        if not item:\n            raise ExtractorError('No suitable stream found')\n\n        quality = qualities(('low', 'middle', 'high'))\n\n        formats = []\n        for fmt in item['video']:\n            video_url = fmt.get('file')\n            if not video_url:\n                continue\n\n            format_ = fmt['format']\n            format_id = '%s_%s' % (format_, fmt['quality'])\n            preference = None\n\n            if format_ in ('mp4', 'webm'):\n                ext = format_\n            elif format_ == 'rtmp':\n                ext = 'flv'\n            elif format_ == 'apple':\n                ext = 'mp4'\n                \n                \n                preference = -1\n            elif format_ == 'adobe':  \n                continue\n            else:  \n                continue\n\n            formats.append({\n                'url': video_url,\n                'ext': ext,\n                'format_id': format_id,\n                'quality': quality(fmt.get('quality')),\n                'preference': preference,\n            })\n        self._sort_formats(formats)\n\n        title = item['title']\n        is_live = item['type'] == 'stream'\n        if is_live:\n            title = self._live_title(title)\n        description = self._og_search_description(webpage, default=None) or self._html_search_meta(\n            'description', webpage, 'description', default=None)\n        timestamp = None\n        duration = None\n        if not is_live:\n            duration = int_or_none(item.get('length'))\n            timestamp = item.get('published')\n            if timestamp:\n                timestamp = parse_iso8601(timestamp[:-5])\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': item.get('image'),\n            'duration': duration,\n            'timestamp': timestamp,\n            'is_live': is_live,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n# live video test\n# requires rtmpdump\n# another live stream, this one without Misc.videoFLV\n# requires rtmpdump\n# idnes.cz\n# lidovky.cz\n# metro.cz\n# Some streams have mp3 audio which does not play\n# well with ffmpeg filter aac_adtstoasc\n# f4m manifest fails with 404 in 80% of requests\n# Other formats not supported yet\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import (\n    compat_urlparse,\n    compat_urllib_parse_urlencode,\n)\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    parse_iso8601,\n    qualities,\n)\n\n\nclass PlaytvakIE(InfoExtractor):\n    IE_DESC = 'Playtvak.cz, iDNES.cz and Lidovky.cz'\n    _VALID_URL = r'https?://(?:.+?\\.)?(?:playtvak|idnes|lidovky|metro)\\.cz/.*\\?(?:c|idvideo)=(?P<id>[^&]+)'\n    _TESTS = [{\n        'url': 'http://www.playtvak.cz/vyzente-vosy-a-srsne-ze-zahrady-dn5-/hodinovy-manzel.aspx?c=A150730_150323_hodinovy-manzel_kuko',\n        'md5': '4525ae312c324b4be2f4603cc78ceb4a',\n        'info_dict': {\n            'id': 'A150730_150323_hodinovy-manzel_kuko',\n            'ext': 'mp4',\n            'title': 'Vy\u017ee\u0148te vosy a sr\u0161n\u011b ze zahrady',\n            'description': 'md5:4436e61b7df227a093778efb7e373571',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'duration': 279,\n            'timestamp': 1438732860,\n            'upload_date': '20150805',\n            'is_live': False,\n        }\n    }, {  # live video test\n        'url': 'http://slowtv.playtvak.cz/planespotting-0pr-/planespotting.aspx?c=A150624_164934_planespotting_cat',\n        'info_dict': {\n            'id': 'A150624_164934_planespotting_cat',\n            'ext': 'flv',\n            'title': 're:^Planespotting [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': 'Sledujte provoz na ranveji Leti\u0161t\u011b V\u00e1clava Havla v Praze',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,  # requires rtmpdump\n        },\n    }, {  # another live stream, this one without Misc.videoFLV\n        'url': 'https://slowtv.playtvak.cz/zive-sledujte-vlaky-v-primem-prenosu-dwi-/hlavni-nadrazi.aspx?c=A151218_145728_hlavni-nadrazi_plap',\n        'info_dict': {\n            'id': 'A151218_145728_hlavni-nadrazi_plap',\n            'ext': 'flv',\n            'title': 're:^Hlavn\u00ed n\u00e1dra\u017e\u00ed [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,  # requires rtmpdump\n        },\n    }, {  # idnes.cz\n        'url': 'http://zpravy.idnes.cz/pes-zavreny-v-aute-rozbijeni-okynek-v-aute-fj5-/domaci.aspx?c=A150809_104116_domaci_pku',\n        'md5': '819832ba33cd7016e58a6658577fe289',\n        'info_dict': {\n            'id': 'A150809_104116_domaci_pku',\n            'ext': 'mp4',\n            'title': 'Zav\u0159eli jsme mra\u017eenou pizzu do auta. Upekla se',\n            'description': 'md5:01e73f02329e2e5760bd5eed4d42e3c2',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'duration': 39,\n            'timestamp': 1438969140,\n            'upload_date': '20150807',\n            'is_live': False,\n        }\n    }, {  # lidovky.cz\n        'url': 'http://www.lidovky.cz/dalsi-demonstrace-v-praze-o-migraci-duq-/video.aspx?c=A150808_214044_ln-video_ELE',\n        'md5': 'c7209ac4ba9d234d4ad5bab7485bcee8',\n        'info_dict': {\n            'id': 'A150808_214044_ln-video_ELE',\n            'ext': 'mp4',\n            'title': 'T\u00e1hni! Demonstrace proti imigrant\u016fm budila emoce',\n            'description': 'md5:97c81d589a9491fbfa323c9fa3cca72c',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'timestamp': 1439052180,\n            'upload_date': '20150808',\n            'is_live': False,\n        }\n    }, {  # metro.cz\n        'url': 'http://www.metro.cz/video-pod-billboardem-se-na-vltavske-roztocil-kolotoc-deti-vozil-jen-par-hodin-1hx-/metro-extra.aspx?c=A141111_173251_metro-extra_row',\n        'md5': '84fc1deedcac37b7d4a6ccae7c716668',\n        'info_dict': {\n            'id': 'A141111_173251_metro-extra_row',\n            'ext': 'mp4',\n            'title': 'Recesist\u00e9 ud\u011blali z billboardu koloto\u010d',\n            'description': 'md5:7369926049588c3989a66c9c1a043c4c',\n            'thumbnail': r're:(?i)^https?://.*\\.(?:jpg|png)$',\n            'timestamp': 1415725500,\n            'upload_date': '20141111',\n            'is_live': False,\n        }\n    }, {\n        'url': 'http://www.playtvak.cz/embed.aspx?idvideo=V150729_141549_play-porad_kuko',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        info_url = self._html_search_regex(\n            r'Misc\\.video(?:FLV)?\\(\\s*{\\s*data\\s*:\\s*\"([^\"]+)\"', webpage, 'info url')\n\n        parsed_url = compat_urlparse.urlparse(info_url)\n\n        qs = compat_urlparse.parse_qs(parsed_url.query)\n        qs.update({\n            'reklama': ['0'],\n            'type': ['js'],\n        })\n\n        info_url = compat_urlparse.urlunparse(\n            parsed_url._replace(query=compat_urllib_parse_urlencode(qs, True)))\n\n        json_info = self._download_json(\n            info_url, video_id,\n            transform_source=lambda s: s[s.index('{'):s.rindex('}') + 1])\n\n        item = None\n        for i in json_info['items']:\n            if i.get('type') == 'video' or i.get('type') == 'stream':\n                item = i\n                break\n        if not item:\n            raise ExtractorError('No suitable stream found')\n\n        quality = qualities(('low', 'middle', 'high'))\n\n        formats = []\n        for fmt in item['video']:\n            video_url = fmt.get('file')\n            if not video_url:\n                continue\n\n            format_ = fmt['format']\n            format_id = '%s_%s' % (format_, fmt['quality'])\n            preference = None\n\n            if format_ in ('mp4', 'webm'):\n                ext = format_\n            elif format_ == 'rtmp':\n                ext = 'flv'\n            elif format_ == 'apple':\n                ext = 'mp4'\n                # Some streams have mp3 audio which does not play\n                # well with ffmpeg filter aac_adtstoasc\n                preference = -1\n            elif format_ == 'adobe':  # f4m manifest fails with 404 in 80% of requests\n                continue\n            else:  # Other formats not supported yet\n                continue\n\n            formats.append({\n                'url': video_url,\n                'ext': ext,\n                'format_id': format_id,\n                'quality': quality(fmt.get('quality')),\n                'preference': preference,\n            })\n        self._sort_formats(formats)\n\n        title = item['title']\n        is_live = item['type'] == 'stream'\n        if is_live:\n            title = self._live_title(title)\n        description = self._og_search_description(webpage, default=None) or self._html_search_meta(\n            'description', webpage, 'description', default=None)\n        timestamp = None\n        duration = None\n        if not is_live:\n            duration = int_or_none(item.get('length'))\n            timestamp = item.get('published')\n            if timestamp:\n                timestamp = parse_iso8601(timestamp[:-5])\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': item.get('image'),\n            'duration': duration,\n            'timestamp': timestamp,\n            'is_live': is_live,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "playtvak.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/playtvak.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
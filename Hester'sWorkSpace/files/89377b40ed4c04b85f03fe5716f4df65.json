{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .youtube import YoutubeIE\n\n\nclass WimpIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?wimp\\.com/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://www.wimp.com/maru-is-exhausted/',\n        'md5': 'ee21217ffd66d058e8b16be340b74883',\n        'info_dict': {\n            'id': 'maru-is-exhausted',\n            'ext': 'mp4',\n            'title': 'Maru is exhausted.',\n            'description': 'md5:57e099e857c0a4ea312542b684a869b8',\n        }\n    }, {\n        'url': 'http://www.wimp.com/clowncar/',\n        'md5': '5c31ad862a90dc5b1f023956faec13fe',\n        'info_dict': {\n            'id': 'cG4CEr2aiSg',\n            'ext': 'webm',\n            'title': 'Basset hound clown car...incredible!',\n            'description': '5 of my Bassets crawled in this dog loo! www.bellinghambassets.com\\n\\nFor licensing/usage please contact: licensing(at)jukinmediadotcom',\n            'upload_date': '20140303',\n            'uploader': 'Gretchen Hoey',\n            'uploader_id': 'gretchenandjeff1',\n        },\n        'add_ie': ['Youtube'],\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        youtube_id = self._search_regex(\n            r\"videoId\\s*:\\s*[\\\"']([0-9A-Za-z_-]{11})[\\\"']\",\n            webpage, 'video URL', default=None)\n        if youtube_id:\n            return {\n                '_type': 'url',\n                'url': youtube_id,\n                'ie_key': YoutubeIE.ie_key(),\n            }\n\n        info_dict = self._extract_jwplayer_data(\n            webpage, video_id, require_title=False)\n\n        info_dict.update({\n            'id': video_id,\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n        })\n\n        return info_dict\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .youtube import YoutubeIE\n\n\nclass WimpIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?wimp\\.com/(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://www.wimp.com/maru-is-exhausted/',\n        'md5': 'ee21217ffd66d058e8b16be340b74883',\n        'info_dict': {\n            'id': 'maru-is-exhausted',\n            'ext': 'mp4',\n            'title': 'Maru is exhausted.',\n            'description': 'md5:57e099e857c0a4ea312542b684a869b8',\n        }\n    }, {\n        'url': 'http://www.wimp.com/clowncar/',\n        'md5': '5c31ad862a90dc5b1f023956faec13fe',\n        'info_dict': {\n            'id': 'cG4CEr2aiSg',\n            'ext': 'webm',\n            'title': 'Basset hound clown car...incredible!',\n            'description': '5 of my Bassets crawled in this dog loo! www.bellinghambassets.com\\n\\nFor licensing/usage please contact: licensing(at)jukinmediadotcom',\n            'upload_date': '20140303',\n            'uploader': 'Gretchen Hoey',\n            'uploader_id': 'gretchenandjeff1',\n        },\n        'add_ie': ['Youtube'],\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        youtube_id = self._search_regex(\n            r\"videoId\\s*:\\s*[\\\"']([0-9A-Za-z_-]{11})[\\\"']\",\n            webpage, 'video URL', default=None)\n        if youtube_id:\n            return {\n                '_type': 'url',\n                'url': youtube_id,\n                'ie_key': YoutubeIE.ie_key(),\n            }\n\n        info_dict = self._extract_jwplayer_data(\n            webpage, video_id, require_title=False)\n\n        info_dict.update({\n            'id': video_id,\n            'title': self._og_search_title(webpage),\n            'description': self._og_search_description(webpage),\n        })\n\n        return info_dict\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "wimp.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/wimp.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    int_or_none,\n    determine_protocol,\n)\n\n\nclass SWRMediathekIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?swrmediathek\\.de/(?:content/)?player\\.htm\\?show=(?P<id>[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12})'\n\n    _TESTS = [{\n        'url': 'http://swrmediathek.de/player.htm?show=849790d0-dab8-11e3-a953-0026b975f2e6',\n        'md5': '8c5f6f0172753368547ca8413a7768ac',\n        'info_dict': {\n            'id': '849790d0-dab8-11e3-a953-0026b975f2e6',\n            'ext': 'mp4',\n            'title': 'SWR odysso',\n            'description': 'md5:2012e31baad36162e97ce9eb3f157b8a',\n            'thumbnail': r're:^http:.*\\.jpg$',\n            'duration': 2602,\n            'upload_date': '20140515',\n            'uploader': 'SWR Fernsehen',\n            'uploader_id': '990030',\n        },\n    }, {\n        'url': 'http://swrmediathek.de/player.htm?show=0e1a8510-ddf2-11e3-9be3-0026b975f2e6',\n        'md5': 'b10ab854f912eecc5a6b55cd6fc1f545',\n        'info_dict': {\n            'id': '0e1a8510-ddf2-11e3-9be3-0026b975f2e6',\n            'ext': 'mp4',\n            'title': 'Nachtcaf\u00e9 - Alltagsdroge Alkohol - zwischen Sektempfang und Komasaufen',\n            'description': 'md5:e0a3adc17e47db2c23aab9ebc36dbee2',\n            'thumbnail': r're:http://.*\\.jpg',\n            'duration': 5305,\n            'upload_date': '20140516',\n            'uploader': 'SWR Fernsehen',\n            'uploader_id': '990030',\n        },\n        'skip': 'redirect to http://swrmediathek.de/index.htm?hinweis=swrlink',\n    }, {\n        'url': 'http://swrmediathek.de/player.htm?show=bba23e10-cb93-11e3-bf7f-0026b975f2e6',\n        'md5': '4382e4ef2c9d7ce6852535fa867a0dd3',\n        'info_dict': {\n            'id': 'bba23e10-cb93-11e3-bf7f-0026b975f2e6',\n            'ext': 'mp3',\n            'title': 'Sa\u0161a Stani\u0161ic: Vor dem Fest',\n            'description': 'md5:5b792387dc3fbb171eb709060654e8c9',\n            'thumbnail': r're:http://.*\\.jpg',\n            'duration': 3366,\n            'upload_date': '20140520',\n            'uploader': 'SWR 2',\n            'uploader_id': '284670',\n        },\n        'skip': 'redirect to http://swrmediathek.de/index.htm?hinweis=swrlink',\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'http://swrmediathek.de/AjaxEntry?ekey=%s' % video_id,\n            video_id, 'Downloading video JSON')\n\n        attr = video['attr']\n        title = attr['entry_title']\n        media_type = attr.get('entry_etype')\n\n        formats = []\n        for entry in video.get('sub', []):\n            if entry.get('name') != 'entry_media':\n                continue\n\n            entry_attr = entry.get('attr', {})\n            f_url = entry_attr.get('val2')\n            if not f_url:\n                continue\n            codec = entry_attr.get('val0')\n            if codec == 'm3u8':\n                formats.extend(self._extract_m3u8_formats(\n                    f_url, video_id, 'mp4', 'm3u8_native',\n                    m3u8_id='hls', fatal=False))\n            elif codec == 'f4m':\n                formats.extend(self._extract_f4m_formats(\n                    f_url + '?hdcore=3.7.0', video_id,\n                    f4m_id='hds', fatal=False))\n            else:\n                formats.append({\n                    'format_id': determine_protocol({'url': f_url}),\n                    'url': f_url,\n                    'quality': int_or_none(entry_attr.get('val1')),\n                    'vcodec': codec if media_type == 'Video' else 'none',\n                    'acodec': codec if media_type == 'Audio' else None,\n                })\n        self._sort_formats(formats)\n\n        upload_date = None\n        entry_pdatet = attr.get('entry_pdatet')\n        if entry_pdatet:\n            upload_date = entry_pdatet[:-4]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': attr.get('entry_descl'),\n            'thumbnail': attr.get('entry_image_16_9'),\n            'duration': parse_duration(attr.get('entry_durat')),\n            'upload_date': upload_date,\n            'uploader': attr.get('channel_title'),\n            'uploader_id': attr.get('channel_idkey'),\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    int_or_none,\n    determine_protocol,\n)\n\n\nclass SWRMediathekIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?swrmediathek\\.de/(?:content/)?player\\.htm\\?show=(?P<id>[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12})'\n\n    _TESTS = [{\n        'url': 'http://swrmediathek.de/player.htm?show=849790d0-dab8-11e3-a953-0026b975f2e6',\n        'md5': '8c5f6f0172753368547ca8413a7768ac',\n        'info_dict': {\n            'id': '849790d0-dab8-11e3-a953-0026b975f2e6',\n            'ext': 'mp4',\n            'title': 'SWR odysso',\n            'description': 'md5:2012e31baad36162e97ce9eb3f157b8a',\n            'thumbnail': r're:^http:.*\\.jpg$',\n            'duration': 2602,\n            'upload_date': '20140515',\n            'uploader': 'SWR Fernsehen',\n            'uploader_id': '990030',\n        },\n    }, {\n        'url': 'http://swrmediathek.de/player.htm?show=0e1a8510-ddf2-11e3-9be3-0026b975f2e6',\n        'md5': 'b10ab854f912eecc5a6b55cd6fc1f545',\n        'info_dict': {\n            'id': '0e1a8510-ddf2-11e3-9be3-0026b975f2e6',\n            'ext': 'mp4',\n            'title': 'Nachtcaf\u00e9 - Alltagsdroge Alkohol - zwischen Sektempfang und Komasaufen',\n            'description': 'md5:e0a3adc17e47db2c23aab9ebc36dbee2',\n            'thumbnail': r're:http://.*\\.jpg',\n            'duration': 5305,\n            'upload_date': '20140516',\n            'uploader': 'SWR Fernsehen',\n            'uploader_id': '990030',\n        },\n        'skip': 'redirect to http://swrmediathek.de/index.htm?hinweis=swrlink',\n    }, {\n        'url': 'http://swrmediathek.de/player.htm?show=bba23e10-cb93-11e3-bf7f-0026b975f2e6',\n        'md5': '4382e4ef2c9d7ce6852535fa867a0dd3',\n        'info_dict': {\n            'id': 'bba23e10-cb93-11e3-bf7f-0026b975f2e6',\n            'ext': 'mp3',\n            'title': 'Sa\u0161a Stani\u0161ic: Vor dem Fest',\n            'description': 'md5:5b792387dc3fbb171eb709060654e8c9',\n            'thumbnail': r're:http://.*\\.jpg',\n            'duration': 3366,\n            'upload_date': '20140520',\n            'uploader': 'SWR 2',\n            'uploader_id': '284670',\n        },\n        'skip': 'redirect to http://swrmediathek.de/index.htm?hinweis=swrlink',\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'http://swrmediathek.de/AjaxEntry?ekey=%s' % video_id,\n            video_id, 'Downloading video JSON')\n\n        attr = video['attr']\n        title = attr['entry_title']\n        media_type = attr.get('entry_etype')\n\n        formats = []\n        for entry in video.get('sub', []):\n            if entry.get('name') != 'entry_media':\n                continue\n\n            entry_attr = entry.get('attr', {})\n            f_url = entry_attr.get('val2')\n            if not f_url:\n                continue\n            codec = entry_attr.get('val0')\n            if codec == 'm3u8':\n                formats.extend(self._extract_m3u8_formats(\n                    f_url, video_id, 'mp4', 'm3u8_native',\n                    m3u8_id='hls', fatal=False))\n            elif codec == 'f4m':\n                formats.extend(self._extract_f4m_formats(\n                    f_url + '?hdcore=3.7.0', video_id,\n                    f4m_id='hds', fatal=False))\n            else:\n                formats.append({\n                    'format_id': determine_protocol({'url': f_url}),\n                    'url': f_url,\n                    'quality': int_or_none(entry_attr.get('val1')),\n                    'vcodec': codec if media_type == 'Video' else 'none',\n                    'acodec': codec if media_type == 'Audio' else None,\n                })\n        self._sort_formats(formats)\n\n        upload_date = None\n        entry_pdatet = attr.get('entry_pdatet')\n        if entry_pdatet:\n            upload_date = entry_pdatet[:-4]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': attr.get('entry_descl'),\n            'thumbnail': attr.get('entry_image_16_9'),\n            'duration': parse_duration(attr.get('entry_durat')),\n            'upload_date': upload_date,\n            'uploader': attr.get('channel_title'),\n            'uploader_id': attr.get('channel_idkey'),\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "swrmediathek.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/swrmediathek.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
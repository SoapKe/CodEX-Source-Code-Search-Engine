{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.git_pull_clone import match, get_new_command\nfrom thefuck.types import Command\n\n\ngit_err = \n\n\n@pytest.mark.parametrize('command', [\n    Command('git pull git@github.com:mcarton/thefuck.git', git_err)])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command, output', [\n    (Command('git pull git@github.com:mcarton/thefuck.git', git_err), 'git clone git@github.com:mcarton/thefuck.git')])\ndef test_get_new_command(command, output):\n    assert get_new_command(command) == output\n", "comments": "\nfatal: Not a git repository (or any parent up to mount point /home)\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\n\n\n\n", "content": "import pytest\nfrom thefuck.rules.git_pull_clone import match, get_new_command\nfrom thefuck.types import Command\n\n\ngit_err = '''\nfatal: Not a git repository (or any parent up to mount point /home)\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\n'''\n\n\n@pytest.mark.parametrize('command', [\n    Command('git pull git@github.com:mcarton/thefuck.git', git_err)])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command, output', [\n    (Command('git pull git@github.com:mcarton/thefuck.git', git_err), 'git clone git@github.com:mcarton/thefuck.git')])\ndef test_get_new_command(command, output):\n    assert get_new_command(command) == output\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_git_pull_clone.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_git_pull_clone.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "tornadoweb", "code": "\n\n Downloads a large file in chunked encoding with both curl and simple clients\n\nimport logging\nfrom tornado.curl_httpclient import CurlAsyncHTTPClient\nfrom tornado.simple_httpclient import SimpleAsyncHTTPClient\nfrom tornado.ioloop import IOLoop\nfrom tornado.options import define, options, parse_command_line\nfrom tornado.web import RequestHandler, Application\n\ntry:\n    xrange\nexcept NameError:\n    xrange = range\n\ndefine('port', default=8888)\ndefine('num_chunks', default=1000)\ndefine('chunk_size', default=2048)\n\n\nclass ChunkHandler(RequestHandler):\n    def get(self):\n        for i in xrange(options.num_chunks):\n            self.write('A' * options.chunk_size)\n            self.flush()\n        self.finish()\n\n\ndef main():\n    parse_command_line()\n    app = Application([('/', ChunkHandler)])\n    app.listen(options.port, address='127.0.0.1')\n\n    def callback(response):\n        response.rethrow()\n        assert len(response.body) == (options.num_chunks * options.chunk_size)\n        logging.warning(\"fetch completed in %s seconds\", response.request_time)\n        IOLoop.current().stop()\n\n    logging.warning(\"Starting fetch with curl client\")\n    curl_client = CurlAsyncHTTPClient()\n    curl_client.fetch('http://localhost:%d/' % options.port,\n                      callback=callback)\n    IOLoop.current().start()\n\n    logging.warning(\"Starting fetch with simple client\")\n    simple_client = SimpleAsyncHTTPClient()\n    simple_client.fetch('http://localhost:%d/' % options.port,\n                        callback=callback)\n    IOLoop.current().start()\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "   usr bin env python       downloads large file chunked encoding curl simple clients ", "content": "#!/usr/bin/env python\n#\n# Downloads a large file in chunked encoding with both curl and simple clients\n\nimport logging\nfrom tornado.curl_httpclient import CurlAsyncHTTPClient\nfrom tornado.simple_httpclient import SimpleAsyncHTTPClient\nfrom tornado.ioloop import IOLoop\nfrom tornado.options import define, options, parse_command_line\nfrom tornado.web import RequestHandler, Application\n\ntry:\n    xrange\nexcept NameError:\n    xrange = range\n\ndefine('port', default=8888)\ndefine('num_chunks', default=1000)\ndefine('chunk_size', default=2048)\n\n\nclass ChunkHandler(RequestHandler):\n    def get(self):\n        for i in xrange(options.num_chunks):\n            self.write('A' * options.chunk_size)\n            self.flush()\n        self.finish()\n\n\ndef main():\n    parse_command_line()\n    app = Application([('/', ChunkHandler)])\n    app.listen(options.port, address='127.0.0.1')\n\n    def callback(response):\n        response.rethrow()\n        assert len(response.body) == (options.num_chunks * options.chunk_size)\n        logging.warning(\"fetch completed in %s seconds\", response.request_time)\n        IOLoop.current().stop()\n\n    logging.warning(\"Starting fetch with curl client\")\n    curl_client = CurlAsyncHTTPClient()\n    curl_client.fetch('http://localhost:%d/' % options.port,\n                      callback=callback)\n    IOLoop.current().start()\n\n    logging.warning(\"Starting fetch with simple client\")\n    simple_client = SimpleAsyncHTTPClient()\n    simple_client.fetch('http://localhost:%d/' % options.port,\n                        callback=callback)\n    IOLoop.current().start()\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "file_name": "chunk_benchmark.py", "id": "54e427de0137f9184d01e71f44f7b77e", "language": "Python", "project_name": "tornado", "quality": "", "save_path": "/home/ubuntu/test_files/clean/test/tornadoweb-tornado/tornadoweb-tornado-62e43f6/demos/benchmark/chunk_benchmark.py", "save_time": "", "source": "", "update_at": "2018-03-13T23:11:42Z", "url": "https://github.com/tornadoweb/tornado", "wiki": true}
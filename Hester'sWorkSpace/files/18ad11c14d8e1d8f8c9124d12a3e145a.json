{"author": "mitmproxy", "code": "import io\nimport sys\nfrom unittest import mock\nimport pytest\n\nfrom mitmproxy.utils import debug\n\n\n@pytest.mark.parametrize(\"precompiled\", [True, False])\ndef test_dump_system_info_precompiled(precompiled):\n    sys.frozen = None\n    with mock.patch.object(sys, 'frozen', precompiled):\n        assert (\"binary\" in debug.dump_system_info()) == precompiled\n\n\ndef test_dump_info():\n    cs = io.StringIO()\n    debug.dump_info(None, None, file=cs, testing=True)\n    assert cs.getvalue()\n\n\ndef test_dump_stacks():\n    cs = io.StringIO()\n    debug.dump_stacks(None, None, file=cs, testing=True)\n    assert cs.getvalue()\n\n\ndef test_register_info_dumpers():\n    debug.register_info_dumpers()\n", "comments": "", "content": "import io\nimport sys\nfrom unittest import mock\nimport pytest\n\nfrom mitmproxy.utils import debug\n\n\n@pytest.mark.parametrize(\"precompiled\", [True, False])\ndef test_dump_system_info_precompiled(precompiled):\n    sys.frozen = None\n    with mock.patch.object(sys, 'frozen', precompiled):\n        assert (\"binary\" in debug.dump_system_info()) == precompiled\n\n\ndef test_dump_info():\n    cs = io.StringIO()\n    debug.dump_info(None, None, file=cs, testing=True)\n    assert cs.getvalue()\n\n\ndef test_dump_stacks():\n    cs = io.StringIO()\n    debug.dump_stacks(None, None, file=cs, testing=True)\n    assert cs.getvalue()\n\n\ndef test_register_info_dumpers():\n    debug.register_info_dumpers()\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_debug.py", "id": "18ad11c14d8e1d8f8c9124d12a3e145a", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/test/mitmproxy/utils/test_debug.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
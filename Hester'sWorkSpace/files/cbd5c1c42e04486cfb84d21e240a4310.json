{"author": "odoo", "code": "# -*- coding: utf-8 -*-\nfrom odoo import http\nfrom odoo.http import request\nfrom odoo.addons.web.controllers.main import _serialize_exception\nfrom odoo.tools import html_escape\n\nimport json\n\n\nclass BarcodeController(http.Controller):\n\n    @http.route(['/stock/barcode/'], type='http', auth='user')\n    def a(self, debug=False, **k):\n        if not request.session.uid:\n            return http.local_redirect('/web/login?redirect=/stock/barcode/')\n\n        return request.render('stock.barcode_index')\n\n\nclass StockReportController(http.Controller):\n\n    @http.route('/stock/<string:output_format>/<string:report_name>/<int:report_id>', type='http', auth='user')\n    def report(self, output_format, report_name, token, report_id=False, **kw):\n        uid = request.session.uid\n        domain = [('create_uid', '=', uid)]\n        stock_traceability = request.env['stock.traceability.report'].sudo(uid).search(domain, limit=1)\n        line_data = json.loads(kw['data'])\n        try:\n            if output_format == 'pdf':\n                response = request.make_response(\n                    stock_traceability.with_context(active_id=report_id).get_pdf(line_data),\n                    headers=[\n                        ('Content-Type', 'application/pdf'),\n                        ('Content-Disposition', 'attachment; filename=' + 'stock_traceability' + '.pdf;')\n                    ]\n                )\n                response.set_cookie('fileToken', token)\n                return response\n        except Exception as e:\n            se = _serialize_exception(e)\n            error = {\n                'code': 200,\n                'message': 'Odoo Server Error',\n                'data': se\n            }\n            return request.make_response(html_escape(json.dumps(error)))\n", "comments": "      coding  utf 8     ", "content": "# -*- coding: utf-8 -*-\nfrom odoo import http\nfrom odoo.http import request\nfrom odoo.addons.web.controllers.main import _serialize_exception\nfrom odoo.tools import html_escape\n\nimport json\n\n\nclass BarcodeController(http.Controller):\n\n    @http.route(['/stock/barcode/'], type='http', auth='user')\n    def a(self, debug=False, **k):\n        if not request.session.uid:\n            return http.local_redirect('/web/login?redirect=/stock/barcode/')\n\n        return request.render('stock.barcode_index')\n\n\nclass StockReportController(http.Controller):\n\n    @http.route('/stock/<string:output_format>/<string:report_name>/<int:report_id>', type='http', auth='user')\n    def report(self, output_format, report_name, token, report_id=False, **kw):\n        uid = request.session.uid\n        domain = [('create_uid', '=', uid)]\n        stock_traceability = request.env['stock.traceability.report'].sudo(uid).search(domain, limit=1)\n        line_data = json.loads(kw['data'])\n        try:\n            if output_format == 'pdf':\n                response = request.make_response(\n                    stock_traceability.with_context(active_id=report_id).get_pdf(line_data),\n                    headers=[\n                        ('Content-Type', 'application/pdf'),\n                        ('Content-Disposition', 'attachment; filename=' + 'stock_traceability' + '.pdf;')\n                    ]\n                )\n                response.set_cookie('fileToken', token)\n                return response\n        except Exception as e:\n            se = _serialize_exception(e)\n            error = {\n                'code': 200,\n                'message': 'Odoo Server Error',\n                'data': se\n            }\n            return request.make_response(html_escape(json.dumps(error)))\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "cbd5c1c42e04486cfb84d21e240a4310", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/stock/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
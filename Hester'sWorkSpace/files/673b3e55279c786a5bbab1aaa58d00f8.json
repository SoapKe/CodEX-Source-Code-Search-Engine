{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    float_or_none,\n    int_or_none,\n    parse_age_limit,\n)\n\n\nclass TvigleIE(InfoExtractor):\n    IE_NAME = 'tvigle'\n    IE_DESC = '\u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0442\u0435\u043b\u0435\u0432\u0438\u0434\u0435\u043d\u0438\u0435 Tvigle.ru'\n    _VALID_URL = r'https?://(?:www\\.)?(?:tvigle\\.ru/(?:[^/]+/)+(?P<display_id>[^/]+)/$|cloud\\.tvigle\\.ru/video/(?P<id>\\d+))'\n\n    _GEO_BYPASS = False\n    _GEO_COUNTRIES = ['RU']\n\n    _TESTS = [\n        {\n            'url': 'http://www.tvigle.ru/video/sokrat/',\n            'md5': '36514aed3657d4f70b4b2cef8eb520cd',\n            'info_dict': {\n                'id': '1848932',\n                'display_id': 'sokrat',\n                'ext': 'flv',\n                'title': '\u0421\u043e\u043a\u0440\u0430\u0442',\n                'description': 'md5:d6b92ffb7217b4b8ebad2e7665253c17',\n                'duration': 6586,\n                'age_limit': 12,\n            },\n            'skip': 'georestricted',\n        },\n        {\n            'url': 'http://www.tvigle.ru/video/vladimir-vysotskii/vedushchii-teleprogrammy-60-minut-ssha-o-vladimire-vysotskom/',\n            'md5': 'e7efe5350dd5011d0de6550b53c3ba7b',\n            'info_dict': {\n                'id': '5142516',\n                'ext': 'flv',\n                'title': '\u0412\u0435\u0434\u0443\u0449\u0438\u0439 \u0442\u0435\u043b\u0435\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u00ab60 \u043c\u0438\u043d\u0443\u0442\u00bb (\u0421\u0428\u0410) \u043e \u0412\u043b\u0430\u0434\u0438\u043c\u0438\u0440\u0435 \u0412\u044b\u0441\u043e\u0446\u043a\u043e\u043c',\n                'description': 'md5:027f7dc872948f14c96d19b4178428a4',\n                'duration': 186.080,\n                'age_limit': 0,\n            },\n            'skip': 'georestricted',\n        }, {\n            'url': 'https://cloud.tvigle.ru/video/5267604/',\n            'only_matching': True,\n        }\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        if not video_id:\n            webpage = self._download_webpage(url, display_id)\n            video_id = self._html_search_regex(\n                (r'<div[^>]+class=[\"\\']player[\"\\'][^>]+id=[\"\\'](\\d+)',\n                 r'var\\s+cloudId\\s*=\\s*[\"\\'](\\d+)',\n                 r'class=\"video-preview current_playing\" id=\"(\\d+)\"'),\n                webpage, 'video id')\n\n        video_data = self._download_json(\n            'http://cloud.tvigle.ru/api/play/video/%s/' % video_id, display_id)\n\n        item = video_data['playlist']['items'][0]\n\n        videos = item.get('videos')\n\n        error_message = item.get('errorMessage')\n        if not videos and error_message:\n            if item.get('isGeoBlocked') is True:\n                self.raise_geo_restricted(\n                    msg=error_message, countries=self._GEO_COUNTRIES)\n            else:\n                raise ExtractorError(\n                    '%s returned error: %s' % (self.IE_NAME, error_message),\n                    expected=True)\n\n        title = item['title']\n        description = item.get('description')\n        thumbnail = item.get('thumbnail')\n        duration = float_or_none(item.get('durationMilliseconds'), 1000)\n        age_limit = parse_age_limit(item.get('ageRestrictions'))\n\n        formats = []\n        for vcodec, fmts in item['videos'].items():\n            if vcodec == 'hls':\n                continue\n            for format_id, video_url in fmts.items():\n                if format_id == 'm3u8':\n                    continue\n                height = self._search_regex(\n                    r'^(\\d+)[pP]$', format_id, 'height', default=None)\n                formats.append({\n                    'url': video_url,\n                    'format_id': '%s-%s' % (vcodec, format_id),\n                    'vcodec': vcodec,\n                    'height': int_or_none(height),\n                    'filesize': int_or_none(item.get('video_files_size', {}).get(vcodec, {}).get(format_id)),\n                })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    float_or_none,\n    int_or_none,\n    parse_age_limit,\n)\n\n\nclass TvigleIE(InfoExtractor):\n    IE_NAME = 'tvigle'\n    IE_DESC = '\u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0442\u0435\u043b\u0435\u0432\u0438\u0434\u0435\u043d\u0438\u0435 Tvigle.ru'\n    _VALID_URL = r'https?://(?:www\\.)?(?:tvigle\\.ru/(?:[^/]+/)+(?P<display_id>[^/]+)/$|cloud\\.tvigle\\.ru/video/(?P<id>\\d+))'\n\n    _GEO_BYPASS = False\n    _GEO_COUNTRIES = ['RU']\n\n    _TESTS = [\n        {\n            'url': 'http://www.tvigle.ru/video/sokrat/',\n            'md5': '36514aed3657d4f70b4b2cef8eb520cd',\n            'info_dict': {\n                'id': '1848932',\n                'display_id': 'sokrat',\n                'ext': 'flv',\n                'title': '\u0421\u043e\u043a\u0440\u0430\u0442',\n                'description': 'md5:d6b92ffb7217b4b8ebad2e7665253c17',\n                'duration': 6586,\n                'age_limit': 12,\n            },\n            'skip': 'georestricted',\n        },\n        {\n            'url': 'http://www.tvigle.ru/video/vladimir-vysotskii/vedushchii-teleprogrammy-60-minut-ssha-o-vladimire-vysotskom/',\n            'md5': 'e7efe5350dd5011d0de6550b53c3ba7b',\n            'info_dict': {\n                'id': '5142516',\n                'ext': 'flv',\n                'title': '\u0412\u0435\u0434\u0443\u0449\u0438\u0439 \u0442\u0435\u043b\u0435\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u00ab60 \u043c\u0438\u043d\u0443\u0442\u00bb (\u0421\u0428\u0410) \u043e \u0412\u043b\u0430\u0434\u0438\u043c\u0438\u0440\u0435 \u0412\u044b\u0441\u043e\u0446\u043a\u043e\u043c',\n                'description': 'md5:027f7dc872948f14c96d19b4178428a4',\n                'duration': 186.080,\n                'age_limit': 0,\n            },\n            'skip': 'georestricted',\n        }, {\n            'url': 'https://cloud.tvigle.ru/video/5267604/',\n            'only_matching': True,\n        }\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        if not video_id:\n            webpage = self._download_webpage(url, display_id)\n            video_id = self._html_search_regex(\n                (r'<div[^>]+class=[\"\\']player[\"\\'][^>]+id=[\"\\'](\\d+)',\n                 r'var\\s+cloudId\\s*=\\s*[\"\\'](\\d+)',\n                 r'class=\"video-preview current_playing\" id=\"(\\d+)\"'),\n                webpage, 'video id')\n\n        video_data = self._download_json(\n            'http://cloud.tvigle.ru/api/play/video/%s/' % video_id, display_id)\n\n        item = video_data['playlist']['items'][0]\n\n        videos = item.get('videos')\n\n        error_message = item.get('errorMessage')\n        if not videos and error_message:\n            if item.get('isGeoBlocked') is True:\n                self.raise_geo_restricted(\n                    msg=error_message, countries=self._GEO_COUNTRIES)\n            else:\n                raise ExtractorError(\n                    '%s returned error: %s' % (self.IE_NAME, error_message),\n                    expected=True)\n\n        title = item['title']\n        description = item.get('description')\n        thumbnail = item.get('thumbnail')\n        duration = float_or_none(item.get('durationMilliseconds'), 1000)\n        age_limit = parse_age_limit(item.get('ageRestrictions'))\n\n        formats = []\n        for vcodec, fmts in item['videos'].items():\n            if vcodec == 'hls':\n                continue\n            for format_id, video_url in fmts.items():\n                if format_id == 'm3u8':\n                    continue\n                height = self._search_regex(\n                    r'^(\\d+)[pP]$', format_id, 'height', default=None)\n                formats.append({\n                    'url': video_url,\n                    'format_id': '%s-%s' % (vcodec, format_id),\n                    'vcodec': vcodec,\n                    'height': int_or_none(height),\n                    'filesize': int_or_none(item.get('video_files_size', {}).get(vcodec, {}).get(format_id)),\n                })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'age_limit': age_limit,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tvigle.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tvigle.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
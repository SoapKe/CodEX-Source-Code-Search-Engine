{"author": "sympy", "code": "from sympy import Symbol, Contains, S, Interval, FiniteSet, oo, Eq\n\n\ndef test_contains_basic():\n    assert Contains(2, S.Integers) is S.true\n    assert Contains(-2, S.Naturals) is S.false\n\n    i = Symbol('i', integer=True)\n    assert Contains(i, S.Naturals) == Contains(i, S.Naturals, evaluate=False)\n\n\ndef test_issue_6194():\n    x = Symbol('x')\n    assert Contains(x, Interval(0, 1)) != (x >= 0) & (x <= 1)\n    assert Interval(0, 1).contains(x) == (x >= 0) & (x <= 1)\n    assert Contains(x, FiniteSet(0)) != S.false\n    assert Contains(x, Interval(1, 1)) != S.false\n    assert Contains(x, S.Integers) != S.false\n\n\ndef test_issue_10326():\n    assert Contains(oo, Interval(-oo, oo)) == False\n    assert Contains(-oo, Interval(-oo, oo)) == False\n\n\ndef test_binary_symbols():\n    x = Symbol('x')\n    y = Symbol('y')\n    z = Symbol('z')\n    assert Contains(x, FiniteSet(y, Eq(z, True))\n        ).binary_symbols == set([y, z])\n\n\ndef test_as_set():\n    x = Symbol('x')\n    y = Symbol('y')\n    assert Contains(x, FiniteSet(y)\n        ).as_set() == Contains(x, FiniteSet(y))\n", "comments": "", "content": "from sympy import Symbol, Contains, S, Interval, FiniteSet, oo, Eq\n\n\ndef test_contains_basic():\n    assert Contains(2, S.Integers) is S.true\n    assert Contains(-2, S.Naturals) is S.false\n\n    i = Symbol('i', integer=True)\n    assert Contains(i, S.Naturals) == Contains(i, S.Naturals, evaluate=False)\n\n\ndef test_issue_6194():\n    x = Symbol('x')\n    assert Contains(x, Interval(0, 1)) != (x >= 0) & (x <= 1)\n    assert Interval(0, 1).contains(x) == (x >= 0) & (x <= 1)\n    assert Contains(x, FiniteSet(0)) != S.false\n    assert Contains(x, Interval(1, 1)) != S.false\n    assert Contains(x, S.Integers) != S.false\n\n\ndef test_issue_10326():\n    assert Contains(oo, Interval(-oo, oo)) == False\n    assert Contains(-oo, Interval(-oo, oo)) == False\n\n\ndef test_binary_symbols():\n    x = Symbol('x')\n    y = Symbol('y')\n    z = Symbol('z')\n    assert Contains(x, FiniteSet(y, Eq(z, True))\n        ).binary_symbols == set([y, z])\n\n\ndef test_as_set():\n    x = Symbol('x')\n    y = Symbol('y')\n    assert Contains(x, FiniteSet(y)\n        ).as_set() == Contains(x, FiniteSet(y))\n", "description": "A computer algebra system written in pure Python", "file_name": "test_contains.py", "id": "f629b7e5b77f8b1c10f56c0a4feded08", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/sets/tests/test_contains.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
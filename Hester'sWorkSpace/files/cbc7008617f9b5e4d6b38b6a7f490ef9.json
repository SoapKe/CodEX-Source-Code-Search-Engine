{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\n\n\nclass RENTVIE(InfoExtractor):\n    _VALID_URL = r'(?:rentv:|https?://(?:www\\.)?ren\\.tv/(?:player|video/epizod)/)(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://ren.tv/video/epizod/118577',\n        'md5': 'd91851bf9af73c0ad9b2cdf76c127fbb',\n        'info_dict': {\n            'id': '118577',\n            'ext': 'mp4',\n            'title': '\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0435\u0446\u043f\u0440\u043e\u0435\u043a\u0442: \"\u041f\u0440\u043e\u043c\u044b\u0432\u043a\u0430 \u043c\u043e\u0437\u0433\u043e\u0432. \u0422\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 XXI \u0432\u0435\u043a\u0430\"'\n        }\n    }, {\n        'url': 'http://ren.tv/player/118577',\n        'only_matching': True,\n    }, {\n        'url': 'rentv:118577',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage('http://ren.tv/player/' + video_id, video_id)\n        jw_config = self._parse_json(self._search_regex(\n            r'config\\s*=\\s*({.+});', webpage, 'jw config'), video_id)\n        return self._parse_jwplayer_data(jw_config, video_id, m3u8_id='hls')\n\n\nclass RENTVArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ren\\.tv/novosti/\\d{4}-\\d{2}-\\d{2}/(?P<id>[^/?\n    _TESTS = [{\n        'url': 'http://ren.tv/novosti/2016-10-26/video-mikroavtobus-popavshiy-v-dtp-s-gruzovikami-v-podmoskove-prevratilsya-v',\n        'md5': 'ebd63c4680b167693745ab91343df1d6',\n        'info_dict': {\n            'id': '136472',\n            'ext': 'mp4',\n            'title': '\u0412\u0438\u0434\u0435\u043e: \u043c\u0438\u043a\u0440\u043e\u0430\u0432\u0442\u043e\u0431\u0443\u0441, \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0439 \u0432 \u0414\u0422\u041f \u0441 \u0433\u0440\u0443\u0437\u043e\u0432\u0438\u043a\u0430\u043c\u0438 \u0432 \u041f\u043e\u0434\u043c\u043e\u0441\u043a\u043e\u0432\u044c\u0435, \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u043b\u0441\u044f \u0432 \u0433\u0440\u0443\u0434\u0443 \u043c\u0435\u0442\u0430\u043b\u043b\u0430',\n            'description': '\u0416\u0435\u0440\u0442\u0432\u0430\u043c\u0438 \u0441\u0442\u043e\u043b\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0434\u0432\u0443\u0445 \u0444\u0443\u0440 \u0438 \u043c\u0438\u043a\u0440\u043e\u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0430, \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u043c, \u0441\u0442\u0430\u043b\u0438 \u0441\u0435\u043c\u044c \u0447\u0435\u043b\u043e\u0432\u0435\u043a.',\n        }\n    }, {\n        \n        'url': 'http://ren.tv/novosti/2015-09-25/sluchaynyy-prohozhiy-poymal-avtougonshchika-v-murmanske-video',\n        'info_dict': {\n            'id': 'playlist',\n            'ext': 'mp4',\n            'title': '\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043f\u0440\u043e\u0445\u043e\u0436\u0438\u0439 \u043f\u043e\u0439\u043c\u0430\u043b \u0430\u0432\u0442\u043e\u0443\u0433\u043e\u043d\u0449\u0438\u043a\u0430 \u0432 \u041c\u0443\u0440\u043c\u0430\u043d\u0441\u043a\u0435. \u0412\u0418\u0414\u0415\u041e | \u0420\u0415\u041d \u0422\u0412',\n            'uploader': 'ren.tv',\n        },\n        'params': {\n            \n            'skip_download': True,\n        },\n        'skip': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        drupal_settings = self._parse_json(self._search_regex(\n            r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n            webpage, 'drupal settings'), display_id)\n\n        entries = []\n        for config_profile in drupal_settings.get('ren_jwplayer', {}).values():\n            media_id = config_profile.get('mediaid')\n            if not media_id:\n                continue\n            media_id = compat_str(media_id)\n            entries.append(self.url_result('rentv:' + media_id, 'RENTV', media_id))\n        return self.playlist_result(entries, display_id)\n", "comments": "# coding: utf-8\n#]+)'\n# TODO: invalid m3u8\n# m3u8 downloads\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\n\n\nclass RENTVIE(InfoExtractor):\n    _VALID_URL = r'(?:rentv:|https?://(?:www\\.)?ren\\.tv/(?:player|video/epizod)/)(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://ren.tv/video/epizod/118577',\n        'md5': 'd91851bf9af73c0ad9b2cdf76c127fbb',\n        'info_dict': {\n            'id': '118577',\n            'ext': 'mp4',\n            'title': '\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u043f\u0435\u0446\u043f\u0440\u043e\u0435\u043a\u0442: \"\u041f\u0440\u043e\u043c\u044b\u0432\u043a\u0430 \u043c\u043e\u0437\u0433\u043e\u0432. \u0422\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0438 XXI \u0432\u0435\u043a\u0430\"'\n        }\n    }, {\n        'url': 'http://ren.tv/player/118577',\n        'only_matching': True,\n    }, {\n        'url': 'rentv:118577',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage('http://ren.tv/player/' + video_id, video_id)\n        jw_config = self._parse_json(self._search_regex(\n            r'config\\s*=\\s*({.+});', webpage, 'jw config'), video_id)\n        return self._parse_jwplayer_data(jw_config, video_id, m3u8_id='hls')\n\n\nclass RENTVArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?ren\\.tv/novosti/\\d{4}-\\d{2}-\\d{2}/(?P<id>[^/?#]+)'\n    _TESTS = [{\n        'url': 'http://ren.tv/novosti/2016-10-26/video-mikroavtobus-popavshiy-v-dtp-s-gruzovikami-v-podmoskove-prevratilsya-v',\n        'md5': 'ebd63c4680b167693745ab91343df1d6',\n        'info_dict': {\n            'id': '136472',\n            'ext': 'mp4',\n            'title': '\u0412\u0438\u0434\u0435\u043e: \u043c\u0438\u043a\u0440\u043e\u0430\u0432\u0442\u043e\u0431\u0443\u0441, \u043f\u043e\u043f\u0430\u0432\u0448\u0438\u0439 \u0432 \u0414\u0422\u041f \u0441 \u0433\u0440\u0443\u0437\u043e\u0432\u0438\u043a\u0430\u043c\u0438 \u0432 \u041f\u043e\u0434\u043c\u043e\u0441\u043a\u043e\u0432\u044c\u0435, \u043f\u0440\u0435\u0432\u0440\u0430\u0442\u0438\u043b\u0441\u044f \u0432 \u0433\u0440\u0443\u0434\u0443 \u043c\u0435\u0442\u0430\u043b\u043b\u0430',\n            'description': '\u0416\u0435\u0440\u0442\u0432\u0430\u043c\u0438 \u0441\u0442\u043e\u043b\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0434\u0432\u0443\u0445 \u0444\u0443\u0440 \u0438 \u043c\u0438\u043a\u0440\u043e\u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0430, \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u043c, \u0441\u0442\u0430\u043b\u0438 \u0441\u0435\u043c\u044c \u0447\u0435\u043b\u043e\u0432\u0435\u043a.',\n        }\n    }, {\n        # TODO: invalid m3u8\n        'url': 'http://ren.tv/novosti/2015-09-25/sluchaynyy-prohozhiy-poymal-avtougonshchika-v-murmanske-video',\n        'info_dict': {\n            'id': 'playlist',\n            'ext': 'mp4',\n            'title': '\u0421\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u043f\u0440\u043e\u0445\u043e\u0436\u0438\u0439 \u043f\u043e\u0439\u043c\u0430\u043b \u0430\u0432\u0442\u043e\u0443\u0433\u043e\u043d\u0449\u0438\u043a\u0430 \u0432 \u041c\u0443\u0440\u043c\u0430\u043d\u0441\u043a\u0435. \u0412\u0418\u0414\u0415\u041e | \u0420\u0415\u041d \u0422\u0412',\n            'uploader': 'ren.tv',\n        },\n        'params': {\n            # m3u8 downloads\n            'skip_download': True,\n        },\n        'skip': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n        drupal_settings = self._parse_json(self._search_regex(\n            r'jQuery\\.extend\\(Drupal\\.settings\\s*,\\s*({.+?})\\);',\n            webpage, 'drupal settings'), display_id)\n\n        entries = []\n        for config_profile in drupal_settings.get('ren_jwplayer', {}).values():\n            media_id = config_profile.get('mediaid')\n            if not media_id:\n                continue\n            media_id = compat_str(media_id)\n            entries.append(self.url_result('rentv:' + media_id, 'RENTV', media_id))\n        return self.playlist_result(entries, display_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "rentv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/rentv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
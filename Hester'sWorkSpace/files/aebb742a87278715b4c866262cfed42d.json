{"author": "donnemartin", "code": "from nose.tools import assert_equal\n\n\nclass TestPermutation(object):\n\n    def test_permutation(self, func):\n        assert_equal(func(None, 'foo'), False)\n        assert_equal(func('', 'foo'), False)\n        assert_equal(func('Nib', 'bin'), False)\n        assert_equal(func('act', 'cat'), True)\n        assert_equal(func('a ct', 'ca t'), True)\n        assert_equal(func('dog', 'doggo'), False)\n        print('Success: test_permutation')\n\n\ndef main():\n    test = TestPermutation()\n    permutations = Permutations()\n    test.test_permutation(permutations.is_permutation)\n    try:\n        permutations_alt = PermutationsAlt()\n        test.test_permutation(permutations_alt.is_permutation)\n    except NameError:\n        \n        \n        pass\n\n\nif __name__ == '__main__':\n    main()", "comments": "  alternate solutions defined    solutions file ", "content": "from nose.tools import assert_equal\n\n\nclass TestPermutation(object):\n\n    def test_permutation(self, func):\n        assert_equal(func(None, 'foo'), False)\n        assert_equal(func('', 'foo'), False)\n        assert_equal(func('Nib', 'bin'), False)\n        assert_equal(func('act', 'cat'), True)\n        assert_equal(func('a ct', 'ca t'), True)\n        assert_equal(func('dog', 'doggo'), False)\n        print('Success: test_permutation')\n\n\ndef main():\n    test = TestPermutation()\n    permutations = Permutations()\n    test.test_permutation(permutations.is_permutation)\n    try:\n        permutations_alt = PermutationsAlt()\n        test.test_permutation(permutations_alt.is_permutation)\n    except NameError:\n        # Alternate solutions are only defined\n        # in the solutions file\n        pass\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_permutation_solution.py", "id": "aebb742a87278715b4c866262cfed42d", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/arrays_strings/permutation/test_permutation_solution.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
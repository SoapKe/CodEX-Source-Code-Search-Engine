{"author": "pyeve", "code": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    Auth-SHA1/HMAC\n    ~~~~~~~~~~~~~~\n\n    Securing an Eve-powered API with Basic Authentication (RFC2617).\n\n    This script assumes that user accounts are stored in a MongoDB collection\n    ('accounts'), and that passwords are stored as SHA1/HMAC hashes. All API\n    resources/methods will be secured unless they are made explicitly public\n    (by fiddling with some settings you can open one or more resources and/or\n    methods to public access -see docs).\n\n    Since we are using werkzeug we don't need any extra import (werkzeug being\n    one of Flask/Eve prerequisites).\n\n    Checkout Eve at https://github.com/pyeve/eve\n\n    This snippet by Nicola Iarocci can be used freely for anything you like.\n    Consider it public domain.\n\"\"\"\n\nfrom eve import Eve\nfrom eve.auth import BasicAuth\nfrom werkzeug.security import check_password_hash\n\nfrom settings_security import SETTINGS\n\n\nclass Sha1Auth(BasicAuth):\n    def check_auth(self, username, password, allowed_roles, resource, method):\n        \n        accounts = app.data.driver.db['accounts']\n        account = accounts.find_one({'username': username})\n        return account and \\\n            check_password_hash(account['password'], password)\n\n\nif __name__ == '__main__':\n    app = Eve(auth=Sha1Auth, settings=SETTINGS)\n    app.run()\n", "comments": "        auth sha1 hmac                         securing eve powered api basic authentication (rfc2617)       this script assumes user accounts stored mongodb collection     ( accounts )  passwords stored sha1 hmac hashes  all api     resources methods secured unless made explicitly public     (by fiddling settings open one resources     methods public access  see docs)       since using werkzeug need extra import (werkzeug     one flask eve prerequisites)       checkout eve https   github com pyeve eve      this snippet nicola iarocci used freely anything like      consider public domain             coding  utf 8        use eve db driver  additional connections resources used ", "content": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    Auth-SHA1/HMAC\n    ~~~~~~~~~~~~~~\n\n    Securing an Eve-powered API with Basic Authentication (RFC2617).\n\n    This script assumes that user accounts are stored in a MongoDB collection\n    ('accounts'), and that passwords are stored as SHA1/HMAC hashes. All API\n    resources/methods will be secured unless they are made explicitly public\n    (by fiddling with some settings you can open one or more resources and/or\n    methods to public access -see docs).\n\n    Since we are using werkzeug we don't need any extra import (werkzeug being\n    one of Flask/Eve prerequisites).\n\n    Checkout Eve at https://github.com/pyeve/eve\n\n    This snippet by Nicola Iarocci can be used freely for anything you like.\n    Consider it public domain.\n\"\"\"\n\nfrom eve import Eve\nfrom eve.auth import BasicAuth\nfrom werkzeug.security import check_password_hash\n\nfrom settings_security import SETTINGS\n\n\nclass Sha1Auth(BasicAuth):\n    def check_auth(self, username, password, allowed_roles, resource, method):\n        # use Eve's own db driver; no additional connections/resources are used\n        accounts = app.data.driver.db['accounts']\n        account = accounts.find_one({'username': username})\n        return account and \\\n            check_password_hash(account['password'], password)\n\n\nif __name__ == '__main__':\n    app = Eve(auth=Sha1Auth, settings=SETTINGS)\n    app.run()\n", "description": "REST API framework designed for human beings", "file_name": "sha1-hmac.py", "id": "ea1a733d9bed6d3a7949ae91d1f642c3", "language": "Python", "project_name": "eve", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pyeve-eve/pyeve-eve-53e4bb9/examples/security/sha1-hmac.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:55:13Z", "url": "https://github.com/pyeve/eve", "wiki": false}
{"author": "reddit-archive", "code": "\n\n License Version 1.0. (the \"License\"); you may not use this file except in\n\n\n\n\n\n\n\n Software distributed under the License is distributed on an \"AS IS\" basis,\n WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for\n the specific language governing rights and limitations under the License.\n\n The Original Code is reddit.\n\n The Original Developer is the Initial Developer.  The Initial Developer of\n the Original Code is reddit Inc.\n\n All portions of the code written by reddit are Copyright (c) 2006-2015 reddit\n Inc. All Rights Reserved.\n\n\nimport os\nimport fnmatch\nimport sys\nfrom setuptools import setup, find_packages, Extension\n\n\ncommands = {}\n\n\ntry:\n    from Cython.Build import cythonize\nexcept ImportError:\n    print \"Cannot find Cython. Skipping Cython build.\"\n    pyx_extensions = []\nelse:\n    pyx_files = []\n    for root, directories, files in os.walk('.'):\n        for f in fnmatch.filter(files, '*.pyx'):\n            pyx_files.append(os.path.join(root, f))\n    pyx_extensions = cythonize(pyx_files)\n\n\n guard against import errors in case this is the first run of setup.py and we\n don't have any dependencies (including baseplate) yet\ntry:\n    from baseplate.integration.thrift.command import ThriftBuildPyCommand\nexcept ImportError:\n    print \"Cannot find Baseplate. Skipping Thrift build.\"\nelse:\n    commands[\"build_py\"] = ThriftBuildPyCommand\n\n\nsetup(\n    name=\"r2\",\n    version=\"\",\n    install_requires=[\n        \"Pylons\",\n        \"Routes\",\n        \"mako>=0.5\",\n        \"boto >= 2.0\",\n        \"pytz\",\n        \"pycrypto\",\n        \"Babel>=1.0\",\n        \"cython>=0.14\",\n        \"SQLAlchemy\",\n        \"BeautifulSoup\",\n        \"chardet\",\n        \"psycopg2\",\n        \"pycassa>=1.7.0\",\n        \"pycaptcha\",\n        \"amqplib\",\n        \"py-bcrypt\",\n        \"snudown>=1.1.0\",\n        \"l2cs>=2.0.2\",\n        \"lxml\",\n        \"kazoo\",\n        \"stripe\",\n        \"requests\",\n        \"tinycss2\",\n        \"unidecode\",\n        \"PyYAML\",\n        \"Pillow\",\n        \"pylibmc==1.2.2\",\n        \"webob\",\n        \"webtest\",\n        \"python-snappy\",\n        \"httpagentparser==1.7.8\",\n        \"raven\",\n    ],\n     setup tests (allowing for \"python setup.py test\")\n    tests_require=['mock', 'nose', 'coverage'],\n    test_suite=\"nose.collector\",\n    dependency_links=[\n        \"https://github.com/reddit/snudown/archive/v1.1.3.tar.gzegg=snudown-1.1.3\",\n        \"https://s3.amazonaws.com/code.reddit.com/pycaptcha-0.4.tar.gzegg=pycaptcha-0.4\",\n    ],\n    packages=find_packages(exclude=[\"ez_setup\"]),\n    cmdclass=commands,\n    ext_modules=pyx_extensions + [\n        Extension(\n            \"Cfilters\",\n            sources=[\n                \"r2/lib/c/filters.c\",\n            ]\n        ),\n    ],\n    entry_points=\"\"\"\n    [paste.app_factory]\n    main=r2:make_app\n    [paste.paster_command]\n    run = r2.commands:RunCommand\n    shell = pylons.commands:ShellCommand\n    [paste.filter_app_factory]\n    gzip = r2.lib.gzipper:make_gzip_middleware\n    [r2.provider.media]\n    s3 = r2.lib.providers.media.s3:S3MediaProvider\n    filesystem = r2.lib.providers.media.filesystem:FileSystemMediaProvider\n    [r2.provider.cdn]\n    fastly = r2.lib.providers.cdn.fastly:FastlyCdnProvider\n    cloudflare = r2.lib.providers.cdn.cloudflare:CloudFlareCdnProvider\n    null = r2.lib.providers.cdn.null:NullCdnProvider\n    [r2.provider.auth]\n    cookie = r2.lib.providers.auth.cookie:CookieAuthenticationProvider\n    http = r2.lib.providers.auth.http:HttpAuthenticationProvider\n    [r2.provider.support]\n    zendesk = r2.lib.providers.support.zendesk:ZenDeskProvider\n    [r2.provider.search]\n    cloudsearch = r2.lib.providers.search.cloudsearch:CloudSearchProvider\n    solr = r2.lib.providers.search.solr:SolrSearchProvider\n    [r2.provider.image_resizing]\n    imgix = r2.lib.providers.image_resizing.imgix:ImgixImageResizingProvider\n    no_op = r2.lib.providers.image_resizing.no_op:NoOpImageResizingProvider\n    unsplashit = r2.lib.providers.image_resizing.unsplashit:UnsplashitImageResizingProvider\n    [r2.provider.email]\n    null = r2.lib.providers.email.null:NullEmailProvider\n    mailgun = r2.lib.providers.email.mailgun:MailgunEmailProvider\n    \"\"\",\n)\n", "comments": "         paste app factory      main r2 make app      paste paster command      run   r2 commands runcommand     shell   pylons commands shellcommand      paste filter app factory      gzip   r2 lib gzipper make gzip middleware      r2 provider media      s3   r2 lib providers media s3 s3mediaprovider     filesystem   r2 lib providers media filesystem filesystemmediaprovider      r2 provider cdn      fastly   r2 lib providers cdn fastly fastlycdnprovider     cloudflare   r2 lib providers cdn cloudflare cloudflarecdnprovider     null   r2 lib providers cdn null nullcdnprovider      r2 provider auth      cookie   r2 lib providers auth cookie cookieauthenticationprovider     http   r2 lib providers auth http httpauthenticationprovider      r2 provider support      zendesk   r2 lib providers support zendesk zendeskprovider      r2 provider search      cloudsearch   r2 lib providers search cloudsearch cloudsearchprovider     solr   r2 lib providers search solr solrsearchprovider      r2 provider image resizing      imgix   r2 lib providers image resizing imgix imgiximageresizingprovider     op   r2 lib providers image resizing op noopimageresizingprovider     unsplashit   r2 lib providers image resizing unsplashit unsplashitimageresizingprovider      r2 provider email      null   r2 lib providers email null nullemailprovider     mailgun   r2 lib providers email mailgun mailgunemailprovider             usr bin env python    the contents file subject common public attribution    license version 1 0  (the  license )  may use file except    compliance license  you may obtain copy license    http   code reddit com license  the license based mozilla public    license version 1 1  sections 14 15 added cover use    software computer network provide limited attribution    original developer  in addition  exhibit a modified consistent    exhibit b        software distributed license distributed  as is  basis     without warranty of any kind  either express implied  see license    specific language governing rights limitations license        the original code reddit        the original developer initial developer   the initial developer    original code reddit inc        all portions code written reddit copyright (c) 2006 2015 reddit    inc  all rights reserved                                                                                      guard import errors case first run setup py    dependencies (including baseplate) yet    setup tests (allowing  python setup py test )   egg snudown 1 1 3     egg pycaptcha 0 4   ", "content": "#!/usr/bin/env python\n# The contents of this file are subject to the Common Public Attribution\n# License Version 1.0. (the \"License\"); you may not use this file except in\n# compliance with the License. You may obtain a copy of the License at\n# http://code.reddit.com/LICENSE. The License is based on the Mozilla Public\n# License Version 1.1, but Sections 14 and 15 have been added to cover use of\n# software over a computer network and provide for limited attribution for the\n# Original Developer. In addition, Exhibit A has been modified to be consistent\n# with Exhibit B.\n#\n# Software distributed under the License is distributed on an \"AS IS\" basis,\n# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for\n# the specific language governing rights and limitations under the License.\n#\n# The Original Code is reddit.\n#\n# The Original Developer is the Initial Developer.  The Initial Developer of\n# the Original Code is reddit Inc.\n#\n# All portions of the code written by reddit are Copyright (c) 2006-2015 reddit\n# Inc. All Rights Reserved.\n###############################################################################\n\nimport os\nimport fnmatch\nimport sys\nfrom setuptools import setup, find_packages, Extension\n\n\ncommands = {}\n\n\ntry:\n    from Cython.Build import cythonize\nexcept ImportError:\n    print \"Cannot find Cython. Skipping Cython build.\"\n    pyx_extensions = []\nelse:\n    pyx_files = []\n    for root, directories, files in os.walk('.'):\n        for f in fnmatch.filter(files, '*.pyx'):\n            pyx_files.append(os.path.join(root, f))\n    pyx_extensions = cythonize(pyx_files)\n\n\n# guard against import errors in case this is the first run of setup.py and we\n# don't have any dependencies (including baseplate) yet\ntry:\n    from baseplate.integration.thrift.command import ThriftBuildPyCommand\nexcept ImportError:\n    print \"Cannot find Baseplate. Skipping Thrift build.\"\nelse:\n    commands[\"build_py\"] = ThriftBuildPyCommand\n\n\nsetup(\n    name=\"r2\",\n    version=\"\",\n    install_requires=[\n        \"Pylons\",\n        \"Routes\",\n        \"mako>=0.5\",\n        \"boto >= 2.0\",\n        \"pytz\",\n        \"pycrypto\",\n        \"Babel>=1.0\",\n        \"cython>=0.14\",\n        \"SQLAlchemy\",\n        \"BeautifulSoup\",\n        \"chardet\",\n        \"psycopg2\",\n        \"pycassa>=1.7.0\",\n        \"pycaptcha\",\n        \"amqplib\",\n        \"py-bcrypt\",\n        \"snudown>=1.1.0\",\n        \"l2cs>=2.0.2\",\n        \"lxml\",\n        \"kazoo\",\n        \"stripe\",\n        \"requests\",\n        \"tinycss2\",\n        \"unidecode\",\n        \"PyYAML\",\n        \"Pillow\",\n        \"pylibmc==1.2.2\",\n        \"webob\",\n        \"webtest\",\n        \"python-snappy\",\n        \"httpagentparser==1.7.8\",\n        \"raven\",\n    ],\n    # setup tests (allowing for \"python setup.py test\")\n    tests_require=['mock', 'nose', 'coverage'],\n    test_suite=\"nose.collector\",\n    dependency_links=[\n        \"https://github.com/reddit/snudown/archive/v1.1.3.tar.gz#egg=snudown-1.1.3\",\n        \"https://s3.amazonaws.com/code.reddit.com/pycaptcha-0.4.tar.gz#egg=pycaptcha-0.4\",\n    ],\n    packages=find_packages(exclude=[\"ez_setup\"]),\n    cmdclass=commands,\n    ext_modules=pyx_extensions + [\n        Extension(\n            \"Cfilters\",\n            sources=[\n                \"r2/lib/c/filters.c\",\n            ]\n        ),\n    ],\n    entry_points=\"\"\"\n    [paste.app_factory]\n    main=r2:make_app\n    [paste.paster_command]\n    run = r2.commands:RunCommand\n    shell = pylons.commands:ShellCommand\n    [paste.filter_app_factory]\n    gzip = r2.lib.gzipper:make_gzip_middleware\n    [r2.provider.media]\n    s3 = r2.lib.providers.media.s3:S3MediaProvider\n    filesystem = r2.lib.providers.media.filesystem:FileSystemMediaProvider\n    [r2.provider.cdn]\n    fastly = r2.lib.providers.cdn.fastly:FastlyCdnProvider\n    cloudflare = r2.lib.providers.cdn.cloudflare:CloudFlareCdnProvider\n    null = r2.lib.providers.cdn.null:NullCdnProvider\n    [r2.provider.auth]\n    cookie = r2.lib.providers.auth.cookie:CookieAuthenticationProvider\n    http = r2.lib.providers.auth.http:HttpAuthenticationProvider\n    [r2.provider.support]\n    zendesk = r2.lib.providers.support.zendesk:ZenDeskProvider\n    [r2.provider.search]\n    cloudsearch = r2.lib.providers.search.cloudsearch:CloudSearchProvider\n    solr = r2.lib.providers.search.solr:SolrSearchProvider\n    [r2.provider.image_resizing]\n    imgix = r2.lib.providers.image_resizing.imgix:ImgixImageResizingProvider\n    no_op = r2.lib.providers.image_resizing.no_op:NoOpImageResizingProvider\n    unsplashit = r2.lib.providers.image_resizing.unsplashit:UnsplashitImageResizingProvider\n    [r2.provider.email]\n    null = r2.lib.providers.email.null:NullEmailProvider\n    mailgun = r2.lib.providers.email.mailgun:MailgunEmailProvider\n    \"\"\",\n)\n", "description": "historical code from reddit.com", "file_name": "setup.py", "id": "8d9e8c7c5eb52b5d00f78968fe7af951", "language": "Python", "project_name": "reddit", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/reddit-archive-reddit/reddit-archive-reddit-753b174/r2/setup.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:55:36Z", "url": "https://github.com/reddit-archive/reddit", "wiki": true}
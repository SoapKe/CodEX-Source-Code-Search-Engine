{"author": "django", "code": "import warnings\n\nfrom django.test import TestCase\n\nfrom .models import Cash, CashModelDeprecated\n\n\nclass FromDBValueDeprecationTests(TestCase):\n\n    def test_deprecation(self):\n        CashModelDeprecated.objects.create(cash='12.50')\n        with warnings.catch_warnings(record=True) as warns:\n            warnings.simplefilter('always')\n            instance = CashModelDeprecated.objects.get()\n        self.assertIsInstance(instance.cash, Cash)\n        self.assertEqual(len(warns), 1)\n        msg = str(warns[0].message)\n        self.assertEqual(\n            msg,\n            'Remove the context parameter from CashFieldDeprecated.from_db_value(). '\n            'Support for it will be removed in Django 3.0.'\n        )\n", "comments": "", "content": "import warnings\n\nfrom django.test import TestCase\n\nfrom .models import Cash, CashModelDeprecated\n\n\nclass FromDBValueDeprecationTests(TestCase):\n\n    def test_deprecation(self):\n        CashModelDeprecated.objects.create(cash='12.50')\n        with warnings.catch_warnings(record=True) as warns:\n            warnings.simplefilter('always')\n            instance = CashModelDeprecated.objects.get()\n        self.assertIsInstance(instance.cash, Cash)\n        self.assertEqual(len(warns), 1)\n        msg = str(warns[0].message)\n        self.assertEqual(\n            msg,\n            'Remove the context parameter from CashFieldDeprecated.from_db_value(). '\n            'Support for it will be removed in Django 3.0.'\n        )\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "test_deprecated.py", "id": "921bbd601c06305640a0959ec0b56e3c", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/from_db_value/test_deprecated.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "mopidy", "code": "import sys\n\nfrom invoke import run, task\n\n\n@task\ndef docs(watch=False, warn=False):\n    if watch:\n        return watcher(docs)\n    run('make -C docs/ html', warn=warn)\n\n\n@task\ndef test(path=None, coverage=False, watch=False, warn=False):\n    if watch:\n        return watcher(test, path=path, coverage=coverage)\n    path = path or 'tests/'\n    cmd = 'pytest'\n    if coverage:\n        cmd += ' --cov=mopidy --cov-report=term-missing'\n    cmd += ' %s' % path\n    run(cmd, pty=True, warn=warn)\n\n\n@task\ndef lint(watch=False, warn=False):\n    if watch:\n        return watcher(lint)\n    run('flake8', warn=warn)\n\n\n@task\ndef update_authors():\n    \n    run(\"git log --format='- %aN <%aE>' --reverse | awk '!x[$0]++' > AUTHORS\")\n\n\ndef watcher(task, *args, **kwargs):\n    while True:\n        run('clear')\n        kwargs['warn'] = True\n        task(*args, **kwargs)\n        try:\n            run(\n                'inotifywait -q -e create -e modify -e delete '\n                '--exclude \".*\\.(pyc|sw.)\" -r docs/ mopidy/ tests/')\n        except KeyboardInterrupt:\n            sys.exit()\n", "comments": "  keep authors order appearance use awk filter dupes ", "content": "import sys\n\nfrom invoke import run, task\n\n\n@task\ndef docs(watch=False, warn=False):\n    if watch:\n        return watcher(docs)\n    run('make -C docs/ html', warn=warn)\n\n\n@task\ndef test(path=None, coverage=False, watch=False, warn=False):\n    if watch:\n        return watcher(test, path=path, coverage=coverage)\n    path = path or 'tests/'\n    cmd = 'pytest'\n    if coverage:\n        cmd += ' --cov=mopidy --cov-report=term-missing'\n    cmd += ' %s' % path\n    run(cmd, pty=True, warn=warn)\n\n\n@task\ndef lint(watch=False, warn=False):\n    if watch:\n        return watcher(lint)\n    run('flake8', warn=warn)\n\n\n@task\ndef update_authors():\n    # Keep authors in the order of appearance and use awk to filter out dupes\n    run(\"git log --format='- %aN <%aE>' --reverse | awk '!x[$0]++' > AUTHORS\")\n\n\ndef watcher(task, *args, **kwargs):\n    while True:\n        run('clear')\n        kwargs['warn'] = True\n        task(*args, **kwargs)\n        try:\n            run(\n                'inotifywait -q -e create -e modify -e delete '\n                '--exclude \".*\\.(pyc|sw.)\" -r docs/ mopidy/ tests/')\n        except KeyboardInterrupt:\n            sys.exit()\n", "description": "Mopidy is an extensible music server that plays music from local disk, Spotify, SoundCloud, Google Play Music, and more. You edit the playlist from any phone, tablet, or computer using a range of MPD and web clients.", "file_name": "tasks.py", "id": "cbfc8871e1cda3132bad497c8c8a175b", "language": "Python", "project_name": "mopidy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mopidy-mopidy/mopidy-mopidy-79d42c3/tasks.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:12:51Z", "url": "https://github.com/mopidy/mopidy", "wiki": false}
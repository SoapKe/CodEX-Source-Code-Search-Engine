{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport logging\nimport os\nimport subprocess\nimport werkzeug\n\nimport odoo\nfrom odoo import http\nfrom odoo.tools import misc\n\n_logger = logging.getLogger(__name__)\n\nindex_style = \"\"\"\n        <style>\n            body {\n                width: 480px;\n                margin: 60px auto;\n                font-family: sans-serif;\n                text-align: justify;\n                color: \n            }\n            .text-red {\n                color: \n            }\n        </style>\n\"\"\"\nindex_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Odoo's PosBox</title>\n\"\"\" + index_style + \"\"\"\n    </head>\n    <body>\n        <h1>Your PosBox is up and running</h1>\n        <p>\n        The PosBox is a hardware adapter that allows you to use\n        receipt printers and barcode scanners with Odoo's Point of\n        Sale, <b>version 8.0 or later</b>. You can start an <a href='https://www.odoo.com/start'>online free trial</a>,\n        or <a href='https://www.odoo.com/page/download'>download and install</a> it yourself.\n        </p>\n        <p>\n        For more information on how to setup the Point of Sale with\n        the PosBox, please refer to\n        <a href='https://www.odoo.com/documentation/user/point_of_sale/posbox/index.html'>the manual</a>.\n        </p>\n        <p>\n        To see the status of the connected hardware, please refer \n        to the <a href='/hw_proxy/status'>hardware status page</a>.\n        </p>\n        <p>\n        Wi-Fi can be configured by visiting the <a href='/wifi'>Wi-Fi configuration page</a>.\n        </p>\n        <p>\n        If you need to grant remote debugging access to a developer, you can do it <a href='/remote_connect'>here</a>.\n        </p>\n        %s\n        <p>\n        The PosBox software installed on this posbox is <b>version 16</b>,\n        the posbox version number is independent from Odoo. You can upgrade\n        the software on the <a href='/hw_proxy/upgrade/'>upgrade page</a>.\n        </p>\n        <p>For any other question, please contact the Odoo support at <a href='http://www.odoo.com/help'>www.odoo.com/help</a>\n        </p>\n    </body>\n</html>\n\n\"\"\"\n\n\nclass PosboxHomepage(odoo.addons.web.controllers.main.Home):\n\n    def get_hw_screen_message(self):\n        return \"\"\"\n<p>\n    The activate the customer display feature, you will need to reinstall the PosBox software.\n    You can find the latest images on the <a href=\"http://nightly.odoo.com/master/posbox/\">Odoo Nightly builds</a> website.\n    Make sure to download at least the version 16.<br/>\n    Odoo version 11, or above, is required to use the customer display feature.\n</p>\n\"\"\"\n\n    @http.route('/', type='http', auth='none', website=True)\n    def index(self):\n        #return request.render('hw_posbox_homepage.index',mimetype='text/html')\n        return index_template % self.get_hw_screen_message()\n\n    @http.route('/wifi', type='http', auth='none', website=True)\n    def wifi(self):\n        wifi_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Wifi configuration</title>\n\"\"\" + index_style + \"\"\"\n    </head>\n    <body>\n        <h1>Configure wifi</h1>\n        <p>\n        Here you can configure how the posbox should connect to wireless networks.\n        Currently only Open and WPA networks are supported. When enabling the persistent checkbox,\n        the chosen network will be saved and the posbox will attempt to connect to it every time it boots.\n        </p>\n        <form action='/wifi_connect' method='POST'>\n            <table>\n                <tr>\n                    <td>\n                        ESSID:\n                    </td>\n                    <td>\n                        <select name=\"essid\">\n\"\"\"\n        try:\n            f = open('/tmp/scanned_networks.txt', 'r')\n            for line in f:\n                line = line.rstrip()\n                line = misc.html_escape(line)\n                wifi_template += '<option value=\"' + line + '\">' + line + '</option>\\n'\n            f.close()\n        except IOError:\n            _logger.warning(\"No /tmp/scanned_networks.txt\")\n        wifi_template += \"\"\"\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Password:\n                    </td>\n                    <td>\n                        <input type=\"password\" name=\"password\" placeholder=\"optional\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Persistent:\n                    </td>\n                    <td>\n                        <input type=\"checkbox\" name=\"persistent\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td/>\n                    <td>\n                        <input type=\"submit\" value=\"connect\"/>\n                    </td>\n                </tr>\n            </table>\n        </form>\n        <p>\n                You can clear the persistent configuration by clicking below:\n                <form action='/wifi_clear'>\n                        <input type=\"submit\" value=\"Clear persistent network configuration\"/>\n                </form>\n        </p>\n        <form>\n    </body>\n</html>\n\"\"\"\n        return wifi_template\n\n    @http.route('/wifi_connect', type='http', auth='none', cors='*')\n    def connect_to_wifi(self, essid, password, persistent=False):\n        if persistent:\n                persistent = \"1\"\n        else:\n                persistent = \"\"\n\n        subprocess.call(['/home/pi/odoo/addons/point_of_sale/tools/posbox/configuration/connect_to_wifi.sh', essid, password, persistent])\n        return \"connecting to \" + essid\n\n    @http.route('/wifi_clear', type='http', auth='none', cors='*')\n    def clear_wifi_configuration(self):\n        os.system('/home/pi/odoo/addons/point_of_sale/tools/posbox/configuration/clear_wifi_configuration.sh')\n        return \"configuration cleared\"\n\n    @http.route('/remote_connect', type='http', auth='none', cors='*')\n    def remote_connect(self):\n        ngrok_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Remote debugging</title>\n        <script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\n        <script>\n           $(function () {\n               var upgrading = false;\n               $('#enable_debug').click(function () {\n                   var auth_token = $('#auth_token').val();\n                   if (auth_token == \"\") {\n                       alert('Please provide an authentication token.');\n                   } else {\n                       $.ajax({\n                           url: '/enable_ngrok',\n                           data: {\n                               'auth_token': auth_token\n                           }\n                       }).always(function (response) {\n                           if (response === 'already running') {\n                               alert('Remote debugging already activated.');\n                           } else {\n                               $('#auth_token').attr('disabled','disabled');\n                               $('#enable_debug').html('Enabled remote debugging');\n                               $('#enable_debug').removeAttr('href', '')\n                               $('#enable_debug').off('click');\n                           }\n                       });\n                   }\n               });\n           });\n        </script>\n\"\"\" + index_style + \"\"\"\n        <style>\n            \n                padding: 10px;\n                background: rgb(121, 197, 107);\n                color: white;\n                border-radius: 3px;\n                text-align: center;\n                margin: 30px;\n                text-decoration: none;\n                display: inline-block;\n            }\n            .centering{\n                text-align: center;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Remote debugging</h1>\n        <p class='text-red'>\n        This allows someone to gain remote access to your Posbox, and\n        thus your entire local network. Only enable this for someone\n        you trust.\n        </p>\n        <div class='centering'>\n            <input type=\"text\" id=\"auth_token\" size=\"42\" placeholder=\"Authentication Token\"/> <br/>\n            <a id=\"enable_debug\" href=\"#\">Enable remote debugging</a>\n        </div>\n    </body>\n</html>\n\"\"\"\n        return ngrok_template\n\n    @http.route('/enable_ngrok', type='http', auth='none', cors='*')\n    def enable_ngrok(self, auth_token):\n        if subprocess.call(['pgrep', 'ngrok']) == 1:\n            subprocess.Popen(['ngrok', 'tcp', '-authtoken', auth_token, '-log', '/tmp/ngrok.log', '22'])\n            return 'starting with ' + auth_token\n        else:\n            return 'already running'\n", "comments": "             style              body                   width  480px                  margin  60px auto                  font family  sans serif                  text align  justify                  color   6b6b6b                             text red                   color   ff0000                          style      index template         doctype html   html       head           title odoo posbox  title        index style             head       body           h1 your posbox running  h1           p          the posbox hardware adapter allows use         receipt printers barcode scanners odoo point         sale   b version 8 0 later  b   you start  href  https   www odoo com start  online free trial             href  https   www odoo com page download  download install              p           p          for information setup point sale         posbox  please refer          href  https   www odoo com documentation user point sale posbox index html  manual              p           p          to see status connected hardware  please refer           href   hw proxy status  hardware status page              p           p          wi fi configured visiting  href   wifi  wi fi configuration page              p           p          if need grant remote debugging access developer   href   remote connect               p                    p          the posbox software installed posbox  b version 16  b           posbox version number independent odoo  you upgrade         software  href   hw proxy upgrade   upgrade page              p           p for question  please contact odoo support  href  http   www odoo com help  www odoo com help             p        body    html         class posboxhomepage(odoo addons web controllers main home)       def get hw screen message(self)          return      p      the activate customer display feature  need reinstall posbox software      you find latest images  href  http   nightly odoo com master posbox   odoo nightly builds   website      make sure download least version 16  br       odoo version 11   required use customer display feature    p            http route(     type  http   auth  none   website true)     def index(self)           return request render( hw posbox homepage index  mimetype  text html )         return index template   self get hw screen message()       http route(  wifi   type  http   auth  none   website true)     def wifi(self)          wifi template         doctype html   html       head           title wifi configuration  title        index style             head       body           h1 configure wifi  h1           p          here configure posbox connect wireless networks          currently open wpa networks supported  when enabling persistent checkbox          chosen network saved posbox attempt connect every time boots            p           form action   wifi connect  method  post                table                   tr                       td                          essid                        td                       td                           select name  essid               try              f   open(  tmp scanned networks txt    r )             line f                  line   line rstrip()                 line   misc html escape(line)                 wifi template      option value      line          line      option  n              f close()         except ioerror               logger warning( no  tmp scanned networks txt )         wifi template                                  select                        td                    tr                   tr                       td                          password                        td                       td                           input type  password  name  password  placeholder  optional                          td                    tr                   tr                       td                          persistent                        td                       td                           input type  checkbox  name  persistent                          td                    tr                   tr                       td                        td                           input type  submit  value  connect                          td                    tr                table            form           p                  you clear persistent configuration clicking                   form action   wifi clear                            input type  submit  value  clear persistent network configuration                      form            p           form        body    html              return wifi template       http route(  wifi connect   type  http   auth  none   cors    )     def connect wifi(self  essid  password  persistent false)          persistent                  persistent    1          else                  persistent               subprocess call(   home pi odoo addons point sale tools posbox configuration connect wifi sh   essid  password  persistent )         return  connecting     essid       http route(  wifi clear   type  http   auth  none   cors    )     def clear wifi configuration(self)          os system(  home pi odoo addons point sale tools posbox configuration clear wifi configuration sh )         return  configuration cleared        http route(  remote connect   type  http   auth  none   cors    )     def remote connect(self)          ngrok template         doctype html   html       head           title remote debugging  title           script src  http   code jquery com jquery 1 11 0 min js    script           script              (function ()                  var upgrading   false                  (  enable debug ) click(function ()                      var auth token    (  auth token ) val()                     (auth token      )                          alert( please provide authentication token  )                       else                            ajax(                             url    enable ngrok                              data                                    auth token   auth token                                                      ) always(function (response)                              (response      already running )                                  alert( remote debugging already activated  )                               else                                   (  auth token ) attr( disabled   disabled )                                  (  enable debug ) html( enabled remote debugging )                                  (  enable debug ) removeattr( href     )                                 (  enable debug ) off( click )                                                       )                                       )              )            script        index style                style               enable debug                   padding  10px                  background  rgb(121  197  107)                  color  white                  border radius  3px                  text align  center                  margin  30px                  text decoration  none                  display  inline block                             centering                  text align  center                          style        head       body           h1 remote debugging  h1           p class  text red           this allows someone gain remote access posbox          thus entire local network  only enable someone         trust            p           div class  centering                input type  text  id  auth token  size  42  placeholder  authentication token     br                id  enable debug  href     enable remote debugging             div        body    html             coding  utf 8        part odoo  see license file full copyright licensing details    6b6b6b    ff0000    return request render( hw posbox homepage index  mimetype  text html )   enable debug   ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport logging\nimport os\nimport subprocess\nimport werkzeug\n\nimport odoo\nfrom odoo import http\nfrom odoo.tools import misc\n\n_logger = logging.getLogger(__name__)\n\nindex_style = \"\"\"\n        <style>\n            body {\n                width: 480px;\n                margin: 60px auto;\n                font-family: sans-serif;\n                text-align: justify;\n                color: #6B6B6B;\n            }\n            .text-red {\n                color: #FF0000;\n            }\n        </style>\n\"\"\"\nindex_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Odoo's PosBox</title>\n\"\"\" + index_style + \"\"\"\n    </head>\n    <body>\n        <h1>Your PosBox is up and running</h1>\n        <p>\n        The PosBox is a hardware adapter that allows you to use\n        receipt printers and barcode scanners with Odoo's Point of\n        Sale, <b>version 8.0 or later</b>. You can start an <a href='https://www.odoo.com/start'>online free trial</a>,\n        or <a href='https://www.odoo.com/page/download'>download and install</a> it yourself.\n        </p>\n        <p>\n        For more information on how to setup the Point of Sale with\n        the PosBox, please refer to\n        <a href='https://www.odoo.com/documentation/user/point_of_sale/posbox/index.html'>the manual</a>.\n        </p>\n        <p>\n        To see the status of the connected hardware, please refer \n        to the <a href='/hw_proxy/status'>hardware status page</a>.\n        </p>\n        <p>\n        Wi-Fi can be configured by visiting the <a href='/wifi'>Wi-Fi configuration page</a>.\n        </p>\n        <p>\n        If you need to grant remote debugging access to a developer, you can do it <a href='/remote_connect'>here</a>.\n        </p>\n        %s\n        <p>\n        The PosBox software installed on this posbox is <b>version 16</b>,\n        the posbox version number is independent from Odoo. You can upgrade\n        the software on the <a href='/hw_proxy/upgrade/'>upgrade page</a>.\n        </p>\n        <p>For any other question, please contact the Odoo support at <a href='http://www.odoo.com/help'>www.odoo.com/help</a>\n        </p>\n    </body>\n</html>\n\n\"\"\"\n\n\nclass PosboxHomepage(odoo.addons.web.controllers.main.Home):\n\n    def get_hw_screen_message(self):\n        return \"\"\"\n<p>\n    The activate the customer display feature, you will need to reinstall the PosBox software.\n    You can find the latest images on the <a href=\"http://nightly.odoo.com/master/posbox/\">Odoo Nightly builds</a> website.\n    Make sure to download at least the version 16.<br/>\n    Odoo version 11, or above, is required to use the customer display feature.\n</p>\n\"\"\"\n\n    @http.route('/', type='http', auth='none', website=True)\n    def index(self):\n        #return request.render('hw_posbox_homepage.index',mimetype='text/html')\n        return index_template % self.get_hw_screen_message()\n\n    @http.route('/wifi', type='http', auth='none', website=True)\n    def wifi(self):\n        wifi_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Wifi configuration</title>\n\"\"\" + index_style + \"\"\"\n    </head>\n    <body>\n        <h1>Configure wifi</h1>\n        <p>\n        Here you can configure how the posbox should connect to wireless networks.\n        Currently only Open and WPA networks are supported. When enabling the persistent checkbox,\n        the chosen network will be saved and the posbox will attempt to connect to it every time it boots.\n        </p>\n        <form action='/wifi_connect' method='POST'>\n            <table>\n                <tr>\n                    <td>\n                        ESSID:\n                    </td>\n                    <td>\n                        <select name=\"essid\">\n\"\"\"\n        try:\n            f = open('/tmp/scanned_networks.txt', 'r')\n            for line in f:\n                line = line.rstrip()\n                line = misc.html_escape(line)\n                wifi_template += '<option value=\"' + line + '\">' + line + '</option>\\n'\n            f.close()\n        except IOError:\n            _logger.warning(\"No /tmp/scanned_networks.txt\")\n        wifi_template += \"\"\"\n                        </select>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Password:\n                    </td>\n                    <td>\n                        <input type=\"password\" name=\"password\" placeholder=\"optional\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        Persistent:\n                    </td>\n                    <td>\n                        <input type=\"checkbox\" name=\"persistent\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td/>\n                    <td>\n                        <input type=\"submit\" value=\"connect\"/>\n                    </td>\n                </tr>\n            </table>\n        </form>\n        <p>\n                You can clear the persistent configuration by clicking below:\n                <form action='/wifi_clear'>\n                        <input type=\"submit\" value=\"Clear persistent network configuration\"/>\n                </form>\n        </p>\n        <form>\n    </body>\n</html>\n\"\"\"\n        return wifi_template\n\n    @http.route('/wifi_connect', type='http', auth='none', cors='*')\n    def connect_to_wifi(self, essid, password, persistent=False):\n        if persistent:\n                persistent = \"1\"\n        else:\n                persistent = \"\"\n\n        subprocess.call(['/home/pi/odoo/addons/point_of_sale/tools/posbox/configuration/connect_to_wifi.sh', essid, password, persistent])\n        return \"connecting to \" + essid\n\n    @http.route('/wifi_clear', type='http', auth='none', cors='*')\n    def clear_wifi_configuration(self):\n        os.system('/home/pi/odoo/addons/point_of_sale/tools/posbox/configuration/clear_wifi_configuration.sh')\n        return \"configuration cleared\"\n\n    @http.route('/remote_connect', type='http', auth='none', cors='*')\n    def remote_connect(self):\n        ngrok_template = \"\"\"\n<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>Remote debugging</title>\n        <script src=\"http://code.jquery.com/jquery-1.11.0.min.js\"></script>\n        <script>\n           $(function () {\n               var upgrading = false;\n               $('#enable_debug').click(function () {\n                   var auth_token = $('#auth_token').val();\n                   if (auth_token == \"\") {\n                       alert('Please provide an authentication token.');\n                   } else {\n                       $.ajax({\n                           url: '/enable_ngrok',\n                           data: {\n                               'auth_token': auth_token\n                           }\n                       }).always(function (response) {\n                           if (response === 'already running') {\n                               alert('Remote debugging already activated.');\n                           } else {\n                               $('#auth_token').attr('disabled','disabled');\n                               $('#enable_debug').html('Enabled remote debugging');\n                               $('#enable_debug').removeAttr('href', '')\n                               $('#enable_debug').off('click');\n                           }\n                       });\n                   }\n               });\n           });\n        </script>\n\"\"\" + index_style + \"\"\"\n        <style>\n            #enable_debug {\n                padding: 10px;\n                background: rgb(121, 197, 107);\n                color: white;\n                border-radius: 3px;\n                text-align: center;\n                margin: 30px;\n                text-decoration: none;\n                display: inline-block;\n            }\n            .centering{\n                text-align: center;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Remote debugging</h1>\n        <p class='text-red'>\n        This allows someone to gain remote access to your Posbox, and\n        thus your entire local network. Only enable this for someone\n        you trust.\n        </p>\n        <div class='centering'>\n            <input type=\"text\" id=\"auth_token\" size=\"42\" placeholder=\"Authentication Token\"/> <br/>\n            <a id=\"enable_debug\" href=\"#\">Enable remote debugging</a>\n        </div>\n    </body>\n</html>\n\"\"\"\n        return ngrok_template\n\n    @http.route('/enable_ngrok', type='http', auth='none', cors='*')\n    def enable_ngrok(self, auth_token):\n        if subprocess.call(['pgrep', 'ngrok']) == 1:\n            subprocess.Popen(['ngrok', 'tcp', '-authtoken', auth_token, '-log', '/tmp/ngrok.log', '22'])\n            return 'starting with ' + auth_token\n        else:\n            return 'already running'\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "26aa7421361515402a7b79fe04e8e7d4", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hw_posbox_homepage/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "django", "code": "import posixpath\nfrom urllib.parse import quote\n\nfrom django.conf import settings\nfrom django.test import override_settings\n\nfrom .cases import StaticFilesTestCase, TestDefaults\n\n\n@override_settings(ROOT_URLCONF='staticfiles_tests.urls.default')\nclass TestServeStatic(StaticFilesTestCase):\n    \"\"\"\n    Test static asset serving view.\n    \"\"\"\n    def _response(self, filepath):\n        return self.client.get(quote(posixpath.join(settings.STATIC_URL, filepath)))\n\n    def assertFileContains(self, filepath, text):\n        self.assertContains(self._response(filepath), text)\n\n    def assertFileNotFound(self, filepath):\n        self.assertEqual(self._response(filepath).status_code, 404)\n\n\n@override_settings(DEBUG=False)\nclass TestServeDisabled(TestServeStatic):\n    \"\"\"\n    Test serving static files disabled when DEBUG is False.\n    \"\"\"\n    def test_disabled_serving(self):\n        self.assertFileNotFound('test.txt')\n\n\n@override_settings(DEBUG=True)\nclass TestServeStaticWithDefaultURL(TestDefaults, TestServeStatic):\n    \"\"\"\n    Test static asset serving view with manually configured URLconf.\n    \"\"\"\n\n\n@override_settings(DEBUG=True, ROOT_URLCONF='staticfiles_tests.urls.helper')\nclass TestServeStaticWithURLHelper(TestDefaults, TestServeStatic):\n    \"\"\"\n    Test static asset serving view with staticfiles_urlpatterns helper.\n    \"\"\"\n", "comments": "        test static asset serving view              def  response(self  filepath)          return self client get(quote(posixpath join(settings static url  filepath)))      def assertfilecontains(self  filepath  text)          self assertcontains(self  response(filepath)  text)      def assertfilenotfound(self  filepath)          self assertequal(self  response(filepath) status code  404)    override settings(debug false) class testservedisabled(testservestatic)              test serving static files disabled debug false              def test disabled serving(self)          self assertfilenotfound( test txt )    override settings(debug true) class testservestaticwithdefaulturl(testdefaults  testservestatic)              test static asset serving view manually configured urlconf             override settings(debug true  root urlconf  staticfiles tests urls helper ) class testservestaticwithurlhelper(testdefaults  testservestatic)              test static asset serving view staticfiles urlpatterns helper          ", "content": "import posixpath\nfrom urllib.parse import quote\n\nfrom django.conf import settings\nfrom django.test import override_settings\n\nfrom .cases import StaticFilesTestCase, TestDefaults\n\n\n@override_settings(ROOT_URLCONF='staticfiles_tests.urls.default')\nclass TestServeStatic(StaticFilesTestCase):\n    \"\"\"\n    Test static asset serving view.\n    \"\"\"\n    def _response(self, filepath):\n        return self.client.get(quote(posixpath.join(settings.STATIC_URL, filepath)))\n\n    def assertFileContains(self, filepath, text):\n        self.assertContains(self._response(filepath), text)\n\n    def assertFileNotFound(self, filepath):\n        self.assertEqual(self._response(filepath).status_code, 404)\n\n\n@override_settings(DEBUG=False)\nclass TestServeDisabled(TestServeStatic):\n    \"\"\"\n    Test serving static files disabled when DEBUG is False.\n    \"\"\"\n    def test_disabled_serving(self):\n        self.assertFileNotFound('test.txt')\n\n\n@override_settings(DEBUG=True)\nclass TestServeStaticWithDefaultURL(TestDefaults, TestServeStatic):\n    \"\"\"\n    Test static asset serving view with manually configured URLconf.\n    \"\"\"\n\n\n@override_settings(DEBUG=True, ROOT_URLCONF='staticfiles_tests.urls.helper')\nclass TestServeStaticWithURLHelper(TestDefaults, TestServeStatic):\n    \"\"\"\n    Test static asset serving view with staticfiles_urlpatterns helper.\n    \"\"\"\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "test_views.py", "id": "19ed1d37b9090cb564fa7b931233f9d3", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/staticfiles_tests/test_views.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
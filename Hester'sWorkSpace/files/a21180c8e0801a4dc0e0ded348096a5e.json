{"author": "python-telegram-bot", "code": "\n\n A library that provides a Python interface to the Telegram Bot API\n Copyright (C) 2015-2018\n Leandro Toledo de Souza <devs@python-telegram-bot.org>\n\n This program is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser Public License for more details.\n\n You should have received a copy of the GNU Lesser Public License\n along with this program.  If not, see [http://www.gnu.org/licenses/].\n\"\"\"This module contains an object that represents a Telegram ChatMember.\"\"\"\n\nfrom telegram import User, TelegramObject\nfrom telegram.utils.helpers import to_timestamp, from_timestamp\n\n\nclass ChatMember(TelegramObject):\n    \"\"\"This object contains information about one member of the chat.\n\n    Attributes:\n        user (:class:`telegram.User`): Information about the user.\n        status (:obj:`str`): The member's status in the chat.\n        until_date (:class:`datetime.datetime`): Optional. Date when restrictions will be lifted\n            for this user.\n        can_be_edited (:obj:`bool`): Optional. If the bot is allowed to edit administrator\n            privileges of that user.\n        can_change_info (:obj:`bool`): Optional. If the administrator can change the chat title,\n            photo and other settings.\n        can_post_messages (:obj:`bool`): Optional. If the administrator can post in the channel.\n        can_edit_messages (:obj:`bool`): Optional. If the administrator can edit messages of other\n            users.\n        can_delete_messages (:obj:`bool`): Optional. If the administrator can delete messages of\n            other users.\n        can_invite_users (:obj:`bool`): Optional. If the administrator can invite new users to the\n            chat.\n        can_restrict_members (:obj:`bool`): Optional. If the administrator can restrict, ban or\n            unban chat members.\n        can_pin_messages (:obj:`bool`): Optional. If the administrator can pin messages.\n        can_promote_members (:obj:`bool`): Optional. If the administrator can add new\n            administrators.\n        can_send_messages (:obj:`bool`): Optional. If the user can send text messages, contacts,\n            locations and venues.\n        can_send_media_messages (:obj:`bool`): Optional. If the user can send media messages,\n            implies can_send_messages.\n        can_send_other_messages (:obj:`bool`): Optional. If the user can send animations, games,\n            stickers and use inline bots, implies can_send_media_messages.\n        can_add_web_page_previews (:obj:`bool`): Optional. If user may add web page previews to his\n            messages, implies can_send_media_messages\n\n    Args:\n        user (:class:`telegram.User`): Information about the user.\n        status (:obj:`str`): The member's status in the chat. Can be 'creator', 'administrator',\n            'member', 'restricted', 'left' or 'kicked'.\n        until_date (:class:`datetime.datetime`, optional): Restricted and kicked only. Date when\n            restrictions will be lifted for this user.\n        can_be_edited (:obj:`bool`, optional): Administrators only. True, if the bot is allowed to\n            edit administrator privileges of that user.\n        can_change_info (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can change the chat title, photo and other settings.\n        can_post_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can post in the channel, channels only.\n        can_edit_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can edit messages of other users, channels only.\n        can_delete_messages (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can delete messages of other user.\n        can_invite_users (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can invite new users to the chat.\n        can_restrict_members (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can restrict, ban or unban chat members.\n        can_pin_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can pin messages, supergroups only.\n        can_promote_members (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can add new administrators with a subset of his own privileges or demote\n            administrators that he has promoted, directly or indirectly (promoted by administrators\n            that were appointed by the user).\n        can_send_messages (:obj:`bool`, optional): Restricted only. True, if the user can send text\n            messages, contacts, locations and venues.\n        can_send_media_messages (:obj:`bool`, optional): Restricted only. True, if the user can\n            send audios, documents, photos, videos, video notes and voice notes, implies\n            can_send_messages.\n        can_send_other_messages (:obj:`bool`, optional): Restricted only. True, if the user can\n            send animations, games, stickers and use inline bots, implies can_send_media_messages.\n        can_add_web_page_previews (:obj:`bool`, optional): Restricted only. True, if user may add\n            web page previews to his messages, implies can_send_media_messages.\n\n    \"\"\"\n    ADMINISTRATOR = 'administrator'\n    \"\"\":obj:`str`: 'administrator'\"\"\"\n    CREATOR = 'creator'\n    \"\"\":obj:`str`: 'creator'\"\"\"\n    KICKED = 'kicked'\n    \"\"\":obj:`str`: 'kicked'\"\"\"\n    LEFT = 'left'\n    \"\"\":obj:`str`: 'left'\"\"\"\n    MEMBER = 'member'\n    \"\"\":obj:`str`: 'member'\"\"\"\n    RESTRICTED = 'restricted'\n    \"\"\":obj:`str`: 'restricted'\"\"\"\n\n    def __init__(self, user, status, until_date=None, can_be_edited=None,\n                 can_change_info=None, can_post_messages=None, can_edit_messages=None,\n                 can_delete_messages=None, can_invite_users=None,\n                 can_restrict_members=None, can_pin_messages=None,\n                 can_promote_members=None, can_send_messages=None,\n                 can_send_media_messages=None, can_send_other_messages=None,\n                 can_add_web_page_previews=None, **kwargs):\n         Required\n        self.user = user\n        self.status = status\n        self.until_date = until_date\n        self.can_be_edited = can_be_edited\n        self.can_change_info = can_change_info\n        self.can_post_messages = can_post_messages\n        self.can_edit_messages = can_edit_messages\n        self.can_delete_messages = can_delete_messages\n        self.can_invite_users = can_invite_users\n        self.can_restrict_members = can_restrict_members\n        self.can_pin_messages = can_pin_messages\n        self.can_promote_members = can_promote_members\n        self.can_send_messages = can_send_messages\n        self.can_send_media_messages = can_send_media_messages\n        self.can_send_other_messages = can_send_other_messages\n        self.can_add_web_page_previews = can_add_web_page_previews\n\n        self._id_attrs = (self.user, self.status)\n\n    @classmethod\n    def de_json(cls, data, bot):\n        if not data:\n            return None\n\n        data = super(ChatMember, cls).de_json(data, bot)\n\n        data['user'] = User.de_json(data.get('user'), bot)\n        data['until_date'] = from_timestamp(data.get('until_date', None))\n\n        return cls(**data)\n\n    def to_dict(self):\n        data = super(ChatMember, self).to_dict()\n\n        data['until_date'] = to_timestamp(self.until_date)\n\n        return data\n", "comments": "   this module contains object represents telegram chatmember      telegram import user  telegramobject telegram utils helpers import timestamp  timestamp   class chatmember(telegramobject)         this object contains information one member chat       attributes          user ( class  telegram user )  information user          status ( obj  str )  the member status chat          date ( class  datetime datetime )  optional  date restrictions lifted             user          edited ( obj  bool )  optional  if bot allowed edit administrator             privileges user          change info ( obj  bool )  optional  if administrator change chat title              photo settings          post messages ( obj  bool )  optional  if administrator post channel          edit messages ( obj  bool )  optional  if administrator edit messages             users          delete messages ( obj  bool )  optional  if administrator delete messages             users          invite users ( obj  bool )  optional  if administrator invite new users             chat          restrict members ( obj  bool )  optional  if administrator restrict  ban             unban chat members          pin messages ( obj  bool )  optional  if administrator pin messages          promote members ( obj  bool )  optional  if administrator add new             administrators          send messages ( obj  bool )  optional  if user send text messages  contacts              locations venues          send media messages ( obj  bool )  optional  if user send media messages              implies send messages          send messages ( obj  bool )  optional  if user send animations  games              stickers use inline bots  implies send media messages          add web page previews ( obj  bool )  optional  if user may add web page previews             messages  implies send media messages      args          user ( class  telegram user )  information user          status ( obj  str )  the member status chat  can  creator    administrator                member    restricted    left   kicked           date ( class  datetime datetime   optional)  restricted kicked  date             restrictions lifted user          edited ( obj  bool   optional)  administrators  true  bot allowed             edit administrator privileges user          change info ( obj  bool   optional)  administrators  true  administrator             change chat title  photo settings          post messages ( obj  bool   optional)  administrators  true  administrator             post channel  channels          edit messages ( obj  bool   optional)  administrators  true  administrator             edit messages users  channels          delete messages ( obj  bool   optional)  administrators  true              administrator delete messages user          invite users ( obj  bool   optional)  administrators  true  administrator             invite new users chat          restrict members ( obj  bool   optional)  administrators  true              administrator restrict  ban unban chat members          pin messages ( obj  bool   optional)  administrators  true  administrator             pin messages  supergroups          promote members ( obj  bool   optional)  administrators  true              administrator add new administrators subset privileges demote             administrators promoted  directly indirectly (promoted administrators             appointed user)          send messages ( obj  bool   optional)  restricted  true  user send text             messages  contacts  locations venues          send media messages ( obj  bool   optional)  restricted  true  user             send audios  documents  photos  videos  video notes voice notes  implies             send messages          send messages ( obj  bool   optional)  restricted  true  user             send animations  games  stickers use inline bots  implies send media messages          add web page previews ( obj  bool   optional)  restricted  true  user may add             web page previews messages  implies send media messages               administrator    administrator          obj  str    administrator         creator    creator          obj  str    creator         kicked    kicked          obj  str    kicked         left    left          obj  str    left         member    member          obj  str    member         restricted    restricted          obj  str    restricted         usr bin env python       a library provides python interface telegram bot api    copyright (c) 2015 2018    leandro toledo de souza  devs python telegram bot org        this program free software  redistribute modify    terms gnu lesser public license published    free software foundation  either version 3 license     (at option) later version        this program distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu lesser public license details        you received copy gnu lesser public license    along program   if  see  http   www gnu org licenses       required ", "content": "#!/usr/bin/env python\n#\n# A library that provides a Python interface to the Telegram Bot API\n# Copyright (C) 2015-2018\n# Leandro Toledo de Souza <devs@python-telegram-bot.org>\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Lesser Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Lesser Public License for more details.\n#\n# You should have received a copy of the GNU Lesser Public License\n# along with this program.  If not, see [http://www.gnu.org/licenses/].\n\"\"\"This module contains an object that represents a Telegram ChatMember.\"\"\"\n\nfrom telegram import User, TelegramObject\nfrom telegram.utils.helpers import to_timestamp, from_timestamp\n\n\nclass ChatMember(TelegramObject):\n    \"\"\"This object contains information about one member of the chat.\n\n    Attributes:\n        user (:class:`telegram.User`): Information about the user.\n        status (:obj:`str`): The member's status in the chat.\n        until_date (:class:`datetime.datetime`): Optional. Date when restrictions will be lifted\n            for this user.\n        can_be_edited (:obj:`bool`): Optional. If the bot is allowed to edit administrator\n            privileges of that user.\n        can_change_info (:obj:`bool`): Optional. If the administrator can change the chat title,\n            photo and other settings.\n        can_post_messages (:obj:`bool`): Optional. If the administrator can post in the channel.\n        can_edit_messages (:obj:`bool`): Optional. If the administrator can edit messages of other\n            users.\n        can_delete_messages (:obj:`bool`): Optional. If the administrator can delete messages of\n            other users.\n        can_invite_users (:obj:`bool`): Optional. If the administrator can invite new users to the\n            chat.\n        can_restrict_members (:obj:`bool`): Optional. If the administrator can restrict, ban or\n            unban chat members.\n        can_pin_messages (:obj:`bool`): Optional. If the administrator can pin messages.\n        can_promote_members (:obj:`bool`): Optional. If the administrator can add new\n            administrators.\n        can_send_messages (:obj:`bool`): Optional. If the user can send text messages, contacts,\n            locations and venues.\n        can_send_media_messages (:obj:`bool`): Optional. If the user can send media messages,\n            implies can_send_messages.\n        can_send_other_messages (:obj:`bool`): Optional. If the user can send animations, games,\n            stickers and use inline bots, implies can_send_media_messages.\n        can_add_web_page_previews (:obj:`bool`): Optional. If user may add web page previews to his\n            messages, implies can_send_media_messages\n\n    Args:\n        user (:class:`telegram.User`): Information about the user.\n        status (:obj:`str`): The member's status in the chat. Can be 'creator', 'administrator',\n            'member', 'restricted', 'left' or 'kicked'.\n        until_date (:class:`datetime.datetime`, optional): Restricted and kicked only. Date when\n            restrictions will be lifted for this user.\n        can_be_edited (:obj:`bool`, optional): Administrators only. True, if the bot is allowed to\n            edit administrator privileges of that user.\n        can_change_info (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can change the chat title, photo and other settings.\n        can_post_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can post in the channel, channels only.\n        can_edit_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can edit messages of other users, channels only.\n        can_delete_messages (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can delete messages of other user.\n        can_invite_users (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can invite new users to the chat.\n        can_restrict_members (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can restrict, ban or unban chat members.\n        can_pin_messages (:obj:`bool`, optional): Administrators only. True, if the administrator\n            can pin messages, supergroups only.\n        can_promote_members (:obj:`bool`, optional): Administrators only. True, if the\n            administrator can add new administrators with a subset of his own privileges or demote\n            administrators that he has promoted, directly or indirectly (promoted by administrators\n            that were appointed by the user).\n        can_send_messages (:obj:`bool`, optional): Restricted only. True, if the user can send text\n            messages, contacts, locations and venues.\n        can_send_media_messages (:obj:`bool`, optional): Restricted only. True, if the user can\n            send audios, documents, photos, videos, video notes and voice notes, implies\n            can_send_messages.\n        can_send_other_messages (:obj:`bool`, optional): Restricted only. True, if the user can\n            send animations, games, stickers and use inline bots, implies can_send_media_messages.\n        can_add_web_page_previews (:obj:`bool`, optional): Restricted only. True, if user may add\n            web page previews to his messages, implies can_send_media_messages.\n\n    \"\"\"\n    ADMINISTRATOR = 'administrator'\n    \"\"\":obj:`str`: 'administrator'\"\"\"\n    CREATOR = 'creator'\n    \"\"\":obj:`str`: 'creator'\"\"\"\n    KICKED = 'kicked'\n    \"\"\":obj:`str`: 'kicked'\"\"\"\n    LEFT = 'left'\n    \"\"\":obj:`str`: 'left'\"\"\"\n    MEMBER = 'member'\n    \"\"\":obj:`str`: 'member'\"\"\"\n    RESTRICTED = 'restricted'\n    \"\"\":obj:`str`: 'restricted'\"\"\"\n\n    def __init__(self, user, status, until_date=None, can_be_edited=None,\n                 can_change_info=None, can_post_messages=None, can_edit_messages=None,\n                 can_delete_messages=None, can_invite_users=None,\n                 can_restrict_members=None, can_pin_messages=None,\n                 can_promote_members=None, can_send_messages=None,\n                 can_send_media_messages=None, can_send_other_messages=None,\n                 can_add_web_page_previews=None, **kwargs):\n        # Required\n        self.user = user\n        self.status = status\n        self.until_date = until_date\n        self.can_be_edited = can_be_edited\n        self.can_change_info = can_change_info\n        self.can_post_messages = can_post_messages\n        self.can_edit_messages = can_edit_messages\n        self.can_delete_messages = can_delete_messages\n        self.can_invite_users = can_invite_users\n        self.can_restrict_members = can_restrict_members\n        self.can_pin_messages = can_pin_messages\n        self.can_promote_members = can_promote_members\n        self.can_send_messages = can_send_messages\n        self.can_send_media_messages = can_send_media_messages\n        self.can_send_other_messages = can_send_other_messages\n        self.can_add_web_page_previews = can_add_web_page_previews\n\n        self._id_attrs = (self.user, self.status)\n\n    @classmethod\n    def de_json(cls, data, bot):\n        if not data:\n            return None\n\n        data = super(ChatMember, cls).de_json(data, bot)\n\n        data['user'] = User.de_json(data.get('user'), bot)\n        data['until_date'] = from_timestamp(data.get('until_date', None))\n\n        return cls(**data)\n\n    def to_dict(self):\n        data = super(ChatMember, self).to_dict()\n\n        data['until_date'] = to_timestamp(self.until_date)\n\n        return data\n", "description": "We have made you a wrapper you can't refuse", "file_name": "chatmember.py", "id": "a21180c8e0801a4dc0e0ded348096a5e", "language": "Python", "project_name": "python-telegram-bot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/python-telegram-bot-python-telegram-bot/python-telegram-bot-python-telegram-bot-3ccf40e/telegram/chatmember.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:32:55Z", "url": "https://github.com/python-telegram-bot/python-telegram-bot", "wiki": true}
{"author": "nvbn", "code": "import pytest\nfrom thefuck.types import Command\nfrom thefuck.rules.brew_link import get_new_command, match\n\n\n@pytest.fixture\ndef output():\n    return (\"Error: Could not symlink bin/gcp\\n\"\n            \"Target /usr/local/bin/gcp\\n\"\n            \"already exists. You may want to remove it:\\n\"\n            \"  rm '/usr/local/bin/gcp'\\n\"\n            \"\\n\"\n            \"To force the link and overwrite all conflicting files:\\n\"\n            \"  brew link --overwrite coreutils\\n\"\n            \"\\n\"\n            \"To list all files that would be deleted:\\n\"\n            \"  brew link --overwrite --dry-run coreutils\\n\")\n\n\n@pytest.fixture\ndef new_command(formula):\n    return 'brew link --overwrite --dry-run {}'.format(formula)\n\n\n@pytest.mark.parametrize('script', ['brew link coreutils', 'brew ln coreutils'])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', ['brew link coreutils'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, formula, ', [('brew link coreutils', 'coreutils')])\ndef test_get_new_command(output, new_command, script, formula):\n    assert get_new_command(Command(script, output)) == new_command\n", "comments": "", "content": "import pytest\nfrom thefuck.types import Command\nfrom thefuck.rules.brew_link import get_new_command, match\n\n\n@pytest.fixture\ndef output():\n    return (\"Error: Could not symlink bin/gcp\\n\"\n            \"Target /usr/local/bin/gcp\\n\"\n            \"already exists. You may want to remove it:\\n\"\n            \"  rm '/usr/local/bin/gcp'\\n\"\n            \"\\n\"\n            \"To force the link and overwrite all conflicting files:\\n\"\n            \"  brew link --overwrite coreutils\\n\"\n            \"\\n\"\n            \"To list all files that would be deleted:\\n\"\n            \"  brew link --overwrite --dry-run coreutils\\n\")\n\n\n@pytest.fixture\ndef new_command(formula):\n    return 'brew link --overwrite --dry-run {}'.format(formula)\n\n\n@pytest.mark.parametrize('script', ['brew link coreutils', 'brew ln coreutils'])\ndef test_match(output, script):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script', ['brew link coreutils'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, formula, ', [('brew link coreutils', 'coreutils')])\ndef test_get_new_command(output, new_command, script, formula):\n    assert get_new_command(Command(script, output)) == new_command\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_brew_link.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_brew_link.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "certbot", "code": "\"\"\"Manual test of display functions.\"\"\"\nimport sys\n\nfrom certbot.display import util\nfrom certbot.tests.display import util_test\n\n\ndef test_visual(displayer, choices):\n    \"\"\"Visually test all of the display functions.\"\"\"\n    displayer.notification(\"Random notification!\")\n    displayer.menu(\"Question?\", choices,\n                   ok_label=\"O\", cancel_label=\"Can\", help_label=\"??\")\n    displayer.menu(\"Question?\", [choice[1] for choice in choices],\n                   ok_label=\"O\", cancel_label=\"Can\", help_label=\"??\")\n    displayer.input(\"Input Message\")\n    displayer.yesno(\"YesNo Message\", yes_label=\"Yessir\", no_label=\"Nosir\")\n    displayer.checklist(\"Checklist Message\", [choice[0] for choice in choices])\n\n\nif __name__ == \"__main__\":\n    displayer = util.FileDisplay(sys.stdout, False)\n    test_visual(displayer, util_test.CHOICES)\n", "comments": "   manual test display functions     import sys  certbot display import util certbot tests display import util test   def test visual(displayer  choices)         visually test display functions     ", "content": "\"\"\"Manual test of display functions.\"\"\"\nimport sys\n\nfrom certbot.display import util\nfrom certbot.tests.display import util_test\n\n\ndef test_visual(displayer, choices):\n    \"\"\"Visually test all of the display functions.\"\"\"\n    displayer.notification(\"Random notification!\")\n    displayer.menu(\"Question?\", choices,\n                   ok_label=\"O\", cancel_label=\"Can\", help_label=\"??\")\n    displayer.menu(\"Question?\", [choice[1] for choice in choices],\n                   ok_label=\"O\", cancel_label=\"Can\", help_label=\"??\")\n    displayer.input(\"Input Message\")\n    displayer.yesno(\"YesNo Message\", yes_label=\"Yessir\", no_label=\"Nosir\")\n    displayer.checklist(\"Checklist Message\", [choice[0] for choice in choices])\n\n\nif __name__ == \"__main__\":\n    displayer = util.FileDisplay(sys.stdout, False)\n    test_visual(displayer, util_test.CHOICES)\n", "description": "Certbot is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.  It can also act as a client for any other CA that uses the ACME protocol.", "file_name": "display.py", "id": "11d747edf1e95e8266fc7fb5985c9d43", "language": "Python", "project_name": "certbot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/certbot-certbot/certbot-certbot-1d0e3b1/tests/display.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:23Z", "url": "https://github.com/certbot/certbot", "wiki": false}
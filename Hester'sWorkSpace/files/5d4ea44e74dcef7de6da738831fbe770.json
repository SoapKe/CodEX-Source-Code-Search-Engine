{"author": "pypa", "code": "# -*- coding: utf-8 -*-\nimport sys\nimport os\nimport platform\nimport json\n\n\ndef format_full_version(info):\n    version = '{0.major}.{0.minor}.{0.micro}'.format(info)\n    kind = info.releaselevel\n    if kind != 'final':\n        version += kind[0] + str(info.serial)\n    return version\n\n\n\nif hasattr(sys, 'implementation'):\n    implementation_version = format_full_version(sys.implementation.version)\nelse:\n    implementation_version = '0'\n\n\nif hasattr(sys, 'implementation'):\n    implementation_name = sys.implementation.name\nelse:\n    implementation_name = 'cpython'\n\nlookup = {\n    'os_name': os.name,\n    'sys_platform': sys.platform,\n    'platform_machine': platform.machine(),\n    'platform_python_implementation': platform.python_implementation(),\n    'platform_release': platform.release(),\n    'platform_system': platform.system(),\n    'platform_version': platform.version(),\n    'python_version': platform.python_version()[:3],\n    'python_full_version': platform.python_version(),\n    'implementation_name': implementation_name,\n    'implementation_version': implementation_version\n}\n\nif __name__ == '__main__':\n    print(json.dumps(lookup))\n", "comments": "      coding  utf 8        support 508 implementation version     default cpython 2 7  ", "content": "# -*- coding: utf-8 -*-\nimport sys\nimport os\nimport platform\nimport json\n\n\ndef format_full_version(info):\n    version = '{0.major}.{0.minor}.{0.micro}'.format(info)\n    kind = info.releaselevel\n    if kind != 'final':\n        version += kind[0] + str(info.serial)\n    return version\n\n\n# Support for 508's implementation_version.\nif hasattr(sys, 'implementation'):\n    implementation_version = format_full_version(sys.implementation.version)\nelse:\n    implementation_version = '0'\n\n# Default to cpython for 2.7.\nif hasattr(sys, 'implementation'):\n    implementation_name = sys.implementation.name\nelse:\n    implementation_name = 'cpython'\n\nlookup = {\n    'os_name': os.name,\n    'sys_platform': sys.platform,\n    'platform_machine': platform.machine(),\n    'platform_python_implementation': platform.python_implementation(),\n    'platform_release': platform.release(),\n    'platform_system': platform.system(),\n    'platform_version': platform.version(),\n    'python_version': platform.python_version()[:3],\n    'python_full_version': platform.python_version(),\n    'implementation_name': implementation_name,\n    'implementation_version': implementation_version\n}\n\nif __name__ == '__main__':\n    print(json.dumps(lookup))\n", "description": " Python Development Workflow for Humans.", "file_name": "pep508checker.py", "id": "5d4ea44e74dcef7de6da738831fbe770", "language": "Python", "project_name": "pipenv", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/pypa-pipenv/pypa-pipenv-9a87a9a/pipenv/pep508checker.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:53:13Z", "url": "https://github.com/pypa/pipenv", "wiki": true}
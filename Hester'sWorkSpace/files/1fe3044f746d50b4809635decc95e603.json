{"author": "rushter", "code": "import logging\n\nimport numpy as np\n\nfrom mla.rbm import RBM\n\nlogging.basicConfig(level=logging.DEBUG)\n\n\ndef print_curve(rbm):\n    from matplotlib import pyplot as plt\n\n    def moving_average(a, n=25):\n        ret = np.cumsum(a, dtype=float)\n        ret[n:] = ret[n:] - ret[:-n]\n        return ret[n - 1:] / n\n\n    plt.plot(moving_average(rbm.errors))\n    plt.show()\n\n\nX = np.random.uniform(0, 1, (1500, 10))\nrbm = RBM(n_hidden=10, max_epochs=200, batch_size=10, learning_rate=0.1)\nrbm.fit(X)\nprint_curve(rbm)\n\n\n", "comments": "", "content": "import logging\n\nimport numpy as np\n\nfrom mla.rbm import RBM\n\nlogging.basicConfig(level=logging.DEBUG)\n\n\ndef print_curve(rbm):\n    from matplotlib import pyplot as plt\n\n    def moving_average(a, n=25):\n        ret = np.cumsum(a, dtype=float)\n        ret[n:] = ret[n:] - ret[:-n]\n        return ret[n - 1:] / n\n\n    plt.plot(moving_average(rbm.errors))\n    plt.show()\n\n\nX = np.random.uniform(0, 1, (1500, 10))\nrbm = RBM(n_hidden=10, max_epochs=200, batch_size=10, learning_rate=0.1)\nrbm.fit(X)\nprint_curve(rbm)\n\n\n", "description": "Minimal and clean examples of machine learning algorithms", "file_name": "rbm.py", "id": "1fe3044f746d50b4809635decc95e603", "language": "Python", "project_name": "MLAlgorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rushter-MLAlgorithms/rushter-MLAlgorithms-d398777/examples/rbm.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:25:48Z", "url": "https://github.com/rushter/MLAlgorithms", "wiki": false}
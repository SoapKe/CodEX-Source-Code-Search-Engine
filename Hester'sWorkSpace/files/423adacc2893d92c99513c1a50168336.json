{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    manufacturing_lead = fields.Float(related='company_id.manufacturing_lead', string=\"Manufacturing Lead Time\")\n    use_manufacturing_lead = fields.Boolean(string=\"Default Manufacturing Lead Time\", oldname='default_use_manufacturing_lead')\n    module_mrp_byproduct = fields.Boolean(\"By-Products\")\n    module_mrp_mps = fields.Boolean(\"Master Production Schedule\")\n    module_mrp_plm = fields.Boolean(\"Product Lifecycle Management (PLM)\")\n    module_mrp_maintenance = fields.Boolean(\"Maintenance\")\n    module_quality_mrp = fields.Boolean(\"Quality\")\n    module_mrp_repair = fields.Boolean(\"Repair\")\n    group_mrp_routings = fields.Boolean(\"Work Orders & Quality\",\n        implied_group='mrp.group_mrp_routings')\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        res.update(\n            use_manufacturing_lead=self.env['ir.config_parameter'].sudo().get_param('mrp.use_manufacturing_lead')\n        )\n        return res\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        self.env['ir.config_parameter'].sudo().set_param('mrp.use_manufacturing_lead', self.use_manufacturing_lead)\n\n    @api.onchange('use_manufacturing_lead')\n    def _onchange_use_manufacturing_lead(self):\n        if not self.use_manufacturing_lead:\n            self.manufacturing_lead = 0.0\n\n    @api.onchange('group_mrp_routings')\n    def _onchange_group_mrp_routings(self):\n        self.module_quality_mrp = self.group_mrp_routings\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\n\n\nclass ResConfigSettings(models.TransientModel):\n    _inherit = 'res.config.settings'\n\n    manufacturing_lead = fields.Float(related='company_id.manufacturing_lead', string=\"Manufacturing Lead Time\")\n    use_manufacturing_lead = fields.Boolean(string=\"Default Manufacturing Lead Time\", oldname='default_use_manufacturing_lead')\n    module_mrp_byproduct = fields.Boolean(\"By-Products\")\n    module_mrp_mps = fields.Boolean(\"Master Production Schedule\")\n    module_mrp_plm = fields.Boolean(\"Product Lifecycle Management (PLM)\")\n    module_mrp_maintenance = fields.Boolean(\"Maintenance\")\n    module_quality_mrp = fields.Boolean(\"Quality\")\n    module_mrp_repair = fields.Boolean(\"Repair\")\n    group_mrp_routings = fields.Boolean(\"Work Orders & Quality\",\n        implied_group='mrp.group_mrp_routings')\n\n    @api.model\n    def get_values(self):\n        res = super(ResConfigSettings, self).get_values()\n        res.update(\n            use_manufacturing_lead=self.env['ir.config_parameter'].sudo().get_param('mrp.use_manufacturing_lead')\n        )\n        return res\n\n    @api.multi\n    def set_values(self):\n        super(ResConfigSettings, self).set_values()\n        self.env['ir.config_parameter'].sudo().set_param('mrp.use_manufacturing_lead', self.use_manufacturing_lead)\n\n    @api.onchange('use_manufacturing_lead')\n    def _onchange_use_manufacturing_lead(self):\n        if not self.use_manufacturing_lead:\n            self.manufacturing_lead = 0.0\n\n    @api.onchange('group_mrp_routings')\n    def _onchange_group_mrp_routings(self):\n        self.module_quality_mrp = self.group_mrp_routings\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_config_settings.py", "id": "423adacc2893d92c99513c1a50168336", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/mrp/models/res_config_settings.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
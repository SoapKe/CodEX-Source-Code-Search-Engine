{"author": "eliangcs", "code": "from http_prompt.context import Context\nfrom http_prompt.context import transform as t\n\n\ndef test_extract_args_for_httpie_main_get():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10'\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='get')\n    assert args == ['GET', 'http://localhost/things', 'limit==10', 'page==2',\n                    'Accept:text/html', 'Authorization:ApiKey 1234']\n\n\ndef test_extract_args_for_httpie_main_post():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='post')\n    assert args == ['--form', '--verify', 'no',\n                    'POST', 'http://localhost/things',\n                    'email=jane@example.com', 'full name=Jane Doe',\n                    'Accept:text/html', 'Authorization:ApiKey 1234']\n\n\ndef test_extract_raw_json_args_for_httpie_main_post():\n    c = Context('http://localhost/things')\n    c.body_json_params.update({\n        'enabled': True,\n        'items': ['foo', 'bar'],\n        'object': {\n            'id': 10,\n            'name': 'test'\n        }\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='post')\n    assert args == ['POST', 'http://localhost/things',\n                    'enabled:=true', 'items:=[\"foo\", \"bar\"]',\n                    'object:={\"id\": 10, \"name\": \"test\"}']\n\n\ndef test_format_to_httpie_get():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10',\n        'name': ['alice', 'bob bob']\n    })\n\n    output = t.format_to_httpie(c, method='get')\n    assert output == (\"http GET http://localhost/things \"\n                      \"limit==10 name==alice 'name==bob bob' page==2 \"\n                      \"Accept:text/html 'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_httpie_post():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    output = t.format_to_httpie(c, method='post')\n    assert output == (\"http --form --verify=no POST http://localhost/things \"\n                      \"email=jane@example.com 'full name=Jane Doe' \"\n                      \"Accept:text/html 'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_http_prompt_1():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10'\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"cd http://localhost/things\\n\"\n                      \"limit==10\\n\"\n                      \"page==2\\n\"\n                      \"Accept:text/html\\n\"\n                      \"'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_http_prompt_2():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"--form\\n\"\n                      \"--verify=no\\n\"\n                      \"cd http://localhost/things\\n\"\n                      \"email=jane@example.com\\n\"\n                      \"'full name=Jane Doe'\\n\"\n                      \"Accept:text/html\\n\"\n                      \"'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_raw_json_string_to_http_prompt():\n    c = Context('http://localhost/things')\n    c.body_json_params.update({\n        'bar': 'baz',\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"cd http://localhost/things\\n\"\n                      \"bar:='\\\"baz\\\"'\\n\")\n\n\ndef test_extract_httpie_options():\n    c = Context('http://localhost')\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n\n    output = t._extract_httpie_options(c, excluded_keys=['--form'])\n    assert output == ['--verify', 'no']\n", "comments": "", "content": "from http_prompt.context import Context\nfrom http_prompt.context import transform as t\n\n\ndef test_extract_args_for_httpie_main_get():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10'\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='get')\n    assert args == ['GET', 'http://localhost/things', 'limit==10', 'page==2',\n                    'Accept:text/html', 'Authorization:ApiKey 1234']\n\n\ndef test_extract_args_for_httpie_main_post():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='post')\n    assert args == ['--form', '--verify', 'no',\n                    'POST', 'http://localhost/things',\n                    'email=jane@example.com', 'full name=Jane Doe',\n                    'Accept:text/html', 'Authorization:ApiKey 1234']\n\n\ndef test_extract_raw_json_args_for_httpie_main_post():\n    c = Context('http://localhost/things')\n    c.body_json_params.update({\n        'enabled': True,\n        'items': ['foo', 'bar'],\n        'object': {\n            'id': 10,\n            'name': 'test'\n        }\n    })\n\n    args = t.extract_args_for_httpie_main(c, method='post')\n    assert args == ['POST', 'http://localhost/things',\n                    'enabled:=true', 'items:=[\"foo\", \"bar\"]',\n                    'object:={\"id\": 10, \"name\": \"test\"}']\n\n\ndef test_format_to_httpie_get():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10',\n        'name': ['alice', 'bob bob']\n    })\n\n    output = t.format_to_httpie(c, method='get')\n    assert output == (\"http GET http://localhost/things \"\n                      \"limit==10 name==alice 'name==bob bob' page==2 \"\n                      \"Accept:text/html 'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_httpie_post():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    output = t.format_to_httpie(c, method='post')\n    assert output == (\"http --form --verify=no POST http://localhost/things \"\n                      \"email=jane@example.com 'full name=Jane Doe' \"\n                      \"Accept:text/html 'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_http_prompt_1():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.querystring_params.update({\n        'page': '2',\n        'limit': '10'\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"cd http://localhost/things\\n\"\n                      \"limit==10\\n\"\n                      \"page==2\\n\"\n                      \"Accept:text/html\\n\"\n                      \"'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_to_http_prompt_2():\n    c = Context('http://localhost/things')\n    c.headers.update({\n        'Authorization': 'ApiKey 1234',\n        'Accept': 'text/html'\n    })\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n    c.body_params.update({\n        'full name': 'Jane Doe',\n        'email': 'jane@example.com'\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"--form\\n\"\n                      \"--verify=no\\n\"\n                      \"cd http://localhost/things\\n\"\n                      \"email=jane@example.com\\n\"\n                      \"'full name=Jane Doe'\\n\"\n                      \"Accept:text/html\\n\"\n                      \"'Authorization:ApiKey 1234'\\n\")\n\n\ndef test_format_raw_json_string_to_http_prompt():\n    c = Context('http://localhost/things')\n    c.body_json_params.update({\n        'bar': 'baz',\n    })\n\n    output = t.format_to_http_prompt(c)\n    assert output == (\"cd http://localhost/things\\n\"\n                      \"bar:='\\\"baz\\\"'\\n\")\n\n\ndef test_extract_httpie_options():\n    c = Context('http://localhost')\n    c.options.update({\n        '--verify': 'no',\n        '--form': None\n    })\n\n    output = t._extract_httpie_options(c, excluded_keys=['--form'])\n    assert output == ['--verify', 'no']\n", "description": "HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting", "file_name": "test_transform.py", "id": "5bf0716b0483930f43969c63fc677327", "language": "Python", "project_name": "http-prompt", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/eliangcs-http-prompt/eliangcs-http-prompt-87f1e9d/tests/context/test_transform.py", "save_time": "", "source": "", "update_at": "2018-03-17T18:26:33Z", "url": "https://github.com/eliangcs/http-prompt", "wiki": true}
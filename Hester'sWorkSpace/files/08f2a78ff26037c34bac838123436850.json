{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom sentry.constants import get_integration_id_for_marketing_slug, get_integration_id_for_event, \\\n    INTEGRATION_ID_TO_PLATFORM_DATA\nfrom sentry.testutils import TestCase\n\n\nclass ConstantsTest(TestCase):\n    mock_integration_ids = {\n        'java': {},\n        'java-log4j': {},\n        'java-log4j2': {},\n        'java-android': {},\n        'javascript': {},\n    }\n\n    def test_marketing_slug_to_integration_id(self):\n        with patch.dict(INTEGRATION_ID_TO_PLATFORM_DATA, self.mock_integration_ids):\n            assert get_integration_id_for_marketing_slug('java') == 'java'\n            \n            assert get_integration_id_for_marketing_slug('kotlin') == 'java'\n            assert get_integration_id_for_marketing_slug('android') == 'java-android'\n            assert get_integration_id_for_marketing_slug('foobar') is None\n\n    def test_integration_id_for_event(self):\n        with patch.dict(INTEGRATION_ID_TO_PLATFORM_DATA, self.mock_integration_ids):\n            assert get_integration_id_for_event('java', 'sentry-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'raven-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'raven-java:log4j', None) == 'java-log4j'\n            assert get_integration_id_for_event('java', 'sentry-java',\n                                                ['android']) == 'java-android'\n            assert get_integration_id_for_event('java', 'sentry-java', ['foobar',\n                                                                        'log4j2']) == 'java-log4j2'\n            assert get_integration_id_for_event('foobar', 'sentry-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'foobar', None) == 'java'\n            assert get_integration_id_for_event('foobar', 'foobar', None) is None\n", "comments": "  kotlin uses java library  ", "content": "from __future__ import absolute_import\n\nfrom mock import patch\n\nfrom sentry.constants import get_integration_id_for_marketing_slug, get_integration_id_for_event, \\\n    INTEGRATION_ID_TO_PLATFORM_DATA\nfrom sentry.testutils import TestCase\n\n\nclass ConstantsTest(TestCase):\n    mock_integration_ids = {\n        'java': {},\n        'java-log4j': {},\n        'java-log4j2': {},\n        'java-android': {},\n        'javascript': {},\n    }\n\n    def test_marketing_slug_to_integration_id(self):\n        with patch.dict(INTEGRATION_ID_TO_PLATFORM_DATA, self.mock_integration_ids):\n            assert get_integration_id_for_marketing_slug('java') == 'java'\n            # kotlin uses the java library, too\n            assert get_integration_id_for_marketing_slug('kotlin') == 'java'\n            assert get_integration_id_for_marketing_slug('android') == 'java-android'\n            assert get_integration_id_for_marketing_slug('foobar') is None\n\n    def test_integration_id_for_event(self):\n        with patch.dict(INTEGRATION_ID_TO_PLATFORM_DATA, self.mock_integration_ids):\n            assert get_integration_id_for_event('java', 'sentry-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'raven-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'raven-java:log4j', None) == 'java-log4j'\n            assert get_integration_id_for_event('java', 'sentry-java',\n                                                ['android']) == 'java-android'\n            assert get_integration_id_for_event('java', 'sentry-java', ['foobar',\n                                                                        'log4j2']) == 'java-log4j2'\n            assert get_integration_id_for_event('foobar', 'sentry-java', None) == 'java'\n            assert get_integration_id_for_event('java', 'foobar', None) == 'java'\n            assert get_integration_id_for_event('foobar', 'foobar', None) is None\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_constants.py", "id": "08f2a78ff26037c34bac838123436850", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/test_constants.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
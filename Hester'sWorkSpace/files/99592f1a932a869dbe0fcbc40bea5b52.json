{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_urlencode\nfrom ..utils import (\n    ExtractorError,\n    unescapeHTML\n)\n\n\nclass EroProfileIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?eroprofile\\.com/m/videos/view/(?P<id>[^/]+)'\n    _LOGIN_URL = 'http://www.eroprofile.com/auth/auth.php?'\n    _NETRC_MACHINE = 'eroprofile'\n    _TESTS = [{\n        'url': 'http://www.eroprofile.com/m/videos/view/sexy-babe-softcore',\n        'md5': 'c26f351332edf23e1ea28ce9ec9de32f',\n        'info_dict': {\n            'id': '3733775',\n            'display_id': 'sexy-babe-softcore',\n            'ext': 'm4v',\n            'title': 'sexy babe softcore',\n            'thumbnail': r're:https?://.*\\.jpg',\n            'age_limit': 18,\n        }\n    }, {\n        'url': 'http://www.eroprofile.com/m/videos/view/Try-It-On-Pee_cut_2-wmv-4shared-com-file-sharing-download-movie-file',\n        'md5': '1baa9602ede46ce904c431f5418d8916',\n        'info_dict': {\n            'id': '1133519',\n            'ext': 'm4v',\n            'title': 'Try It On Pee_cut_2.wmv - 4shared.com - file sharing - download movie file',\n            'thumbnail': r're:https?://.*\\.jpg',\n            'age_limit': 18,\n        },\n        'skip': 'Requires login',\n    }]\n\n    def _login(self):\n        (username, password) = self._get_login_info()\n        if username is None:\n            return\n\n        query = compat_urllib_parse_urlencode({\n            'username': username,\n            'password': password,\n            'url': 'http://www.eroprofile.com/',\n        })\n        login_url = self._LOGIN_URL + query\n        login_page = self._download_webpage(login_url, None, False)\n\n        m = re.search(r'Your username or password was incorrect\\.', login_page)\n        if m:\n            raise ExtractorError(\n                'Wrong username and/or password.', expected=True)\n\n        self.report_login()\n        redirect_url = self._search_regex(\n            r'<script[^>]+?src=\"([^\"]+)\"', login_page, 'login redirect url')\n        self._download_webpage(redirect_url, None, False)\n\n    def _real_initialize(self):\n        self._login()\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        m = re.search(r'You must be logged in to view this video\\.', webpage)\n        if m:\n            self.raise_login_required('This video requires login')\n\n        video_id = self._search_regex(\n            [r\"glbUpdViews\\s*\\('\\d*','(\\d+)'\", r'p/report/video/(\\d+)'],\n            webpage, 'video id', default=None)\n\n        video_url = unescapeHTML(self._search_regex(\n            r'<source src=\"([^\"]+)', webpage, 'video url'))\n        title = self._html_search_regex(\n            r'Title:</th><td>([^<]+)</td>', webpage, 'title')\n        thumbnail = self._search_regex(\n            r'onclick=\"showVideoPlayer\\(\\)\"><img src=\"([^\"]+)',\n            webpage, 'thumbnail', fatal=False)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'age_limit': 18,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_urlencode\nfrom ..utils import (\n    ExtractorError,\n    unescapeHTML\n)\n\n\nclass EroProfileIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?eroprofile\\.com/m/videos/view/(?P<id>[^/]+)'\n    _LOGIN_URL = 'http://www.eroprofile.com/auth/auth.php?'\n    _NETRC_MACHINE = 'eroprofile'\n    _TESTS = [{\n        'url': 'http://www.eroprofile.com/m/videos/view/sexy-babe-softcore',\n        'md5': 'c26f351332edf23e1ea28ce9ec9de32f',\n        'info_dict': {\n            'id': '3733775',\n            'display_id': 'sexy-babe-softcore',\n            'ext': 'm4v',\n            'title': 'sexy babe softcore',\n            'thumbnail': r're:https?://.*\\.jpg',\n            'age_limit': 18,\n        }\n    }, {\n        'url': 'http://www.eroprofile.com/m/videos/view/Try-It-On-Pee_cut_2-wmv-4shared-com-file-sharing-download-movie-file',\n        'md5': '1baa9602ede46ce904c431f5418d8916',\n        'info_dict': {\n            'id': '1133519',\n            'ext': 'm4v',\n            'title': 'Try It On Pee_cut_2.wmv - 4shared.com - file sharing - download movie file',\n            'thumbnail': r're:https?://.*\\.jpg',\n            'age_limit': 18,\n        },\n        'skip': 'Requires login',\n    }]\n\n    def _login(self):\n        (username, password) = self._get_login_info()\n        if username is None:\n            return\n\n        query = compat_urllib_parse_urlencode({\n            'username': username,\n            'password': password,\n            'url': 'http://www.eroprofile.com/',\n        })\n        login_url = self._LOGIN_URL + query\n        login_page = self._download_webpage(login_url, None, False)\n\n        m = re.search(r'Your username or password was incorrect\\.', login_page)\n        if m:\n            raise ExtractorError(\n                'Wrong username and/or password.', expected=True)\n\n        self.report_login()\n        redirect_url = self._search_regex(\n            r'<script[^>]+?src=\"([^\"]+)\"', login_page, 'login redirect url')\n        self._download_webpage(redirect_url, None, False)\n\n    def _real_initialize(self):\n        self._login()\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        m = re.search(r'You must be logged in to view this video\\.', webpage)\n        if m:\n            self.raise_login_required('This video requires login')\n\n        video_id = self._search_regex(\n            [r\"glbUpdViews\\s*\\('\\d*','(\\d+)'\", r'p/report/video/(\\d+)'],\n            webpage, 'video id', default=None)\n\n        video_url = unescapeHTML(self._search_regex(\n            r'<source src=\"([^\"]+)', webpage, 'video url'))\n        title = self._html_search_regex(\n            r'Title:</th><td>([^<]+)</td>', webpage, 'title')\n        thumbnail = self._search_regex(\n            r'onclick=\"showVideoPlayer\\(\\)\"><img src=\"([^\"]+)',\n            webpage, 'thumbnail', fatal=False)\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'age_limit': 18,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "eroprofile.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/eroprofile.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rushter", "code": "import random\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets\nfrom mla.kmeans import KMeans\nfrom mla.gaussian_mixture import GaussianMixture\n\nrandom.seed(1)\nnp.random.seed(6)\n\n\ndef make_clusters(skew=True, *arg, **kwargs):\n    X, y = datasets.make_blobs(*arg, **kwargs)\n    if skew:\n        nrow = X.shape[1]\n        for i in np.unique(y):\n            X[y == i] = X[y == i].dot(np.random.random((nrow, nrow)) - 0.5)\n    return X, y\n\n\ndef KMeans_and_GMM(K):\n    COLOR = 'bgrcmyk'\n\n    X, y = make_clusters(skew=True, n_samples=1500, centers=K)\n    _, axes = plt.subplots(1, 3)\n\n    \n    axes[0].scatter(X[:, 0], X[:, 1], c=[COLOR[int(assignment)] for assignment in y])\n    axes[0].set_title(\"Ground Truth\")\n\n    \n    kmeans = KMeans(K=K, init='++')\n    kmeans.fit(X)\n    kmeans.predict()\n    axes[1].set_title(\"KMeans\")\n    kmeans.plot(ax=axes[1], holdon=True)\n\n    \n    gmm = GaussianMixture(K=K, init='kmeans')\n    gmm.fit(X)\n    axes[2].set_title(\"Gaussian Mixture\")\n    gmm.plot(ax=axes[2])\n\n\nif __name__ == \"__main__\":\n    KMeans_and_GMM(4)\n", "comments": "  ground truth    kmeans    gaussian mixture ", "content": "import random\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets\nfrom mla.kmeans import KMeans\nfrom mla.gaussian_mixture import GaussianMixture\n\nrandom.seed(1)\nnp.random.seed(6)\n\n\ndef make_clusters(skew=True, *arg, **kwargs):\n    X, y = datasets.make_blobs(*arg, **kwargs)\n    if skew:\n        nrow = X.shape[1]\n        for i in np.unique(y):\n            X[y == i] = X[y == i].dot(np.random.random((nrow, nrow)) - 0.5)\n    return X, y\n\n\ndef KMeans_and_GMM(K):\n    COLOR = 'bgrcmyk'\n\n    X, y = make_clusters(skew=True, n_samples=1500, centers=K)\n    _, axes = plt.subplots(1, 3)\n\n    # Ground Truth\n    axes[0].scatter(X[:, 0], X[:, 1], c=[COLOR[int(assignment)] for assignment in y])\n    axes[0].set_title(\"Ground Truth\")\n\n    # KMeans\n    kmeans = KMeans(K=K, init='++')\n    kmeans.fit(X)\n    kmeans.predict()\n    axes[1].set_title(\"KMeans\")\n    kmeans.plot(ax=axes[1], holdon=True)\n\n    # Gaussian Mixture\n    gmm = GaussianMixture(K=K, init='kmeans')\n    gmm.fit(X)\n    axes[2].set_title(\"Gaussian Mixture\")\n    gmm.plot(ax=axes[2])\n\n\nif __name__ == \"__main__\":\n    KMeans_and_GMM(4)\n", "description": "Minimal and clean examples of machine learning algorithms", "file_name": "gaussian_mixture.py", "id": "6cde84949ef70305c917867d56f4f752", "language": "Python", "project_name": "MLAlgorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rushter-MLAlgorithms/rushter-MLAlgorithms-d398777/examples/gaussian_mixture.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:25:48Z", "url": "https://github.com/rushter/MLAlgorithms", "wiki": false}
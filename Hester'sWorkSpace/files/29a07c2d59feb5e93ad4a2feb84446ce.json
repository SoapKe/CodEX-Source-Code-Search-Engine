{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    sanitized_Request,\n    xpath_text,\n    xpath_with_ns,\n)\n\n\nclass RegioTVIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?regio-tv\\.de/video/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.regio-tv.de/video/395808.html',\n        'info_dict': {\n            'id': '395808',\n            'ext': 'mp4',\n            'title': 'Wir in Ludwigsburg',\n            'description': 'Mit unseren zuckers\u00fc\u00dfen Adventskindern, au\u00dferdem besuchen wir die Abendsterne!',\n        }\n    }, {\n        'url': 'http://www.regio-tv.de/video/395808',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        key = self._search_regex(\n            r'key\\s*:\\s*([\"\\'])(?P<key>.+?)\\1', webpage, 'key', group='key')\n        title = self._og_search_title(webpage)\n\n        SOAP_TEMPLATE = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><{0} xmlns=\"http://v.telvi.de/\"><key xsi:type=\"xsd:string\">{1}</key></{0}></soap:Body></soap:Envelope>'\n\n        request = sanitized_Request(\n            'http://v.telvi.de/',\n            SOAP_TEMPLATE.format('GetHTML5VideoData', key).encode('utf-8'))\n        video_data = self._download_xml(request, video_id, 'Downloading video XML')\n\n        NS_MAP = {\n            'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n            'soap': 'http://schemas.xmlsoap.org/soap/envelope/',\n        }\n\n        video_url = xpath_text(\n            video_data, xpath_with_ns('.//video', NS_MAP), 'video url', fatal=True)\n        thumbnail = xpath_text(\n            video_data, xpath_with_ns('.//image', NS_MAP), 'thumbnail')\n        description = self._og_search_description(\n            webpage) or self._html_search_meta('description', webpage)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\nfrom ..utils import (\n    sanitized_Request,\n    xpath_text,\n    xpath_with_ns,\n)\n\n\nclass RegioTVIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?regio-tv\\.de/video/(?P<id>[0-9]+)'\n    _TESTS = [{\n        'url': 'http://www.regio-tv.de/video/395808.html',\n        'info_dict': {\n            'id': '395808',\n            'ext': 'mp4',\n            'title': 'Wir in Ludwigsburg',\n            'description': 'Mit unseren zuckers\u00fc\u00dfen Adventskindern, au\u00dferdem besuchen wir die Abendsterne!',\n        }\n    }, {\n        'url': 'http://www.regio-tv.de/video/395808',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        key = self._search_regex(\n            r'key\\s*:\\s*([\"\\'])(?P<key>.+?)\\1', webpage, 'key', group='key')\n        title = self._og_search_title(webpage)\n\n        SOAP_TEMPLATE = '<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><{0} xmlns=\"http://v.telvi.de/\"><key xsi:type=\"xsd:string\">{1}</key></{0}></soap:Body></soap:Envelope>'\n\n        request = sanitized_Request(\n            'http://v.telvi.de/',\n            SOAP_TEMPLATE.format('GetHTML5VideoData', key).encode('utf-8'))\n        video_data = self._download_xml(request, video_id, 'Downloading video XML')\n\n        NS_MAP = {\n            'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n            'soap': 'http://schemas.xmlsoap.org/soap/envelope/',\n        }\n\n        video_url = xpath_text(\n            video_data, xpath_with_ns('.//video', NS_MAP), 'video url', fatal=True)\n        thumbnail = xpath_text(\n            video_data, xpath_with_ns('.//image', NS_MAP), 'thumbnail')\n        description = self._og_search_description(\n            webpage) or self._html_search_meta('description', webpage)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "regiotv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/regiotv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
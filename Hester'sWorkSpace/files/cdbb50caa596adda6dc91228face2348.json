{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    clean_html,\n    float_or_none,\n    int_or_none,\n    try_get,\n)\n\n\nclass HitRecordIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?hitrecord\\.org/records/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://hitrecord.org/records/2954362',\n        'md5': 'fe1cdc2023bce0bbb95c39c57426aa71',\n        'info_dict': {\n            'id': '2954362',\n            'ext': 'mp4',\n            'title': 'A Very Different World (HITRECORD x ACLU)',\n            'description': 'md5:e62defaffab5075a5277736bead95a3d',\n            'duration': 139.327,\n            'timestamp': 1471557582,\n            'upload_date': '20160818',\n            'uploader': 'Zuzi.C12',\n            'uploader_id': '362811',\n            'view_count': int,\n            'like_count': int,\n            'comment_count': int,\n            'tags': list,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'https://hitrecord.org/api/web/records/%s' % video_id, video_id)\n\n        title = video['title']\n        video_url = video['source_url']['mp4_url']\n\n        tags = None\n        tags_list = try_get(video, lambda x: x['tags'], list)\n        if tags_list:\n            tags = [\n                t['text']\n                for t in tags_list\n                if isinstance(t, dict) and t.get('text') and\n                isinstance(t['text'], compat_str)]\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': clean_html(video.get('body')),\n            'duration': float_or_none(video.get('duration'), 1000),\n            'timestamp': int_or_none(video.get('created_at_i')),\n            'uploader': try_get(\n                video, lambda x: x['user']['username'], compat_str),\n            'uploader_id': try_get(\n                video, lambda x: compat_str(x['user']['id'])),\n            'view_count': int_or_none(video.get('total_views_count')),\n            'like_count': int_or_none(video.get('hearts_count')),\n            'comment_count': int_or_none(video.get('comments_count')),\n            'tags': tags,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    clean_html,\n    float_or_none,\n    int_or_none,\n    try_get,\n)\n\n\nclass HitRecordIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?hitrecord\\.org/records/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'https://hitrecord.org/records/2954362',\n        'md5': 'fe1cdc2023bce0bbb95c39c57426aa71',\n        'info_dict': {\n            'id': '2954362',\n            'ext': 'mp4',\n            'title': 'A Very Different World (HITRECORD x ACLU)',\n            'description': 'md5:e62defaffab5075a5277736bead95a3d',\n            'duration': 139.327,\n            'timestamp': 1471557582,\n            'upload_date': '20160818',\n            'uploader': 'Zuzi.C12',\n            'uploader_id': '362811',\n            'view_count': int,\n            'like_count': int,\n            'comment_count': int,\n            'tags': list,\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        video = self._download_json(\n            'https://hitrecord.org/api/web/records/%s' % video_id, video_id)\n\n        title = video['title']\n        video_url = video['source_url']['mp4_url']\n\n        tags = None\n        tags_list = try_get(video, lambda x: x['tags'], list)\n        if tags_list:\n            tags = [\n                t['text']\n                for t in tags_list\n                if isinstance(t, dict) and t.get('text') and\n                isinstance(t['text'], compat_str)]\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'description': clean_html(video.get('body')),\n            'duration': float_or_none(video.get('duration'), 1000),\n            'timestamp': int_or_none(video.get('created_at_i')),\n            'uploader': try_get(\n                video, lambda x: x['user']['username'], compat_str),\n            'uploader_id': try_get(\n                video, lambda x: compat_str(x['user']['id'])),\n            'view_count': int_or_none(video.get('total_views_count')),\n            'like_count': int_or_none(video.get('hearts_count')),\n            'comment_count': int_or_none(video.get('comments_count')),\n            'tags': tags,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "hitrecord.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/hitrecord.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "odoo", "code": "from odoo.addons.account.tests.account_test_classes import AccountingTestCase\n\n\nclass AccountTestUsers(AccountingTestCase):\n\n    \n\n    def setUp(self):\n        super(AccountTestUsers, self).setUp()\n        self.res_user_model = self.env['res.users']\n        self.main_company = self.env.ref('base.main_company')\n        self.main_partner = self.env.ref('base.main_partner')\n        self.main_bank = self.env.ref('base.res_bank_1')\n        res_users_account_user = self.env.ref('account.group_account_invoice')\n        res_users_account_manager = self.env.ref('account.group_account_manager')\n        partner_manager = self.env.ref('base.group_partner_manager')\n        self.tax_model = self.env['account.tax']\n        self.account_model = self.env['account.account']\n        self.account_type_model = self.env['account.account.type']\n        self.currency_euro = self.env.ref('base.EUR')\n\n        self.account_user = self.res_user_model.with_context({'no_reset_password': True}).create(dict(\n            name=\"Accountant\",\n            company_id=self.main_company.id,\n            login=\"acc\",\n            email=\"accountuser@yourcompany.com\",\n            groups_id=[(6, 0, [res_users_account_user.id, partner_manager.id])]\n        ))\n        self.account_manager = self.res_user_model.with_context({'no_reset_password': True}).create(dict(\n            name=\"Adviser\",\n            company_id=self.main_company.id,\n            login=\"fm\",\n            email=\"accountmanager@yourcompany.com\",\n            groups_id=[(6, 0, [res_users_account_manager.id, partner_manager.id])]\n        ))\n", "comments": "   tests diffrent type user  accountant adviser  added groups    ", "content": "from odoo.addons.account.tests.account_test_classes import AccountingTestCase\n\n\nclass AccountTestUsers(AccountingTestCase):\n\n    \"\"\"Tests for diffrent type of user 'Accountant/Adviser' and added groups\"\"\"\n\n    def setUp(self):\n        super(AccountTestUsers, self).setUp()\n        self.res_user_model = self.env['res.users']\n        self.main_company = self.env.ref('base.main_company')\n        self.main_partner = self.env.ref('base.main_partner')\n        self.main_bank = self.env.ref('base.res_bank_1')\n        res_users_account_user = self.env.ref('account.group_account_invoice')\n        res_users_account_manager = self.env.ref('account.group_account_manager')\n        partner_manager = self.env.ref('base.group_partner_manager')\n        self.tax_model = self.env['account.tax']\n        self.account_model = self.env['account.account']\n        self.account_type_model = self.env['account.account.type']\n        self.currency_euro = self.env.ref('base.EUR')\n\n        self.account_user = self.res_user_model.with_context({'no_reset_password': True}).create(dict(\n            name=\"Accountant\",\n            company_id=self.main_company.id,\n            login=\"acc\",\n            email=\"accountuser@yourcompany.com\",\n            groups_id=[(6, 0, [res_users_account_user.id, partner_manager.id])]\n        ))\n        self.account_manager = self.res_user_model.with_context({'no_reset_password': True}).create(dict(\n            name=\"Adviser\",\n            company_id=self.main_company.id,\n            login=\"fm\",\n            email=\"accountmanager@yourcompany.com\",\n            groups_id=[(6, 0, [res_users_account_manager.id, partner_manager.id])]\n        ))\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "account_test_users.py", "id": "74d9dfb68fa15606e8d46f4d57ede66a", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/account/tests/account_test_users.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
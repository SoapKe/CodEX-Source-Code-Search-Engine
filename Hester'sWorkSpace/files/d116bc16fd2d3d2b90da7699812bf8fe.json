{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.exceptions import AccessDenied\n\nfrom odoo import api, models, registry, SUPERUSER_ID\n\n\nclass Users(models.Model):\n    _inherit = \"res.users\"\n\n    @classmethod\n    def _login(cls, db, login, password):\n        user_id = super(Users, cls)._login(db, login, password)\n        if user_id:\n            return user_id\n        with registry(db).cursor() as cr:\n            cr.execute(\"SELECT id FROM res_users WHERE lower(login)=%s\", (login,))\n            res = cr.fetchone()\n            if res:\n                return False\n            env = api.Environment(cr, SUPERUSER_ID, {})\n            Ldap = env['res.company.ldap']\n            for conf in Ldap.get_ldap_dicts():\n                entry = Ldap.authenticate(conf, login, password)\n                if entry:\n                    user_id = Ldap.get_or_create_user(conf, login, entry)\n                    if user_id:\n                        break\n            return user_id\n\n    @api.model\n    def check_credentials(self, password):\n        try:\n            super(Users, self).check_credentials(password)\n        except AccessDenied:\n            if self.env.user.active:\n                Ldap = self.env['res.company.ldap']\n                for conf in Ldap.get_ldap_dicts():\n                    if Ldap.authenticate(conf, self.env.user.login, password):\n                        return\n            raise\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.exceptions import AccessDenied\n\nfrom odoo import api, models, registry, SUPERUSER_ID\n\n\nclass Users(models.Model):\n    _inherit = \"res.users\"\n\n    @classmethod\n    def _login(cls, db, login, password):\n        user_id = super(Users, cls)._login(db, login, password)\n        if user_id:\n            return user_id\n        with registry(db).cursor() as cr:\n            cr.execute(\"SELECT id FROM res_users WHERE lower(login)=%s\", (login,))\n            res = cr.fetchone()\n            if res:\n                return False\n            env = api.Environment(cr, SUPERUSER_ID, {})\n            Ldap = env['res.company.ldap']\n            for conf in Ldap.get_ldap_dicts():\n                entry = Ldap.authenticate(conf, login, password)\n                if entry:\n                    user_id = Ldap.get_or_create_user(conf, login, entry)\n                    if user_id:\n                        break\n            return user_id\n\n    @api.model\n    def check_credentials(self, password):\n        try:\n            super(Users, self).check_credentials(password)\n        except AccessDenied:\n            if self.env.user.active:\n                Ldap = self.env['res.company.ldap']\n                for conf in Ldap.get_ldap_dicts():\n                    if Ldap.authenticate(conf, self.env.user.login, password):\n                        return\n            raise\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_users.py", "id": "d116bc16fd2d3d2b90da7699812bf8fe", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/auth_ldap/models/res_users.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
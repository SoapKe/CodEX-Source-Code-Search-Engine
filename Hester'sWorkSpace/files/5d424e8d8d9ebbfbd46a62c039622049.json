{"author": "keon", "code": "\n\ndef is_valid_sudoku(self, board):\n    seen = []\n    for i, row in enumerate(board):\n        for j, c in enumerate(row):\n            if c != '.':\n                seen += [(c,j),(i,c),(i/3,j/3,c)]\n    return len(seen) == len(set(seen))\n", "comments": "    determine sudoku valid  according  sudoku puzzles   the rules   the sudoku board could partially filled  empty cells filled character          ", "content": "\"\"\"\nDetermine if a Sudoku is valid, according to: Sudoku Puzzles - The Rules.\n\nThe Sudoku board could be partially filled, where empty cells are filled with\nthe character '.'.\n\"\"\"\n\ndef is_valid_sudoku(self, board):\n    seen = []\n    for i, row in enumerate(board):\n        for j, c in enumerate(row):\n            if c != '.':\n                seen += [(c,j),(i,c),(i/3,j/3,c)]\n    return len(seen) == len(set(seen))\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "valid_sudoku.py", "id": "5d424e8d8d9ebbfbd46a62c039622049", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/keon-algorithms/keon-algorithms-ea43887/map/valid_sudoku.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:53:29Z", "url": "https://github.com/keon/algorithms", "wiki": true}
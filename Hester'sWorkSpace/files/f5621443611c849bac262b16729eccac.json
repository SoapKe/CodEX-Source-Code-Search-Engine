{"author": "ansible", "code": "\n\n @author: Gaurav Rastogi (grastogi@avinetworks.com)\n          Eric Anderson (eanderson@avinetworks.com)\n module_check: supported\n Avi Version: 17.1.1\n\n Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_networksecuritypolicy\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of NetworkSecurityPolicy Avi RESTful Object\ndescription:\n    - This module is used to configure NetworkSecurityPolicy object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    cloud_config_cksum:\n        description:\n            - Checksum of cloud configuration for network sec policy.\n            - Internally set by cloud connector.\n    created_by:\n        description:\n            - Creator name.\n    description:\n        description:\n            - User defined description for the object.\n    name:\n        description:\n            - Name of the object.\n    rules:\n        description:\n            - List of networksecurityrule.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \n\nRETURN = '''\nobj:\n    description: NetworkSecurityPolicy (api/networksecuritypolicy) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        cloud_config_cksum=dict(type='str',),\n        created_by=dict(type='str',),\n        description=dict(type='str',),\n        name=dict(type='str',),\n        rules=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'networksecuritypolicy',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "comments": "        name  create network security policy block clients represented ip group known attackers     avi networksecuritypolicy        controller      controller           username      username           password      password           name  vs gurutest ns       rules          action  network security policy action type deny         age  0         enable  true         index  1         log  false         match            client ip              group refs                demo known attackers             match criteria  is in         name  rule 1       tenant ref  demo              module  avi networksecuritypolicy author  gaurav rastogi (grastogi avinetworks com)  short description  module setup networksecuritypolicy avi restful object description        this module used configure networksecuritypolicy object       examples u(https   github com avinetworks devops) requirements    avisdk   version added   2 4  options      state          description                the state applied entity          default  present         choices    absent    present       avi api update method          description                default method object update http put                setting patch override behavior use http patch          version added   2 5          default  put         choices    put    patch       avi api patch op          description                patch operation use using avi api update method patch          version added   2 5          choices    add    replace    delete       cloud config cksum          description                checksum cloud configuration network sec policy                internally set cloud connector      created          description                creator name      description          description                user defined description object      name          description                name object      rules          description                list networksecurityrule      tenant ref          description                it reference object type tenant      url          description                avi controller url object      uuid          description                unique object identifier object  extends documentation fragment        avi      examples     return       obj      description  networksecuritypolicy (api networksecuritypolicy) object     returned  success  changed     type  dict         usr bin python        author  gaurav rastogi (grastogi avinetworks com)             eric anderson (eanderson avinetworks com)    module check  supported    avi version  17 1 1       copyright  (c) 2017 gaurav rastogi   grastogi avinetworks com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    ", "content": "#!/usr/bin/python\n#\n# @author: Gaurav Rastogi (grastogi@avinetworks.com)\n#          Eric Anderson (eanderson@avinetworks.com)\n# module_check: supported\n# Avi Version: 17.1.1\n#\n# Copyright: (c) 2017 Gaurav Rastogi, <grastogi@avinetworks.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = '''\n---\nmodule: avi_networksecuritypolicy\nauthor: Gaurav Rastogi (grastogi@avinetworks.com)\n\nshort_description: Module for setup of NetworkSecurityPolicy Avi RESTful Object\ndescription:\n    - This module is used to configure NetworkSecurityPolicy object\n    - more examples at U(https://github.com/avinetworks/devops)\nrequirements: [ avisdk ]\nversion_added: \"2.4\"\noptions:\n    state:\n        description:\n            - The state that should be applied on the entity.\n        default: present\n        choices: [\"absent\", \"present\"]\n    avi_api_update_method:\n        description:\n            - Default method for object update is HTTP PUT.\n            - Setting to patch will override that behavior to use HTTP PATCH.\n        version_added: \"2.5\"\n        default: put\n        choices: [\"put\", \"patch\"]\n    avi_api_patch_op:\n        description:\n            - Patch operation to use when using avi_api_update_method as patch.\n        version_added: \"2.5\"\n        choices: [\"add\", \"replace\", \"delete\"]\n    cloud_config_cksum:\n        description:\n            - Checksum of cloud configuration for network sec policy.\n            - Internally set by cloud connector.\n    created_by:\n        description:\n            - Creator name.\n    description:\n        description:\n            - User defined description for the object.\n    name:\n        description:\n            - Name of the object.\n    rules:\n        description:\n            - List of networksecurityrule.\n    tenant_ref:\n        description:\n            - It is a reference to an object of type tenant.\n    url:\n        description:\n            - Avi controller URL of the object.\n    uuid:\n        description:\n            - Unique object identifier of the object.\nextends_documentation_fragment:\n    - avi\n'''\n\nEXAMPLES = \"\"\"\n  - name: Create a network security policy to block clients represented by ip group known_attackers\n    avi_networksecuritypolicy:\n      controller: '{{ controller }}'\n      username: '{{ username }}'\n      password: '{{ password }}'\n      name: vs-gurutest-ns\n      rules:\n      - action: NETWORK_SECURITY_POLICY_ACTION_TYPE_DENY\n        age: 0\n        enable: true\n        index: 1\n        log: false\n        match:\n          client_ip:\n            group_refs:\n            - Demo:known_attackers\n            match_criteria: IS_IN\n        name: Rule 1\n      tenant_ref: Demo\n\"\"\"\n\nRETURN = '''\nobj:\n    description: NetworkSecurityPolicy (api/networksecuritypolicy) object\n    returned: success, changed\n    type: dict\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\ntry:\n    from ansible.module_utils.network.avi.avi import (\n        avi_common_argument_spec, HAS_AVI, avi_ansible_api)\nexcept ImportError:\n    HAS_AVI = False\n\n\ndef main():\n    argument_specs = dict(\n        state=dict(default='present',\n                   choices=['absent', 'present']),\n        avi_api_update_method=dict(default='put',\n                                   choices=['put', 'patch']),\n        avi_api_patch_op=dict(choices=['add', 'replace', 'delete']),\n        cloud_config_cksum=dict(type='str',),\n        created_by=dict(type='str',),\n        description=dict(type='str',),\n        name=dict(type='str',),\n        rules=dict(type='list',),\n        tenant_ref=dict(type='str',),\n        url=dict(type='str',),\n        uuid=dict(type='str',),\n    )\n    argument_specs.update(avi_common_argument_spec())\n    module = AnsibleModule(\n        argument_spec=argument_specs, supports_check_mode=True)\n    if not HAS_AVI:\n        return module.fail_json(msg=(\n            'Avi python API SDK (avisdk>=17.1) is not installed. '\n            'For more details visit https://github.com/avinetworks/sdk.'))\n    return avi_ansible_api(module, 'networksecuritypolicy',\n                           set([]))\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "avi_networksecuritypolicy.py", "id": "f5621443611c849bac262b16729eccac", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/avi/avi_networksecuritypolicy.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
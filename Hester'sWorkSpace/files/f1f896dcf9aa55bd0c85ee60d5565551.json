{"author": "kivy", "code": "\nfrom pythonforandroid.build import Context\nfrom pythonforandroid.graph import get_recipe_order_and_bootstrap\nfrom pythonforandroid.bootstrap import Bootstrap\nfrom itertools import product\n\nimport pytest\n\n\nctx = Context()\n\nname_sets = [['python2'],\n             ['kivy']]\nbootstraps = [None,\n              Bootstrap.get_bootstrap('pygame', ctx),\n              Bootstrap.get_bootstrap('sdl2', ctx)]\nvalid_combinations = list(product(name_sets, bootstraps))\nvalid_combinations.extend(\n    [(['python3crystax'], Bootstrap.get_bootstrap('sdl2', ctx)),\n     (['kivy', 'python3crystax'], Bootstrap.get_bootstrap('sdl2', ctx))])\n\n\n@pytest.mark.parametrize('names,bootstrap', valid_combinations)\ndef test_valid_recipe_order_and_bootstrap(names, bootstrap):\n    get_recipe_order_and_bootstrap(ctx, names, bootstrap)\n\ninvalid_combinations = [[['python2', 'python3crystax'], None],\n                        [['python3'], Bootstrap.get_bootstrap('pygame', ctx)]]\n\n\n@pytest.mark.parametrize('names,bootstrap', invalid_combinations)\ndef test_invalid_recipe_order_and_bootstrap(names, bootstrap):\n    with pytest.raises(SystemExit):\n        get_recipe_order_and_bootstrap(ctx, names, bootstrap)\n\n\ndef test_bootstrap_dependency_addition():\n    build_order, python_modules, bs = get_recipe_order_and_bootstrap(\n        ctx, ['kivy'], None)\n    assert (('hostpython2' in build_order) or ('hostpython3' in build_order))\n\n\ndef test_bootstrap_dependency_addition2():\n    build_order, python_modules, bs = get_recipe_order_and_bootstrap(\n        ctx, ['kivy', 'python2'], None)\n    assert 'hostpython2' in build_order\n\n\nif __name__ == \"__main__\":\n    get_recipe_order_and_bootstrap(ctx, ['python3'],\n                                   Bootstrap.get_bootstrap('sdl2', ctx))\n", "comments": "", "content": "\nfrom pythonforandroid.build import Context\nfrom pythonforandroid.graph import get_recipe_order_and_bootstrap\nfrom pythonforandroid.bootstrap import Bootstrap\nfrom itertools import product\n\nimport pytest\n\n\nctx = Context()\n\nname_sets = [['python2'],\n             ['kivy']]\nbootstraps = [None,\n              Bootstrap.get_bootstrap('pygame', ctx),\n              Bootstrap.get_bootstrap('sdl2', ctx)]\nvalid_combinations = list(product(name_sets, bootstraps))\nvalid_combinations.extend(\n    [(['python3crystax'], Bootstrap.get_bootstrap('sdl2', ctx)),\n     (['kivy', 'python3crystax'], Bootstrap.get_bootstrap('sdl2', ctx))])\n\n\n@pytest.mark.parametrize('names,bootstrap', valid_combinations)\ndef test_valid_recipe_order_and_bootstrap(names, bootstrap):\n    get_recipe_order_and_bootstrap(ctx, names, bootstrap)\n\ninvalid_combinations = [[['python2', 'python3crystax'], None],\n                        [['python3'], Bootstrap.get_bootstrap('pygame', ctx)]]\n\n\n@pytest.mark.parametrize('names,bootstrap', invalid_combinations)\ndef test_invalid_recipe_order_and_bootstrap(names, bootstrap):\n    with pytest.raises(SystemExit):\n        get_recipe_order_and_bootstrap(ctx, names, bootstrap)\n\n\ndef test_bootstrap_dependency_addition():\n    build_order, python_modules, bs = get_recipe_order_and_bootstrap(\n        ctx, ['kivy'], None)\n    assert (('hostpython2' in build_order) or ('hostpython3' in build_order))\n\n\ndef test_bootstrap_dependency_addition2():\n    build_order, python_modules, bs = get_recipe_order_and_bootstrap(\n        ctx, ['kivy', 'python2'], None)\n    assert 'hostpython2' in build_order\n\n\nif __name__ == \"__main__\":\n    get_recipe_order_and_bootstrap(ctx, ['python3'],\n                                   Bootstrap.get_bootstrap('sdl2', ctx))\n", "description": "Turn your Python application into an Android APK", "file_name": "test_graph.py", "id": "f1f896dcf9aa55bd0c85ee60d5565551", "language": "Python", "project_name": "python-for-android", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/kivy-python-for-android/kivy-python-for-android-a036f44/tests/test_graph.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:42:42Z", "url": "https://github.com/kivy/python-for-android", "wiki": false}
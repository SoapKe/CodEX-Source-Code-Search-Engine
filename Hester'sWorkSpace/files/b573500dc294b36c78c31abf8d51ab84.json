{"author": "ansible", "code": "\n\n (c) Quentin Stafford-Fraser and Andy Baker 2015\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n Create webfaction mailbox using Ansible and the Webfaction API\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: webfaction_mailbox\nshort_description: Add or remove mailboxes on Webfaction\ndescription:\n    - Add or remove mailboxes on a Webfaction account. Further documentation at http://github.com/quentinsf/ansible-webfaction.\nauthor: Quentin Stafford-Fraser (@quentinsf)\nversion_added: \"2.0\"\nnotes:\n    - >\n      You can run playbooks that use this on a local machine, or on a Webfaction host, or elsewhere, since the scripts use the remote webfaction API.\n      The location is not important. However, running them on multiple hosts I(simultaneously) is best avoided. If you don't specify I(localhost) as\n      your host, you may want to add C(serial: 1) to the plays.\n    - See `the webfaction API <http://docs.webfaction.com/xmlrpc-api/>`_ for more info.\noptions:\n\n    mailbox_name:\n        description:\n            - The name of the mailbox\n        required: true\n\n    mailbox_password:\n        description:\n            - The password for the mailbox\n        required: true\n\n    state:\n        description:\n            - Whether the mailbox should exist\n        choices: ['present', 'absent']\n        default: \"present\"\n\n    login_name:\n        description:\n            - The webfaction account to use\n        required: true\n\n    login_password:\n        description:\n            - The webfaction password to use\n        required: true\n'''\n\nEXAMPLES = '''\n  - name: Create a mailbox\n    webfaction_mailbox:\n      mailbox_name=\"mybox\"\n      mailbox_password=\"myboxpw\"\n      state=present\n      login_name={{webfaction_user}}\n      login_password={{webfaction_passwd}}\n'''\n\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.six.moves import xmlrpc_client\n\n\nwebfaction = xmlrpc_client.ServerProxy('https://api.webfaction.com/')\n\n\ndef main():\n\n    module = AnsibleModule(\n        argument_spec=dict(\n            mailbox_name=dict(required=True),\n            mailbox_password=dict(required=True, no_log=True),\n            state=dict(required=False, choices=['present', 'absent'], default='present'),\n            login_name=dict(required=True),\n            login_password=dict(required=True, no_log=True),\n        ),\n        supports_check_mode=True\n    )\n\n    mailbox_name = module.params['mailbox_name']\n    site_state = module.params['state']\n\n    session_id, account = webfaction.login(\n        module.params['login_name'],\n        module.params['login_password']\n    )\n\n    mailbox_list = [x['mailbox'] for x in webfaction.list_mailboxes(session_id)]\n    existing_mailbox = mailbox_name in mailbox_list\n\n    result = {}\n\n     Here's where the real stuff happens\n\n    if site_state == 'present':\n\n         Does a mailbox with this name already exist?\n        if existing_mailbox:\n            module.exit_json(changed=False,)\n\n        positional_args = [session_id, mailbox_name]\n\n        if not module.check_mode:\n             If this isn't a dry run, create the mailbox\n            result.update(webfaction.create_mailbox(*positional_args))\n\n    elif site_state == 'absent':\n\n         If the mailbox is already not there, nothing changed.\n        if not existing_mailbox:\n            module.exit_json(changed=False)\n\n        if not module.check_mode:\n             If this isn't a dry run, delete the mailbox\n            result.update(webfaction.delete_mailbox(session_id, mailbox_name))\n\n    else:\n        module.fail_json(msg=\"Unknown state specified: {}\".format(site_state))\n\n    module.exit_json(changed=True, result=result)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  webfaction mailbox short description  add remove mailboxes webfaction description        add remove mailboxes webfaction account  further documentation http   github com quentinsf ansible webfaction  author  quentin stafford fraser ( quentinsf) version added   2 0  notes                you run playbooks use local machine  webfaction host  elsewhere  since scripts use remote webfaction api        the location important  however  running multiple hosts i(simultaneously) best avoided  if specify i(localhost)       host  may want add c(serial  1) plays        see  webfaction api  http   docs webfaction com xmlrpc api     info  options       mailbox name          description                the name mailbox         required  true      mailbox password          description                the password mailbox         required  true      state          description                whether mailbox exist         choices    present    absent           default   present       login name          description                the webfaction account use         required  true      login password          description                the webfaction password use         required  true      examples           name  create mailbox     webfaction mailbox        mailbox name  mybox        mailbox password  myboxpw        state present       login name   webfaction user         login password   webfaction passwd           usr bin python       (c) quentin stafford fraser andy baker 2015    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)       create webfaction mailbox using ansible webfaction api    here real stuff happens    does mailbox name already exist     if dry run  create mailbox    if mailbox already  nothing changed     if dry run  delete mailbox ", "content": "#!/usr/bin/python\n#\n# (c) Quentin Stafford-Fraser and Andy Baker 2015\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n#\n# Create webfaction mailbox using Ansible and the Webfaction API\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = '''\n---\nmodule: webfaction_mailbox\nshort_description: Add or remove mailboxes on Webfaction\ndescription:\n    - Add or remove mailboxes on a Webfaction account. Further documentation at http://github.com/quentinsf/ansible-webfaction.\nauthor: Quentin Stafford-Fraser (@quentinsf)\nversion_added: \"2.0\"\nnotes:\n    - >\n      You can run playbooks that use this on a local machine, or on a Webfaction host, or elsewhere, since the scripts use the remote webfaction API.\n      The location is not important. However, running them on multiple hosts I(simultaneously) is best avoided. If you don't specify I(localhost) as\n      your host, you may want to add C(serial: 1) to the plays.\n    - See `the webfaction API <http://docs.webfaction.com/xmlrpc-api/>`_ for more info.\noptions:\n\n    mailbox_name:\n        description:\n            - The name of the mailbox\n        required: true\n\n    mailbox_password:\n        description:\n            - The password for the mailbox\n        required: true\n\n    state:\n        description:\n            - Whether the mailbox should exist\n        choices: ['present', 'absent']\n        default: \"present\"\n\n    login_name:\n        description:\n            - The webfaction account to use\n        required: true\n\n    login_password:\n        description:\n            - The webfaction password to use\n        required: true\n'''\n\nEXAMPLES = '''\n  - name: Create a mailbox\n    webfaction_mailbox:\n      mailbox_name=\"mybox\"\n      mailbox_password=\"myboxpw\"\n      state=present\n      login_name={{webfaction_user}}\n      login_password={{webfaction_passwd}}\n'''\n\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.six.moves import xmlrpc_client\n\n\nwebfaction = xmlrpc_client.ServerProxy('https://api.webfaction.com/')\n\n\ndef main():\n\n    module = AnsibleModule(\n        argument_spec=dict(\n            mailbox_name=dict(required=True),\n            mailbox_password=dict(required=True, no_log=True),\n            state=dict(required=False, choices=['present', 'absent'], default='present'),\n            login_name=dict(required=True),\n            login_password=dict(required=True, no_log=True),\n        ),\n        supports_check_mode=True\n    )\n\n    mailbox_name = module.params['mailbox_name']\n    site_state = module.params['state']\n\n    session_id, account = webfaction.login(\n        module.params['login_name'],\n        module.params['login_password']\n    )\n\n    mailbox_list = [x['mailbox'] for x in webfaction.list_mailboxes(session_id)]\n    existing_mailbox = mailbox_name in mailbox_list\n\n    result = {}\n\n    # Here's where the real stuff happens\n\n    if site_state == 'present':\n\n        # Does a mailbox with this name already exist?\n        if existing_mailbox:\n            module.exit_json(changed=False,)\n\n        positional_args = [session_id, mailbox_name]\n\n        if not module.check_mode:\n            # If this isn't a dry run, create the mailbox\n            result.update(webfaction.create_mailbox(*positional_args))\n\n    elif site_state == 'absent':\n\n        # If the mailbox is already not there, nothing changed.\n        if not existing_mailbox:\n            module.exit_json(changed=False)\n\n        if not module.check_mode:\n            # If this isn't a dry run, delete the mailbox\n            result.update(webfaction.delete_mailbox(session_id, mailbox_name))\n\n    else:\n        module.fail_json(msg=\"Unknown state specified: {}\".format(site_state))\n\n    module.exit_json(changed=True, result=result)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "webfaction_mailbox.py", "id": "b573500dc294b36c78c31abf8d51ab84", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/cloud/webfaction/webfaction_mailbox.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
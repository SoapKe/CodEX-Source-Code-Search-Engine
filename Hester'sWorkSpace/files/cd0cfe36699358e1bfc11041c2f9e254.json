{"author": "nvbn", "code": "from difflib import get_close_matches\nfrom thefuck.utils import get_all_executables, \\\n    get_valid_history_without_current, get_closest, which\nfrom thefuck.specific.sudo import sudo_support\n\n\n@sudo_support\ndef match(command):\n    return (not which(command.script_parts[0])\n            and 'not found' in command.output\n            and bool(get_close_matches(command.script_parts[0],\n                                       get_all_executables())))\n\n\ndef _get_used_executables(command):\n    for script in get_valid_history_without_current(command):\n        yield script.split(' ')[0]\n\n\n@sudo_support\ndef get_new_command(command):\n    old_command = command.script_parts[0]\n\n    \n    already_used = get_closest(\n        old_command, _get_used_executables(command),\n        fallback_to_first=False)\n    if already_used:\n        new_cmds = [already_used]\n    else:\n        new_cmds = []\n\n    \n    new_cmds += [cmd for cmd in get_close_matches(old_command,\n                                                  get_all_executables())\n                 if cmd not in new_cmds]\n\n    return [' '.join([new_command] + command.script_parts[1:])\n            for new_command in new_cmds]\n\n\npriority = 3000\n", "comments": "# One from history:\n# Other from all executables:\n", "content": "from difflib import get_close_matches\nfrom thefuck.utils import get_all_executables, \\\n    get_valid_history_without_current, get_closest, which\nfrom thefuck.specific.sudo import sudo_support\n\n\n@sudo_support\ndef match(command):\n    return (not which(command.script_parts[0])\n            and 'not found' in command.output\n            and bool(get_close_matches(command.script_parts[0],\n                                       get_all_executables())))\n\n\ndef _get_used_executables(command):\n    for script in get_valid_history_without_current(command):\n        yield script.split(' ')[0]\n\n\n@sudo_support\ndef get_new_command(command):\n    old_command = command.script_parts[0]\n\n    # One from history:\n    already_used = get_closest(\n        old_command, _get_used_executables(command),\n        fallback_to_first=False)\n    if already_used:\n        new_cmds = [already_used]\n    else:\n        new_cmds = []\n\n    # Other from all executables:\n    new_cmds += [cmd for cmd in get_close_matches(old_command,\n                                                  get_all_executables())\n                 if cmd not in new_cmds]\n\n    return [' '.join([new_command] + command.script_parts[1:])\n            for new_command in new_cmds]\n\n\npriority = 3000\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "no_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/no_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
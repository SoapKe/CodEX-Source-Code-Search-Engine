{"author": "nvbn", "code": "\n\nimport pytest\nfrom thefuck.shells import Generic\n\n\nclass TestGeneric(object):\n    @pytest.fixture\n    def shell(self):\n        return Generic()\n\n    def test_from_shell(self, shell):\n        assert shell.from_shell('pwd') == 'pwd'\n\n    def test_to_shell(self, shell):\n        assert shell.to_shell('pwd') == 'pwd'\n\n    def test_and_(self, shell):\n        assert shell.and_('ls', 'cd') == 'ls && cd'\n\n    def test_or_(self, shell):\n        assert shell.or_('ls', 'cd') == 'ls || cd'\n\n    def test_get_aliases(self, shell):\n        assert shell.get_aliases() == {}\n\n    def test_app_alias(self, shell):\n        assert 'alias fuck' in shell.app_alias('fuck')\n        assert 'alias FUCK' in shell.app_alias('FUCK')\n        assert 'thefuck' in shell.app_alias('fuck')\n        assert 'TF_ALIAS=fuck PYTHONIOENCODING' in shell.app_alias('fuck')\n        assert 'PYTHONIOENCODING=utf-8 thefuck' in shell.app_alias('fuck')\n\n    def test_get_history(self, history_lines, shell):\n        history_lines(['ls', 'rm'])\n        \n        \n        assert list(shell.get_history()) == []\n\n    def test_split_command(self, shell):\n        assert shell.split_command('ls') == ['ls']\n        assert shell.split_command(u'echo caf\u00e9') == [u'echo', u'caf\u00e9']\n\n    def test_how_to_configure(self, shell):\n        assert shell.how_to_configure() is None\n", "comments": "# -*- coding: utf-8 -*-\n# We don't know what to do in generic shell with history lines,\n# so just ignore them:\n", "content": "# -*- coding: utf-8 -*-\n\nimport pytest\nfrom thefuck.shells import Generic\n\n\nclass TestGeneric(object):\n    @pytest.fixture\n    def shell(self):\n        return Generic()\n\n    def test_from_shell(self, shell):\n        assert shell.from_shell('pwd') == 'pwd'\n\n    def test_to_shell(self, shell):\n        assert shell.to_shell('pwd') == 'pwd'\n\n    def test_and_(self, shell):\n        assert shell.and_('ls', 'cd') == 'ls && cd'\n\n    def test_or_(self, shell):\n        assert shell.or_('ls', 'cd') == 'ls || cd'\n\n    def test_get_aliases(self, shell):\n        assert shell.get_aliases() == {}\n\n    def test_app_alias(self, shell):\n        assert 'alias fuck' in shell.app_alias('fuck')\n        assert 'alias FUCK' in shell.app_alias('FUCK')\n        assert 'thefuck' in shell.app_alias('fuck')\n        assert 'TF_ALIAS=fuck PYTHONIOENCODING' in shell.app_alias('fuck')\n        assert 'PYTHONIOENCODING=utf-8 thefuck' in shell.app_alias('fuck')\n\n    def test_get_history(self, history_lines, shell):\n        history_lines(['ls', 'rm'])\n        # We don't know what to do in generic shell with history lines,\n        # so just ignore them:\n        assert list(shell.get_history()) == []\n\n    def test_split_command(self, shell):\n        assert shell.split_command('ls') == ['ls']\n        assert shell.split_command(u'echo caf\u00e9') == [u'echo', u'caf\u00e9']\n\n    def test_how_to_configure(self, shell):\n        assert shell.how_to_configure() is None\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_generic.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/shells/test_generic.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
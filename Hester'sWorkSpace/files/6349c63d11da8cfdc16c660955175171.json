{"author": "django", "code": "\n\n\n\n\ndef gettext_noop(s):\n    return s\n\n\n\n\n\n\nDEBUG = False\n\n\n\n\nDEBUG_PROPAGATE_EXCEPTIONS = False\n\n\n\nADMINS = []\n\n\n\n\nINTERNAL_IPS = []\n\n\n\nALLOWED_HOSTS = []\n\n\n\n\n\nTIME_ZONE = 'America/Chicago'\n\n\nUSE_TZ = False\n\n\n\nLANGUAGE_CODE = 'en-us'\n\n\nLANGUAGES = [\n    ('af', gettext_noop('Afrikaans')),\n    ('ar', gettext_noop('Arabic')),\n    ('ast', gettext_noop('Asturian')),\n    ('az', gettext_noop('Azerbaijani')),\n    ('bg', gettext_noop('Bulgarian')),\n    ('be', gettext_noop('Belarusian')),\n    ('bn', gettext_noop('Bengali')),\n    ('br', gettext_noop('Breton')),\n    ('bs', gettext_noop('Bosnian')),\n    ('ca', gettext_noop('Catalan')),\n    ('cs', gettext_noop('Czech')),\n    ('cy', gettext_noop('Welsh')),\n    ('da', gettext_noop('Danish')),\n    ('de', gettext_noop('German')),\n    ('dsb', gettext_noop('Lower Sorbian')),\n    ('el', gettext_noop('Greek')),\n    ('en', gettext_noop('English')),\n    ('en-au', gettext_noop('Australian English')),\n    ('en-gb', gettext_noop('British English')),\n    ('eo', gettext_noop('Esperanto')),\n    ('es', gettext_noop('Spanish')),\n    ('es-ar', gettext_noop('Argentinian Spanish')),\n    ('es-co', gettext_noop('Colombian Spanish')),\n    ('es-mx', gettext_noop('Mexican Spanish')),\n    ('es-ni', gettext_noop('Nicaraguan Spanish')),\n    ('es-ve', gettext_noop('Venezuelan Spanish')),\n    ('et', gettext_noop('Estonian')),\n    ('eu', gettext_noop('Basque')),\n    ('fa', gettext_noop('Persian')),\n    ('fi', gettext_noop('Finnish')),\n    ('fr', gettext_noop('French')),\n    ('fy', gettext_noop('Frisian')),\n    ('ga', gettext_noop('Irish')),\n    ('gd', gettext_noop('Scottish Gaelic')),\n    ('gl', gettext_noop('Galician')),\n    ('he', gettext_noop('Hebrew')),\n    ('hi', gettext_noop('Hindi')),\n    ('hr', gettext_noop('Croatian')),\n    ('hsb', gettext_noop('Upper Sorbian')),\n    ('hu', gettext_noop('Hungarian')),\n    ('ia', gettext_noop('Interlingua')),\n    ('id', gettext_noop('Indonesian')),\n    ('io', gettext_noop('Ido')),\n    ('is', gettext_noop('Icelandic')),\n    ('it', gettext_noop('Italian')),\n    ('ja', gettext_noop('Japanese')),\n    ('ka', gettext_noop('Georgian')),\n    ('kab', gettext_noop('Kabyle')),\n    ('kk', gettext_noop('Kazakh')),\n    ('km', gettext_noop('Khmer')),\n    ('kn', gettext_noop('Kannada')),\n    ('ko', gettext_noop('Korean')),\n    ('lb', gettext_noop('Luxembourgish')),\n    ('lt', gettext_noop('Lithuanian')),\n    ('lv', gettext_noop('Latvian')),\n    ('mk', gettext_noop('Macedonian')),\n    ('ml', gettext_noop('Malayalam')),\n    ('mn', gettext_noop('Mongolian')),\n    ('mr', gettext_noop('Marathi')),\n    ('my', gettext_noop('Burmese')),\n    ('nb', gettext_noop('Norwegian Bokm\u00e5l')),\n    ('ne', gettext_noop('Nepali')),\n    ('nl', gettext_noop('Dutch')),\n    ('nn', gettext_noop('Norwegian Nynorsk')),\n    ('os', gettext_noop('Ossetic')),\n    ('pa', gettext_noop('Punjabi')),\n    ('pl', gettext_noop('Polish')),\n    ('pt', gettext_noop('Portuguese')),\n    ('pt-br', gettext_noop('Brazilian Portuguese')),\n    ('ro', gettext_noop('Romanian')),\n    ('ru', gettext_noop('Russian')),\n    ('sk', gettext_noop('Slovak')),\n    ('sl', gettext_noop('Slovenian')),\n    ('sq', gettext_noop('Albanian')),\n    ('sr', gettext_noop('Serbian')),\n    ('sr-latn', gettext_noop('Serbian Latin')),\n    ('sv', gettext_noop('Swedish')),\n    ('sw', gettext_noop('Swahili')),\n    ('ta', gettext_noop('Tamil')),\n    ('te', gettext_noop('Telugu')),\n    ('th', gettext_noop('Thai')),\n    ('tr', gettext_noop('Turkish')),\n    ('tt', gettext_noop('Tatar')),\n    ('udm', gettext_noop('Udmurt')),\n    ('uk', gettext_noop('Ukrainian')),\n    ('ur', gettext_noop('Urdu')),\n    ('vi', gettext_noop('Vietnamese')),\n    ('zh-hans', gettext_noop('Simplified Chinese')),\n    ('zh-hant', gettext_noop('Traditional Chinese')),\n]\n\n\nLANGUAGES_BIDI = [\"he\", \"ar\", \"fa\", \"ur\"]\n\n\n\nUSE_I18N = True\nLOCALE_PATHS = []\n\n\nLANGUAGE_COOKIE_NAME = 'django_language'\nLANGUAGE_COOKIE_AGE = None\nLANGUAGE_COOKIE_DOMAIN = None\nLANGUAGE_COOKIE_PATH = '/'\n\n\n\n\nUSE_L10N = False\n\n\n\nMANAGERS = ADMINS\n\n\n\n\nDEFAULT_CONTENT_TYPE = 'text/html'\nDEFAULT_CHARSET = 'utf-8'\n\n\nFILE_CHARSET = 'utf-8'\n\n\nSERVER_EMAIL = 'root@localhost'\n\n\nDATABASES = {}\n\n\nDATABASE_ROUTERS = []\n\n\n\n\n\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n\n\nEMAIL_HOST = 'localhost'\n\n\nEMAIL_PORT = 25\n\n\nEMAIL_USE_LOCALTIME = False\n\n\nEMAIL_HOST_USER = ''\nEMAIL_HOST_PASSWORD = ''\nEMAIL_USE_TLS = False\nEMAIL_USE_SSL = False\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_TIMEOUT = None\n\n\nINSTALLED_APPS = []\n\nTEMPLATES = []\n\n\nFORM_RENDERER = 'django.forms.renderers.DjangoTemplates'\n\n\n\nDEFAULT_FROM_EMAIL = 'webmaster@localhost'\n\n\n\nEMAIL_SUBJECT_PREFIX = '[Django] '\n\n\nAPPEND_SLASH = True\n\n\nPREPEND_WWW = False\n\n\nFORCE_SCRIPT_NAME = None\n\n\n\n\n\n\n\n\n\n\n\nDISALLOWED_USER_AGENTS = []\n\nABSOLUTE_URL_OVERRIDES = {}\n\n\n\n\n\n\n\n\n\n\n\nIGNORABLE_404_URLS = []\n\n\n\n\nSECRET_KEY = ''\n\n\nDEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'\n\n\n\nMEDIA_ROOT = ''\n\n\n\nMEDIA_URL = ''\n\n\n\nSTATIC_ROOT = None\n\n\n\nSTATIC_URL = None\n\n\nFILE_UPLOAD_HANDLERS = [\n    'django.core.files.uploadhandler.MemoryFileUploadHandler',\n    'django.core.files.uploadhandler.TemporaryFileUploadHandler',\n]\n\n\n\nFILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  \n\n\n\nDATA_UPLOAD_MAX_MEMORY_SIZE = 2621440  \n\n\n\nDATA_UPLOAD_MAX_NUMBER_FIELDS = 1000\n\n\n\n\nFILE_UPLOAD_TEMP_DIR = None\n\n\n\nFILE_UPLOAD_PERMISSIONS = None\n\n\n\n\nFILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n\n\n\n\n\nFORMAT_MODULE_PATH = None\n\n\n\nDATE_FORMAT = 'N j, Y'\n\n\n\nDATETIME_FORMAT = 'N j, Y, P'\n\n\n\nTIME_FORMAT = 'P'\n\n\n\n\nYEAR_MONTH_FORMAT = 'F Y'\n\n\n\n\nMONTH_DAY_FORMAT = 'F j'\n\n\n\nSHORT_DATE_FORMAT = 'm/d/Y'\n\n\n\n\nSHORT_DATETIME_FORMAT = 'm/d/Y P'\n\n\n\n\n\nDATE_INPUT_FORMATS = [\n    '%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y',  \n    '%b %d %Y', '%b %d, %Y',             \n    '%d %b %Y', '%d %b, %Y',             \n    '%B %d %Y', '%B %d, %Y',             \n    '%d %B %Y', '%d %B, %Y',             \n]\n\n\n\n\n\nTIME_INPUT_FORMATS = [\n    '%H:%M:%S',     \n    '%H:%M:%S.%f',  \n    '%H:%M',        \n]\n\n\n\n\n\n\nDATETIME_INPUT_FORMATS = [\n    '%Y-%m-%d %H:%M:%S',     \n    '%Y-%m-%d %H:%M:%S.%f',  \n    '%Y-%m-%d %H:%M',        \n    '%Y-%m-%d',              \n    '%m/%d/%Y %H:%M:%S',     \n    '%m/%d/%Y %H:%M:%S.%f',  \n    '%m/%d/%Y %H:%M',        \n    '%m/%d/%Y',              \n    '%m/%d/%y %H:%M:%S',     \n    '%m/%d/%y %H:%M:%S.%f',  \n    '%m/%d/%y %H:%M',        \n    '%m/%d/%y',              \n]\n\n\n\nFIRST_DAY_OF_WEEK = 0\n\n\nDECIMAL_SEPARATOR = '.'\n\n\nUSE_THOUSAND_SEPARATOR = False\n\n\n\nNUMBER_GROUPING = 0\n\n\nTHOUSAND_SEPARATOR = ','\n\n\nDEFAULT_TABLESPACE = ''\nDEFAULT_INDEX_TABLESPACE = ''\n\n\nX_FRAME_OPTIONS = 'SAMEORIGIN'\n\nUSE_X_FORWARDED_HOST = False\nUSE_X_FORWARDED_PORT = False\n\n\n\n\n\n\nWSGI_APPLICATION = None\n\n\n\n\n\n\n\n\nSECURE_PROXY_SSL_HEADER = None\n\n\n\n\n\n\n\n\nMIDDLEWARE = []\n\n\n\n\n\n\nSESSION_CACHE_ALIAS = 'default'\n\nSESSION_COOKIE_NAME = 'sessionid'\n\nSESSION_COOKIE_AGE = 60 * 60 * 24 * 7 * 2\n\nSESSION_COOKIE_DOMAIN = None\n\nSESSION_COOKIE_SECURE = False\n\nSESSION_COOKIE_PATH = '/'\n\nSESSION_COOKIE_HTTPONLY = True\n\nSESSION_SAVE_EVERY_REQUEST = False\n\nSESSION_EXPIRE_AT_BROWSER_CLOSE = False\n\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'\n\n\nSESSION_FILE_PATH = None\n\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'\n\n\n\n\n\n\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n    }\n}\nCACHE_MIDDLEWARE_KEY_PREFIX = ''\nCACHE_MIDDLEWARE_SECONDS = 600\nCACHE_MIDDLEWARE_ALIAS = 'default'\n\n\n\n\n\nAUTH_USER_MODEL = 'auth.User'\n\nAUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']\n\nLOGIN_URL = '/accounts/login/'\n\nLOGIN_REDIRECT_URL = '/accounts/profile/'\n\nLOGOUT_REDIRECT_URL = None\n\n\nPASSWORD_RESET_TIMEOUT_DAYS = 3\n\n\n\n\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.Argon2PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n]\n\nAUTH_PASSWORD_VALIDATORS = []\n\n\n\n\n\nSIGNING_BACKEND = 'django.core.signing.TimestampSigner'\n\n\n\n\n\n\n\nCSRF_FAILURE_VIEW = 'django.views.csrf.csrf_failure'\n\n\nCSRF_COOKIE_NAME = 'csrftoken'\nCSRF_COOKIE_AGE = 60 * 60 * 24 * 7 * 52\nCSRF_COOKIE_DOMAIN = None\nCSRF_COOKIE_PATH = '/'\nCSRF_COOKIE_SECURE = False\nCSRF_COOKIE_HTTPONLY = False\nCSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'\nCSRF_TRUSTED_ORIGINS = []\nCSRF_USE_SESSIONS = False\n\n\n\n\n\n\nMESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'\n\n\n\n\n\n\n\n\n\nLOGGING_CONFIG = 'logging.config.dictConfig'\n\n\nLOGGING = {}\n\n\n\nDEFAULT_EXCEPTION_REPORTER_FILTER = 'django.views.debug.SafeExceptionReporterFilter'\n\n\n\n\n\n\nTEST_RUNNER = 'django.test.runner.DiscoverRunner'\n\n\n\nTEST_NON_SERIALIZED_APPS = []\n\n\n\n\n\n\nFIXTURE_DIRS = []\n\n\n\n\n\n\nSTATICFILES_DIRS = []\n\n\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'\n\n\n\nSTATICFILES_FINDERS = [\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    \n]\n\n\n\n\n\n\nMIGRATION_MODULES = {}\n\n\n\n\n\n\n\n\n\nSILENCED_SYSTEM_CHECKS = []\n\n\n\n\nSECURE_BROWSER_XSS_FILTER = False\nSECURE_CONTENT_TYPE_NOSNIFF = False\nSECURE_HSTS_INCLUDE_SUBDOMAINS = False\nSECURE_HSTS_PRELOAD = False\nSECURE_HSTS_SECONDS = 0\nSECURE_REDIRECT_EXEMPT = []\nSECURE_SSL_HOST = None\nSECURE_SSL_REDIRECT = False\n", "comments": "\nDefault Django settings. Override these with settings in the module pointed to\nby the DJANGO_SETTINGS_MODULE environment variable.\n\n\n\n# This is defined here as a do-nothing function because we can't import\n# django.utils.translation -- that module depends on the settings.\n####################\n# CORE             #\n####################\n# Whether the framework should propagate raw exceptions rather than catching\n# them. This is useful under some testing situations and should never be used\n# on a live site.\n# People who get code error notifications.\n# In the format [('Full Name', 'email@example.com'), ('Full Name', 'anotheremail@example.com')]\n# List of IP addresses, as strings, that:\n#   * See debug comments, when DEBUG is true\n#   * Receive x-headers\n# Hosts/domain names that are valid for this site.\n# \"*\" matches anything, \".example.com\" matches example.com and all subdomains\n# Local time zone for this installation. All choices can be found here:\n# https://en.wikipedia.org/wiki/List_of_tz_zones_by_name (although not all\n# systems may support all possibilities). When USE_TZ is True, this is\n# interpreted as the default user time zone.\n# If you set this to True, Django will use timezone-aware datetimes.\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\n# Languages we provide translations for, out of the box.\n# Languages using BiDi (right-to-left) layout\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\n# Settings for language cookie\n# If you set this to True, Django will format dates, numbers and calendars\n# according to user current locale.\n# Not-necessarily-technical managers of the site. They get broken link\n# notifications and other various emails.\n# Default content type and charset to use for all HttpResponse objects, if a\n# MIME type isn't manually specified. These are used to construct the\n# Content-Type header.\n# Encoding of files read from disk (template and initial SQL files).\n# Email address that error messages come from.\n# Database connection info. If left empty, will default to the dummy backend.\n# Classes used to implement DB routing behavior.\n# The email backend to use. For possible shortcuts see django.core.mail.\n# The default is to use the SMTP backend.\n# Third-party backends can be specified by providing a Python path\n# to a module that defines an EmailBackend class.\n# Host for sending email.\n# Port for sending email.\n# Whether to send SMTP 'Date' header in the local time zone or in UTC.\n# Optional SMTP authentication information for EMAIL_HOST.\n# List of strings representing installed apps.\n# Default form rendering class.\n# Default email address to use for various automated correspondence from\n# the site managers.\n# Subject-line prefix for email messages send with django.core.mail.mail_admins\n# or ...mail_managers.  Make sure to include the trailing space.\n# Whether to append trailing slashes to URLs.\n# Whether to prepend the \"www.\" subdomain to URLs that don't have it.\n# Override the server-derived value of SCRIPT_NAME\n# List of compiled regular expression objects representing User-Agent strings\n# that are not allowed to visit any page, systemwide. Use this for bad\n# robots/crawlers. Here are a few examples:\n#     import re\n#     DISALLOWED_USER_AGENTS = [\n#         re.compile(r'^NaverBot.*'),\n#         re.compile(r'^EmailSiphon.*'),\n#         re.compile(r'^SiteSucker.*'),\n#         re.compile(r'^sohu-search'),\n#     ]\n# List of compiled regular expression objects representing URLs that need not\n# be reported by BrokenLinkEmailsMiddleware. Here are a few examples:\n#    import re\n#    IGNORABLE_404_URLS = [\n#        re.compile(r'^/apple-touch-icon.*\\.png$'),\n#        re.compile(r'^/favicon.ico$'),\n#        re.compile(r'^/robots.txt$'),\n#        re.compile(r'^/phpmyadmin/'),\n#        re.compile(r'\\.(cgi|php|pl)$'),\n#    ]\n# A secret key for this particular Django installation. Used in secret-key\n# hashing algorithms. Set this in your settings, or Django will complain\n# loudly.\n# Default file storage mechanism that holds media.\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/var/www/example.com/media/\"\n# URL that handles the media served from MEDIA_ROOT.\n# Examples: \"http://example.com/media/\", \"http://media.example.com/\"\n# Absolute path to the directory static files should be collected to.\n# Example: \"/var/www/example.com/static/\"\n# URL that handles the static files served from STATIC_ROOT.\n# Example: \"http://example.com/static/\", \"http://static.example.com/\"\n# List of upload handler classes to be applied in order.\n# Maximum size, in bytes, of a request before it will be streamed to the\n# file system instead of into memory.\n# i.e. 2.5 MB\n# Maximum size in bytes of request data (excluding file uploads) that will be\n# read before a SuspiciousOperation (RequestDataTooBig) is raised.\n# i.e. 2.5 MB\n# Maximum number of GET/POST parameters that will be read before a\n# SuspiciousOperation (TooManyFieldsSent) is raised.\n# Directory in which upload streamed files will be temporarily saved. A value of\n# `None` will make Django use the operating system's default temporary directory\n# (i.e. \"/tmp\" on *nix systems).\n# The numeric mode to set newly-uploaded files to. The value should be a mode\n# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.\n# The numeric mode to assign to newly-created directories, when uploading files.\n# The value should be a mode as you'd pass to os.chmod;\n# see https://docs.python.org/3/library/os.html#files-and-directories.\n# Python module path where user will place custom format definition.\n# The directory where this setting is pointing should contain subdirectories\n# named as the locales, containing a formats.py file\n# (i.e. \"myproject.locale\" for myproject/locale/en/formats.py etc. use)\n# Default formatting for date objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default formatting for datetime objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default formatting for time objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default formatting for date objects when only the year and month are relevant.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default formatting for date objects when only the month and day are relevant.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default short formatting for date objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default short formatting for datetime objects.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\n# Default formats to be used when parsing dates from input boxes, in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\n# '2006-10-25', '10/25/2006', '10/25/06'\n# 'Oct 25 2006', 'Oct 25, 2006'\n# '25 Oct 2006', '25 Oct, 2006'\n# 'October 25 2006', 'October 25, 2006'\n# '25 October 2006', '25 October, 2006'\n# Default formats to be used when parsing times from input boxes, in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\n# '14:30:59'\n# '14:30:59.000200'\n# '14:30'\n# Default formats to be used when parsing dates and times from input boxes,\n# in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\n# '2006-10-25 14:30:59'\n# '2006-10-25 14:30:59.000200'\n# '2006-10-25 14:30'\n# '2006-10-25'\n# '10/25/2006 14:30:59'\n# '10/25/2006 14:30:59.000200'\n# '10/25/2006 14:30'\n# '10/25/2006'\n# '10/25/06 14:30:59'\n# '10/25/06 14:30:59.000200'\n# '10/25/06 14:30'\n# '10/25/06'\n# First day of week, to be used on calendars\n# 0 means Sunday, 1 means Monday...\n# Decimal separator symbol\n# Boolean that sets whether to add thousand separator when formatting numbers\n# Number of digits that will be together, when splitting them by\n# THOUSAND_SEPARATOR. 0 means no grouping, 3 means splitting by thousands...\n# Thousand separator symbol\n# The tablespaces to use for each model when not specified otherwise.\n# Default X-Frame-Options header value\n# The Python dotted path to the WSGI application that Django's internal server\n# (runserver) will use. If `None`, the return value of\n# 'django.core.wsgi.get_wsgi_application' is used, thus preserving the same\n# behavior as previous versions of Django. Otherwise this should point to an\n# actual WSGI application object.\n# If your Django app is behind a proxy that sets a header to specify secure\n# connections, AND that proxy ensures that user-submitted headers with the\n# same name are ignored (so that people can't spoof it), set this value to\n# a tuple of (header_name, header_value). For any requests that come in with\n# that header/value, request.is_secure() will return True.\n# WARNING! Only set this if you fully understand what you're doing. Otherwise,\n# you may be opening yourself up to a security risk.\n##############\n# MIDDLEWARE #\n##############\n# List of middleware to use. Order is important; in the request phase, these\n# middleware will be applied in the order given, and in the response\n# phase the middleware will be applied in reverse order.\n############\n# SESSIONS #\n############\n# Cache to store session data if using the cache session backend.\n# Cookie name. This can be whatever you want.\n# Age of cookie, in seconds (default: 2 weeks).\n# A string like \"example.com\", or None for standard domain cookie.\n# Whether the session cookie should be secure (https:// only).\n# The path of the session cookie.\n# Whether to use the non-RFC standard httpOnly flag (IE, FF3+, others)\n# Whether to save the session data on every request.\n# Whether a user's session cookie expires when the Web browser is closed.\n# The module to store session data\n# Directory to store session files if using the file session module. If None,\n# the backend will use a sensible default.\n# class to serialize session data\n#########\n# CACHE #\n#########\n# The cache backends to use.\n##################\n# AUTHENTICATION #\n##################\n# The number of days a password reset link is valid for\n# the first hasher in this list is the preferred algorithm.  any\n# password using different algorithms will be converted automatically\n# upon login\n###########\n# SIGNING #\n###########\n########\n# CSRF #\n########\n# Dotted path to callable to be used as view when a request is\n# rejected by the CSRF middleware.\n# Settings for CSRF cookie.\n############\n# MESSAGES #\n############\n# Class to use as messages backend\n# Default values of MESSAGE_LEVEL and MESSAGE_TAGS are defined within\n# django.contrib.messages to avoid imports in this settings file.\n###########\n# LOGGING #\n###########\n# The callable to use to configure logging\n# Custom logging configuration.\n# Default exception reporter filter class used in case none has been\n# specifically assigned to the HttpRequest instance.\n###########\n# TESTING #\n###########\n# The name of the class to use to run the test suite\n# Apps that don't need to be serialized at test database creation time\n# (only apps with migrations are to start with)\n############\n# FIXTURES #\n############\n# The list of directories to search for fixtures\n###############\n# STATICFILES #\n###############\n# A list of locations of additional static files\n# The default file storage backend used during the build process\n# List of finder classes that know how to find static files in\n# various locations.\n# 'django.contrib.staticfiles.finders.DefaultStorageFinder',\n##############\n# MIGRATIONS #\n##############\n# Migration module overrides for apps, by app label.\n#################\n# SYSTEM CHECKS #\n#################\n# List of all issues generated by system checks that should be silenced. Light\n# issues like warnings, infos or debugs will not generate a message. Silencing\n# serious issues like errors and criticals does not result in hiding the\n# message, but Django will not stop you from e.g. running server.\n#######################\n# SECURITY MIDDLEWARE #\n#######################\n", "content": "\"\"\"\nDefault Django settings. Override these with settings in the module pointed to\nby the DJANGO_SETTINGS_MODULE environment variable.\n\"\"\"\n\n\n# This is defined here as a do-nothing function because we can't import\n# django.utils.translation -- that module depends on the settings.\ndef gettext_noop(s):\n    return s\n\n\n####################\n# CORE             #\n####################\n\nDEBUG = False\n\n# Whether the framework should propagate raw exceptions rather than catching\n# them. This is useful under some testing situations and should never be used\n# on a live site.\nDEBUG_PROPAGATE_EXCEPTIONS = False\n\n# People who get code error notifications.\n# In the format [('Full Name', 'email@example.com'), ('Full Name', 'anotheremail@example.com')]\nADMINS = []\n\n# List of IP addresses, as strings, that:\n#   * See debug comments, when DEBUG is true\n#   * Receive x-headers\nINTERNAL_IPS = []\n\n# Hosts/domain names that are valid for this site.\n# \"*\" matches anything, \".example.com\" matches example.com and all subdomains\nALLOWED_HOSTS = []\n\n# Local time zone for this installation. All choices can be found here:\n# https://en.wikipedia.org/wiki/List_of_tz_zones_by_name (although not all\n# systems may support all possibilities). When USE_TZ is True, this is\n# interpreted as the default user time zone.\nTIME_ZONE = 'America/Chicago'\n\n# If you set this to True, Django will use timezone-aware datetimes.\nUSE_TZ = False\n\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\nLANGUAGE_CODE = 'en-us'\n\n# Languages we provide translations for, out of the box.\nLANGUAGES = [\n    ('af', gettext_noop('Afrikaans')),\n    ('ar', gettext_noop('Arabic')),\n    ('ast', gettext_noop('Asturian')),\n    ('az', gettext_noop('Azerbaijani')),\n    ('bg', gettext_noop('Bulgarian')),\n    ('be', gettext_noop('Belarusian')),\n    ('bn', gettext_noop('Bengali')),\n    ('br', gettext_noop('Breton')),\n    ('bs', gettext_noop('Bosnian')),\n    ('ca', gettext_noop('Catalan')),\n    ('cs', gettext_noop('Czech')),\n    ('cy', gettext_noop('Welsh')),\n    ('da', gettext_noop('Danish')),\n    ('de', gettext_noop('German')),\n    ('dsb', gettext_noop('Lower Sorbian')),\n    ('el', gettext_noop('Greek')),\n    ('en', gettext_noop('English')),\n    ('en-au', gettext_noop('Australian English')),\n    ('en-gb', gettext_noop('British English')),\n    ('eo', gettext_noop('Esperanto')),\n    ('es', gettext_noop('Spanish')),\n    ('es-ar', gettext_noop('Argentinian Spanish')),\n    ('es-co', gettext_noop('Colombian Spanish')),\n    ('es-mx', gettext_noop('Mexican Spanish')),\n    ('es-ni', gettext_noop('Nicaraguan Spanish')),\n    ('es-ve', gettext_noop('Venezuelan Spanish')),\n    ('et', gettext_noop('Estonian')),\n    ('eu', gettext_noop('Basque')),\n    ('fa', gettext_noop('Persian')),\n    ('fi', gettext_noop('Finnish')),\n    ('fr', gettext_noop('French')),\n    ('fy', gettext_noop('Frisian')),\n    ('ga', gettext_noop('Irish')),\n    ('gd', gettext_noop('Scottish Gaelic')),\n    ('gl', gettext_noop('Galician')),\n    ('he', gettext_noop('Hebrew')),\n    ('hi', gettext_noop('Hindi')),\n    ('hr', gettext_noop('Croatian')),\n    ('hsb', gettext_noop('Upper Sorbian')),\n    ('hu', gettext_noop('Hungarian')),\n    ('ia', gettext_noop('Interlingua')),\n    ('id', gettext_noop('Indonesian')),\n    ('io', gettext_noop('Ido')),\n    ('is', gettext_noop('Icelandic')),\n    ('it', gettext_noop('Italian')),\n    ('ja', gettext_noop('Japanese')),\n    ('ka', gettext_noop('Georgian')),\n    ('kab', gettext_noop('Kabyle')),\n    ('kk', gettext_noop('Kazakh')),\n    ('km', gettext_noop('Khmer')),\n    ('kn', gettext_noop('Kannada')),\n    ('ko', gettext_noop('Korean')),\n    ('lb', gettext_noop('Luxembourgish')),\n    ('lt', gettext_noop('Lithuanian')),\n    ('lv', gettext_noop('Latvian')),\n    ('mk', gettext_noop('Macedonian')),\n    ('ml', gettext_noop('Malayalam')),\n    ('mn', gettext_noop('Mongolian')),\n    ('mr', gettext_noop('Marathi')),\n    ('my', gettext_noop('Burmese')),\n    ('nb', gettext_noop('Norwegian Bokm\u00e5l')),\n    ('ne', gettext_noop('Nepali')),\n    ('nl', gettext_noop('Dutch')),\n    ('nn', gettext_noop('Norwegian Nynorsk')),\n    ('os', gettext_noop('Ossetic')),\n    ('pa', gettext_noop('Punjabi')),\n    ('pl', gettext_noop('Polish')),\n    ('pt', gettext_noop('Portuguese')),\n    ('pt-br', gettext_noop('Brazilian Portuguese')),\n    ('ro', gettext_noop('Romanian')),\n    ('ru', gettext_noop('Russian')),\n    ('sk', gettext_noop('Slovak')),\n    ('sl', gettext_noop('Slovenian')),\n    ('sq', gettext_noop('Albanian')),\n    ('sr', gettext_noop('Serbian')),\n    ('sr-latn', gettext_noop('Serbian Latin')),\n    ('sv', gettext_noop('Swedish')),\n    ('sw', gettext_noop('Swahili')),\n    ('ta', gettext_noop('Tamil')),\n    ('te', gettext_noop('Telugu')),\n    ('th', gettext_noop('Thai')),\n    ('tr', gettext_noop('Turkish')),\n    ('tt', gettext_noop('Tatar')),\n    ('udm', gettext_noop('Udmurt')),\n    ('uk', gettext_noop('Ukrainian')),\n    ('ur', gettext_noop('Urdu')),\n    ('vi', gettext_noop('Vietnamese')),\n    ('zh-hans', gettext_noop('Simplified Chinese')),\n    ('zh-hant', gettext_noop('Traditional Chinese')),\n]\n\n# Languages using BiDi (right-to-left) layout\nLANGUAGES_BIDI = [\"he\", \"ar\", \"fa\", \"ur\"]\n\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\nUSE_I18N = True\nLOCALE_PATHS = []\n\n# Settings for language cookie\nLANGUAGE_COOKIE_NAME = 'django_language'\nLANGUAGE_COOKIE_AGE = None\nLANGUAGE_COOKIE_DOMAIN = None\nLANGUAGE_COOKIE_PATH = '/'\n\n\n# If you set this to True, Django will format dates, numbers and calendars\n# according to user current locale.\nUSE_L10N = False\n\n# Not-necessarily-technical managers of the site. They get broken link\n# notifications and other various emails.\nMANAGERS = ADMINS\n\n# Default content type and charset to use for all HttpResponse objects, if a\n# MIME type isn't manually specified. These are used to construct the\n# Content-Type header.\nDEFAULT_CONTENT_TYPE = 'text/html'\nDEFAULT_CHARSET = 'utf-8'\n\n# Encoding of files read from disk (template and initial SQL files).\nFILE_CHARSET = 'utf-8'\n\n# Email address that error messages come from.\nSERVER_EMAIL = 'root@localhost'\n\n# Database connection info. If left empty, will default to the dummy backend.\nDATABASES = {}\n\n# Classes used to implement DB routing behavior.\nDATABASE_ROUTERS = []\n\n# The email backend to use. For possible shortcuts see django.core.mail.\n# The default is to use the SMTP backend.\n# Third-party backends can be specified by providing a Python path\n# to a module that defines an EmailBackend class.\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n\n# Host for sending email.\nEMAIL_HOST = 'localhost'\n\n# Port for sending email.\nEMAIL_PORT = 25\n\n# Whether to send SMTP 'Date' header in the local time zone or in UTC.\nEMAIL_USE_LOCALTIME = False\n\n# Optional SMTP authentication information for EMAIL_HOST.\nEMAIL_HOST_USER = ''\nEMAIL_HOST_PASSWORD = ''\nEMAIL_USE_TLS = False\nEMAIL_USE_SSL = False\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_TIMEOUT = None\n\n# List of strings representing installed apps.\nINSTALLED_APPS = []\n\nTEMPLATES = []\n\n# Default form rendering class.\nFORM_RENDERER = 'django.forms.renderers.DjangoTemplates'\n\n# Default email address to use for various automated correspondence from\n# the site managers.\nDEFAULT_FROM_EMAIL = 'webmaster@localhost'\n\n# Subject-line prefix for email messages send with django.core.mail.mail_admins\n# or ...mail_managers.  Make sure to include the trailing space.\nEMAIL_SUBJECT_PREFIX = '[Django] '\n\n# Whether to append trailing slashes to URLs.\nAPPEND_SLASH = True\n\n# Whether to prepend the \"www.\" subdomain to URLs that don't have it.\nPREPEND_WWW = False\n\n# Override the server-derived value of SCRIPT_NAME\nFORCE_SCRIPT_NAME = None\n\n# List of compiled regular expression objects representing User-Agent strings\n# that are not allowed to visit any page, systemwide. Use this for bad\n# robots/crawlers. Here are a few examples:\n#     import re\n#     DISALLOWED_USER_AGENTS = [\n#         re.compile(r'^NaverBot.*'),\n#         re.compile(r'^EmailSiphon.*'),\n#         re.compile(r'^SiteSucker.*'),\n#         re.compile(r'^sohu-search'),\n#     ]\nDISALLOWED_USER_AGENTS = []\n\nABSOLUTE_URL_OVERRIDES = {}\n\n# List of compiled regular expression objects representing URLs that need not\n# be reported by BrokenLinkEmailsMiddleware. Here are a few examples:\n#    import re\n#    IGNORABLE_404_URLS = [\n#        re.compile(r'^/apple-touch-icon.*\\.png$'),\n#        re.compile(r'^/favicon.ico$'),\n#        re.compile(r'^/robots.txt$'),\n#        re.compile(r'^/phpmyadmin/'),\n#        re.compile(r'\\.(cgi|php|pl)$'),\n#    ]\nIGNORABLE_404_URLS = []\n\n# A secret key for this particular Django installation. Used in secret-key\n# hashing algorithms. Set this in your settings, or Django will complain\n# loudly.\nSECRET_KEY = ''\n\n# Default file storage mechanism that holds media.\nDEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'\n\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/var/www/example.com/media/\"\nMEDIA_ROOT = ''\n\n# URL that handles the media served from MEDIA_ROOT.\n# Examples: \"http://example.com/media/\", \"http://media.example.com/\"\nMEDIA_URL = ''\n\n# Absolute path to the directory static files should be collected to.\n# Example: \"/var/www/example.com/static/\"\nSTATIC_ROOT = None\n\n# URL that handles the static files served from STATIC_ROOT.\n# Example: \"http://example.com/static/\", \"http://static.example.com/\"\nSTATIC_URL = None\n\n# List of upload handler classes to be applied in order.\nFILE_UPLOAD_HANDLERS = [\n    'django.core.files.uploadhandler.MemoryFileUploadHandler',\n    'django.core.files.uploadhandler.TemporaryFileUploadHandler',\n]\n\n# Maximum size, in bytes, of a request before it will be streamed to the\n# file system instead of into memory.\nFILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB\n\n# Maximum size in bytes of request data (excluding file uploads) that will be\n# read before a SuspiciousOperation (RequestDataTooBig) is raised.\nDATA_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB\n\n# Maximum number of GET/POST parameters that will be read before a\n# SuspiciousOperation (TooManyFieldsSent) is raised.\nDATA_UPLOAD_MAX_NUMBER_FIELDS = 1000\n\n# Directory in which upload streamed files will be temporarily saved. A value of\n# `None` will make Django use the operating system's default temporary directory\n# (i.e. \"/tmp\" on *nix systems).\nFILE_UPLOAD_TEMP_DIR = None\n\n# The numeric mode to set newly-uploaded files to. The value should be a mode\n# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.\nFILE_UPLOAD_PERMISSIONS = None\n\n# The numeric mode to assign to newly-created directories, when uploading files.\n# The value should be a mode as you'd pass to os.chmod;\n# see https://docs.python.org/3/library/os.html#files-and-directories.\nFILE_UPLOAD_DIRECTORY_PERMISSIONS = None\n\n# Python module path where user will place custom format definition.\n# The directory where this setting is pointing should contain subdirectories\n# named as the locales, containing a formats.py file\n# (i.e. \"myproject.locale\" for myproject/locale/en/formats.py etc. use)\nFORMAT_MODULE_PATH = None\n\n# Default formatting for date objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nDATE_FORMAT = 'N j, Y'\n\n# Default formatting for datetime objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nDATETIME_FORMAT = 'N j, Y, P'\n\n# Default formatting for time objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nTIME_FORMAT = 'P'\n\n# Default formatting for date objects when only the year and month are relevant.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nYEAR_MONTH_FORMAT = 'F Y'\n\n# Default formatting for date objects when only the month and day are relevant.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nMONTH_DAY_FORMAT = 'F j'\n\n# Default short formatting for date objects. See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nSHORT_DATE_FORMAT = 'm/d/Y'\n\n# Default short formatting for datetime objects.\n# See all available format strings here:\n# http://docs.djangoproject.com/en/dev/ref/templates/builtins/#date\nSHORT_DATETIME_FORMAT = 'm/d/Y P'\n\n# Default formats to be used when parsing dates from input boxes, in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\nDATE_INPUT_FORMATS = [\n    '%Y-%m-%d', '%m/%d/%Y', '%m/%d/%y',  # '2006-10-25', '10/25/2006', '10/25/06'\n    '%b %d %Y', '%b %d, %Y',             # 'Oct 25 2006', 'Oct 25, 2006'\n    '%d %b %Y', '%d %b, %Y',             # '25 Oct 2006', '25 Oct, 2006'\n    '%B %d %Y', '%B %d, %Y',             # 'October 25 2006', 'October 25, 2006'\n    '%d %B %Y', '%d %B, %Y',             # '25 October 2006', '25 October, 2006'\n]\n\n# Default formats to be used when parsing times from input boxes, in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\nTIME_INPUT_FORMATS = [\n    '%H:%M:%S',     # '14:30:59'\n    '%H:%M:%S.%f',  # '14:30:59.000200'\n    '%H:%M',        # '14:30'\n]\n\n# Default formats to be used when parsing dates and times from input boxes,\n# in order\n# See all available format string here:\n# http://docs.python.org/library/datetime.html#strftime-behavior\n# * Note that these format strings are different from the ones to display dates\nDATETIME_INPUT_FORMATS = [\n    '%Y-%m-%d %H:%M:%S',     # '2006-10-25 14:30:59'\n    '%Y-%m-%d %H:%M:%S.%f',  # '2006-10-25 14:30:59.000200'\n    '%Y-%m-%d %H:%M',        # '2006-10-25 14:30'\n    '%Y-%m-%d',              # '2006-10-25'\n    '%m/%d/%Y %H:%M:%S',     # '10/25/2006 14:30:59'\n    '%m/%d/%Y %H:%M:%S.%f',  # '10/25/2006 14:30:59.000200'\n    '%m/%d/%Y %H:%M',        # '10/25/2006 14:30'\n    '%m/%d/%Y',              # '10/25/2006'\n    '%m/%d/%y %H:%M:%S',     # '10/25/06 14:30:59'\n    '%m/%d/%y %H:%M:%S.%f',  # '10/25/06 14:30:59.000200'\n    '%m/%d/%y %H:%M',        # '10/25/06 14:30'\n    '%m/%d/%y',              # '10/25/06'\n]\n\n# First day of week, to be used on calendars\n# 0 means Sunday, 1 means Monday...\nFIRST_DAY_OF_WEEK = 0\n\n# Decimal separator symbol\nDECIMAL_SEPARATOR = '.'\n\n# Boolean that sets whether to add thousand separator when formatting numbers\nUSE_THOUSAND_SEPARATOR = False\n\n# Number of digits that will be together, when splitting them by\n# THOUSAND_SEPARATOR. 0 means no grouping, 3 means splitting by thousands...\nNUMBER_GROUPING = 0\n\n# Thousand separator symbol\nTHOUSAND_SEPARATOR = ','\n\n# The tablespaces to use for each model when not specified otherwise.\nDEFAULT_TABLESPACE = ''\nDEFAULT_INDEX_TABLESPACE = ''\n\n# Default X-Frame-Options header value\nX_FRAME_OPTIONS = 'SAMEORIGIN'\n\nUSE_X_FORWARDED_HOST = False\nUSE_X_FORWARDED_PORT = False\n\n# The Python dotted path to the WSGI application that Django's internal server\n# (runserver) will use. If `None`, the return value of\n# 'django.core.wsgi.get_wsgi_application' is used, thus preserving the same\n# behavior as previous versions of Django. Otherwise this should point to an\n# actual WSGI application object.\nWSGI_APPLICATION = None\n\n# If your Django app is behind a proxy that sets a header to specify secure\n# connections, AND that proxy ensures that user-submitted headers with the\n# same name are ignored (so that people can't spoof it), set this value to\n# a tuple of (header_name, header_value). For any requests that come in with\n# that header/value, request.is_secure() will return True.\n# WARNING! Only set this if you fully understand what you're doing. Otherwise,\n# you may be opening yourself up to a security risk.\nSECURE_PROXY_SSL_HEADER = None\n\n##############\n# MIDDLEWARE #\n##############\n\n# List of middleware to use. Order is important; in the request phase, these\n# middleware will be applied in the order given, and in the response\n# phase the middleware will be applied in reverse order.\nMIDDLEWARE = []\n\n############\n# SESSIONS #\n############\n\n# Cache to store session data if using the cache session backend.\nSESSION_CACHE_ALIAS = 'default'\n# Cookie name. This can be whatever you want.\nSESSION_COOKIE_NAME = 'sessionid'\n# Age of cookie, in seconds (default: 2 weeks).\nSESSION_COOKIE_AGE = 60 * 60 * 24 * 7 * 2\n# A string like \"example.com\", or None for standard domain cookie.\nSESSION_COOKIE_DOMAIN = None\n# Whether the session cookie should be secure (https:// only).\nSESSION_COOKIE_SECURE = False\n# The path of the session cookie.\nSESSION_COOKIE_PATH = '/'\n# Whether to use the non-RFC standard httpOnly flag (IE, FF3+, others)\nSESSION_COOKIE_HTTPONLY = True\n# Whether to save the session data on every request.\nSESSION_SAVE_EVERY_REQUEST = False\n# Whether a user's session cookie expires when the Web browser is closed.\nSESSION_EXPIRE_AT_BROWSER_CLOSE = False\n# The module to store session data\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'\n# Directory to store session files if using the file session module. If None,\n# the backend will use a sensible default.\nSESSION_FILE_PATH = None\n# class to serialize session data\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'\n\n#########\n# CACHE #\n#########\n\n# The cache backends to use.\nCACHES = {\n    'default': {\n        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n    }\n}\nCACHE_MIDDLEWARE_KEY_PREFIX = ''\nCACHE_MIDDLEWARE_SECONDS = 600\nCACHE_MIDDLEWARE_ALIAS = 'default'\n\n##################\n# AUTHENTICATION #\n##################\n\nAUTH_USER_MODEL = 'auth.User'\n\nAUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.ModelBackend']\n\nLOGIN_URL = '/accounts/login/'\n\nLOGIN_REDIRECT_URL = '/accounts/profile/'\n\nLOGOUT_REDIRECT_URL = None\n\n# The number of days a password reset link is valid for\nPASSWORD_RESET_TIMEOUT_DAYS = 3\n\n# the first hasher in this list is the preferred algorithm.  any\n# password using different algorithms will be converted automatically\n# upon login\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.Argon2PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n]\n\nAUTH_PASSWORD_VALIDATORS = []\n\n###########\n# SIGNING #\n###########\n\nSIGNING_BACKEND = 'django.core.signing.TimestampSigner'\n\n########\n# CSRF #\n########\n\n# Dotted path to callable to be used as view when a request is\n# rejected by the CSRF middleware.\nCSRF_FAILURE_VIEW = 'django.views.csrf.csrf_failure'\n\n# Settings for CSRF cookie.\nCSRF_COOKIE_NAME = 'csrftoken'\nCSRF_COOKIE_AGE = 60 * 60 * 24 * 7 * 52\nCSRF_COOKIE_DOMAIN = None\nCSRF_COOKIE_PATH = '/'\nCSRF_COOKIE_SECURE = False\nCSRF_COOKIE_HTTPONLY = False\nCSRF_HEADER_NAME = 'HTTP_X_CSRFTOKEN'\nCSRF_TRUSTED_ORIGINS = []\nCSRF_USE_SESSIONS = False\n\n############\n# MESSAGES #\n############\n\n# Class to use as messages backend\nMESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'\n\n# Default values of MESSAGE_LEVEL and MESSAGE_TAGS are defined within\n# django.contrib.messages to avoid imports in this settings file.\n\n###########\n# LOGGING #\n###########\n\n# The callable to use to configure logging\nLOGGING_CONFIG = 'logging.config.dictConfig'\n\n# Custom logging configuration.\nLOGGING = {}\n\n# Default exception reporter filter class used in case none has been\n# specifically assigned to the HttpRequest instance.\nDEFAULT_EXCEPTION_REPORTER_FILTER = 'django.views.debug.SafeExceptionReporterFilter'\n\n###########\n# TESTING #\n###########\n\n# The name of the class to use to run the test suite\nTEST_RUNNER = 'django.test.runner.DiscoverRunner'\n\n# Apps that don't need to be serialized at test database creation time\n# (only apps with migrations are to start with)\nTEST_NON_SERIALIZED_APPS = []\n\n############\n# FIXTURES #\n############\n\n# The list of directories to search for fixtures\nFIXTURE_DIRS = []\n\n###############\n# STATICFILES #\n###############\n\n# A list of locations of additional static files\nSTATICFILES_DIRS = []\n\n# The default file storage backend used during the build process\nSTATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'\n\n# List of finder classes that know how to find static files in\n# various locations.\nSTATICFILES_FINDERS = [\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n    # 'django.contrib.staticfiles.finders.DefaultStorageFinder',\n]\n\n##############\n# MIGRATIONS #\n##############\n\n# Migration module overrides for apps, by app label.\nMIGRATION_MODULES = {}\n\n#################\n# SYSTEM CHECKS #\n#################\n\n# List of all issues generated by system checks that should be silenced. Light\n# issues like warnings, infos or debugs will not generate a message. Silencing\n# serious issues like errors and criticals does not result in hiding the\n# message, but Django will not stop you from e.g. running server.\nSILENCED_SYSTEM_CHECKS = []\n\n#######################\n# SECURITY MIDDLEWARE #\n#######################\nSECURE_BROWSER_XSS_FILTER = False\nSECURE_CONTENT_TYPE_NOSNIFF = False\nSECURE_HSTS_INCLUDE_SUBDOMAINS = False\nSECURE_HSTS_PRELOAD = False\nSECURE_HSTS_SECONDS = 0\nSECURE_REDIRECT_EXEMPT = []\nSECURE_SSL_HOST = None\nSECURE_SSL_REDIRECT = False\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "global_settings.py", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/django_django/django-django-f0d6f01/django/conf/global_settings.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:56:33Z", "url": "https://github.com/django/django", "wiki": false}
{"author": "nvbn", "code": "import os\nimport zipfile\nfrom thefuck.utils import for_app\nfrom thefuck.shells import shell\n\n\ndef _is_bad_zip(file):\n    try:\n        with zipfile.ZipFile(file, 'r') as archive:\n            return len(archive.namelist()) > 1\n    except Exception:\n        return False\n\n\ndef _zip_file(command):\n    \n    \n    \n    \n    for c in command.script_parts[1:]:\n        if not c.startswith('-'):\n            if c.endswith('.zip'):\n                return c\n            else:\n                return u'{}.zip'.format(c)\n\n\n@for_app('unzip')\ndef match(command):\n    if '-d' in command.script:\n        return False\n\n    zip_file = _zip_file(command)\n    if zip_file:\n        return _is_bad_zip(zip_file)\n    else:\n        return False\n\n\ndef get_new_command(command):\n    return u'{} -d {}'.format(\n        command.script, shell.quote(_zip_file(command)[:-4]))\n\n\ndef side_effect(old_cmd, command):\n    with zipfile.ZipFile(_zip_file(old_cmd), 'r') as archive:\n        for file in archive.namelist():\n            try:\n                os.remove(file)\n            except OSError:\n                \n                \n                pass\n\n\nrequires_output = False\n", "comments": "# unzip works that way:\n# unzip [-flags] file[.zip] [file(s) ...] [-x file(s) ...]\n#                ^          ^ files to unzip from the archive\n#                archive to unzip\n# does not try to remove directories as we cannot know if they\n# already existed before\n", "content": "import os\nimport zipfile\nfrom thefuck.utils import for_app\nfrom thefuck.shells import shell\n\n\ndef _is_bad_zip(file):\n    try:\n        with zipfile.ZipFile(file, 'r') as archive:\n            return len(archive.namelist()) > 1\n    except Exception:\n        return False\n\n\ndef _zip_file(command):\n    # unzip works that way:\n    # unzip [-flags] file[.zip] [file(s) ...] [-x file(s) ...]\n    #                ^          ^ files to unzip from the archive\n    #                archive to unzip\n    for c in command.script_parts[1:]:\n        if not c.startswith('-'):\n            if c.endswith('.zip'):\n                return c\n            else:\n                return u'{}.zip'.format(c)\n\n\n@for_app('unzip')\ndef match(command):\n    if '-d' in command.script:\n        return False\n\n    zip_file = _zip_file(command)\n    if zip_file:\n        return _is_bad_zip(zip_file)\n    else:\n        return False\n\n\ndef get_new_command(command):\n    return u'{} -d {}'.format(\n        command.script, shell.quote(_zip_file(command)[:-4]))\n\n\ndef side_effect(old_cmd, command):\n    with zipfile.ZipFile(_zip_file(old_cmd), 'r') as archive:\n        for file in archive.namelist():\n            try:\n                os.remove(file)\n            except OSError:\n                # does not try to remove directories as we cannot know if they\n                # already existed before\n                pass\n\n\nrequires_output = False\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "dirty_unzip.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/dirty_unzip.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
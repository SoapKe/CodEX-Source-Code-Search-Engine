{"author": "certbot", "code": "\n\"\"\"A version of Python 2.x's SimpleHTTPServer that flushes its output.\"\"\"\nfrom BaseHTTPServer import HTTPServer\nfrom SimpleHTTPServer import SimpleHTTPRequestHandler\nimport sys\n\ndef serve_forever(port=0):\n    \"\"\"Spins up an HTTP server on all interfaces and the given port.\n\n    A message is printed to stdout specifying the address and port being used\n    by the server.\n\n    :param int port: port number to use.\n\n    \"\"\"\n    server = HTTPServer(('', port), SimpleHTTPRequestHandler)\n    print 'Serving HTTP on {0} port {1} ...'.format(*server.server_address)\n    sys.stdout.flush()\n    server.serve_forever()\n\n\nif __name__ == '__main__':\n    kwargs = {}\n    if len(sys.argv) > 1:\n        kwargs['port'] = int(sys.argv[1])\n    serve_forever(**kwargs)\n", "comments": "   a version python 2 x simplehttpserver flushes output     basehttpserver import httpserver simplehttpserver import simplehttprequesthandler import sys  def serve forever(port 0)         spins http server interfaces given port       a message printed stdout specifying address port used     server        param int port  port number use               usr bin env python ", "content": "#!/usr/bin/env python\n\"\"\"A version of Python 2.x's SimpleHTTPServer that flushes its output.\"\"\"\nfrom BaseHTTPServer import HTTPServer\nfrom SimpleHTTPServer import SimpleHTTPRequestHandler\nimport sys\n\ndef serve_forever(port=0):\n    \"\"\"Spins up an HTTP server on all interfaces and the given port.\n\n    A message is printed to stdout specifying the address and port being used\n    by the server.\n\n    :param int port: port number to use.\n\n    \"\"\"\n    server = HTTPServer(('', port), SimpleHTTPRequestHandler)\n    print 'Serving HTTP on {0} port {1} ...'.format(*server.server_address)\n    sys.stdout.flush()\n    server.serve_forever()\n\n\nif __name__ == '__main__':\n    kwargs = {}\n    if len(sys.argv) > 1:\n        kwargs['port'] = int(sys.argv[1])\n    serve_forever(**kwargs)\n", "description": "Certbot is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.  It can also act as a client for any other CA that uses the ACME protocol.", "file_name": "simple_http_server.py", "id": "78ed7523d633a2c429b6da3da5a3e9e6", "language": "Python", "project_name": "certbot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/certbot-certbot/certbot-certbot-1d0e3b1/tools/simple_http_server.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:23Z", "url": "https://github.com/certbot/certbot", "wiki": false}
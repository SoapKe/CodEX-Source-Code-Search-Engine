{"author": "rg3", "code": "\n\n\nfrom __future__ import print_function\n\nimport os.path\nimport warnings\nimport sys\n\ntry:\n    from setuptools import setup, Command\n    setuptools_available = True\nexcept ImportError:\n    from distutils.core import setup, Command\n    setuptools_available = False\nfrom distutils.spawn import spawn\n\ntry:\n    \n    \n    import py2exe\nexcept ImportError:\n    if len(sys.argv) >= 2 and sys.argv[1] == 'py2exe':\n        print('Cannot import py2exe', file=sys.stderr)\n        exit(1)\n\npy2exe_options = {\n    'bundle_files': 1,\n    'compressed': 1,\n    'optimize': 2,\n    'dist_dir': '.',\n    'dll_excludes': ['w9xpopen.exe', 'crypt32.dll'],\n}\n\n\nexec(compile(open('youtube_dl/version.py').read(),\n             'youtube_dl/version.py', 'exec'))\n\nDESCRIPTION = 'YouTube video downloader'\nLONG_DESCRIPTION = 'Command-line program to download videos from YouTube.com and other video sites'\n\npy2exe_console = [{\n    'script': './youtube_dl/__main__.py',\n    'dest_base': 'youtube-dl',\n    'version': __version__,\n    'description': DESCRIPTION,\n    'comments': LONG_DESCRIPTION,\n    'product_name': 'youtube-dl',\n    'product_version': __version__,\n}]\n\npy2exe_params = {\n    'console': py2exe_console,\n    'options': {'py2exe': py2exe_options},\n    'zipfile': None\n}\n\nif len(sys.argv) >= 2 and sys.argv[1] == 'py2exe':\n    params = py2exe_params\nelse:\n    files_spec = [\n        ('etc/bash_completion.d', ['youtube-dl.bash-completion']),\n        ('etc/fish/completions', ['youtube-dl.fish']),\n        ('share/doc/youtube_dl', ['README.txt']),\n        ('share/man/man1', ['youtube-dl.1'])\n    ]\n    root = os.path.dirname(os.path.abspath(__file__))\n    data_files = []\n    for dirname, files in files_spec:\n        resfiles = []\n        for fn in files:\n            if not os.path.exists(fn):\n                warnings.warn('Skipping file %s since it is not present. Type  make  to build all automatically generated files.' % fn)\n            else:\n                resfiles.append(fn)\n        data_files.append((dirname, resfiles))\n\n    params = {\n        'data_files': data_files,\n    }\n    if setuptools_available:\n        params['entry_points'] = {'console_scripts': ['youtube-dl = youtube_dl:main']}\n    else:\n        params['scripts'] = ['bin/youtube-dl']\n\nclass build_lazy_extractors(Command):\n    description = 'Build the extractor lazy loading module'\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        spawn(\n            [sys.executable, 'devscripts/make_lazy_extractors.py', 'youtube_dl/extractor/lazy_extractors.py'],\n            dry_run=self.dry_run,\n        )\n\nsetup(\n    name='youtube_dl',\n    version=__version__,\n    description=DESCRIPTION,\n    long_description=LONG_DESCRIPTION,\n    url='https://github.com/rg3/youtube-dl',\n    author='Ricardo Garcia',\n    author_email='ytdl@yt-dl.org',\n    maintainer='Sergey M.',\n    maintainer_email='dstftw@gmail.com',\n    license='Unlicense',\n    packages=[\n        'youtube_dl',\n        'youtube_dl.extractor', 'youtube_dl.downloader',\n        'youtube_dl.postprocessor'],\n\n    \n    \n    \n\n    classifiers=[\n        'Topic :: Multimedia :: Video',\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Console',\n        'License :: Public Domain',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.2',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n\n    cmdclass={'build_lazy_extractors': build_lazy_extractors},\n    **params\n)\n", "comments": "#!/usr/bin/env python\n# coding: utf-8\n# This will create an exe that needs Microsoft Visual C++ 2008\n# Redistributable Package\n# Get the version from youtube_dl/version.py without importing the package\n# Provokes warning on most systems (why?!)\n# test_suite = 'nose.collector',\n# test_requires = ['nosetest'],\n", "content": "#!/usr/bin/env python\n# coding: utf-8\n\nfrom __future__ import print_function\n\nimport os.path\nimport warnings\nimport sys\n\ntry:\n    from setuptools import setup, Command\n    setuptools_available = True\nexcept ImportError:\n    from distutils.core import setup, Command\n    setuptools_available = False\nfrom distutils.spawn import spawn\n\ntry:\n    # This will create an exe that needs Microsoft Visual C++ 2008\n    # Redistributable Package\n    import py2exe\nexcept ImportError:\n    if len(sys.argv) >= 2 and sys.argv[1] == 'py2exe':\n        print('Cannot import py2exe', file=sys.stderr)\n        exit(1)\n\npy2exe_options = {\n    'bundle_files': 1,\n    'compressed': 1,\n    'optimize': 2,\n    'dist_dir': '.',\n    'dll_excludes': ['w9xpopen.exe', 'crypt32.dll'],\n}\n\n# Get the version from youtube_dl/version.py without importing the package\nexec(compile(open('youtube_dl/version.py').read(),\n             'youtube_dl/version.py', 'exec'))\n\nDESCRIPTION = 'YouTube video downloader'\nLONG_DESCRIPTION = 'Command-line program to download videos from YouTube.com and other video sites'\n\npy2exe_console = [{\n    'script': './youtube_dl/__main__.py',\n    'dest_base': 'youtube-dl',\n    'version': __version__,\n    'description': DESCRIPTION,\n    'comments': LONG_DESCRIPTION,\n    'product_name': 'youtube-dl',\n    'product_version': __version__,\n}]\n\npy2exe_params = {\n    'console': py2exe_console,\n    'options': {'py2exe': py2exe_options},\n    'zipfile': None\n}\n\nif len(sys.argv) >= 2 and sys.argv[1] == 'py2exe':\n    params = py2exe_params\nelse:\n    files_spec = [\n        ('etc/bash_completion.d', ['youtube-dl.bash-completion']),\n        ('etc/fish/completions', ['youtube-dl.fish']),\n        ('share/doc/youtube_dl', ['README.txt']),\n        ('share/man/man1', ['youtube-dl.1'])\n    ]\n    root = os.path.dirname(os.path.abspath(__file__))\n    data_files = []\n    for dirname, files in files_spec:\n        resfiles = []\n        for fn in files:\n            if not os.path.exists(fn):\n                warnings.warn('Skipping file %s since it is not present. Type  make  to build all automatically generated files.' % fn)\n            else:\n                resfiles.append(fn)\n        data_files.append((dirname, resfiles))\n\n    params = {\n        'data_files': data_files,\n    }\n    if setuptools_available:\n        params['entry_points'] = {'console_scripts': ['youtube-dl = youtube_dl:main']}\n    else:\n        params['scripts'] = ['bin/youtube-dl']\n\nclass build_lazy_extractors(Command):\n    description = 'Build the extractor lazy loading module'\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        spawn(\n            [sys.executable, 'devscripts/make_lazy_extractors.py', 'youtube_dl/extractor/lazy_extractors.py'],\n            dry_run=self.dry_run,\n        )\n\nsetup(\n    name='youtube_dl',\n    version=__version__,\n    description=DESCRIPTION,\n    long_description=LONG_DESCRIPTION,\n    url='https://github.com/rg3/youtube-dl',\n    author='Ricardo Garcia',\n    author_email='ytdl@yt-dl.org',\n    maintainer='Sergey M.',\n    maintainer_email='dstftw@gmail.com',\n    license='Unlicense',\n    packages=[\n        'youtube_dl',\n        'youtube_dl.extractor', 'youtube_dl.downloader',\n        'youtube_dl.postprocessor'],\n\n    # Provokes warning on most systems (why?!)\n    # test_suite = 'nose.collector',\n    # test_requires = ['nosetest'],\n\n    classifiers=[\n        'Topic :: Multimedia :: Video',\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Console',\n        'License :: Public Domain',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.2',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ],\n\n    cmdclass={'build_lazy_extractors': build_lazy_extractors},\n    **params\n)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "setup.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/setup.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
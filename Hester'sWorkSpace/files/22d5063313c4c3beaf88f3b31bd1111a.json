{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom yowsup.layers.protocol_notifications.protocolentities import NotificationProtocolEntity\nfrom .notification_groups import GroupsNotificationProtocolEntity\n\nclass SubjectGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    \n\n    def __init__(self, _type, _id,  _from, timestamp, notify, participant, subject):\n        super(SubjectGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant)\n        self.setSubjectData(subject)\n\n    def setSubjectData(self, subject, subjectOwner, subjectTimestamp):\n        self.subject = subject\n        self.subjectOwner = subjectOwner\n        self.subjectTimestamp = int(subjectTimestamp)\n\n    def getSubject(self):\n        return self.subject\n\n    def getSubjectOwner(self, full = True):\n        return self.subjectOwner if full else self.subjectOwner.split('@')[0]\n\n    def getSubjectTimestamp(self):\n        return self.subjectTimestamp\n\n    def __str__(self):\n        out = super(SubjectGroupsNotificationProtocolEntity, self).__str__()\n        out += \"New subject: %s\\n\" % self.getSubject()\n        out += \"Set by: %s\\n\" % self.getSubjectOwner()\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(SubjectGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        subjectNode = ProtocolTreeNode(\"subject\", {\n            \"s_t\": str(self.getSubjectTimestamp()),\n            \"s_o\": self.getSubjectOwner(),\n            \"subject\": self.getSubject()\n        })\n        node.addChild(subjectNode)\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = super(SubjectGroupsNotificationProtocolEntity, SubjectGroupsNotificationProtocolEntity).fromProtocolTreeNode(node)\n        entity.__class__ = SubjectGroupsNotificationProtocolEntity\n        subjectNode = node.getChild(\"subject\")\n        entity.setSubjectData(subjectNode[\"subject\"], subjectNode[\"s_o\"], subjectNode[\"s_t\"])\n        return entity\n", "comments": "          notification notify  whatsapp  id    id       timestamp    participant    participant jid       group jid    type  w gp2            subject    subject set timestamp       subject owner jid    subject    subject               subject        notification           ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom yowsup.layers.protocol_notifications.protocolentities import NotificationProtocolEntity\nfrom .notification_groups import GroupsNotificationProtocolEntity\n\nclass SubjectGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    '''\n\n    <notification notify=\"WhatsApp\" id=\"{{id}}\" t=\"{{TIMESTAMP}}\" participant=\"{{PARTICIPANT_JID}}\" from=\"{{GROUP_JID}}\" type=\"w:gp2\">\n        <subject s_t=\"{{subject_set_timestamp}}\" s_o=\"{{subject_owner_jid}}\" subject=\"{{SUBJECT}}\">\n        </subject>\n    </notification>\n\n    '''\n\n    def __init__(self, _type, _id,  _from, timestamp, notify, participant, subject):\n        super(SubjectGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant)\n        self.setSubjectData(subject)\n\n    def setSubjectData(self, subject, subjectOwner, subjectTimestamp):\n        self.subject = subject\n        self.subjectOwner = subjectOwner\n        self.subjectTimestamp = int(subjectTimestamp)\n\n    def getSubject(self):\n        return self.subject\n\n    def getSubjectOwner(self, full = True):\n        return self.subjectOwner if full else self.subjectOwner.split('@')[0]\n\n    def getSubjectTimestamp(self):\n        return self.subjectTimestamp\n\n    def __str__(self):\n        out = super(SubjectGroupsNotificationProtocolEntity, self).__str__()\n        out += \"New subject: %s\\n\" % self.getSubject()\n        out += \"Set by: %s\\n\" % self.getSubjectOwner()\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(SubjectGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        subjectNode = ProtocolTreeNode(\"subject\", {\n            \"s_t\": str(self.getSubjectTimestamp()),\n            \"s_o\": self.getSubjectOwner(),\n            \"subject\": self.getSubject()\n        })\n        node.addChild(subjectNode)\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = super(SubjectGroupsNotificationProtocolEntity, SubjectGroupsNotificationProtocolEntity).fromProtocolTreeNode(node)\n        entity.__class__ = SubjectGroupsNotificationProtocolEntity\n        subjectNode = node.getChild(\"subject\")\n        entity.setSubjectData(subjectNode[\"subject\"], subjectNode[\"s_o\"], subjectNode[\"s_t\"])\n        return entity\n", "description": "The python WhatsApp library", "file_name": "notification_groups_subject.py", "id": "22d5063313c4c3beaf88f3b31bd1111a", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_groups/protocolentities/notification_groups_subject.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
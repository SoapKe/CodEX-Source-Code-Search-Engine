{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import (\n    compat_b64decode,\n    compat_urllib_parse_unquote,\n)\nfrom ..utils import int_or_none\n\n\nclass MangomoloBaseIE(InfoExtractor):\n    def _get_real_id(self, page_id):\n        return page_id\n\n    def _real_extract(self, url):\n        page_id = self._get_real_id(self._match_id(url))\n        webpage = self._download_webpage(url, page_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        m3u8_entry_protocol = 'm3u8' if self._IS_LIVE else 'm3u8_native'\n\n        format_url = self._html_search_regex(\n            [\n                r'file\\s*:\\s*\"(https?://[^\"]+?/playlist\\.m3u8)',\n                r'<a[^>]+href=\"(rtsp://[^\"]+)\"'\n            ], webpage, 'format url')\n        formats = self._extract_wowza_formats(\n            format_url, page_id, m3u8_entry_protocol, ['smil'])\n        self._sort_formats(formats)\n\n        return {\n            'id': page_id,\n            'title': self._live_title(page_id) if self._IS_LIVE else page_id,\n            'uploader_id': hidden_inputs.get('userid'),\n            'duration': int_or_none(hidden_inputs.get('duration')),\n            'is_live': self._IS_LIVE,\n            'formats': formats,\n        }\n\n\nclass MangomoloVideoIE(MangomoloBaseIE):\n    IE_NAME = 'mangomolo:video'\n    _VALID_URL = r'https?://admin\\.mangomolo\\.com/analytics/index\\.php/customers/embed/video\\?.*?\\bid=(?P<id>\\d+)'\n    _IS_LIVE = False\n\n\nclass MangomoloLiveIE(MangomoloBaseIE):\n    IE_NAME = 'mangomolo:live'\n    _VALID_URL = r'https?://admin\\.mangomolo\\.com/analytics/index\\.php/customers/embed/index\\?.*?\\bchannelid=(?P<id>(?:[A-Za-z0-9+/=]|%2B|%2F|%3D)+)'\n    _IS_LIVE = True\n\n    def _get_real_id(self, page_id):\n        return compat_b64decode(compat_urllib_parse_unquote(page_id)).decode()\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import (\n    compat_b64decode,\n    compat_urllib_parse_unquote,\n)\nfrom ..utils import int_or_none\n\n\nclass MangomoloBaseIE(InfoExtractor):\n    def _get_real_id(self, page_id):\n        return page_id\n\n    def _real_extract(self, url):\n        page_id = self._get_real_id(self._match_id(url))\n        webpage = self._download_webpage(url, page_id)\n        hidden_inputs = self._hidden_inputs(webpage)\n        m3u8_entry_protocol = 'm3u8' if self._IS_LIVE else 'm3u8_native'\n\n        format_url = self._html_search_regex(\n            [\n                r'file\\s*:\\s*\"(https?://[^\"]+?/playlist\\.m3u8)',\n                r'<a[^>]+href=\"(rtsp://[^\"]+)\"'\n            ], webpage, 'format url')\n        formats = self._extract_wowza_formats(\n            format_url, page_id, m3u8_entry_protocol, ['smil'])\n        self._sort_formats(formats)\n\n        return {\n            'id': page_id,\n            'title': self._live_title(page_id) if self._IS_LIVE else page_id,\n            'uploader_id': hidden_inputs.get('userid'),\n            'duration': int_or_none(hidden_inputs.get('duration')),\n            'is_live': self._IS_LIVE,\n            'formats': formats,\n        }\n\n\nclass MangomoloVideoIE(MangomoloBaseIE):\n    IE_NAME = 'mangomolo:video'\n    _VALID_URL = r'https?://admin\\.mangomolo\\.com/analytics/index\\.php/customers/embed/video\\?.*?\\bid=(?P<id>\\d+)'\n    _IS_LIVE = False\n\n\nclass MangomoloLiveIE(MangomoloBaseIE):\n    IE_NAME = 'mangomolo:live'\n    _VALID_URL = r'https?://admin\\.mangomolo\\.com/analytics/index\\.php/customers/embed/index\\?.*?\\bchannelid=(?P<id>(?:[A-Za-z0-9+/=]|%2B|%2F|%3D)+)'\n    _IS_LIVE = True\n\n    def _get_real_id(self, page_id):\n        return compat_b64decode(compat_urllib_parse_unquote(page_id)).decode()\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "mangomolo.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/mangomolo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
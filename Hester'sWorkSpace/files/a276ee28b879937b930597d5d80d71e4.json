{"author": "mitmproxy", "code": "import time\nimport pytest\nfrom mitmproxy.utils import human\n\n\ndef test_format_timestamp():\n    assert human.format_timestamp(time.time())\n\n\ndef test_format_timestamp_with_milli():\n    assert human.format_timestamp_with_milli(time.time())\n\n\ndef test_parse_size():\n    assert human.parse_size(\"0\") == 0\n    assert human.parse_size(\"0b\") == 0\n    assert human.parse_size(\"1\") == 1\n    assert human.parse_size(\"1k\") == 1024\n    assert human.parse_size(\"1m\") == 1024**2\n    assert human.parse_size(\"1g\") == 1024**3\n    with pytest.raises(ValueError):\n        human.parse_size(\"1f\")\n    with pytest.raises(ValueError):\n        human.parse_size(\"ak\")\n    assert human.parse_size(None) is None\n\n\ndef test_pretty_size():\n    assert human.pretty_size(0) == \"0b\"\n    assert human.pretty_size(100) == \"100b\"\n    assert human.pretty_size(1024) == \"1k\"\n    assert human.pretty_size(1024 + (1024 / 2.0)) == \"1.5k\"\n    assert human.pretty_size(1024 * 1024) == \"1m\"\n    assert human.pretty_size(10 * 1024 * 1024) == \"10m\"\n\n\ndef test_pretty_duration():\n    assert human.pretty_duration(0.00001) == \"0ms\"\n    assert human.pretty_duration(0.0001) == \"0ms\"\n    assert human.pretty_duration(0.001) == \"1ms\"\n    assert human.pretty_duration(0.01) == \"10ms\"\n    assert human.pretty_duration(0.1) == \"100ms\"\n    assert human.pretty_duration(1) == \"1.00s\"\n    assert human.pretty_duration(10) == \"10.0s\"\n    assert human.pretty_duration(100) == \"100s\"\n    assert human.pretty_duration(1000) == \"1000s\"\n    assert human.pretty_duration(10000) == \"10000s\"\n    assert human.pretty_duration(1.123) == \"1.12s\"\n    assert human.pretty_duration(0.123) == \"123ms\"\n\n\ndef test_format_address():\n    assert human.format_address((\"::1\", \"54010\", \"0\", \"0\")) == \"[::1]:54010\"\n    assert human.format_address((\"::ffff:127.0.0.1\", \"54010\", \"0\", \"0\")) == \"127.0.0.1:54010\"\n    assert human.format_address((\"127.0.0.1\", \"54010\")) == \"127.0.0.1:54010\"\n    assert human.format_address((\"example.com\", \"54010\")) == \"example.com:54010\"\n    assert human.format_address((\"::\", \"8080\")) == \"*:8080\"\n    assert human.format_address((\"0.0.0.0\", \"8080\")) == \"*:8080\"\n", "comments": "", "content": "import time\nimport pytest\nfrom mitmproxy.utils import human\n\n\ndef test_format_timestamp():\n    assert human.format_timestamp(time.time())\n\n\ndef test_format_timestamp_with_milli():\n    assert human.format_timestamp_with_milli(time.time())\n\n\ndef test_parse_size():\n    assert human.parse_size(\"0\") == 0\n    assert human.parse_size(\"0b\") == 0\n    assert human.parse_size(\"1\") == 1\n    assert human.parse_size(\"1k\") == 1024\n    assert human.parse_size(\"1m\") == 1024**2\n    assert human.parse_size(\"1g\") == 1024**3\n    with pytest.raises(ValueError):\n        human.parse_size(\"1f\")\n    with pytest.raises(ValueError):\n        human.parse_size(\"ak\")\n    assert human.parse_size(None) is None\n\n\ndef test_pretty_size():\n    assert human.pretty_size(0) == \"0b\"\n    assert human.pretty_size(100) == \"100b\"\n    assert human.pretty_size(1024) == \"1k\"\n    assert human.pretty_size(1024 + (1024 / 2.0)) == \"1.5k\"\n    assert human.pretty_size(1024 * 1024) == \"1m\"\n    assert human.pretty_size(10 * 1024 * 1024) == \"10m\"\n\n\ndef test_pretty_duration():\n    assert human.pretty_duration(0.00001) == \"0ms\"\n    assert human.pretty_duration(0.0001) == \"0ms\"\n    assert human.pretty_duration(0.001) == \"1ms\"\n    assert human.pretty_duration(0.01) == \"10ms\"\n    assert human.pretty_duration(0.1) == \"100ms\"\n    assert human.pretty_duration(1) == \"1.00s\"\n    assert human.pretty_duration(10) == \"10.0s\"\n    assert human.pretty_duration(100) == \"100s\"\n    assert human.pretty_duration(1000) == \"1000s\"\n    assert human.pretty_duration(10000) == \"10000s\"\n    assert human.pretty_duration(1.123) == \"1.12s\"\n    assert human.pretty_duration(0.123) == \"123ms\"\n\n\ndef test_format_address():\n    assert human.format_address((\"::1\", \"54010\", \"0\", \"0\")) == \"[::1]:54010\"\n    assert human.format_address((\"::ffff:127.0.0.1\", \"54010\", \"0\", \"0\")) == \"127.0.0.1:54010\"\n    assert human.format_address((\"127.0.0.1\", \"54010\")) == \"127.0.0.1:54010\"\n    assert human.format_address((\"example.com\", \"54010\")) == \"example.com:54010\"\n    assert human.format_address((\"::\", \"8080\")) == \"*:8080\"\n    assert human.format_address((\"0.0.0.0\", \"8080\")) == \"*:8080\"\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_human.py", "id": "a276ee28b879937b930597d5d80d71e4", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mitmproxy-mitmproxy/mitmproxy-mitmproxy-3c7725a/test/mitmproxy/utils/test_human.py", "save_time": "", "source": "", "update_at": "2018-03-18T11:30:56Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
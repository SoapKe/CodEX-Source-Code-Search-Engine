{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\nclass ReportIntrastat(models.Model):\n    _name = \"report.intrastat\"\n    _description = \"Intrastat report\"\n    _auto = False\n\n    name = fields.Char(string='Year', readonly=True)\n    month = fields.Selection([\n        ('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'),\n        ('09', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')],\n        readonly=True)\n    supply_units = fields.Float(string='Supply Units', readonly=True)\n    ref = fields.Char(string='Source document', readonly=True)\n    code = fields.Char(string='Country code', readonly=True)\n    intrastat_id = fields.Many2one('report.intrastat.code', string='Intrastat code', readonly=True)\n    weight = fields.Float(string='Weight', readonly=True)\n    value = fields.Float(string='Value', readonly=True, digits=0)\n    type = fields.Selection([('import', 'Import'), ('export', 'Export')], string='Type')\n    currency_id = fields.Many2one('res.currency', string=\"Currency\", readonly=True)\n    company_id = fields.Many2one('res.company', string=\"Company\", readonly=True)\n\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view report_intrastat as (\n                select\n                    to_char(inv.date_invoice, 'YYYY') as name,\n                    to_char(inv.date_invoice, 'MM') as month,\n                    min(inv_line.id) as id,\n                    intrastat.id as intrastat_id,\n                    upper(inv_country.code) as code,\n                    sum(case when inv_line.price_unit is not null\n                            then inv_line.price_unit * inv_line.quantity\n                            else 0\n                        end) as value,\n                    sum(\n                        case when uom.category_id != puom.category_id then (pt.weight * inv_line.quantity)\n                        else (pt.weight * inv_line.quantity * uom.factor) end\n                    ) as weight,\n                    sum(\n                        case when uom.category_id != puom.category_id then inv_line.quantity\n                        else (inv_line.quantity * uom.factor) end\n                    ) as supply_units,\n\n                    inv.currency_id as currency_id,\n                    inv.number as ref,\n                    case when inv.type in ('out_invoice','in_refund')\n                        then 'export'\n                        else 'import'\n                        end as type,\n                    inv.company_id as company_id\n                from\n                    account_invoice inv\n                    left join account_invoice_line inv_line on inv_line.invoice_id=inv.id\n                    left join (product_template pt\n                        left join product_product pp on (pp.product_tmpl_id = pt.id))\n                    on (inv_line.product_id = pp.id)\n                    left join product_uom uom on uom.id=inv_line.uom_id\n                    left join product_uom puom on puom.id = pt.uom_id\n                    left join report_intrastat_code intrastat on pt.intrastat_id = intrastat.id\n                    left join (res_partner inv_address\n                        left join res_country inv_country on (inv_country.id = inv_address.country_id))\n                    on (inv_address.id = inv.partner_id)\n                where\n                    inv.state in ('open','paid')\n                    and inv_line.product_id is not null\n                    and inv_country.intrastat=true\n                group by to_char(inv.date_invoice, 'YYYY'), to_char(inv.date_invoice, 'MM'),intrastat.id,inv.type,pt.intrastat_id, inv_country.code,inv.number,  inv.currency_id, inv.company_id\n            )\"\"\")\n", "comments": "                create replace view report intrastat (                 select                     char(inv date invoice   yyyy ) name                      char(inv date invoice   mm ) month                      min(inv line id) id                      intrastat id intrastat id                      upper(inv country code) code                      sum(case inv line price unit null                             inv line price unit   inv line quantity                             else 0                         end) value                      sum(                         case uom category id    puom category id (pt weight   inv line quantity)                         else (pt weight   inv line quantity   uom factor) end                     ) weight                      sum(                         case uom category id    puom category id inv line quantity                         else (inv line quantity   uom factor) end                     ) supply units                       inv currency id currency id                      inv number ref                      case inv type ( invoice   refund )                          export                          else  import                          end type                      inv company id company id                                     account invoice inv                     left join account invoice line inv line inv line invoice id inv id                     left join (product template pt                         left join product product pp (pp product tmpl id   pt id))                     (inv line product id   pp id)                     left join product uom uom uom id inv line uom id                     left join product uom puom puom id   pt uom id                     left join report intrastat code intrastat pt intrastat id   intrastat id                     left join (res partner inv address                         left join res country inv country (inv country id   inv address country id))                     (inv address id   inv partner id)                                     inv state ( open   paid )                     inv line product id null                     inv country intrastat true                 group char(inv date invoice   yyyy )  char(inv date invoice   mm ) intrastat id inv type pt intrastat id  inv country code inv number   inv currency id  inv company id             )           coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\nclass ReportIntrastat(models.Model):\n    _name = \"report.intrastat\"\n    _description = \"Intrastat report\"\n    _auto = False\n\n    name = fields.Char(string='Year', readonly=True)\n    month = fields.Selection([\n        ('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'),\n        ('09', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')],\n        readonly=True)\n    supply_units = fields.Float(string='Supply Units', readonly=True)\n    ref = fields.Char(string='Source document', readonly=True)\n    code = fields.Char(string='Country code', readonly=True)\n    intrastat_id = fields.Many2one('report.intrastat.code', string='Intrastat code', readonly=True)\n    weight = fields.Float(string='Weight', readonly=True)\n    value = fields.Float(string='Value', readonly=True, digits=0)\n    type = fields.Selection([('import', 'Import'), ('export', 'Export')], string='Type')\n    currency_id = fields.Many2one('res.currency', string=\"Currency\", readonly=True)\n    company_id = fields.Many2one('res.company', string=\"Company\", readonly=True)\n\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view report_intrastat as (\n                select\n                    to_char(inv.date_invoice, 'YYYY') as name,\n                    to_char(inv.date_invoice, 'MM') as month,\n                    min(inv_line.id) as id,\n                    intrastat.id as intrastat_id,\n                    upper(inv_country.code) as code,\n                    sum(case when inv_line.price_unit is not null\n                            then inv_line.price_unit * inv_line.quantity\n                            else 0\n                        end) as value,\n                    sum(\n                        case when uom.category_id != puom.category_id then (pt.weight * inv_line.quantity)\n                        else (pt.weight * inv_line.quantity * uom.factor) end\n                    ) as weight,\n                    sum(\n                        case when uom.category_id != puom.category_id then inv_line.quantity\n                        else (inv_line.quantity * uom.factor) end\n                    ) as supply_units,\n\n                    inv.currency_id as currency_id,\n                    inv.number as ref,\n                    case when inv.type in ('out_invoice','in_refund')\n                        then 'export'\n                        else 'import'\n                        end as type,\n                    inv.company_id as company_id\n                from\n                    account_invoice inv\n                    left join account_invoice_line inv_line on inv_line.invoice_id=inv.id\n                    left join (product_template pt\n                        left join product_product pp on (pp.product_tmpl_id = pt.id))\n                    on (inv_line.product_id = pp.id)\n                    left join product_uom uom on uom.id=inv_line.uom_id\n                    left join product_uom puom on puom.id = pt.uom_id\n                    left join report_intrastat_code intrastat on pt.intrastat_id = intrastat.id\n                    left join (res_partner inv_address\n                        left join res_country inv_country on (inv_country.id = inv_address.country_id))\n                    on (inv_address.id = inv.partner_id)\n                where\n                    inv.state in ('open','paid')\n                    and inv_line.product_id is not null\n                    and inv_country.intrastat=true\n                group by to_char(inv.date_invoice, 'YYYY'), to_char(inv.date_invoice, 'MM'),intrastat.id,inv.type,pt.intrastat_id, inv_country.code,inv.number,  inv.currency_id, inv.company_id\n            )\"\"\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "report_intrastat_report.py", "id": "b721915bfe2197e6f209995c8645dcd0", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/report_intrastat/report/report_intrastat_report.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\n\n\nclass VyboryMosIE(InfoExtractor):\n    _VALID_URL = r'https?://vybory\\.mos\\.ru/(?:\n    _TESTS = [{\n        'url': 'http://vybory.mos.ru/\n        'info_dict': {\n            'id': '13636',\n            'ext': 'mp4',\n            'title': 're:^\u0423\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430\u044f \u0438\u0437\u0431\u0438\u0440\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u21162231 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': '\u0420\u043e\u0441\u0441\u0438\u044f, \u041c\u043e\u0441\u043a\u0432\u0430, \u0443\u043b\u0438\u0446\u0430 \u0412\u0432\u0435\u0434\u0435\u043d\u0441\u043a\u043e\u0433\u043e, 32\u0410',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        }\n    }, {\n        'url': 'http://vybory.mos.ru/account/channels?station_id=13636',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        station_id = self._match_id(url)\n\n        channels = self._download_json(\n            'http://vybory.mos.ru/account/channels?station_id=%s' % station_id,\n            station_id, 'Downloading channels JSON')\n\n        formats = []\n        for cam_num, (sid, hosts, name, _) in enumerate(channels, 1):\n            for num, host in enumerate(hosts, 1):\n                formats.append({\n                    'url': 'http://%s/master.m3u8?sid=%s' % (host, sid),\n                    'ext': 'mp4',\n                    'format_id': 'camera%d-host%d' % (cam_num, num),\n                    'format_note': '%s, %s' % (name, host),\n                })\n\n        info = self._download_json(\n            'http://vybory.mos.ru/json/voting_stations/%s/%s.json'\n            % (compat_str(station_id)[:3], station_id),\n            station_id, 'Downloading station JSON', fatal=False)\n\n        return {\n            'id': station_id,\n            'title': self._live_title(info['name'] if info else station_id),\n            'description': info.get('address'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n#precinct/|account/channels\\?.*?\\bstation_id=)(?P<id>\\d+)'\n#precinct/13636',\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\n\n\nclass VyboryMosIE(InfoExtractor):\n    _VALID_URL = r'https?://vybory\\.mos\\.ru/(?:#precinct/|account/channels\\?.*?\\bstation_id=)(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://vybory.mos.ru/#precinct/13636',\n        'info_dict': {\n            'id': '13636',\n            'ext': 'mp4',\n            'title': 're:^\u0423\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430\u044f \u0438\u0437\u0431\u0438\u0440\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u21162231 [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'description': '\u0420\u043e\u0441\u0441\u0438\u044f, \u041c\u043e\u0441\u043a\u0432\u0430, \u0443\u043b\u0438\u0446\u0430 \u0412\u0432\u0435\u0434\u0435\u043d\u0441\u043a\u043e\u0433\u043e, 32\u0410',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        }\n    }, {\n        'url': 'http://vybory.mos.ru/account/channels?station_id=13636',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        station_id = self._match_id(url)\n\n        channels = self._download_json(\n            'http://vybory.mos.ru/account/channels?station_id=%s' % station_id,\n            station_id, 'Downloading channels JSON')\n\n        formats = []\n        for cam_num, (sid, hosts, name, _) in enumerate(channels, 1):\n            for num, host in enumerate(hosts, 1):\n                formats.append({\n                    'url': 'http://%s/master.m3u8?sid=%s' % (host, sid),\n                    'ext': 'mp4',\n                    'format_id': 'camera%d-host%d' % (cam_num, num),\n                    'format_note': '%s, %s' % (name, host),\n                })\n\n        info = self._download_json(\n            'http://vybory.mos.ru/json/voting_stations/%s/%s.json'\n            % (compat_str(station_id)[:3], station_id),\n            station_id, 'Downloading station JSON', fatal=False)\n\n        return {\n            'id': station_id,\n            'title': self._live_title(info['name'] if info else station_id),\n            'description': info.get('address'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "vyborymos.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/vyborymos.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    float_or_none,\n    try_get,\n    unified_timestamp,\n)\n\n\nclass CCTVIE(InfoExtractor):\n    IE_DESC = '\u592e\u89c6\u7f51'\n    _VALID_URL = r'https?://(?:(?:[^/]+)\\.(?:cntv|cctv)\\.(?:com|cn)|(?:www\\.)?ncpa-classic\\.com)/(?:[^/]+/)*?(?P<id>[^/?\n    _TESTS = [{\n        \n        'url': 'http://sports.cntv.cn/2016/02/12/ARTIaBRxv4rTT1yWf1frW2wi160212.shtml',\n        'md5': 'd61ec00a493e09da810bf406a078f691',\n        'info_dict': {\n            'id': '5ecdbeab623f4973b40ff25f18b174e8',\n            'ext': 'mp4',\n            'title': '[NBA]\u4e8c\u5c11\u8054\u624b\u780d\u4e0b46\u5206 \u96f7\u9706\u4e3b\u573a\u51fb\u8d25\u9e48\u9e55\uff08\u5feb\u8baf\uff09',\n            'description': 'md5:7e14a5328dc5eb3d1cd6afbbe0574e95',\n            'duration': 98,\n            'uploader': 'songjunjie',\n            'timestamp': 1455279956,\n            'upload_date': '20160212',\n        },\n    }, {\n        \n        'url': 'http://tv.cctv.com/2016/02/05/VIDEUS7apq3lKrHG9Dncm03B160205.shtml',\n        'info_dict': {\n            'id': 'efc5d49e5b3b4ab2b34f3a502b73d3ae',\n            'ext': 'mp4',\n            'title': '[\u8d5b\u8f66]\u201c\u8f66\u738b\u201d\u8212\u9a6c\u8d6b\u6062\u590d\u60c5\u51b5\u6210\u8c1c\uff08\u5feb\u8baf\uff09',\n            'description': '2\u67084\u65e5\uff0c\u8499\u7279\u6cfd\u83ab\u7f57\u900f\u9732\u4e86\u5173\u4e8e\u201c\u8f66\u738b\u201d\u8212\u9a6c\u8d6b\u6062\u590d\u60c5\u51b5\uff0c\u4f46\u60c5\u51b5\u662f\u5426\u5c5e\u5b9e\u906d\u5230\u4e86\u8d28\u7591\u3002',\n            'duration': 37,\n            'uploader': 'shujun',\n            'timestamp': 1454677291,\n            'upload_date': '20160205',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://english.cntv.cn/special/four_comprehensives/index.shtml',\n        'info_dict': {\n            'id': '4bb9bb4db7a6471ba85fdeda5af0381e',\n            'ext': 'mp4',\n            'title': 'NHnews008 ANNUAL POLITICAL SEASON',\n            'description': 'Four Comprehensives',\n            'duration': 60,\n            'uploader': 'zhangyunlei',\n            'timestamp': 1425385521,\n            'upload_date': '20150303',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://cctv.cntv.cn/lm/tvseries_russian/yilugesanghua/index.shtml',\n        'info_dict': {\n            'id': 'b15f009ff45c43968b9af583fc2e04b2',\n            'ext': 'mp4',\n            'title': '\u041f\u0443\u0442\u044c\uff0c\u0443\u0441\u044b\u043f\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0441\u043c\u0435\u044f\u043c\u0438 \u0421\u0435\u0440\u0438\u044f 1',\n            'description': '\u041f\u0443\u0442\u044c, \u0443\u0441\u044b\u043f\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0441\u043c\u0435\u044f\u043c\u0438',\n            'duration': 2645,\n            'uploader': 'renxue',\n            'timestamp': 1477479241,\n            'upload_date': '20161026',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://www.ncpa-classic.com/2013/05/22/VIDE1369219508996867.shtml',\n        'info_dict': {\n            'id': 'a194cfa7f18c426b823d876668325946',\n            'ext': 'mp4',\n            'title': '\u5c0f\u6cfd\u5f81\u5c14\u97f3\u4e50\u587e \u97f3\u4e50\u68a6\u60f3\u65e0\u56fd\u754c',\n            'duration': 2173,\n            'timestamp': 1369248264,\n            'upload_date': '20130522',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://www.ncpa-classic.com/clt/more/416/index.shtml',\n        'info_dict': {\n            'id': 'a8606119a4884588a79d81c02abecc16',\n            'ext': 'mp3',\n            'title': '\u6765\u81ea\u7ef4\u4e5f\u7eb3\u7684\u65b0\u5e74\u8d3a\u793c',\n            'description': 'md5:f13764ae8dd484e84dd4b39d5bcba2a7',\n            'duration': 1578,\n            'uploader': 'djy',\n            'timestamp': 1482942419,\n            'upload_date': '20161228',\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'expected_warnings': ['Failed to download m3u8 information'],\n    }, {\n        'url': 'http://ent.cntv.cn/2016/01/18/ARTIjprSSJH8DryTVr5Bx8Wb160118.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cntv.cn/video/C39296/e0210d949f113ddfb38d31f00a4e5c44',\n        'only_matching': True,\n    }, {\n        'url': 'http://english.cntv.cn/2016/09/03/VIDEhnkB5y9AgHyIEVphCEz1160903.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cctv.com/2016/09/07/VIDE5C1FnlX5bUywlrjhxXOV160907.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cntv.cn/video/C39296/95cfac44cabd3ddc4a9438780a4e5c44',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        video_id = self._search_regex(\n            [r'var\\s+guid\\s*=\\s*[\"\\']([\\da-fA-F]+)',\n             r'videoCenterId[\"\\']\\s*,\\s*[\"\\']([\\da-fA-F]+)',\n             r'changePlayer\\s*\\(\\s*[\"\\']([\\da-fA-F]+)',\n             r'load[Vv]ideo\\s*\\(\\s*[\"\\']([\\da-fA-F]+)',\n             r'var\\s+initMyAray\\s*=\\s*[\"\\']([\\da-fA-F]+)',\n             r'var\\s+ids\\s*=\\s*\\[[\"\\']([\\da-fA-F]+)'],\n            webpage, 'video id')\n\n        data = self._download_json(\n            'http://vdn.apps.cntv.cn/api/getHttpVideoInfo.do', video_id,\n            query={\n                'pid': video_id,\n                'url': url,\n                'idl': 32,\n                'idlr': 32,\n                'modifyed': 'false',\n            })\n\n        title = data['title']\n\n        formats = []\n\n        video = data.get('video')\n        if isinstance(video, dict):\n            for quality, chapters_key in enumerate(('lowChapters', 'chapters')):\n                video_url = try_get(\n                    video, lambda x: x[chapters_key][0]['url'], compat_str)\n                if video_url:\n                    formats.append({\n                        'url': video_url,\n                        'format_id': 'http',\n                        'quality': quality,\n                        'preference': -1,\n                    })\n\n        hls_url = try_get(data, lambda x: x['hls_url'], compat_str)\n        if hls_url:\n            hls_url = re.sub(r'maxbr=\\d+&?', '', hls_url)\n            formats.extend(self._extract_m3u8_formats(\n                hls_url, video_id, 'mp4', entry_protocol='m3u8_native',\n                m3u8_id='hls', fatal=False))\n\n        self._sort_formats(formats)\n\n        uploader = data.get('editer_name')\n        description = self._html_search_meta(\n            'description', webpage, default=None)\n        timestamp = unified_timestamp(data.get('f_pgmtime'))\n        duration = float_or_none(try_get(video, lambda x: x['totalLength']))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'uploader': uploader,\n            'timestamp': timestamp,\n            'duration': duration,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n#&]+?)(?:/index)?(?:\\.s?html|[?#&]|$)'\n# fo.addVariable(\"videoCenterId\",\"id\")\n# var guid = \"id\"\n# changePlayer('id')\n# loadvideo('id')\n# var initMyAray = 'id'\n# var ids = [\"id\"]\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    float_or_none,\n    try_get,\n    unified_timestamp,\n)\n\n\nclass CCTVIE(InfoExtractor):\n    IE_DESC = '\u592e\u89c6\u7f51'\n    _VALID_URL = r'https?://(?:(?:[^/]+)\\.(?:cntv|cctv)\\.(?:com|cn)|(?:www\\.)?ncpa-classic\\.com)/(?:[^/]+/)*?(?P<id>[^/?#&]+?)(?:/index)?(?:\\.s?html|[?#&]|$)'\n    _TESTS = [{\n        # fo.addVariable(\"videoCenterId\",\"id\")\n        'url': 'http://sports.cntv.cn/2016/02/12/ARTIaBRxv4rTT1yWf1frW2wi160212.shtml',\n        'md5': 'd61ec00a493e09da810bf406a078f691',\n        'info_dict': {\n            'id': '5ecdbeab623f4973b40ff25f18b174e8',\n            'ext': 'mp4',\n            'title': '[NBA]\u4e8c\u5c11\u8054\u624b\u780d\u4e0b46\u5206 \u96f7\u9706\u4e3b\u573a\u51fb\u8d25\u9e48\u9e55\uff08\u5feb\u8baf\uff09',\n            'description': 'md5:7e14a5328dc5eb3d1cd6afbbe0574e95',\n            'duration': 98,\n            'uploader': 'songjunjie',\n            'timestamp': 1455279956,\n            'upload_date': '20160212',\n        },\n    }, {\n        # var guid = \"id\"\n        'url': 'http://tv.cctv.com/2016/02/05/VIDEUS7apq3lKrHG9Dncm03B160205.shtml',\n        'info_dict': {\n            'id': 'efc5d49e5b3b4ab2b34f3a502b73d3ae',\n            'ext': 'mp4',\n            'title': '[\u8d5b\u8f66]\u201c\u8f66\u738b\u201d\u8212\u9a6c\u8d6b\u6062\u590d\u60c5\u51b5\u6210\u8c1c\uff08\u5feb\u8baf\uff09',\n            'description': '2\u67084\u65e5\uff0c\u8499\u7279\u6cfd\u83ab\u7f57\u900f\u9732\u4e86\u5173\u4e8e\u201c\u8f66\u738b\u201d\u8212\u9a6c\u8d6b\u6062\u590d\u60c5\u51b5\uff0c\u4f46\u60c5\u51b5\u662f\u5426\u5c5e\u5b9e\u906d\u5230\u4e86\u8d28\u7591\u3002',\n            'duration': 37,\n            'uploader': 'shujun',\n            'timestamp': 1454677291,\n            'upload_date': '20160205',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # changePlayer('id')\n        'url': 'http://english.cntv.cn/special/four_comprehensives/index.shtml',\n        'info_dict': {\n            'id': '4bb9bb4db7a6471ba85fdeda5af0381e',\n            'ext': 'mp4',\n            'title': 'NHnews008 ANNUAL POLITICAL SEASON',\n            'description': 'Four Comprehensives',\n            'duration': 60,\n            'uploader': 'zhangyunlei',\n            'timestamp': 1425385521,\n            'upload_date': '20150303',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # loadvideo('id')\n        'url': 'http://cctv.cntv.cn/lm/tvseries_russian/yilugesanghua/index.shtml',\n        'info_dict': {\n            'id': 'b15f009ff45c43968b9af583fc2e04b2',\n            'ext': 'mp4',\n            'title': '\u041f\u0443\u0442\u044c\uff0c\u0443\u0441\u044b\u043f\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0441\u043c\u0435\u044f\u043c\u0438 \u0421\u0435\u0440\u0438\u044f 1',\n            'description': '\u041f\u0443\u0442\u044c, \u0443\u0441\u044b\u043f\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0441\u043c\u0435\u044f\u043c\u0438',\n            'duration': 2645,\n            'uploader': 'renxue',\n            'timestamp': 1477479241,\n            'upload_date': '20161026',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # var initMyAray = 'id'\n        'url': 'http://www.ncpa-classic.com/2013/05/22/VIDE1369219508996867.shtml',\n        'info_dict': {\n            'id': 'a194cfa7f18c426b823d876668325946',\n            'ext': 'mp4',\n            'title': '\u5c0f\u6cfd\u5f81\u5c14\u97f3\u4e50\u587e \u97f3\u4e50\u68a6\u60f3\u65e0\u56fd\u754c',\n            'duration': 2173,\n            'timestamp': 1369248264,\n            'upload_date': '20130522',\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # var ids = [\"id\"]\n        'url': 'http://www.ncpa-classic.com/clt/more/416/index.shtml',\n        'info_dict': {\n            'id': 'a8606119a4884588a79d81c02abecc16',\n            'ext': 'mp3',\n            'title': '\u6765\u81ea\u7ef4\u4e5f\u7eb3\u7684\u65b0\u5e74\u8d3a\u793c',\n            'description': 'md5:f13764ae8dd484e84dd4b39d5bcba2a7',\n            'duration': 1578,\n            'uploader': 'djy',\n            'timestamp': 1482942419,\n            'upload_date': '20161228',\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'expected_warnings': ['Failed to download m3u8 information'],\n    }, {\n        'url': 'http://ent.cntv.cn/2016/01/18/ARTIjprSSJH8DryTVr5Bx8Wb160118.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cntv.cn/video/C39296/e0210d949f113ddfb38d31f00a4e5c44',\n        'only_matching': True,\n    }, {\n        'url': 'http://english.cntv.cn/2016/09/03/VIDEhnkB5y9AgHyIEVphCEz1160903.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cctv.com/2016/09/07/VIDE5C1FnlX5bUywlrjhxXOV160907.shtml',\n        'only_matching': True,\n    }, {\n        'url': 'http://tv.cntv.cn/video/C39296/95cfac44cabd3ddc4a9438780a4e5c44',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        video_id = self._search_regex(\n            [r'var\\s+guid\\s*=\\s*[\"\\']([\\da-fA-F]+)',\n             r'videoCenterId[\"\\']\\s*,\\s*[\"\\']([\\da-fA-F]+)',\n             r'changePlayer\\s*\\(\\s*[\"\\']([\\da-fA-F]+)',\n             r'load[Vv]ideo\\s*\\(\\s*[\"\\']([\\da-fA-F]+)',\n             r'var\\s+initMyAray\\s*=\\s*[\"\\']([\\da-fA-F]+)',\n             r'var\\s+ids\\s*=\\s*\\[[\"\\']([\\da-fA-F]+)'],\n            webpage, 'video id')\n\n        data = self._download_json(\n            'http://vdn.apps.cntv.cn/api/getHttpVideoInfo.do', video_id,\n            query={\n                'pid': video_id,\n                'url': url,\n                'idl': 32,\n                'idlr': 32,\n                'modifyed': 'false',\n            })\n\n        title = data['title']\n\n        formats = []\n\n        video = data.get('video')\n        if isinstance(video, dict):\n            for quality, chapters_key in enumerate(('lowChapters', 'chapters')):\n                video_url = try_get(\n                    video, lambda x: x[chapters_key][0]['url'], compat_str)\n                if video_url:\n                    formats.append({\n                        'url': video_url,\n                        'format_id': 'http',\n                        'quality': quality,\n                        'preference': -1,\n                    })\n\n        hls_url = try_get(data, lambda x: x['hls_url'], compat_str)\n        if hls_url:\n            hls_url = re.sub(r'maxbr=\\d+&?', '', hls_url)\n            formats.extend(self._extract_m3u8_formats(\n                hls_url, video_id, 'mp4', entry_protocol='m3u8_native',\n                m3u8_id='hls', fatal=False))\n\n        self._sort_formats(formats)\n\n        uploader = data.get('editer_name')\n        description = self._html_search_meta(\n            'description', webpage, default=None)\n        timestamp = unified_timestamp(data.get('f_pgmtime'))\n        duration = float_or_none(try_get(video, lambda x: x['totalLength']))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'uploader': uploader,\n            'timestamp': timestamp,\n            'duration': duration,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "cctv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/cctv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    extract_attributes,\n    int_or_none,\n)\n\n\nclass FranceCultureIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?franceculture\\.fr/emissions/(?:[^/]+/)*(?P<id>[^/?\n    _TEST = {\n        'url': 'http://www.franceculture.fr/emissions/carnet-nomade/rendez-vous-au-pays-des-geeks',\n        'info_dict': {\n            'id': 'rendez-vous-au-pays-des-geeks',\n            'display_id': 'rendez-vous-au-pays-des-geeks',\n            'ext': 'mp3',\n            'title': 'Rendez-vous au pays des geeks',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20140301',\n            'timestamp': 1393642916,\n            'vcodec': 'none',\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        video_data = extract_attributes(self._search_regex(\n            r'(?s)<div[^>]+class=\"[^\"]*?(?:title-zone-diffusion|heading-zone-(?:wrapper|player-button))[^\"]*?\"[^>]*>.*?(<button[^>]+data-asset-source=\"[^\"]+\"[^>]+>)',\n            webpage, 'video data'))\n\n        video_url = video_data['data-asset-source']\n        title = video_data.get('data-asset-title') or self._og_search_title(webpage)\n\n        description = self._html_search_regex(\n            r'(?s)<div[^>]+class=\"intro\"[^>]*>.*?<h2>(.+?)</h2>',\n            webpage, 'description', default=None)\n        thumbnail = self._search_regex(\n            r'(?s)<figure[^>]+itemtype=\"https://schema.org/ImageObject\"[^>]*>.*?<img[^>]+(?:data-dejavu-)?src=\"([^\"]+)\"',\n            webpage, 'thumbnail', fatal=False)\n        uploader = self._html_search_regex(\n            r'(?s)<span class=\"author\">(.*?)</span>',\n            webpage, 'uploader', default=None)\n        ext = determine_ext(video_url.lower())\n\n        return {\n            'id': display_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'ext': ext,\n            'vcodec': 'none' if ext == 'mp3' else None,\n            'uploader': uploader,\n            'timestamp': int_or_none(video_data.get('data-asset-created-date')),\n            'duration': int_or_none(video_data.get('data-duration')),\n        }\n", "comments": "# coding: utf-8\n#&]+)'\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    determine_ext,\n    extract_attributes,\n    int_or_none,\n)\n\n\nclass FranceCultureIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?franceculture\\.fr/emissions/(?:[^/]+/)*(?P<id>[^/?#&]+)'\n    _TEST = {\n        'url': 'http://www.franceculture.fr/emissions/carnet-nomade/rendez-vous-au-pays-des-geeks',\n        'info_dict': {\n            'id': 'rendez-vous-au-pays-des-geeks',\n            'display_id': 'rendez-vous-au-pays-des-geeks',\n            'ext': 'mp3',\n            'title': 'Rendez-vous au pays des geeks',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'upload_date': '20140301',\n            'timestamp': 1393642916,\n            'vcodec': 'none',\n        }\n    }\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        video_data = extract_attributes(self._search_regex(\n            r'(?s)<div[^>]+class=\"[^\"]*?(?:title-zone-diffusion|heading-zone-(?:wrapper|player-button))[^\"]*?\"[^>]*>.*?(<button[^>]+data-asset-source=\"[^\"]+\"[^>]+>)',\n            webpage, 'video data'))\n\n        video_url = video_data['data-asset-source']\n        title = video_data.get('data-asset-title') or self._og_search_title(webpage)\n\n        description = self._html_search_regex(\n            r'(?s)<div[^>]+class=\"intro\"[^>]*>.*?<h2>(.+?)</h2>',\n            webpage, 'description', default=None)\n        thumbnail = self._search_regex(\n            r'(?s)<figure[^>]+itemtype=\"https://schema.org/ImageObject\"[^>]*>.*?<img[^>]+(?:data-dejavu-)?src=\"([^\"]+)\"',\n            webpage, 'thumbnail', fatal=False)\n        uploader = self._html_search_regex(\n            r'(?s)<span class=\"author\">(.*?)</span>',\n            webpage, 'uploader', default=None)\n        ext = determine_ext(video_url.lower())\n\n        return {\n            'id': display_id,\n            'display_id': display_id,\n            'url': video_url,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'ext': ext,\n            'vcodec': 'none' if ext == 'mp3' else None,\n            'uploader': uploader,\n            'timestamp': int_or_none(video_data.get('data-asset-created-date')),\n            'duration': int_or_none(video_data.get('data-duration')),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "franceculture.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/franceculture.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
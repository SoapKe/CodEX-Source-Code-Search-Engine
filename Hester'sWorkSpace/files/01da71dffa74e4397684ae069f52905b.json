{"author": "pyeve", "code": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    Auth-Token\n    ~~~~~~~~~~\n\n    Securing an Eve-powered API with Token based Authentication.\n\n    Token based authentication can be considered a specialized version of Basic\n    Authentication. The Authorization header tag will contain the auth token.\n\n    This script assumes that user accounts are stored in a MongoDB collection\n    ('accounts'). All API resources/methods will be secured unless they are\n    made explicitly public (by fiddling with some settings you can open one or\n    more resources and/or methods to public access -see docs).\n\n    Checkout Eve at https://github.com/pyeve/eve\n\n    This snippet by Nicola Iarocci can be used freely for anything you like.\n    Consider it public domain.\n\"\"\"\n\nfrom eve import Eve\nfrom eve.auth import TokenAuth\n\nfrom settings_security import SETTINGS\n\n\nclass TokenAuth(TokenAuth):\n    def check_auth(self, token, allowed_roles, resource, method):\n        \"\"\"For the purpose of this example the implementation is as simple as\n        possible. A 'real' token should probably contain a hash of the\n        username/password combo, which should be then validated against the \n        account data stored on the DB.\n        \"\"\"\n        \n        accounts = app.data.driver.db['accounts']\n        return accounts.find_one({'token': token})\n\n\nif __name__ == '__main__':\n    app = Eve(auth=TokenAuth, settings=SETTINGS)\n    app.run()\n", "comments": "        auth token                     securing eve powered api token based authentication       token based authentication considered specialized version basic     authentication  the authorization header tag contain auth token       this script assumes user accounts stored mongodb collection     ( accounts )  all api resources methods secured unless     made explicitly public (by fiddling settings open one     resources methods public access  see docs)       checkout eve https   github com pyeve eve      this snippet nicola iarocci used freely anything like      consider public domain       eve import eve eve auth import tokenauth  settings security import settings   class tokenauth(tokenauth)      def check auth(self  token  allowed roles  resource  method)             for purpose example implementation simple         possible  a  real  token probably contain hash         username password combo  validated          account data stored db                     coding  utf 8        use eve db driver  additional connections resources used ", "content": "# -*- coding: utf-8 -*-\n\n\"\"\"\n    Auth-Token\n    ~~~~~~~~~~\n\n    Securing an Eve-powered API with Token based Authentication.\n\n    Token based authentication can be considered a specialized version of Basic\n    Authentication. The Authorization header tag will contain the auth token.\n\n    This script assumes that user accounts are stored in a MongoDB collection\n    ('accounts'). All API resources/methods will be secured unless they are\n    made explicitly public (by fiddling with some settings you can open one or\n    more resources and/or methods to public access -see docs).\n\n    Checkout Eve at https://github.com/pyeve/eve\n\n    This snippet by Nicola Iarocci can be used freely for anything you like.\n    Consider it public domain.\n\"\"\"\n\nfrom eve import Eve\nfrom eve.auth import TokenAuth\n\nfrom settings_security import SETTINGS\n\n\nclass TokenAuth(TokenAuth):\n    def check_auth(self, token, allowed_roles, resource, method):\n        \"\"\"For the purpose of this example the implementation is as simple as\n        possible. A 'real' token should probably contain a hash of the\n        username/password combo, which should be then validated against the \n        account data stored on the DB.\n        \"\"\"\n        # use Eve's own db driver; no additional connections/resources are used\n        accounts = app.data.driver.db['accounts']\n        return accounts.find_one({'token': token})\n\n\nif __name__ == '__main__':\n    app = Eve(auth=TokenAuth, settings=SETTINGS)\n    app.run()\n", "description": "REST API framework designed for human beings", "file_name": "token.py", "id": "01da71dffa74e4397684ae069f52905b", "language": "Python", "project_name": "eve", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pyeve-eve/pyeve-eve-53e4bb9/examples/security/token.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:55:13Z", "url": "https://github.com/pyeve/eve", "wiki": false}
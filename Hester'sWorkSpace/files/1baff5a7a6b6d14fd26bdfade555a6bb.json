{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    extract_attributes,\n    smuggle_url,\n    strip_or_none,\n    urljoin,\n)\n\n\nclass SkySportsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?skysports\\.com/watch/video/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.skysports.com/watch/video/10328419/bale-its-our-time-to-shine',\n        'md5': '77d59166cddc8d3cb7b13e35eaf0f5ec',\n        'info_dict': {\n            'id': '10328419',\n            'ext': 'mp4',\n            'title': 'Bale: It\\'s our time to shine',\n            'description': 'md5:e88bda94ae15f7720c5cb467e777bb6d',\n        },\n        'add_ie': ['Ooyala'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        video_data = extract_attributes(self._search_regex(\n            r'(<div.+?class=\"sdc-article-video__media-ooyala\"[^>]+>)', webpage, 'video data'))\n\n        video_url = 'ooyala:%s' % video_data['data-video-id']\n        if video_data.get('data-token-required') == 'true':\n            token_fetch_options = self._parse_json(video_data.get('data-token-fetch-options', '{}'), video_id, fatal=False) or {}\n            token_fetch_url = token_fetch_options.get('url')\n            if token_fetch_url:\n                embed_token = self._download_webpage(urljoin(url, token_fetch_url), video_id, fatal=False)\n                if embed_token:\n                    video_url = smuggle_url(video_url, {'embed_token': embed_token.strip('\"')})\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': video_url,\n            'title': self._og_search_title(webpage),\n            'description': strip_or_none(self._og_search_description(webpage)),\n            'ie_key': 'Ooyala',\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    extract_attributes,\n    smuggle_url,\n    strip_or_none,\n    urljoin,\n)\n\n\nclass SkySportsIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?skysports\\.com/watch/video/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://www.skysports.com/watch/video/10328419/bale-its-our-time-to-shine',\n        'md5': '77d59166cddc8d3cb7b13e35eaf0f5ec',\n        'info_dict': {\n            'id': '10328419',\n            'ext': 'mp4',\n            'title': 'Bale: It\\'s our time to shine',\n            'description': 'md5:e88bda94ae15f7720c5cb467e777bb6d',\n        },\n        'add_ie': ['Ooyala'],\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        video_data = extract_attributes(self._search_regex(\n            r'(<div.+?class=\"sdc-article-video__media-ooyala\"[^>]+>)', webpage, 'video data'))\n\n        video_url = 'ooyala:%s' % video_data['data-video-id']\n        if video_data.get('data-token-required') == 'true':\n            token_fetch_options = self._parse_json(video_data.get('data-token-fetch-options', '{}'), video_id, fatal=False) or {}\n            token_fetch_url = token_fetch_options.get('url')\n            if token_fetch_url:\n                embed_token = self._download_webpage(urljoin(url, token_fetch_url), video_id, fatal=False)\n                if embed_token:\n                    video_url = smuggle_url(video_url, {'embed_token': embed_token.strip('\"')})\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'url': video_url,\n            'title': self._og_search_title(webpage),\n            'description': strip_or_none(self._og_search_description(webpage)),\n            'ie_key': 'Ooyala',\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "skysports.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/skysports.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass GodTubeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?godtube\\.com/watch/\\?v=(?P<id>[\\da-zA-Z]+)'\n    _TESTS = [\n        {\n            'url': 'https://www.godtube.com/watch/?v=0C0CNNNU',\n            'md5': '77108c1e4ab58f48031101a1a2119789',\n            'info_dict': {\n                'id': '0C0CNNNU',\n                'ext': 'mp4',\n                'title': 'Woman at the well.',\n                'duration': 159,\n                'timestamp': 1205712000,\n                'uploader': 'beverlybmusic',\n                'upload_date': '20080317',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n            },\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        config = self._download_xml(\n            'http://www.godtube.com/resource/mediaplayer/%s.xml' % video_id.lower(),\n            video_id, 'Downloading player config XML')\n\n        video_url = config.find('file').text\n        uploader = config.find('author').text\n        timestamp = parse_iso8601(config.find('date').text)\n        duration = parse_duration(config.find('duration').text)\n        thumbnail = config.find('image').text\n\n        media = self._download_xml(\n            'http://www.godtube.com/media/xml/?v=%s' % video_id, video_id, 'Downloading media XML')\n\n        title = media.find('title').text\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'uploader': uploader,\n            'duration': duration,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    parse_duration,\n    parse_iso8601,\n)\n\n\nclass GodTubeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?godtube\\.com/watch/\\?v=(?P<id>[\\da-zA-Z]+)'\n    _TESTS = [\n        {\n            'url': 'https://www.godtube.com/watch/?v=0C0CNNNU',\n            'md5': '77108c1e4ab58f48031101a1a2119789',\n            'info_dict': {\n                'id': '0C0CNNNU',\n                'ext': 'mp4',\n                'title': 'Woman at the well.',\n                'duration': 159,\n                'timestamp': 1205712000,\n                'uploader': 'beverlybmusic',\n                'upload_date': '20080317',\n                'thumbnail': r're:^https?://.*\\.jpg$',\n            },\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        config = self._download_xml(\n            'http://www.godtube.com/resource/mediaplayer/%s.xml' % video_id.lower(),\n            video_id, 'Downloading player config XML')\n\n        video_url = config.find('file').text\n        uploader = config.find('author').text\n        timestamp = parse_iso8601(config.find('date').text)\n        duration = parse_duration(config.find('duration').text)\n        thumbnail = config.find('image').text\n\n        media = self._download_xml(\n            'http://www.godtube.com/media/xml/?v=%s' % video_id, video_id, 'Downloading media XML')\n\n        title = media.find('title').text\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'timestamp': timestamp,\n            'uploader': uploader,\n            'duration': duration,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "godtube.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/godtube.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
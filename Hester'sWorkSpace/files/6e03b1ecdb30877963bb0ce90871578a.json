{"author": "keon", "code": "\"\"\"\nGiven string a and b, with b containing all distinct characters,\nfind the longest common subsequence's\n\nlength. Expected complexity O(nlogn).\n\"\"\"\n\n\ndef max_common_sub_string(s1, s2):\n    \n    s2dic = {s2[i]: i for i in xrange(len(s2))}\n    maxr = 0\n    subs = ''\n    i = 0\n    while i < len(s1):\n        if s1[i] in s2dic:\n            j = s2dic[s1[i]]\n            k = i\n            while j < len(s2) and k < len(s1) and s1[k] == s2[j]:\n                k += 1\n                j += 1\n            if k - i > maxr:\n                maxr = k-i\n                subs = s1[i:k]\n            i = k\n        else:\n            i += 1\n    return subs\n", "comments": "    given string b  b containing distinct characters  find longest common subsequence  length  expected complexity o(nlogn)         assuming s2 unique chars ", "content": "\"\"\"\nGiven string a and b, with b containing all distinct characters,\nfind the longest common subsequence's\n\nlength. Expected complexity O(nlogn).\n\"\"\"\n\n\ndef max_common_sub_string(s1, s2):\n    # Assuming s2 has all unique chars\n    s2dic = {s2[i]: i for i in xrange(len(s2))}\n    maxr = 0\n    subs = ''\n    i = 0\n    while i < len(s1):\n        if s1[i] in s2dic:\n            j = s2dic[s1[i]]\n            k = i\n            while j < len(s2) and k < len(s1) and s1[k] == s2[j]:\n                k += 1\n                j += 1\n            if k - i > maxr:\n                maxr = k-i\n                subs = s1[i:k]\n            i = k\n        else:\n            i += 1\n    return subs\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "longest_common_subsequence.py", "id": "6e03b1ecdb30877963bb0ce90871578a", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/keon-algorithms/keon-algorithms-ea43887/map/longest_common_subsequence.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:53:29Z", "url": "https://github.com/keon/algorithms", "wiki": true}
{"author": "tgalal", "code": "from yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\n\n\n\nclass SetPrivacyIqProtocolEntity(IqProtocolEntity):\n    NAMES = [\"status\", \"profile\", \"last\"]\n    VALUES = [\"all\", \"contacts\", \"none\"]\n    XMLNS = \"privacy\"\n\n    def __init__(self, value=\"all\", names = None):\n        \n        \n        super(SetPrivacyIqProtocolEntity, self).__init__(self.__class__.XMLNS, _type=\"set\")\n        self.setNames(names)\n        self.setValue(value)\n\n    @staticmethod\n    def checkValidNames(names):\n        names = names if names else SetPrivacyIqProtocolEntity.NAMES\n        if not type(names) is list:\n            names = [names]\n\n        for name in names:\n            if not name in SetPrivacyIqProtocolEntity.NAMES:\n                raise Exception(\"Name should be in: '\" + \"', '\".join(SetPrivacyIqProtocolEntity.NAMES) + \"' but is '\" + name + \"'\")\n        return names\n\n    @staticmethod\n    def checkValidValue(value):\n        if not value in SetPrivacyIqProtocolEntity.VALUES:\n            raise Exception(\"Value should be in: '\" + \"', '\".join(SetPrivacyIqProtocolEntity.VALUES) + \"' but is '\" + value + \"'\")\n        return value\n\n    def setNames(self, names):\n        self.names = SetPrivacyIqProtocolEntity.checkValidNames(names)\n\n    def setValue(self, value):\n        self.value = SetPrivacyIqProtocolEntity.checkValidValue(value)\n\n    def toProtocolTreeNode(self):\n        node = super(SetPrivacyIqProtocolEntity, self).toProtocolTreeNode()\n        queryNode = ProtocolTreeNode(self.__class__.XMLNS)\n        for name in self.names:\n            listNode = ProtocolTreeNode(\"category\", {\"name\": name, \"value\": self.value})\n            queryNode.addChild(listNode)\n        node.addChild(queryNode)\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = IqProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = SetPrivacyIqProtocolEntity\n        privacyNode = node.getChild(SetPrivacyIqProtocolEntity.XMLNS)\n        names = [] \n        for categoryNode in privacyNode.getAllChildren():\n            names.append(categoryNode[\"name\"])\n        entity.setNames(names)\n        entity.setValue(\"all\")\n        return entity\n", "comments": "     iq xmlns  privacy  type  set  id    iq id      privacy   category name  status  value  none    category name  profile  value  none    category name  last  value  none     category    privacy    iq         names string element values array strings elements values    default  names used ", "content": "from yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\n\n'''\n<iq xmlns=\"privacy\" type=\"set\" id=\"{{IQ_ID}}\">\n<privacy>\n<category name=\"status\" value=\"none\">\n<category name=\"profile\" value=\"none\">\n<category name=\"last\" value=\"none\">\n</category>\n</privacy>\n</iq>\n'''\n\nclass SetPrivacyIqProtocolEntity(IqProtocolEntity):\n    NAMES = [\"status\", \"profile\", \"last\"]\n    VALUES = [\"all\", \"contacts\", \"none\"]\n    XMLNS = \"privacy\"\n\n    def __init__(self, value=\"all\", names = None):\n        # names can be a string with some element in VALUES or an array with strings with elements in VALUES\n        # by default, all names are used\n        super(SetPrivacyIqProtocolEntity, self).__init__(self.__class__.XMLNS, _type=\"set\")\n        self.setNames(names)\n        self.setValue(value)\n\n    @staticmethod\n    def checkValidNames(names):\n        names = names if names else SetPrivacyIqProtocolEntity.NAMES\n        if not type(names) is list:\n            names = [names]\n\n        for name in names:\n            if not name in SetPrivacyIqProtocolEntity.NAMES:\n                raise Exception(\"Name should be in: '\" + \"', '\".join(SetPrivacyIqProtocolEntity.NAMES) + \"' but is '\" + name + \"'\")\n        return names\n\n    @staticmethod\n    def checkValidValue(value):\n        if not value in SetPrivacyIqProtocolEntity.VALUES:\n            raise Exception(\"Value should be in: '\" + \"', '\".join(SetPrivacyIqProtocolEntity.VALUES) + \"' but is '\" + value + \"'\")\n        return value\n\n    def setNames(self, names):\n        self.names = SetPrivacyIqProtocolEntity.checkValidNames(names)\n\n    def setValue(self, value):\n        self.value = SetPrivacyIqProtocolEntity.checkValidValue(value)\n\n    def toProtocolTreeNode(self):\n        node = super(SetPrivacyIqProtocolEntity, self).toProtocolTreeNode()\n        queryNode = ProtocolTreeNode(self.__class__.XMLNS)\n        for name in self.names:\n            listNode = ProtocolTreeNode(\"category\", {\"name\": name, \"value\": self.value})\n            queryNode.addChild(listNode)\n        node.addChild(queryNode)\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = IqProtocolEntity.fromProtocolTreeNode(node)\n        entity.__class__ = SetPrivacyIqProtocolEntity\n        privacyNode = node.getChild(SetPrivacyIqProtocolEntity.XMLNS)\n        names = [] \n        for categoryNode in privacyNode.getAllChildren():\n            names.append(categoryNode[\"name\"])\n        entity.setNames(names)\n        entity.setValue(\"all\")\n        return entity\n", "description": "The python WhatsApp library", "file_name": "iq_privacy_set.py", "id": "260a2afef9e4881481e5723ac310413a", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_profiles/protocolentities/iq_privacy_set.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo.http import route, request\nfrom odoo.addons.mass_mailing.controllers.main import MassMailController\n\n\nclass MassMailController(MassMailController):\n\n    @route('/mail/mailing/<int:mailing_id>/unsubscribe', type='http', website=True, auth='public')\n    def mailing(self, mailing_id, email=None, res_id=None, **post):\n        mailing = request.env['mail.mass_mailing'].sudo().browse(mailing_id)\n        if mailing.exists():\n            if mailing.mailing_model_name == 'mail.mass_mailing.contact':\n                contacts = request.env['mail.mass_mailing.contact'].sudo().search([('email', '=', email)])\n                return request.render('website_mass_mailing.page_unsubscribe', {\n                    'contacts': contacts,\n                    'email': email,\n                    'mailing_id': mailing_id})\n            else:\n                super(MassMailController, self).mailing(mailing_id, email=email, res_id=res_id, **post)\n                return request.render('website_mass_mailing.page_unsubscribed')\n\n    @route('/mail/mailing/unsubscribe', type='json', auth='none')\n    def unsubscribe(self, mailing_id, opt_in_ids, opt_out_ids, email):\n        mailing = request.env['mail.mass_mailing'].sudo().browse(mailing_id)\n        if mailing.exists():\n            mailing.update_opt_out(email, opt_in_ids, False)\n            mailing.update_opt_out(email, opt_out_ids, True)\n\n    @route('/website_mass_mailing/is_subscriber', type='json', website=True, auth=\"public\")\n    def is_subscriber(self, list_id, **post):\n        email = None\n        if request.uid != request.website.user_id.id:\n            email = request.env.user.email\n        elif request.session.get('mass_mailing_email'):\n            email = request.session['mass_mailing_email']\n\n        is_subscriber = False\n        if email:\n            contacts_count = request.env['mail.mass_mailing.contact'].sudo().search_count([('list_ids', 'in', [int(list_id)]), ('email', '=', email), ('opt_out', '=', False)])\n            is_subscriber = contacts_count > 0\n\n        return {'is_subscriber': is_subscriber, 'email': email}\n\n    @route('/website_mass_mailing/subscribe', type='json', website=True, auth=\"public\")\n    def subscribe(self, list_id, email, **post):\n        Contacts = request.env['mail.mass_mailing.contact'].sudo()\n        name, email = Contacts.get_name_email(email)\n\n        contact_ids = Contacts.search([\n            ('list_ids', 'in', [int(list_id)]),\n            ('email', '=', email),\n        ], limit=1)\n        if not contact_ids:\n            \n            Contacts.create({'name': name, 'email': email, 'list_ids': [(6,0,[int(list_id)])]})\n        elif contact_ids.opt_out:\n            contact_ids.opt_out = False\n        \n        request.session['mass_mailing_email'] = email\n        return True\n\n    @route(['/website_mass_mailing/get_content'], type='json', website=True, auth=\"public\")\n    def get_mass_mailing_content(self, newsletter_id, **post):\n        data = self.is_subscriber(newsletter_id, **post)\n        mass_mailing_list = request.env['mail.mass_mailing.list'].sudo().browse(int(newsletter_id))\n        data['content'] = mass_mailing_list.popup_content,\n        data['redirect_url'] = mass_mailing_list.popup_redirect_url\n        return data\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     inline add list already called half    add email session ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo.http import route, request\nfrom odoo.addons.mass_mailing.controllers.main import MassMailController\n\n\nclass MassMailController(MassMailController):\n\n    @route('/mail/mailing/<int:mailing_id>/unsubscribe', type='http', website=True, auth='public')\n    def mailing(self, mailing_id, email=None, res_id=None, **post):\n        mailing = request.env['mail.mass_mailing'].sudo().browse(mailing_id)\n        if mailing.exists():\n            if mailing.mailing_model_name == 'mail.mass_mailing.contact':\n                contacts = request.env['mail.mass_mailing.contact'].sudo().search([('email', '=', email)])\n                return request.render('website_mass_mailing.page_unsubscribe', {\n                    'contacts': contacts,\n                    'email': email,\n                    'mailing_id': mailing_id})\n            else:\n                super(MassMailController, self).mailing(mailing_id, email=email, res_id=res_id, **post)\n                return request.render('website_mass_mailing.page_unsubscribed')\n\n    @route('/mail/mailing/unsubscribe', type='json', auth='none')\n    def unsubscribe(self, mailing_id, opt_in_ids, opt_out_ids, email):\n        mailing = request.env['mail.mass_mailing'].sudo().browse(mailing_id)\n        if mailing.exists():\n            mailing.update_opt_out(email, opt_in_ids, False)\n            mailing.update_opt_out(email, opt_out_ids, True)\n\n    @route('/website_mass_mailing/is_subscriber', type='json', website=True, auth=\"public\")\n    def is_subscriber(self, list_id, **post):\n        email = None\n        if request.uid != request.website.user_id.id:\n            email = request.env.user.email\n        elif request.session.get('mass_mailing_email'):\n            email = request.session['mass_mailing_email']\n\n        is_subscriber = False\n        if email:\n            contacts_count = request.env['mail.mass_mailing.contact'].sudo().search_count([('list_ids', 'in', [int(list_id)]), ('email', '=', email), ('opt_out', '=', False)])\n            is_subscriber = contacts_count > 0\n\n        return {'is_subscriber': is_subscriber, 'email': email}\n\n    @route('/website_mass_mailing/subscribe', type='json', website=True, auth=\"public\")\n    def subscribe(self, list_id, email, **post):\n        Contacts = request.env['mail.mass_mailing.contact'].sudo()\n        name, email = Contacts.get_name_email(email)\n\n        contact_ids = Contacts.search([\n            ('list_ids', 'in', [int(list_id)]),\n            ('email', '=', email),\n        ], limit=1)\n        if not contact_ids:\n            # inline add_to_list as we've already called half of it\n            Contacts.create({'name': name, 'email': email, 'list_ids': [(6,0,[int(list_id)])]})\n        elif contact_ids.opt_out:\n            contact_ids.opt_out = False\n        # add email to session\n        request.session['mass_mailing_email'] = email\n        return True\n\n    @route(['/website_mass_mailing/get_content'], type='json', website=True, auth=\"public\")\n    def get_mass_mailing_content(self, newsletter_id, **post):\n        data = self.is_subscriber(newsletter_id, **post)\n        mass_mailing_list = request.env['mail.mass_mailing.list'].sudo().browse(int(newsletter_id))\n        data['content'] = mass_mailing_list.popup_content,\n        data['redirect_url'] = mass_mailing_list.popup_redirect_url\n        return data\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "59447e66b11ad5a751aab97ab0da6270", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_mass_mailing/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_vrf\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage VRFs on network devices\ndescription:\n  - This module provides declarative management of VRFs\n    on network devices.\noptions:\n  name:\n    description:\n      - Name of the VRF.\n  interfaces:\n    description:\n      - List of interfaces the VRF should be configured on.\n  aggregate:\n    description: List of VRFs definitions\n  purge:\n    description:\n      - Purge VRFs not defined in the I(aggregate) parameter.\n    default: no\n  state:\n    description:\n      - State of the VRF configuration.\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Create VRF named MANAGEMENT\n  net_vrf:\n    name: MANAGEMENT\n\n- name: remove VRF named MANAGEMENT\n  net_vrf:\n    name: MANAGEMENT\n    state: absent\n\n- name: Create aggregate of VRFs with purge\n  net_vrf:\n    aggregate:\n      - { name: test4, rd: \"1:204\" }\n      - { name: test5, rd: \"1:205\" }\n    state: present\n    purge: yes\n\n- name: Delete aggregate of VRFs\n  net_vrf:\n    aggregate:\n      - name: test2\n      - name: test3\n      - name: test4\n      - name: test5\n    state: absent\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - vrf definition MANAGEMENT\n\"\"\"\n", "comments": "        module  net vrf version added   2 4  author   ricardo carrillo cruz ( rcarrillocruz)  short description  manage vrfs network devices description      this module provides declarative management vrfs     network devices  options    name      description          name vrf    interfaces      description          list interfaces vrf configured    aggregate      description  list vrfs definitions   purge      description          purge vrfs defined i(aggregate) parameter      default    state      description          state vrf configuration      default  present     choices    present    absent        examples         name  create vrf named management   net vrf      name  management    name  remove vrf named management   net vrf      name  management     state  absent    name  create aggregate vrfs purge   net vrf      aggregate            name  test4  rd   1 204              name  test5  rd   1 205        state  present     purge  yes    name  delete aggregate vrfs   net vrf      aggregate          name  test2         name  test3         name  test4         name  test5     state  absent      return       commands    description  the list configuration mode commands send device   returned  always  except platforms use netconf transport manage device    type  list   sample        vrf definition management         usr bin python        coding  utf 8        (c) 2017  ansible red hat  inc    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Ansible by Red Hat, inc\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = \"\"\"\n---\nmodule: net_vrf\nversion_added: \"2.4\"\nauthor: \"Ricardo Carrillo Cruz (@rcarrillocruz)\"\nshort_description: Manage VRFs on network devices\ndescription:\n  - This module provides declarative management of VRFs\n    on network devices.\noptions:\n  name:\n    description:\n      - Name of the VRF.\n  interfaces:\n    description:\n      - List of interfaces the VRF should be configured on.\n  aggregate:\n    description: List of VRFs definitions\n  purge:\n    description:\n      - Purge VRFs not defined in the I(aggregate) parameter.\n    default: no\n  state:\n    description:\n      - State of the VRF configuration.\n    default: present\n    choices: ['present', 'absent']\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Create VRF named MANAGEMENT\n  net_vrf:\n    name: MANAGEMENT\n\n- name: remove VRF named MANAGEMENT\n  net_vrf:\n    name: MANAGEMENT\n    state: absent\n\n- name: Create aggregate of VRFs with purge\n  net_vrf:\n    aggregate:\n      - { name: test4, rd: \"1:204\" }\n      - { name: test5, rd: \"1:205\" }\n    state: present\n    purge: yes\n\n- name: Delete aggregate of VRFs\n  net_vrf:\n    aggregate:\n      - name: test2\n      - name: test3\n      - name: test4\n      - name: test5\n    state: absent\n\"\"\"\n\nRETURN = \"\"\"\ncommands:\n  description: The list of configuration mode commands to send to the device\n  returned: always, except for the platforms that use Netconf transport to manage the device.\n  type: list\n  sample:\n    - vrf definition MANAGEMENT\n\"\"\"\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "net_vrf.py", "id": "58629d3b2100930a23ca3cb64e4cccbf", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/layer3/net_vrf.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
{"author": "tornadoweb", "code": "\nfrom __future__ import print_function\n\nimport pprint\nimport socket\n\nfrom tornado import gen\nfrom tornado.ioloop import IOLoop\nfrom tornado.netutil import Resolver, ThreadedResolver\nfrom tornado.options import parse_command_line, define, options\n\ntry:\n    import twisted\nexcept ImportError:\n    twisted = None\n\ntry:\n    import pycares\nexcept ImportError:\n    pycares = None\n\ndefine('family', default='unspec',\n       help='Address family to query: unspec, inet, or inet6')\n\n\n@gen.coroutine\ndef main():\n    args = parse_command_line()\n\n    if not args:\n        args = ['localhost', 'www.google.com',\n                'www.facebook.com', 'www.dropbox.com']\n\n    resolvers = [Resolver(), ThreadedResolver()]\n\n    if twisted is not None:\n        from tornado.platform.twisted import TwistedResolver\n        resolvers.append(TwistedResolver())\n\n    if pycares is not None:\n        from tornado.platform.caresresolver import CaresResolver\n        resolvers.append(CaresResolver())\n\n    family = {\n        'unspec': socket.AF_UNSPEC,\n        'inet': socket.AF_INET,\n        'inet6': socket.AF_INET6,\n    }[options.family]\n\n    for host in args:\n        print('Resolving %s' % host)\n        for resolver in resolvers:\n            addrinfo = yield resolver.resolve(host, 80, family)\n            print('%s: %s' % (resolver.__class__.__name__,\n                              pprint.pformat(addrinfo)))\n        print()\n\n\nif __name__ == '__main__':\n    IOLoop.instance().run_sync(main)\n", "comments": "!/usr/bin/env python", "content": "#!/usr/bin/env python\nfrom __future__ import print_function\n\nimport pprint\nimport socket\n\nfrom tornado import gen\nfrom tornado.ioloop import IOLoop\nfrom tornado.netutil import Resolver, ThreadedResolver\nfrom tornado.options import parse_command_line, define, options\n\ntry:\n    import twisted\nexcept ImportError:\n    twisted = None\n\ntry:\n    import pycares\nexcept ImportError:\n    pycares = None\n\ndefine('family', default='unspec',\n       help='Address family to query: unspec, inet, or inet6')\n\n\n@gen.coroutine\ndef main():\n    args = parse_command_line()\n\n    if not args:\n        args = ['localhost', 'www.google.com',\n                'www.facebook.com', 'www.dropbox.com']\n\n    resolvers = [Resolver(), ThreadedResolver()]\n\n    if twisted is not None:\n        from tornado.platform.twisted import TwistedResolver\n        resolvers.append(TwistedResolver())\n\n    if pycares is not None:\n        from tornado.platform.caresresolver import CaresResolver\n        resolvers.append(CaresResolver())\n\n    family = {\n        'unspec': socket.AF_UNSPEC,\n        'inet': socket.AF_INET,\n        'inet6': socket.AF_INET6,\n    }[options.family]\n\n    for host in args:\n        print('Resolving %s' % host)\n        for resolver in resolvers:\n            addrinfo = yield resolver.resolve(host, 80, family)\n            print('%s: %s' % (resolver.__class__.__name__,\n                              pprint.pformat(addrinfo)))\n        print()\n\n\nif __name__ == '__main__':\n    IOLoop.instance().run_sync(main)\n", "description": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "file_name": "test_resolvers.py", "id": "26030deb6095240dd8bbf46af2b2a869", "language": "Python", "project_name": "tornado", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/tornadoweb-tornado/tornadoweb-tornado-62e43f6/maint/scripts/test_resolvers.py", "save_time": "", "source": "", "update_at": "2018-03-13T23:11:42Z", "url": "https://github.com/tornadoweb/tornado", "wiki": true}
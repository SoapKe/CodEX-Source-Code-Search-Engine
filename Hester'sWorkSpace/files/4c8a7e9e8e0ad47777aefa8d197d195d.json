{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    int_or_none,\n    smuggle_url,\n    try_get,\n)\n\n\nclass TeleQuebecBaseIE(InfoExtractor):\n    @staticmethod\n    def _limelight_result(media_id):\n        return {\n            '_type': 'url_transparent',\n            'url': smuggle_url(\n                'limelight:media:' + media_id, {'geo_countries': ['CA']}),\n            'ie_key': 'LimelightMedia',\n        }\n\n\nclass TeleQuebecIE(TeleQuebecBaseIE):\n    _VALID_URL = r'https?://zonevideo\\.telequebec\\.tv/media/(?P<id>\\d+)'\n    _TESTS = [{\n        \n        'url': 'http://zonevideo.telequebec.tv/media/37578/un-petit-choc-et-puis-repart/un-chef-a-la-cabane',\n        'info_dict': {\n            'id': '577116881b4b439084e6b1cf4ef8b1b3',\n            'ext': 'mp4',\n            'title': 'Un petit choc et puis repart!',\n            'description': 'md5:b04a7e6b3f74e32d7b294cffe8658374',\n            'upload_date': '20180222',\n            'timestamp': 1519326631,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        \n        'url': 'http://zonevideo.telequebec.tv/media/30261',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        media_id = self._match_id(url)\n\n        media_data = self._download_json(\n            'https://mnmedias.api.telequebec.tv/api/v2/media/' + media_id,\n            media_id)['media']\n\n        info = self._limelight_result(media_data['streamInfo']['sourceId'])\n        info.update({\n            'title': media_data.get('title'),\n            'description': try_get(\n                media_data, lambda x: x['descriptions'][0]['text'], compat_str),\n            'duration': int_or_none(\n                media_data.get('durationInMilliseconds'), 1000),\n        })\n        return info\n\n\nclass TeleQuebecEmissionIE(TeleQuebecBaseIE):\n    _VALID_URL = r\n    _TESTS = [{\n        'url': 'http://lindicemcsween.telequebec.tv/emissions/100430013/des-soins-esthetiques-a-377-d-interets-annuels-ca-vous-tente',\n        'info_dict': {\n            'id': '66648a6aef914fe3badda25e81a4d50a',\n            'ext': 'mp4',\n            'title': \"Des soins esth\u00e9tiques \u00e0 377 % d'int\u00e9r\u00eats annuels, \u00e7a vous tente?\",\n            'description': 'md5:369e0d55d0083f1fc9b71ffb640ea014',\n            'upload_date': '20171024',\n            'timestamp': 1508862118,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://bancpublic.telequebec.tv/emissions/emission-49/31986/jeunes-meres-sous-pression',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.telequebec.tv/masha-et-michka/epi059masha-et-michka-3-053-078',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.telequebec.tv/documentaire/bebes-sur-mesure/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        media_id = self._search_regex(\n            r'mediaUID\\s*:\\s*[\"\\'][Ll]imelight_(?P<id>[a-z0-9]{32})', webpage,\n            'limelight id')\n\n        info = self._limelight_result(media_id)\n        info.update({\n            'title': self._og_search_title(webpage, default=None),\n            'description': self._og_search_description(webpage, default=None),\n        })\n        return info\n\n\nclass TeleQuebecLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://zonevideo\\.telequebec\\.tv/(?P<id>endirect)'\n    _TEST = {\n        'url': 'http://zonevideo.telequebec.tv/endirect/',\n        'info_dict': {\n            'id': 'endirect',\n            'ext': 'mp4',\n            'title': 're:^T\u00e9l\u00e9-Qu\u00e9bec - En direct [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        m3u8_url = None\n        webpage = self._download_webpage(\n            'https://player.telequebec.tv/Tq_VideoPlayer.js', video_id,\n            fatal=False)\n        if webpage:\n            m3u8_url = self._search_regex(\n                r'm3U8Url\\s*:\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1', webpage,\n                'm3u8 url', default=None, group='url')\n        if not m3u8_url:\n            m3u8_url = 'https://teleqmmd.mmdlive.lldns.net/teleqmmd/f386e3b206814e1f8c8c1c71c0f8e748/manifest.m3u8'\n        formats = self._extract_m3u8_formats(\n            m3u8_url, video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': self._live_title('T\u00e9l\u00e9-Qu\u00e9bec - En direct'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "comments": "(?x)\n                    https?://\n                        (?:\n                            [^/]+\\.telequebec\\.tv/emissions/|\n                            (?:www\\.)?telequebec\\.tv/\n                        )\n                        (?P<id>[^?#&]+)\n                    \n \n# coding: utf-8\n# available till 01.01.2023\n# no description\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    int_or_none,\n    smuggle_url,\n    try_get,\n)\n\n\nclass TeleQuebecBaseIE(InfoExtractor):\n    @staticmethod\n    def _limelight_result(media_id):\n        return {\n            '_type': 'url_transparent',\n            'url': smuggle_url(\n                'limelight:media:' + media_id, {'geo_countries': ['CA']}),\n            'ie_key': 'LimelightMedia',\n        }\n\n\nclass TeleQuebecIE(TeleQuebecBaseIE):\n    _VALID_URL = r'https?://zonevideo\\.telequebec\\.tv/media/(?P<id>\\d+)'\n    _TESTS = [{\n        # available till 01.01.2023\n        'url': 'http://zonevideo.telequebec.tv/media/37578/un-petit-choc-et-puis-repart/un-chef-a-la-cabane',\n        'info_dict': {\n            'id': '577116881b4b439084e6b1cf4ef8b1b3',\n            'ext': 'mp4',\n            'title': 'Un petit choc et puis repart!',\n            'description': 'md5:b04a7e6b3f74e32d7b294cffe8658374',\n            'upload_date': '20180222',\n            'timestamp': 1519326631,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        # no description\n        'url': 'http://zonevideo.telequebec.tv/media/30261',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        media_id = self._match_id(url)\n\n        media_data = self._download_json(\n            'https://mnmedias.api.telequebec.tv/api/v2/media/' + media_id,\n            media_id)['media']\n\n        info = self._limelight_result(media_data['streamInfo']['sourceId'])\n        info.update({\n            'title': media_data.get('title'),\n            'description': try_get(\n                media_data, lambda x: x['descriptions'][0]['text'], compat_str),\n            'duration': int_or_none(\n                media_data.get('durationInMilliseconds'), 1000),\n        })\n        return info\n\n\nclass TeleQuebecEmissionIE(TeleQuebecBaseIE):\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:\n                            [^/]+\\.telequebec\\.tv/emissions/|\n                            (?:www\\.)?telequebec\\.tv/\n                        )\n                        (?P<id>[^?#&]+)\n                    '''\n    _TESTS = [{\n        'url': 'http://lindicemcsween.telequebec.tv/emissions/100430013/des-soins-esthetiques-a-377-d-interets-annuels-ca-vous-tente',\n        'info_dict': {\n            'id': '66648a6aef914fe3badda25e81a4d50a',\n            'ext': 'mp4',\n            'title': \"Des soins esth\u00e9tiques \u00e0 377 % d'int\u00e9r\u00eats annuels, \u00e7a vous tente?\",\n            'description': 'md5:369e0d55d0083f1fc9b71ffb640ea014',\n            'upload_date': '20171024',\n            'timestamp': 1508862118,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://bancpublic.telequebec.tv/emissions/emission-49/31986/jeunes-meres-sous-pression',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.telequebec.tv/masha-et-michka/epi059masha-et-michka-3-053-078',\n        'only_matching': True,\n    }, {\n        'url': 'http://www.telequebec.tv/documentaire/bebes-sur-mesure/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        media_id = self._search_regex(\n            r'mediaUID\\s*:\\s*[\"\\'][Ll]imelight_(?P<id>[a-z0-9]{32})', webpage,\n            'limelight id')\n\n        info = self._limelight_result(media_id)\n        info.update({\n            'title': self._og_search_title(webpage, default=None),\n            'description': self._og_search_description(webpage, default=None),\n        })\n        return info\n\n\nclass TeleQuebecLiveIE(InfoExtractor):\n    _VALID_URL = r'https?://zonevideo\\.telequebec\\.tv/(?P<id>endirect)'\n    _TEST = {\n        'url': 'http://zonevideo.telequebec.tv/endirect/',\n        'info_dict': {\n            'id': 'endirect',\n            'ext': 'mp4',\n            'title': 're:^T\u00e9l\u00e9-Qu\u00e9bec - En direct [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        m3u8_url = None\n        webpage = self._download_webpage(\n            'https://player.telequebec.tv/Tq_VideoPlayer.js', video_id,\n            fatal=False)\n        if webpage:\n            m3u8_url = self._search_regex(\n                r'm3U8Url\\s*:\\s*([\"\\'])(?P<url>(?:(?!\\1).)+)\\1', webpage,\n                'm3u8 url', default=None, group='url')\n        if not m3u8_url:\n            m3u8_url = 'https://teleqmmd.mmdlive.lldns.net/teleqmmd/f386e3b206814e1f8c8c1c71c0f8e748/manifest.m3u8'\n        formats = self._extract_m3u8_formats(\n            m3u8_url, video_id, 'mp4', m3u8_id='hls')\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': self._live_title('T\u00e9l\u00e9-Qu\u00e9bec - En direct'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "telequebec.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/telequebec.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "mitmproxy", "code": "from mitmproxy.test.tflow import tflow\nfrom mitmproxy.tools.console import defaultkeys\nfrom mitmproxy.tools.console import keymap\nfrom mitmproxy.tools.console import master\nfrom mitmproxy import command\n\n\ndef test_commands_exist():\n    km = keymap.Keymap(None)\n    defaultkeys.map(km)\n    assert km.bindings\n    m = master.ConsoleMaster(None)\n    m.load_flow(tflow())\n\n    for binding in km.bindings:\n        cmd, *args = command.lexer(binding.command)\n        assert cmd in m.commands.commands\n\n        cmd_obj = m.commands.commands[cmd]\n        try:\n            cmd_obj.prepare_args(args)\n        except Exception as e:\n            raise ValueError(\"Invalid command: {}\".format(binding.command)) from e\n", "comments": "", "content": "from mitmproxy.test.tflow import tflow\nfrom mitmproxy.tools.console import defaultkeys\nfrom mitmproxy.tools.console import keymap\nfrom mitmproxy.tools.console import master\nfrom mitmproxy import command\n\n\ndef test_commands_exist():\n    km = keymap.Keymap(None)\n    defaultkeys.map(km)\n    assert km.bindings\n    m = master.ConsoleMaster(None)\n    m.load_flow(tflow())\n\n    for binding in km.bindings:\n        cmd, *args = command.lexer(binding.command)\n        assert cmd in m.commands.commands\n\n        cmd_obj = m.commands.commands[cmd]\n        try:\n            cmd_obj.prepare_args(args)\n        except Exception as e:\n            raise ValueError(\"Invalid command: {}\".format(binding.command)) from e\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_defaultkeys.py", "id": "3b5bb6d8530bcae20d4b5e1426e2620d", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/mitmproxy-mitmproxy/mitmproxy-mitmproxy-0bc3f1f/test/mitmproxy/tools/console/test_defaultkeys.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:46Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
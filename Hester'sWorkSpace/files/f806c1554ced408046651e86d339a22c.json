{"author": "jwilder", "code": "import backoff\nimport docker\n\ndocker_client = docker.from_env()\n\n\n\n\n Tests helpers\n\n\n\n@backoff.on_exception(backoff.constant, AssertionError, interval=2, max_tries=15, jitter=None)\ndef assert_log_contains(expected_log_line):\n    \n    sut_container = docker_client.containers.get(\"nginxproxy\")\n    docker_logs = sut_container.logs(stdout=True, stderr=True, stream=False, follow=False)\n    assert expected_log_line in docker_logs\n\n\n\n\n Tests\n\n\n\ndef test_dhparam_is_generated_if_missing(docker_compose):\n    sut_container = docker_client.containers.get(\"nginxproxy\")\n    assert sut_container.status == \"running\"\n\n    assert_log_contains(\"Generating DH parameters\")\n    assert_log_contains(\"dhparam generation complete, reloading nginx\")\n\n     Make sure the dhparam in use is not the default, pre-generated one\n    default_checksum = sut_container.exec_run(\"md5sum /app/dhparam.pem.default\").split()\n    generated_checksum = sut_container.exec_run(\"md5sum /etc/nginx/dhparam/dhparam.pem\").split()\n    assert default_checksum[0] != generated_checksum[0]\n", "comments": "        check nginx proxy container log contains given string      the backoff decorator retry check 15 times 2 seconds delay        param expected log line  string search      return  none      raises  asserterror expected string found log                                                                                                tests helpers                                                                                                                                                                            tests                                                                                        make sure dhparam use default  pre generated one ", "content": "import backoff\nimport docker\n\ndocker_client = docker.from_env()\n\n\n###############################################################################\n#\n# Tests helpers\n#\n###############################################################################\n\n@backoff.on_exception(backoff.constant, AssertionError, interval=2, max_tries=15, jitter=None)\ndef assert_log_contains(expected_log_line):\n    \"\"\"\n    Check that the nginx-proxy container log contains a given string.\n    The backoff decorator will retry the check 15 times with a 2 seconds delay.\n\n    :param expected_log_line: string to search for\n    :return: None\n    :raises: AssertError if the expected string is not found in the log\n    \"\"\"\n    sut_container = docker_client.containers.get(\"nginxproxy\")\n    docker_logs = sut_container.logs(stdout=True, stderr=True, stream=False, follow=False)\n    assert expected_log_line in docker_logs\n\n\n###############################################################################\n#\n# Tests\n#\n###############################################################################\n\ndef test_dhparam_is_generated_if_missing(docker_compose):\n    sut_container = docker_client.containers.get(\"nginxproxy\")\n    assert sut_container.status == \"running\"\n\n    assert_log_contains(\"Generating DH parameters\")\n    assert_log_contains(\"dhparam generation complete, reloading nginx\")\n\n    # Make sure the dhparam in use is not the default, pre-generated one\n    default_checksum = sut_container.exec_run(\"md5sum /app/dhparam.pem.default\").split()\n    generated_checksum = sut_container.exec_run(\"md5sum /etc/nginx/dhparam/dhparam.pem\").split()\n    assert default_checksum[0] != generated_checksum[0]\n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_dhparam_generation.py", "id": "f806c1554ced408046651e86d339a22c", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_ssl/test_dhparam_generation.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
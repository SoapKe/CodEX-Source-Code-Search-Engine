{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.workon_doesnt_exists import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture(autouse=True)\ndef envs(mocker):\n    return mocker.patch(\n        'thefuck.rules.workon_doesnt_exists._get_all_environments',\n        return_value=['thefuck', 'code_view'])\n\n\n@pytest.mark.parametrize('script', [\n    'workon tehfuck', 'workon code-view', 'workon new-env'])\ndef test_match(script):\n    assert match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script', [\n    'workon thefuck', 'workon code_view', 'work on tehfuck'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('workon tehfuck', 'workon thefuck'),\n    ('workon code-view', 'workon code_view'),\n    ('workon zzzz', 'mkvirtualenv zzzz')])\ndef test_get_new_command(script, result):\n    assert get_new_command(Command(script, ''))[0] == result\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.workon_doesnt_exists import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture(autouse=True)\ndef envs(mocker):\n    return mocker.patch(\n        'thefuck.rules.workon_doesnt_exists._get_all_environments',\n        return_value=['thefuck', 'code_view'])\n\n\n@pytest.mark.parametrize('script', [\n    'workon tehfuck', 'workon code-view', 'workon new-env'])\ndef test_match(script):\n    assert match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script', [\n    'workon thefuck', 'workon code_view', 'work on tehfuck'])\ndef test_not_match(script):\n    assert not match(Command(script, ''))\n\n\n@pytest.mark.parametrize('script, result', [\n    ('workon tehfuck', 'workon thefuck'),\n    ('workon code-view', 'workon code_view'),\n    ('workon zzzz', 'mkvirtualenv zzzz')])\ndef test_get_new_command(script, result):\n    assert get_new_command(Command(script, ''))[0] == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_workon_doesnt_exists.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_workon_doesnt_exists.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
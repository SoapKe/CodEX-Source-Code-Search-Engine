{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom yowsup.layers.protocol_receipts.protocolentities  import OutgoingReceiptProtocolEntity\n\nclass NotificationProtocolEntity(ProtocolEntity):\n    \n    def __init__(self, _type, _id, _from, timestamp, notify, offline):\n        super(NotificationProtocolEntity, self).__init__(\"notification\")\n        self._type      = _type\n        self._id        = _id\n        self._from      =_from\n        self.timestamp  = int(timestamp)\n        self.notify     = notify\n        self.offline    = offline == \"1\"\n   \n\n    def __str__(self):\n        out = \"Notification\\n\"\n        out += \"From: %s\\n\" % self.getFrom()\n        out += \"Type: %s\\n\" % self.getType()\n        return out\n\n    def getFrom(self, full = True):\n        return self._from if full else self._from.split('@')[0]\n\n    def getType(self):\n        return self._type\n\n    def getId(self):\n        return self._id\n\n    def getTimestamp(self):\n        return self.timestamp\n\n    def toProtocolTreeNode(self):\n        attribs = {\n            \"t\"         : str(self.timestamp),\n            \"from\"      : self._from,\n            \"offline\"   : \"1\" if self.offline else \"0\",\n            \"type\"      : self._type,\n            \"id\"        : self._id,\n            \"notify\"    : self.notify\n        }\n       \n        return self._createProtocolTreeNode(attribs, children = None, data = None)\n\n    def ack(self):\n        return OutgoingReceiptProtocolEntity(self.getId(), self.getFrom())\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        return NotificationProtocolEntity(\n            node.getAttributeValue(\"type\"), \n            node.getAttributeValue(\"id\"),\n            node.getAttributeValue(\"from\"),\n            node.getAttributeValue(\"t\"),\n            node.getAttributeValue(\"notify\"),\n            node.getAttributeValue(\"offline\")\n            )\n", "comments": "         notification offline  0  id    notification id    notify    notify name    type    notification type                    timestamp       sender jid           notification                ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom yowsup.layers.protocol_receipts.protocolentities  import OutgoingReceiptProtocolEntity\n\nclass NotificationProtocolEntity(ProtocolEntity):\n    '''\n    <notification offline=\"0\" id=\"{{NOTIFICATION_ID}}\" notify=\"{{NOTIFY_NAME}}\" type=\"{{NOTIFICATION_TYPE}}\" \n            t=\"{{TIMESTAMP}}\" from=\"{{SENDER_JID}}\">\n    </notification>\n\n    \n    '''\n    def __init__(self, _type, _id, _from, timestamp, notify, offline):\n        super(NotificationProtocolEntity, self).__init__(\"notification\")\n        self._type      = _type\n        self._id        = _id\n        self._from      =_from\n        self.timestamp  = int(timestamp)\n        self.notify     = notify\n        self.offline    = offline == \"1\"\n   \n\n    def __str__(self):\n        out = \"Notification\\n\"\n        out += \"From: %s\\n\" % self.getFrom()\n        out += \"Type: %s\\n\" % self.getType()\n        return out\n\n    def getFrom(self, full = True):\n        return self._from if full else self._from.split('@')[0]\n\n    def getType(self):\n        return self._type\n\n    def getId(self):\n        return self._id\n\n    def getTimestamp(self):\n        return self.timestamp\n\n    def toProtocolTreeNode(self):\n        attribs = {\n            \"t\"         : str(self.timestamp),\n            \"from\"      : self._from,\n            \"offline\"   : \"1\" if self.offline else \"0\",\n            \"type\"      : self._type,\n            \"id\"        : self._id,\n            \"notify\"    : self.notify\n        }\n       \n        return self._createProtocolTreeNode(attribs, children = None, data = None)\n\n    def ack(self):\n        return OutgoingReceiptProtocolEntity(self.getId(), self.getFrom())\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        return NotificationProtocolEntity(\n            node.getAttributeValue(\"type\"), \n            node.getAttributeValue(\"id\"),\n            node.getAttributeValue(\"from\"),\n            node.getAttributeValue(\"t\"),\n            node.getAttributeValue(\"notify\"),\n            node.getAttributeValue(\"offline\")\n            )\n", "description": "The python WhatsApp library", "file_name": "notification.py", "id": "2a2830957b61c5911cbef4da7f702ce0", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_notifications/protocolentities/notification.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
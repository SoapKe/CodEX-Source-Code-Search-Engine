{"author": "nvbn", "code": "import re\nfrom thefuck.utils import replace_argument, for_app\n\n\n@for_app('composer')\ndef match(command):\n    return (('did you mean this?' in command.output.lower()\n             or 'did you mean one of these?' in command.output.lower()))\n\n\ndef get_new_command(command):\n    broken_cmd = re.findall(r\"Command \\\"([^']*)\\\" is not defined\", command.output)[0]\n    new_cmd = re.findall(r'Did you mean this\\?[^\\n]*\\n\\s*([^\\n]*)', command.output)\n    if not new_cmd:\n        new_cmd = re.findall(r'Did you mean one of these\\?[^\\n]*\\n\\s*([^\\n]*)', command.output)\n    return replace_argument(command.script, broken_cmd, new_cmd[0].strip())\n", "comments": "", "content": "import re\nfrom thefuck.utils import replace_argument, for_app\n\n\n@for_app('composer')\ndef match(command):\n    return (('did you mean this?' in command.output.lower()\n             or 'did you mean one of these?' in command.output.lower()))\n\n\ndef get_new_command(command):\n    broken_cmd = re.findall(r\"Command \\\"([^']*)\\\" is not defined\", command.output)[0]\n    new_cmd = re.findall(r'Did you mean this\\?[^\\n]*\\n\\s*([^\\n]*)', command.output)\n    if not new_cmd:\n        new_cmd = re.findall(r'Did you mean one of these\\?[^\\n]*\\n\\s*([^\\n]*)', command.output)\n    return replace_argument(command.script, broken_cmd, new_cmd[0].strip())\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "composer_not_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/composer_not_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
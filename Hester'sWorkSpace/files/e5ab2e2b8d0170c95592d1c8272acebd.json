{"author": "tgalal", "code": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .iq_groups import GroupsIqProtocolEntity\n\nclass ParticipantsGroupsIqProtocolEntity(GroupsIqProtocolEntity):\n    \n\n    modes=[\"add\",\"promote\",\"remove\",\"demote\"]\n    def __init__(self, jid, participantList, _mode, _id = None):\n        super(ParticipantsGroupsIqProtocolEntity, self).__init__(to = jid, _id = _id, _type = \"set\")\n        self.setProps(group_jid = jid, participantList = participantList, mode = _mode)\n\n    def setProps(self, group_jid, participantList, mode):\n        assert type(participantList) is list, \"Must be a list of jids, got %s instead.\" % type(participantList)\n        assert mode in self.modes, \"Mode should be in: '\" + \"', '\".join(self.modes) + \"' but is '\" + mode + \"'\"\n        self.group_jid = group_jid\n        self.participantList = participantList\n        self.mode = mode\n\n    def toProtocolTreeNode(self):\n        node = super(ParticipantsGroupsIqProtocolEntity, self).toProtocolTreeNode()\n        participantNodes = [\n            ProtocolTreeNode(\"participant\", {\n                \"jid\":       participant\n            })\n            for participant in self.participantList\n        ]\n        node.addChild(ProtocolTreeNode(self.mode,{}, participantNodes))\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = super(ParticipantsGroupsIqProtocolEntity, ParticipantsGroupsIqProtocolEntity).fromProtocolTreeNode(node)\n        entity.__class__ = ParticipantsGroupsIqProtocolEntity\n        return entity\n", "comments": "         iq type  get  id    id    xmlns  w g2     group jid              list   list        iq          ", "content": "from yowsup.structs import ProtocolEntity, ProtocolTreeNode\nfrom .iq_groups import GroupsIqProtocolEntity\n\nclass ParticipantsGroupsIqProtocolEntity(GroupsIqProtocolEntity):\n    '''\n    <iq type=\"get\" id=\"{{id}}\" xmlns=\"w:g2\", to={{group_jid}}\">\n        <list></list>\n    </iq>\n    '''\n\n    modes=[\"add\",\"promote\",\"remove\",\"demote\"]\n    def __init__(self, jid, participantList, _mode, _id = None):\n        super(ParticipantsGroupsIqProtocolEntity, self).__init__(to = jid, _id = _id, _type = \"set\")\n        self.setProps(group_jid = jid, participantList = participantList, mode = _mode)\n\n    def setProps(self, group_jid, participantList, mode):\n        assert type(participantList) is list, \"Must be a list of jids, got %s instead.\" % type(participantList)\n        assert mode in self.modes, \"Mode should be in: '\" + \"', '\".join(self.modes) + \"' but is '\" + mode + \"'\"\n        self.group_jid = group_jid\n        self.participantList = participantList\n        self.mode = mode\n\n    def toProtocolTreeNode(self):\n        node = super(ParticipantsGroupsIqProtocolEntity, self).toProtocolTreeNode()\n        participantNodes = [\n            ProtocolTreeNode(\"participant\", {\n                \"jid\":       participant\n            })\n            for participant in self.participantList\n        ]\n        node.addChild(ProtocolTreeNode(self.mode,{}, participantNodes))\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        entity = super(ParticipantsGroupsIqProtocolEntity, ParticipantsGroupsIqProtocolEntity).fromProtocolTreeNode(node)\n        entity.__class__ = ParticipantsGroupsIqProtocolEntity\n        return entity\n", "description": "The python WhatsApp library", "file_name": "iq_groups_participants.py", "id": "e5ab2e2b8d0170c95592d1c8272acebd", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_groups/protocolentities/iq_groups_participants.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
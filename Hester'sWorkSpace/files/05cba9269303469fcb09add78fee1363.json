{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.cp_omitting_directory import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('script, output', [\n    ('cp dir', 'cp: dor: is a directory'),\n    ('cp dir', \"cp: omitting directory 'dir'\")])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('some dir', 'cp: dor: is a directory'),\n    ('some dir', \"cp: omitting directory 'dir'\"),\n    ('cp dir', '')])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\ndef test_get_new_command():\n    assert get_new_command(Command('cp dir', '')) == 'cp -a dir'\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.cp_omitting_directory import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('script, output', [\n    ('cp dir', 'cp: dor: is a directory'),\n    ('cp dir', \"cp: omitting directory 'dir'\")])\ndef test_match(script, output):\n    assert match(Command(script, output))\n\n\n@pytest.mark.parametrize('script, output', [\n    ('some dir', 'cp: dor: is a directory'),\n    ('some dir', \"cp: omitting directory 'dir'\"),\n    ('cp dir', '')])\ndef test_not_match(script, output):\n    assert not match(Command(script, output))\n\n\ndef test_get_new_command():\n    assert get_new_command(Command('cp dir', '')) == 'cp -a dir'\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_cp_omitting_directory.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_cp_omitting_directory.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
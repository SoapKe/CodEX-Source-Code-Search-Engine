{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass MiaoPaiIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?miaopai\\.com/show/(?P<id>[-A-Za-z0-9~_]+)'\n    _TEST = {\n        'url': 'http://www.miaopai.com/show/n~0hO7sfV1nBEw4Y29-Hqg__.htm',\n        'md5': '095ed3f1cd96b821add957bdc29f845b',\n        'info_dict': {\n            'id': 'n~0hO7sfV1nBEw4Y29-Hqg__',\n            'ext': 'mp4',\n            'title': '\u897f\u6e38\u8bb0\u97f3\u4e50\u4f1a\u7684\u79d2\u62cd\u89c6\u9891',\n            'thumbnail': 're:^https?://.*/n~0hO7sfV1nBEw4Y29-Hqg___m.jpg',\n        }\n    }\n\n    _USER_AGENT_IPAD = 'Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(\n            url, video_id, headers={'User-Agent': self._USER_AGENT_IPAD})\n\n        title = self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title')\n        thumbnail = self._html_search_regex(\n            r'<div[^>]+class=(?P<q1>[\\'\"]).*\\bvideo_img\\b.*(?P=q1)[^>]+data-url=(?P<q2>[\\'\"])(?P<url>[^\\'\"]+)(?P=q2)',\n            webpage, 'thumbnail', fatal=False, group='url')\n        videos = self._parse_html5_media_entries(url, webpage, video_id)\n        info = videos[0]\n\n        info.update({\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n        })\n        return info\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass MiaoPaiIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?miaopai\\.com/show/(?P<id>[-A-Za-z0-9~_]+)'\n    _TEST = {\n        'url': 'http://www.miaopai.com/show/n~0hO7sfV1nBEw4Y29-Hqg__.htm',\n        'md5': '095ed3f1cd96b821add957bdc29f845b',\n        'info_dict': {\n            'id': 'n~0hO7sfV1nBEw4Y29-Hqg__',\n            'ext': 'mp4',\n            'title': '\u897f\u6e38\u8bb0\u97f3\u4e50\u4f1a\u7684\u79d2\u62cd\u89c6\u9891',\n            'thumbnail': 're:^https?://.*/n~0hO7sfV1nBEw4Y29-Hqg___m.jpg',\n        }\n    }\n\n    _USER_AGENT_IPAD = 'Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(\n            url, video_id, headers={'User-Agent': self._USER_AGENT_IPAD})\n\n        title = self._html_search_regex(\n            r'<title>([^<]+)</title>', webpage, 'title')\n        thumbnail = self._html_search_regex(\n            r'<div[^>]+class=(?P<q1>[\\'\"]).*\\bvideo_img\\b.*(?P=q1)[^>]+data-url=(?P<q2>[\\'\"])(?P<url>[^\\'\"]+)(?P=q2)',\n            webpage, 'thumbnail', fatal=False, group='url')\n        videos = self._parse_html5_media_entries(url, webpage, video_id)\n        info = videos[0]\n\n        info.update({\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n        })\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "miaopai.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/miaopai.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
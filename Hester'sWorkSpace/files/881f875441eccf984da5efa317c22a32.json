{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, _\n\n\nclass PosMakePayment(models.TransientModel):\n    _name = 'pos.make.payment'\n    _description = 'Point of Sale Payment'\n\n    def _default_session(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            return self.env['pos.order'].browse(active_id).session_id\n        return False\n\n    def _default_journal(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            session = self.env['pos.order'].browse(active_id).session_id\n            return session.config_id.journal_ids and session.config_id.journal_ids.ids[0] or False\n        return False\n\n    def _default_amount(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            order = self.env['pos.order'].browse(active_id)\n            return (order.amount_total - order.amount_paid)\n        return False\n\n    session_id = fields.Many2one('pos.session', required=True, default=_default_session)\n    journal_id = fields.Many2one('account.journal', string='Payment Mode', required=True, default=_default_journal)\n    amount = fields.Float(digits=(16, 2), required=True, default=_default_amount)\n    payment_name = fields.Char(string='Payment Reference')\n    payment_date = fields.Date(string='Payment Date', required=True, default=lambda *a: fields.Datetime.now())\n\n    @api.onchange('session_id')\n    def _on_change_session(self):\n        if self.session_id:\n            return {\n                'domain': {'journal_id': [('id', 'in', self.session_id.config_id.journal_ids.ids)]}\n            }\n\n    @api.multi\n    def check(self):\n        \n        self.ensure_one()\n        order = self.env['pos.order'].browse(self.env.context.get('active_id', False))\n        amount = order.amount_total - order.amount_paid\n        data = self.read()[0]\n        \n        data['journal'] = data['journal_id'][0]\n        if amount != 0.0:\n            order.add_payment(data)\n        if order.test_paid():\n            order.action_pos_order_paid()\n            return {'type': 'ir.actions.act_window_close'}\n        return self.launch_payment()\n\n    def launch_payment(self):\n        return {\n            'name': _('Payment'),\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_model': 'pos.make.payment',\n            'view_id': False,\n            'target': 'new',\n            'views': False,\n            'type': 'ir.actions.act_window',\n            'context': self.env.context,\n        }\n\n", "comments": "   check order          order paid  continue payment          order paid print ticket                     coding  utf 8        part odoo  see license file full copyright licensing details     add payment expect journal key ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, _\n\n\nclass PosMakePayment(models.TransientModel):\n    _name = 'pos.make.payment'\n    _description = 'Point of Sale Payment'\n\n    def _default_session(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            return self.env['pos.order'].browse(active_id).session_id\n        return False\n\n    def _default_journal(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            session = self.env['pos.order'].browse(active_id).session_id\n            return session.config_id.journal_ids and session.config_id.journal_ids.ids[0] or False\n        return False\n\n    def _default_amount(self):\n        active_id = self.env.context.get('active_id')\n        if active_id:\n            order = self.env['pos.order'].browse(active_id)\n            return (order.amount_total - order.amount_paid)\n        return False\n\n    session_id = fields.Many2one('pos.session', required=True, default=_default_session)\n    journal_id = fields.Many2one('account.journal', string='Payment Mode', required=True, default=_default_journal)\n    amount = fields.Float(digits=(16, 2), required=True, default=_default_amount)\n    payment_name = fields.Char(string='Payment Reference')\n    payment_date = fields.Date(string='Payment Date', required=True, default=lambda *a: fields.Datetime.now())\n\n    @api.onchange('session_id')\n    def _on_change_session(self):\n        if self.session_id:\n            return {\n                'domain': {'journal_id': [('id', 'in', self.session_id.config_id.journal_ids.ids)]}\n            }\n\n    @api.multi\n    def check(self):\n        \"\"\"Check the order:\n        if the order is not paid: continue payment,\n        if the order is paid print ticket.\n        \"\"\"\n        self.ensure_one()\n        order = self.env['pos.order'].browse(self.env.context.get('active_id', False))\n        amount = order.amount_total - order.amount_paid\n        data = self.read()[0]\n        # add_payment expect a journal key\n        data['journal'] = data['journal_id'][0]\n        if amount != 0.0:\n            order.add_payment(data)\n        if order.test_paid():\n            order.action_pos_order_paid()\n            return {'type': 'ir.actions.act_window_close'}\n        return self.launch_payment()\n\n    def launch_payment(self):\n        return {\n            'name': _('Payment'),\n            'view_type': 'form',\n            'view_mode': 'form',\n            'res_model': 'pos.make.payment',\n            'view_id': False,\n            'target': 'new',\n            'views': False,\n            'type': 'ir.actions.act_window',\n            'context': self.env.context,\n        }\n\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "pos_payment.py", "id": "881f875441eccf984da5efa317c22a32", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/point_of_sale/wizard/pos_payment.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
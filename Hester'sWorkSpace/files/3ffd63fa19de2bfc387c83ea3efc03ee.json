{"author": "keon", "code": "def counting_sort(arr):\n\t\"\"\"\n    Counting_sort\n\tSorting a array which has no element greater than k\n\tCreating a new temp_arr,where temp_arr[i] contain the number of\n\telement less than or equal to i in the arr\t\n    Then placing the number i into a correct position in the result_arr\n\treturn the result_arr\n\tComplexity: 0(n)\n\t\"\"\"\n\t\n\tm = min(arr)\n\t\n\tdifferent = 0\n\tif m < 0:\n\t\t\n\t\tdifferent = -m\n\t\tfor i in range (len(arr)):\n\t\t\tarr[i]+= -m\n\tk = max(arr)\n\ttemp_arr = [0]*(k+1)\n\tfor i in range(0,len(arr)):\n\t\ttemp_arr[arr[i]] = temp_arr[arr[i]]+1\n\t#temp_array[i] contain the times the number i appear in arr\n\t\n\tfor i in range(1, k+1):\n\t\ttemp_arr[i] = temp_arr[i] + temp_arr[i-1]\n\t#temp_array[i] contain the number of element less than or equal i in arr\n\t\n\tresult_arr = [0]*len(arr)\n\t\n\tfor i in range(len(arr)-1,-1,-1):\n\t\tresult_arr[temp_arr[arr[i]]-1] = arr[i]-different\n\t\ttemp_arr[arr[i]] = temp_arr[arr[i]]-1\n\t\n\treturn result_arr \n\nif __name__ == \"__main__\":\n\tpositive_array = [1,2,3,4,9,1,2,8,3,5,7,0,9,8,1,7,4,5]\n\tnegative_array = [-5,-6,-2,-3,-4,-5,0,-9,-2,-3,-8,-4]\n\tx = counting_sort(positive_array)\n\ty = counting_sort(negative_array)\n\tprint(x)\n\tprint(y)\n\t\n\t\n", "comments": "        counting sort  sorting array element greater k  creating new temp arr temp arr  contain number  element less equal arr      then placing number correct position result arr  return result arr  complexity  0(n)        case negative elements  change array positive element   save change  convert array back positive number   temp array  contain times number appear arr   temp array  contain number element less equal arr   creating result arr put element correct positon ", "content": "def counting_sort(arr):\n\t\"\"\"\n    Counting_sort\n\tSorting a array which has no element greater than k\n\tCreating a new temp_arr,where temp_arr[i] contain the number of\n\telement less than or equal to i in the arr\t\n    Then placing the number i into a correct position in the result_arr\n\treturn the result_arr\n\tComplexity: 0(n)\n\t\"\"\"\n\t\n\tm = min(arr)\n\t#in case there are negative elements, change the array to all positive element\n\tdifferent = 0\n\tif m < 0:\n\t\t#save the change, so that we can convert the array back to all positive number\n\t\tdifferent = -m\n\t\tfor i in range (len(arr)):\n\t\t\tarr[i]+= -m\n\tk = max(arr)\n\ttemp_arr = [0]*(k+1)\n\tfor i in range(0,len(arr)):\n\t\ttemp_arr[arr[i]] = temp_arr[arr[i]]+1\n\t#temp_array[i] contain the times the number i appear in arr\n\t\n\tfor i in range(1, k+1):\n\t\ttemp_arr[i] = temp_arr[i] + temp_arr[i-1]\n\t#temp_array[i] contain the number of element less than or equal i in arr\n\t\n\tresult_arr = [0]*len(arr)\n\t#creating a result_arr an put the element in a correct positon\n\tfor i in range(len(arr)-1,-1,-1):\n\t\tresult_arr[temp_arr[arr[i]]-1] = arr[i]-different\n\t\ttemp_arr[arr[i]] = temp_arr[arr[i]]-1\n\t\n\treturn result_arr \n\nif __name__ == \"__main__\":\n\tpositive_array = [1,2,3,4,9,1,2,8,3,5,7,0,9,8,1,7,4,5]\n\tnegative_array = [-5,-6,-2,-3,-4,-5,0,-9,-2,-3,-8,-4]\n\tx = counting_sort(positive_array)\n\ty = counting_sort(negative_array)\n\tprint(x)\n\tprint(y)\n\t\n\t\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "counting_sort.py", "id": "3ffd63fa19de2bfc387c83ea3efc03ee", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/keon-algorithms/keon-algorithms-ea43887/sort/counting_sort.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:53:29Z", "url": "https://github.com/keon/algorithms", "wiki": true}
{"author": "tornadoweb", "code": "\n\n A simple benchmark of tornado template rendering, based on\n https://github.com/mitsuhiko/jinja2/blob/master/examples/bench.py\n\nimport sys\nfrom timeit import Timer\n\nfrom tornado.options import options, define, parse_command_line\nfrom tornado.template import Template\n\ndefine('num', default=100, help='number of iterations')\ndefine('dump', default=False, help='print template generated code and exit')\n\ncontext = {\n    'page_title': 'mitsuhiko\\'s benchmark',\n    'table': [dict(a=1, b=2, c=3, d=4, e=5,\n                   f=6, g=7, h=8, i=9, j=10) for x in range(1000)]\n}\n\ntmpl = Template(\"\"\"\\\n<!doctype html>\n<html>\n  <head>\n    <title>{{ page_title }}</title>\n  </head>\n  <body>\n    <div class=\"header\">\n      <h1>{{ page_title }}</h1>\n    </div>\n    <ul class=\"navigation\">\n    {% for href, caption in [ \\\n        ('index.html', 'Index'), \\\n        ('downloads.html', 'Downloads'), \\\n        ('products.html', 'Products') \\\n      ] %}\n      <li><a href=\"{{ href }}\">{{ caption }}</a></li>\n    {% end %}\n    </ul>\n    <div class=\"table\">\n      <table>\n      {% for row in table %}\n        <tr>\n        {% for cell in row %}\n          <td>{{ cell }}</td>\n        {% end %}\n        </tr>\n      {% end %}\n      </table>\n    </div>\n  </body>\n</html>\\\n\"\"\")\n\n\ndef render():\n    tmpl.generate(**context)\n\n\ndef main():\n    parse_command_line()\n    if options.dump:\n        print(tmpl.code)\n        sys.exit(0)\n    t = Timer(render)\n    results = t.timeit(options.num) / options.num\n    print('%0.3f ms per iteration' % (results * 1000))\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "       doctype html   html     head       title    page title     title      head     body       div class  header          h1    page title     h1        div       ul class  navigation          href  caption             ( index html    index )            ( downloads html    downloads )            ( products html    products )                     li  href     href        caption       li         end          ul       div class  table          table           row table             tr             cell row               td    cell     td             end              tr           end            table        div      body    html           usr bin env python       a simple benchmark tornado template rendering  based    https   github com mitsuhiko jinja2 blob master examples bench py ", "content": "#!/usr/bin/env python\n#\n# A simple benchmark of tornado template rendering, based on\n# https://github.com/mitsuhiko/jinja2/blob/master/examples/bench.py\n\nimport sys\nfrom timeit import Timer\n\nfrom tornado.options import options, define, parse_command_line\nfrom tornado.template import Template\n\ndefine('num', default=100, help='number of iterations')\ndefine('dump', default=False, help='print template generated code and exit')\n\ncontext = {\n    'page_title': 'mitsuhiko\\'s benchmark',\n    'table': [dict(a=1, b=2, c=3, d=4, e=5,\n                   f=6, g=7, h=8, i=9, j=10) for x in range(1000)]\n}\n\ntmpl = Template(\"\"\"\\\n<!doctype html>\n<html>\n  <head>\n    <title>{{ page_title }}</title>\n  </head>\n  <body>\n    <div class=\"header\">\n      <h1>{{ page_title }}</h1>\n    </div>\n    <ul class=\"navigation\">\n    {% for href, caption in [ \\\n        ('index.html', 'Index'), \\\n        ('downloads.html', 'Downloads'), \\\n        ('products.html', 'Products') \\\n      ] %}\n      <li><a href=\"{{ href }}\">{{ caption }}</a></li>\n    {% end %}\n    </ul>\n    <div class=\"table\">\n      <table>\n      {% for row in table %}\n        <tr>\n        {% for cell in row %}\n          <td>{{ cell }}</td>\n        {% end %}\n        </tr>\n      {% end %}\n      </table>\n    </div>\n  </body>\n</html>\\\n\"\"\")\n\n\ndef render():\n    tmpl.generate(**context)\n\n\ndef main():\n    parse_command_line()\n    if options.dump:\n        print(tmpl.code)\n        sys.exit(0)\n    t = Timer(render)\n    results = t.timeit(options.num) / options.num\n    print('%0.3f ms per iteration' % (results * 1000))\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.", "file_name": "template_benchmark.py", "id": "cd092dc79aadc03bfdea4a91de110cc9", "language": "Python", "project_name": "tornado", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tornadoweb-tornado/tornadoweb-tornado-9a97ffb/demos/benchmark/template_benchmark.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:52:45Z", "url": "https://github.com/tornadoweb/tornado", "wiki": true}
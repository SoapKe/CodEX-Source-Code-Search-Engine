{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.unknown_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('command', [\n    Command('./bin/hdfs dfs ls', 'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'),\n    Command('hdfs dfs ls',\n            'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'),\n    Command('hdfs dfs ls /foo/bar', 'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.')])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('./bin/hdfs dfs -ls', ''),\n    Command('./bin/hdfs dfs -ls /foo/bar', ''),\n    Command('hdfs dfs -ls -R /foo/bar', ''),\n    Command('', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, new_command', [\n    (Command('hdfs dfs ls',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['hdfs dfs -ls']),\n    (Command('hdfs dfs rm /foo/bar',\n             'rm: Unknown command\\nDid you mean -rm?  This command begins with a dash.'), ['hdfs dfs -rm /foo/bar']),\n    (Command('./bin/hdfs dfs ls -R /foo/bar',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['./bin/hdfs dfs -ls -R /foo/bar']),\n    (Command('./bin/hdfs dfs -Dtest=fred ls -R /foo/bar',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['./bin/hdfs dfs -Dtest=fred -ls -R /foo/bar'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command\n", "comments": "", "content": "import pytest\nfrom thefuck.rules.unknown_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.mark.parametrize('command', [\n    Command('./bin/hdfs dfs ls', 'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'),\n    Command('hdfs dfs ls',\n            'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'),\n    Command('hdfs dfs ls /foo/bar', 'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.')])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('./bin/hdfs dfs -ls', ''),\n    Command('./bin/hdfs dfs -ls /foo/bar', ''),\n    Command('hdfs dfs -ls -R /foo/bar', ''),\n    Command('', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, new_command', [\n    (Command('hdfs dfs ls',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['hdfs dfs -ls']),\n    (Command('hdfs dfs rm /foo/bar',\n             'rm: Unknown command\\nDid you mean -rm?  This command begins with a dash.'), ['hdfs dfs -rm /foo/bar']),\n    (Command('./bin/hdfs dfs ls -R /foo/bar',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['./bin/hdfs dfs -ls -R /foo/bar']),\n    (Command('./bin/hdfs dfs -Dtest=fred ls -R /foo/bar',\n             'ls: Unknown command\\nDid you mean -ls?  This command begins with a dash.'), ['./bin/hdfs dfs -Dtest=fred -ls -R /foo/bar'])])\ndef test_get_new_command(command, new_command):\n    assert get_new_command(command) == new_command\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_unknown_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_unknown_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
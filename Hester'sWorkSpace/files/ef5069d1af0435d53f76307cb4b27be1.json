{"author": "getsentry", "code": "from __future__ import absolute_import\n\nimport pytest\n\nfrom sentry.interfaces.base import InterfaceValidationError\nfrom sentry.interfaces.security import Csp\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {}, {\n            'effective_directive': 'lolnotreal'\n        },\n    )\n)\ndef test_invalid_csp_report(report):\n    with pytest.raises(InterfaceValidationError):\n        Csp.to_python(report)\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'about'\n        }, {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'ms-browser-extension'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'chrome-extension://fdsa'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://localhost:8000'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://localhost'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://foo.superfish.com'\n        }, {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'http://foo.superfish.com'\n        },\n    )\n)\ndef test_blocked_csp_report(report):\n    assert Csp.to_python(report).should_filter() is True\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'http://example.com'\n        }, {\n            'effective_directive': 'script-src',\n            'blocked_uri': 'http://example.com'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://example.com'\n        }, {\n            'effective_directive': 'style-src'\n        },\n    )\n)\ndef test_valid_csp_report(report):\n    assert Csp.to_python(report).should_filter() is False\n", "comments": "", "content": "from __future__ import absolute_import\n\nimport pytest\n\nfrom sentry.interfaces.base import InterfaceValidationError\nfrom sentry.interfaces.security import Csp\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {}, {\n            'effective_directive': 'lolnotreal'\n        },\n    )\n)\ndef test_invalid_csp_report(report):\n    with pytest.raises(InterfaceValidationError):\n        Csp.to_python(report)\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'about'\n        }, {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'ms-browser-extension'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'chrome-extension://fdsa'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://localhost:8000'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://localhost'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://foo.superfish.com'\n        }, {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'http://foo.superfish.com'\n        },\n    )\n)\ndef test_blocked_csp_report(report):\n    assert Csp.to_python(report).should_filter() is True\n\n\n@pytest.mark.parametrize(\n    'report', (\n        {\n            'effective_directive': 'style-src',\n            'blocked_uri': 'http://example.com'\n        }, {\n            'effective_directive': 'script-src',\n            'blocked_uri': 'http://example.com'\n        }, {\n            'effective_directive': 'style-src',\n            'source_file': 'http://example.com'\n        }, {\n            'effective_directive': 'style-src'\n        },\n    )\n)\ndef test_valid_csp_report(report):\n    assert Csp.to_python(report).should_filter() is False\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_csp.py", "id": "ef5069d1af0435d53f76307cb4b27be1", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/utils/test_csp.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
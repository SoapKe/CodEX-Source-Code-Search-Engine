{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass WatchIndianPornIE(InfoExtractor):\n    IE_DESC = 'Watch Indian Porn'\n    _VALID_URL = r'https?://(?:www\\.)?watchindianporn\\.net/(?:[^/]+/)*video/(?P<display_id>[^/]+)-(?P<id>[a-zA-Z0-9]+)\\.html'\n    _TEST = {\n        'url': 'http://www.watchindianporn.net/video/hot-milf-from-kerala-shows-off-her-gorgeous-large-breasts-on-camera-RZa2avywNPa.html',\n        'md5': '249589a164dde236ec65832bfce17440',\n        'info_dict': {\n            'id': 'RZa2avywNPa',\n            'display_id': 'hot-milf-from-kerala-shows-off-her-gorgeous-large-breasts-on-camera',\n            'ext': 'mp4',\n            'title': 'Hot milf from kerala shows off her gorgeous large breasts on camera',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 226,\n            'view_count': int,\n            'categories': list,\n            'age_limit': 18,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        info_dict = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        title = self._html_search_regex((\n            r'<title>(.+?)\\s*-\\s*Indian\\s+Porn</title>',\n            r'<h4>(.+?)</h4>'\n        ), webpage, 'title')\n\n        duration = parse_duration(self._search_regex(\n            r'Time:\\s*<strong>\\s*(.+?)\\s*</strong>',\n            webpage, 'duration', fatal=False))\n\n        view_count = int(self._search_regex(\n            r'(?s)Time:\\s*<strong>.*?</strong>.*?<strong>\\s*(\\d+)\\s*</strong>',\n            webpage, 'view count', fatal=False))\n\n        categories = re.findall(\n            r'<a[^>]+class=[\\'\"]categories[\\'\"][^>]*>\\s*([^<]+)\\s*</a>',\n            webpage)\n\n        info_dict.update({\n            'id': video_id,\n            'display_id': display_id,\n            'http_headers': {\n                'Referer': url,\n            },\n            'title': title,\n            'duration': duration,\n            'view_count': view_count,\n            'categories': categories,\n            'age_limit': 18,\n        })\n\n        return info_dict\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass WatchIndianPornIE(InfoExtractor):\n    IE_DESC = 'Watch Indian Porn'\n    _VALID_URL = r'https?://(?:www\\.)?watchindianporn\\.net/(?:[^/]+/)*video/(?P<display_id>[^/]+)-(?P<id>[a-zA-Z0-9]+)\\.html'\n    _TEST = {\n        'url': 'http://www.watchindianporn.net/video/hot-milf-from-kerala-shows-off-her-gorgeous-large-breasts-on-camera-RZa2avywNPa.html',\n        'md5': '249589a164dde236ec65832bfce17440',\n        'info_dict': {\n            'id': 'RZa2avywNPa',\n            'display_id': 'hot-milf-from-kerala-shows-off-her-gorgeous-large-breasts-on-camera',\n            'ext': 'mp4',\n            'title': 'Hot milf from kerala shows off her gorgeous large breasts on camera',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'duration': 226,\n            'view_count': int,\n            'categories': list,\n            'age_limit': 18,\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id)\n\n        info_dict = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        title = self._html_search_regex((\n            r'<title>(.+?)\\s*-\\s*Indian\\s+Porn</title>',\n            r'<h4>(.+?)</h4>'\n        ), webpage, 'title')\n\n        duration = parse_duration(self._search_regex(\n            r'Time:\\s*<strong>\\s*(.+?)\\s*</strong>',\n            webpage, 'duration', fatal=False))\n\n        view_count = int(self._search_regex(\n            r'(?s)Time:\\s*<strong>.*?</strong>.*?<strong>\\s*(\\d+)\\s*</strong>',\n            webpage, 'view count', fatal=False))\n\n        categories = re.findall(\n            r'<a[^>]+class=[\\'\"]categories[\\'\"][^>]*>\\s*([^<]+)\\s*</a>',\n            webpage)\n\n        info_dict.update({\n            'id': video_id,\n            'display_id': display_id,\n            'http_headers': {\n                'Referer': url,\n            },\n            'title': title,\n            'duration': duration,\n            'view_count': view_count,\n            'categories': categories,\n            'age_limit': 18,\n        })\n\n        return info_dict\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "watchindianporn.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/watchindianporn.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "donnemartin", "code": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSteps(object):\n\n    def test_steps(self):\n        steps = Steps()\n        assert_raises(TypeError, steps.count_ways, None)\n        assert_raises(TypeError, steps.count_ways, -1)\n        assert_equal(steps.count_ways(0), 1)\n        assert_equal(steps.count_ways(1), 1)\n        assert_equal(steps.count_ways(2), 2)\n        assert_equal(steps.count_ways(3), 4)\n        assert_equal(steps.count_ways(4), 7)\n        assert_equal(steps.count_ways(10), 274)\n        print('Success: test_steps')\n\n\ndef main():\n    test = TestSteps()\n    test.test_steps()\n\n\nif __name__ == '__main__':\n    main()", "comments": "", "content": "from nose.tools import assert_equal, assert_raises\n\n\nclass TestSteps(object):\n\n    def test_steps(self):\n        steps = Steps()\n        assert_raises(TypeError, steps.count_ways, None)\n        assert_raises(TypeError, steps.count_ways, -1)\n        assert_equal(steps.count_ways(0), 1)\n        assert_equal(steps.count_ways(1), 1)\n        assert_equal(steps.count_ways(2), 2)\n        assert_equal(steps.count_ways(3), 4)\n        assert_equal(steps.count_ways(4), 7)\n        assert_equal(steps.count_ways(10), 274)\n        print('Success: test_steps')\n\n\ndef main():\n    test = TestSteps()\n    test.test_steps()\n\n\nif __name__ == '__main__':\n    main()", "description": "Interactive Python coding interview challenges (algorithms and data structures).  Includes Anki flashcards.", "file_name": "test_steps.py", "id": "d04bc8c63abd1fd9a6f3c87b8a497c95", "language": "Python", "project_name": "interactive-coding-challenges", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/donnemartin-interactive-coding-challenges/donnemartin-interactive-coding-challenges-6eb3114/recursion_dynamic/steps/test_steps.py", "save_time": "", "source": "", "update_at": "2018-03-13T21:01:52Z", "url": "https://github.com/donnemartin/interactive-coding-challenges", "wiki": true}
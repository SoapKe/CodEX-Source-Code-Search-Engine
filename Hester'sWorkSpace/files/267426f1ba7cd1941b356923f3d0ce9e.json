{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    HEADRequest,\n    get_element_by_attribute,\n    parse_iso8601,\n)\n\n\nclass YesJapanIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?yesjapan\\.com/video/(?P<slug>[A-Za-z0-9\\-]*)_(?P<id>[A-Za-z0-9]+)\\.html'\n    _TEST = {\n        'url': 'http://www.yesjapan.com/video/japanese-in-5-20-wa-and-ga-particle-usages_726497834.html',\n        'md5': 'f0be416314e5be21a12b499b330c21cf',\n        'info_dict': {\n            'id': '726497834',\n            'title': 'Japanese in 5! \n            'description': 'This should clear up some issues most students of Japanese encounter with WA and GA....',\n            'ext': 'mp4',\n            'timestamp': 1416391590,\n            'upload_date': '20141119',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._og_search_title(webpage)\n        video_url = self._og_search_video_url(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n\n        timestamp = None\n        submit_info = get_element_by_attribute('class', 'pm-submit-data', webpage)\n        if submit_info:\n            timestamp = parse_iso8601(self._search_regex(\n                r'datetime=\"([^\"]+)\"', submit_info, 'upload date', fatal=False, default=None))\n\n        \n        redirect_req = HEADRequest(video_url)\n        req = self._request_webpage(\n            redirect_req, video_id, note='Resolving final URL', errnote='Could not resolve final URL', fatal=False)\n        if req:\n            video_url = req.geturl()\n\n        formats = [{\n            'format_id': 'sd',\n            'url': video_url,\n        }]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'formats': formats,\n            'description': description,\n            'timestamp': timestamp,\n            'thumbnail': thumbnail,\n        }\n", "comments": "# coding: utf-8\n#20 - WA And GA Particle Usages',\n# attempt to resolve the final URL in order to get a proper extension\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    HEADRequest,\n    get_element_by_attribute,\n    parse_iso8601,\n)\n\n\nclass YesJapanIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?yesjapan\\.com/video/(?P<slug>[A-Za-z0-9\\-]*)_(?P<id>[A-Za-z0-9]+)\\.html'\n    _TEST = {\n        'url': 'http://www.yesjapan.com/video/japanese-in-5-20-wa-and-ga-particle-usages_726497834.html',\n        'md5': 'f0be416314e5be21a12b499b330c21cf',\n        'info_dict': {\n            'id': '726497834',\n            'title': 'Japanese in 5! #20 - WA And GA Particle Usages',\n            'description': 'This should clear up some issues most students of Japanese encounter with WA and GA....',\n            'ext': 'mp4',\n            'timestamp': 1416391590,\n            'upload_date': '20141119',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._og_search_title(webpage)\n        video_url = self._og_search_video_url(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n\n        timestamp = None\n        submit_info = get_element_by_attribute('class', 'pm-submit-data', webpage)\n        if submit_info:\n            timestamp = parse_iso8601(self._search_regex(\n                r'datetime=\"([^\"]+)\"', submit_info, 'upload date', fatal=False, default=None))\n\n        # attempt to resolve the final URL in order to get a proper extension\n        redirect_req = HEADRequest(video_url)\n        req = self._request_webpage(\n            redirect_req, video_id, note='Resolving final URL', errnote='Could not resolve final URL', fatal=False)\n        if req:\n            video_url = req.geturl()\n\n        formats = [{\n            'format_id': 'sd',\n            'url': video_url,\n        }]\n\n        return {\n            'id': video_id,\n            'title': title,\n            'formats': formats,\n            'description': description,\n            'timestamp': timestamp,\n            'thumbnail': thumbnail,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "yesjapan.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/yesjapan.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
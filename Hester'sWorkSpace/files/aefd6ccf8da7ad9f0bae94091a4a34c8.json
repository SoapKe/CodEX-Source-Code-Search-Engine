{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models, tools\n\nclass AssetAssetReport(models.Model):\n    _name = \"asset.asset.report\"\n    _description = \"Assets Analysis\"\n    _auto = False\n\n    name = fields.Char(string='Year', required=False, readonly=True)\n    date = fields.Date(readonly=True)\n    depreciation_date = fields.Date(string='Depreciation Date', readonly=True)\n    asset_id = fields.Many2one('account.asset.asset', string='Asset', readonly=True)\n    asset_category_id = fields.Many2one('account.asset.category', string='Asset category', readonly=True)\n    partner_id = fields.Many2one('res.partner', string='Partner', readonly=True)\n    state = fields.Selection([('draft', 'Draft'), ('open', 'Running'), ('close', 'Close')], string='Status', readonly=True)\n    depreciation_value = fields.Float(string='Amount of Depreciation Lines', readonly=True)\n    installment_value = fields.Float(string='Amount of Installment Lines', readonly=True)\n    move_check = fields.Boolean(string='Posted', readonly=True)\n    installment_nbr = fields.Integer(string='# of Installment Lines', readonly=True)\n    depreciation_nbr = fields.Integer(string='# of Depreciation Lines', readonly=True)\n    gross_value = fields.Float(string='Gross Amount', readonly=True)\n    posted_value = fields.Float(string='Posted Amount', readonly=True)\n    unposted_value = fields.Float(string='Unposted Amount', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n\n    @api.model_cr\n    def init(self):\n        tools.drop_view_if_exists(self._cr, 'asset_asset_report')\n        self._cr.execute(\"\"\"\n            create or replace view asset_asset_report as (\n                select\n                    min(dl.id) as id,\n                    dl.name as name,\n                    dl.depreciation_date as depreciation_date,\n                    a.date as date,\n                    (CASE WHEN dlmin.id = min(dl.id)\n                      THEN a.value\n                      ELSE 0\n                      END) as gross_value,\n                    dl.amount as depreciation_value,\n                    dl.amount as installment_value,\n                    (CASE WHEN dl.move_check\n                      THEN dl.amount\n                      ELSE 0\n                      END) as posted_value,\n                    (CASE WHEN NOT dl.move_check\n                      THEN dl.amount\n                      ELSE 0\n                      END) as unposted_value,\n                    dl.asset_id as asset_id,\n                    dl.move_check as move_check,\n                    a.category_id as asset_category_id,\n                    a.partner_id as partner_id,\n                    a.state as state,\n                    count(dl.*) as installment_nbr,\n                    count(dl.*) as depreciation_nbr,\n                    a.company_id as company_id\n                from account_asset_depreciation_line dl\n                    left join account_asset_asset a on (dl.asset_id=a.id)\n                    left join (select min(d.id) as id,ac.id as ac_id from account_asset_depreciation_line as d inner join account_asset_asset as ac ON (ac.id=d.asset_id) group by ac_id) as dlmin on dlmin.ac_id=a.id\n                group by\n                    dl.amount,dl.asset_id,dl.depreciation_date,dl.name,\n                    a.date, dl.move_check, a.state, a.category_id, a.partner_id, a.company_id,\n                    a.value, a.id, a.salvage_value, dlmin.id\n        )\"\"\")\n", "comments": "                create replace view asset asset report (                 select                     min(dl id) id                      dl name name                      dl depreciation date depreciation date                      date date                      (case when dlmin id   min(dl id)                       then value                       else 0                       end) gross value                      dl amount depreciation value                      dl amount installment value                      (case when dl move check                       then dl amount                       else 0                       end) posted value                      (case when not dl move check                       then dl amount                       else 0                       end) unposted value                      dl asset id asset id                      dl move check move check                      category id asset category id                      partner id partner id                      state state                      count(dl  ) installment nbr                      count(dl  ) depreciation nbr                      company id company id                 account asset depreciation line dl                     left join account asset asset (dl asset id id)                     left join (select min(d id) id ac id ac id account asset depreciation line inner join account asset asset ac on (ac id asset id) group ac id) dlmin dlmin ac id id                 group                     dl amount dl asset id dl depreciation date dl name                      date  dl move check  state  category id  partner id  company id                      value  id  salvage value  dlmin id         )           coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models, tools\n\nclass AssetAssetReport(models.Model):\n    _name = \"asset.asset.report\"\n    _description = \"Assets Analysis\"\n    _auto = False\n\n    name = fields.Char(string='Year', required=False, readonly=True)\n    date = fields.Date(readonly=True)\n    depreciation_date = fields.Date(string='Depreciation Date', readonly=True)\n    asset_id = fields.Many2one('account.asset.asset', string='Asset', readonly=True)\n    asset_category_id = fields.Many2one('account.asset.category', string='Asset category', readonly=True)\n    partner_id = fields.Many2one('res.partner', string='Partner', readonly=True)\n    state = fields.Selection([('draft', 'Draft'), ('open', 'Running'), ('close', 'Close')], string='Status', readonly=True)\n    depreciation_value = fields.Float(string='Amount of Depreciation Lines', readonly=True)\n    installment_value = fields.Float(string='Amount of Installment Lines', readonly=True)\n    move_check = fields.Boolean(string='Posted', readonly=True)\n    installment_nbr = fields.Integer(string='# of Installment Lines', readonly=True)\n    depreciation_nbr = fields.Integer(string='# of Depreciation Lines', readonly=True)\n    gross_value = fields.Float(string='Gross Amount', readonly=True)\n    posted_value = fields.Float(string='Posted Amount', readonly=True)\n    unposted_value = fields.Float(string='Unposted Amount', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n\n    @api.model_cr\n    def init(self):\n        tools.drop_view_if_exists(self._cr, 'asset_asset_report')\n        self._cr.execute(\"\"\"\n            create or replace view asset_asset_report as (\n                select\n                    min(dl.id) as id,\n                    dl.name as name,\n                    dl.depreciation_date as depreciation_date,\n                    a.date as date,\n                    (CASE WHEN dlmin.id = min(dl.id)\n                      THEN a.value\n                      ELSE 0\n                      END) as gross_value,\n                    dl.amount as depreciation_value,\n                    dl.amount as installment_value,\n                    (CASE WHEN dl.move_check\n                      THEN dl.amount\n                      ELSE 0\n                      END) as posted_value,\n                    (CASE WHEN NOT dl.move_check\n                      THEN dl.amount\n                      ELSE 0\n                      END) as unposted_value,\n                    dl.asset_id as asset_id,\n                    dl.move_check as move_check,\n                    a.category_id as asset_category_id,\n                    a.partner_id as partner_id,\n                    a.state as state,\n                    count(dl.*) as installment_nbr,\n                    count(dl.*) as depreciation_nbr,\n                    a.company_id as company_id\n                from account_asset_depreciation_line dl\n                    left join account_asset_asset a on (dl.asset_id=a.id)\n                    left join (select min(d.id) as id,ac.id as ac_id from account_asset_depreciation_line as d inner join account_asset_asset as ac ON (ac.id=d.asset_id) group by ac_id) as dlmin on dlmin.ac_id=a.id\n                group by\n                    dl.amount,dl.asset_id,dl.depreciation_date,dl.name,\n                    a.date, dl.move_check, a.state, a.category_id, a.partner_id, a.company_id,\n                    a.value, a.id, a.salvage_value, dlmin.id\n        )\"\"\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "account_asset_report.py", "id": "aefd6ccf8da7ad9f0bae94091a4a34c8", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/account_asset/report/account_asset_report.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.integrations.example import ExampleIntegration, ExampleSetupView\nfrom sentry.models import Integration, OrganizationIntegration\nfrom sentry.testutils import IntegrationTestCase\n\n\nclass ExampleIntegrationTest(IntegrationTestCase):\n    provider = ExampleIntegration\n\n    def test_basic_flow(self):\n        resp = self.client.get(self.path)\n        assert resp.status_code == 200\n        assert ExampleSetupView.TEMPLATE in resp.content.decode('utf-8')\n\n        resp = self.client.post(self.path, {'name': 'test'})\n        assert resp.status_code == 200\n        self.assertDialogSuccess(resp)\n\n        integration = Integration.objects.get(provider=self.provider.key)\n        assert integration.external_id == 'test'\n        assert integration.name == 'test'\n        assert integration.metadata == {}\n        assert OrganizationIntegration.objects.filter(\n            integration=integration,\n            organization=self.organization,\n        ).exists()\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.integrations.example import ExampleIntegration, ExampleSetupView\nfrom sentry.models import Integration, OrganizationIntegration\nfrom sentry.testutils import IntegrationTestCase\n\n\nclass ExampleIntegrationTest(IntegrationTestCase):\n    provider = ExampleIntegration\n\n    def test_basic_flow(self):\n        resp = self.client.get(self.path)\n        assert resp.status_code == 200\n        assert ExampleSetupView.TEMPLATE in resp.content.decode('utf-8')\n\n        resp = self.client.post(self.path, {'name': 'test'})\n        assert resp.status_code == 200\n        self.assertDialogSuccess(resp)\n\n        integration = Integration.objects.get(provider=self.provider.key)\n        assert integration.external_id == 'test'\n        assert integration.name == 'test'\n        assert integration.metadata == {}\n        assert OrganizationIntegration.objects.filter(\n            integration=integration,\n            organization=self.organization,\n        ).exists()\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_integration_setup.py", "id": "288bb12ee6c88a1e751645563c5739db", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/web/frontend/test_integration_setup.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
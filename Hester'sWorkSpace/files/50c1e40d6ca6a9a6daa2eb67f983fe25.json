{"author": "tgalal", "code": "from yowsup.layers import YowLayer, EventCallback\nfrom yowsup.layers.network import YowNetworkLayer\nclass YowCryptLayer(YowLayer):\n    \n\n    EVENT_KEYS_READY = \"org.openwhatsapp.yowsup.crypt.keys\"\n\n    def __init__(self):\n        super(YowCryptLayer, self).__init__()\n        self.keys = (None,None)\n\n    @EventCallback(YowNetworkLayer.EVENT_STATE_CONNECTED)\n    def onConnected(self, yowLayerEvent):\n        self.keys = (None,None)\n    \n    @EventCallback(EVENT_KEYS_READY)\n    def onKeysReady(self, yowLayerEvent):\n        self.keys = yowLayerEvent.getArg(\"keys\")\n        return True\n\n    def send(self, data):\n        outputKey = self.keys[1]\n        length1 = len(data)\n        if length1 > 1:\n            if outputKey:\n                length1 += 4\n                buf = outputKey.encodeMessage(data, len(data), 0, len(data))\n                res = [0,0,0]\n                res.extend(buf)\n                res[0] = ((8 << 4) | (length1 & 16711680) >> 16) % 256\n                res[1] = ((length1 & 65280) >> 8) % 256\n                res[2] = (length1 & 255) % 256\n                \n\n                data = res\n\n            else:\n                prep = [0,0,0]\n                prep.extend(data)\n                prep[0] = ((0 << 4) | (length1 & 16711680) >> 16) % 256\n                prep[1] = ((length1 & 65280) >> 8) % 256\n                prep[2] = (length1 & 255) % 256\n                data = prep\n\n        self.toLower(bytearray(data))\n\n    def receive(self, data):\n        inputKey = self.keys[0]\n        metaData = data[:3]\n        payload = bytearray(data[3:])\n\n        firstByte = metaData[0]\n        stanzaFlag = (firstByte & 0xF0) >> 4\n        stanzaSize =  ((metaData[1] << 8) + metaData[2])  | ((firstByte & 0x0F) << 16)\n        isEncrypted = ((stanzaFlag & 8) != 0)\n\n\n        if inputKey and isEncrypted:\n            toDecode = data[3:]\n            payload = inputKey.decodeMessage(payload, 0, 4, len(payload) - 4)\n\n        self.toUpper(payload)\n\n    def __str__(self):\n        return \"Crypt Layer\"", "comments": "            send        bytearray    bytearray         receive     bytearray    bytearray         ", "content": "from yowsup.layers import YowLayer, EventCallback\nfrom yowsup.layers.network import YowNetworkLayer\nclass YowCryptLayer(YowLayer):\n    '''\n        send:       bytearray -> bytearray\n        receive:    bytearray -> bytearray\n    '''\n\n    EVENT_KEYS_READY = \"org.openwhatsapp.yowsup.crypt.keys\"\n\n    def __init__(self):\n        super(YowCryptLayer, self).__init__()\n        self.keys = (None,None)\n\n    @EventCallback(YowNetworkLayer.EVENT_STATE_CONNECTED)\n    def onConnected(self, yowLayerEvent):\n        self.keys = (None,None)\n    \n    @EventCallback(EVENT_KEYS_READY)\n    def onKeysReady(self, yowLayerEvent):\n        self.keys = yowLayerEvent.getArg(\"keys\")\n        return True\n\n    def send(self, data):\n        outputKey = self.keys[1]\n        length1 = len(data)\n        if length1 > 1:\n            if outputKey:\n                length1 += 4\n                buf = outputKey.encodeMessage(data, len(data), 0, len(data))\n                res = [0,0,0]\n                res.extend(buf)\n                res[0] = ((8 << 4) | (length1 & 16711680) >> 16) % 256\n                res[1] = ((length1 & 65280) >> 8) % 256\n                res[2] = (length1 & 255) % 256\n                \n\n                data = res\n\n            else:\n                prep = [0,0,0]\n                prep.extend(data)\n                prep[0] = ((0 << 4) | (length1 & 16711680) >> 16) % 256\n                prep[1] = ((length1 & 65280) >> 8) % 256\n                prep[2] = (length1 & 255) % 256\n                data = prep\n\n        self.toLower(bytearray(data))\n\n    def receive(self, data):\n        inputKey = self.keys[0]\n        metaData = data[:3]\n        payload = bytearray(data[3:])\n\n        firstByte = metaData[0]\n        stanzaFlag = (firstByte & 0xF0) >> 4\n        stanzaSize =  ((metaData[1] << 8) + metaData[2])  | ((firstByte & 0x0F) << 16)\n        isEncrypted = ((stanzaFlag & 8) != 0)\n\n\n        if inputKey and isEncrypted:\n            toDecode = data[3:]\n            payload = inputKey.decodeMessage(payload, 0, 4, len(payload) - 4)\n\n        self.toUpper(payload)\n\n    def __str__(self):\n        return \"Crypt Layer\"", "description": "The python WhatsApp library", "file_name": "layer_crypt.py", "id": "50c1e40d6ca6a9a6daa2eb67f983fe25", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/auth/layer_crypt.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
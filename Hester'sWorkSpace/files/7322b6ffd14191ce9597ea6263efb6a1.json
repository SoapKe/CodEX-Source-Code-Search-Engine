{"author": "django", "code": "from django.db import models\n\n\nclass User(models.Model):\n    username = models.CharField(max_length=100)\n    email = models.EmailField()\n\n    def __str__(self):\n        return self.username\n\n\nclass UserProfile(models.Model):\n    user = models.OneToOneField(User, models.CASCADE)\n    city = models.CharField(max_length=100)\n    state = models.CharField(max_length=2)\n\n    def __str__(self):\n        return \"%s, %s\" % (self.city, self.state)\n\n\nclass UserStatResult(models.Model):\n    results = models.CharField(max_length=50)\n\n    def __str__(self):\n        return 'UserStatResults, results = %s' % (self.results,)\n\n\nclass UserStat(models.Model):\n    user = models.OneToOneField(User, models.CASCADE, primary_key=True)\n    posts = models.IntegerField()\n    results = models.ForeignKey(UserStatResult, models.CASCADE)\n\n    def __str__(self):\n        return 'UserStat, posts = %s' % (self.posts,)\n\n\nclass StatDetails(models.Model):\n    base_stats = models.OneToOneField(UserStat, models.CASCADE)\n    comments = models.IntegerField()\n\n    def __str__(self):\n        return 'StatDetails, comments = %s' % (self.comments,)\n\n\nclass AdvancedUserStat(UserStat):\n    karma = models.IntegerField()\n\n\nclass Image(models.Model):\n    name = models.CharField(max_length=100)\n\n\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    image = models.OneToOneField(Image, models.SET_NULL, null=True)\n\n\nclass Parent1(models.Model):\n    name1 = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name1\n\n\nclass Parent2(models.Model):\n    \n    id2 = models.AutoField(primary_key=True)\n    name2 = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name2\n\n\nclass Child1(Parent1, Parent2):\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name1\n\n\nclass Child2(Parent1):\n    parent2 = models.OneToOneField(Parent2, models.CASCADE)\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name1\n\n\nclass Child3(Child2):\n    value3 = models.IntegerField()\n\n\nclass Child4(Child1):\n    value4 = models.IntegerField()\n\n\nclass LinkedList(models.Model):\n    name = models.CharField(max_length=50)\n    previous_item = models.OneToOneField(\n        'self', models.CASCADE,\n        related_name='next_item',\n        blank=True, null=True,\n    )\n", "comments": "  avoid two  id  fields child1 subclass ", "content": "from django.db import models\n\n\nclass User(models.Model):\n    username = models.CharField(max_length=100)\n    email = models.EmailField()\n\n    def __str__(self):\n        return self.username\n\n\nclass UserProfile(models.Model):\n    user = models.OneToOneField(User, models.CASCADE)\n    city = models.CharField(max_length=100)\n    state = models.CharField(max_length=2)\n\n    def __str__(self):\n        return \"%s, %s\" % (self.city, self.state)\n\n\nclass UserStatResult(models.Model):\n    results = models.CharField(max_length=50)\n\n    def __str__(self):\n        return 'UserStatResults, results = %s' % (self.results,)\n\n\nclass UserStat(models.Model):\n    user = models.OneToOneField(User, models.CASCADE, primary_key=True)\n    posts = models.IntegerField()\n    results = models.ForeignKey(UserStatResult, models.CASCADE)\n\n    def __str__(self):\n        return 'UserStat, posts = %s' % (self.posts,)\n\n\nclass StatDetails(models.Model):\n    base_stats = models.OneToOneField(UserStat, models.CASCADE)\n    comments = models.IntegerField()\n\n    def __str__(self):\n        return 'StatDetails, comments = %s' % (self.comments,)\n\n\nclass AdvancedUserStat(UserStat):\n    karma = models.IntegerField()\n\n\nclass Image(models.Model):\n    name = models.CharField(max_length=100)\n\n\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    image = models.OneToOneField(Image, models.SET_NULL, null=True)\n\n\nclass Parent1(models.Model):\n    name1 = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name1\n\n\nclass Parent2(models.Model):\n    # Avoid having two \"id\" fields in the Child1 subclass\n    id2 = models.AutoField(primary_key=True)\n    name2 = models.CharField(max_length=50)\n\n    def __str__(self):\n        return self.name2\n\n\nclass Child1(Parent1, Parent2):\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name1\n\n\nclass Child2(Parent1):\n    parent2 = models.OneToOneField(Parent2, models.CASCADE)\n    value = models.IntegerField()\n\n    def __str__(self):\n        return self.name1\n\n\nclass Child3(Child2):\n    value3 = models.IntegerField()\n\n\nclass Child4(Child1):\n    value4 = models.IntegerField()\n\n\nclass LinkedList(models.Model):\n    name = models.CharField(max_length=50)\n    previous_item = models.OneToOneField(\n        'self', models.CASCADE,\n        related_name='next_item',\n        blank=True, null=True,\n    )\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "7322b6ffd14191ce9597ea6263efb6a1", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/select_related_onetoone/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
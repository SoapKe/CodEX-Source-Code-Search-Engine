{"author": "getredash", "code": "from collections import defaultdict\nfrom redash.models import db, DataSourceGroup, DataSource, Group, Organization, User\nfrom playhouse.migrate import PostgresqlMigrator, migrate\nimport peewee\n\nif __name__ == '__main__':\n    migrator = PostgresqlMigrator(db.database)\n\n    with db.database.transaction():\n        \n        migrate(\n            migrator.add_column('groups', 'type', Group.type)\n        )\n\n        for name in ['default', 'admin']:\n            group = Group.get(Group.name==name)\n            group.type = Group.BUILTIN_GROUP\n            group.save()\n\n        \n        DataSourceGroup.create_table()\n\n        \n        default_org = Organization.get_by_id(1)\n        default_group = Group.get(Group.name==\"default\")\n        for ds in DataSource.all(default_org):\n            DataSourceGroup.create(data_source=ds, group=default_group)\n\n        \n        migrate(\n            migrator.rename_column('users', 'groups', 'old_groups'),\n        )\n\n        migrate(migrator.add_column('users', 'groups', User.groups))\n\n        group_map = dict(map(lambda g: (g.name, g.id), Group.select()))\n        user_map = defaultdict(list)\n        for user in User.select(User, peewee.SQL('old_groups')):\n            group_ids = [group_map[group] for group in user.old_groups]\n            user.update_instance(groups=group_ids)\n\n        migrate(migrator.drop_column('users', 'old_groups'))\n\n    db.close_db(None)\n", "comments": "  add type groups    create association table data sources groups    add default existing data source     change groups list user object ids list ", "content": "from collections import defaultdict\nfrom redash.models import db, DataSourceGroup, DataSource, Group, Organization, User\nfrom playhouse.migrate import PostgresqlMigrator, migrate\nimport peewee\n\nif __name__ == '__main__':\n    migrator = PostgresqlMigrator(db.database)\n\n    with db.database.transaction():\n        # Add type to groups\n        migrate(\n            migrator.add_column('groups', 'type', Group.type)\n        )\n\n        for name in ['default', 'admin']:\n            group = Group.get(Group.name==name)\n            group.type = Group.BUILTIN_GROUP\n            group.save()\n\n        # Create association table between data sources and groups\n        DataSourceGroup.create_table()\n\n        # add default to existing data source:\n        default_org = Organization.get_by_id(1)\n        default_group = Group.get(Group.name==\"default\")\n        for ds in DataSource.all(default_org):\n            DataSourceGroup.create(data_source=ds, group=default_group)\n\n        # change the groups list on a user object to be an ids list\n        migrate(\n            migrator.rename_column('users', 'groups', 'old_groups'),\n        )\n\n        migrate(migrator.add_column('users', 'groups', User.groups))\n\n        group_map = dict(map(lambda g: (g.name, g.id), Group.select()))\n        user_map = defaultdict(list)\n        for user in User.select(User, peewee.SQL('old_groups')):\n            group_ids = [group_map[group] for group in user.old_groups]\n            user.update_instance(groups=group_ids)\n\n        migrate(migrator.drop_column('users', 'old_groups'))\n\n    db.close_db(None)\n", "description": "Make Your Company Data Driven. Connect to any data source, easily visualize and share your data.", "file_name": "0018_add_groups_refs.py", "id": "b8d3df7b07965c6be721950d90871a87", "language": "Python", "project_name": "redash", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/getredash-redash/getredash-redash-0410d83/old_migrations/0018_add_groups_refs.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:54:55Z", "url": "https://github.com/getredash/redash", "wiki": false}
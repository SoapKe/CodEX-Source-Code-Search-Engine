{"author": "ansible", "code": "\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = '''\n---\nmodule: nxos_reboot\nextends_documentation_fragment: nxos\nversion_added: 2.2\nshort_description: Reboot a network device.\ndescription:\n    - Reboot a network device.\nauthor:\n    - Jason Edelman (@jedelman8)\n    - Gabriele Gerbino (@GGabriele)\nnotes:\n    - Tested against NXOSv 7.3.(0)D1(1) on VIRL\n    - The module will fail due to timeout issues, but the reboot will be\n      performed anyway.\noptions:\n    confirm:\n        description:\n            - Safeguard boolean. Set to true if you're sure you want to reboot.\n        required: false\n        default: false\n'''\n\nEXAMPLES = '''\n- nxos_reboot:\n    confirm: true\n'''\n\nRETURN = '''\nrebooted:\n    description: Whether the device was instructed to reboot.\n    returned: success\n    type: boolean\n    sample: true\n'''\n\nfrom ansible.module_utils.network.nxos.nxos import run_commands\nfrom ansible.module_utils.network.nxos.nxos import nxos_argument_spec, check_args\nfrom ansible.module_utils.basic import AnsibleModule\n\n\ndef reboot(module):\n    cmds = [\n        {'command': 'terminal dont-ask', 'output': 'text'},\n        {'command': 'reload', 'output': 'text'}\n    ]\n    run_commands(module, cmds)\n\n\ndef main():\n    argument_spec = dict(\n        confirm=dict(default=False, type='bool')\n    )\n    argument_spec.update(nxos_argument_spec)\n\n    module = AnsibleModule(argument_spec=argument_spec, supports_check_mode=True)\n\n    warnings = list()\n    check_args(module, warnings)\n    results = dict(changed=False, warnings=warnings)\n\n    if module.params['confirm']:\n        if not module.check_mode:\n            reboot(module)\n        results['changed'] = True\n\n    module.exit_json(**results)\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  nxos reboot extends documentation fragment  nxos version added  2 2 short description  reboot network device  description        reboot network device  author        jason edelman ( jedelman8)       gabriele gerbino ( ggabriele) notes        tested nxosv 7 3 (0)d1(1) virl       the module fail due timeout issues  reboot       performed anyway  options      confirm          description                safeguard boolean  set true sure want reboot          required  false         default  false      examples         nxos reboot      confirm  true      return       rebooted      description  whether device instructed reboot      returned  success     type  boolean     sample  true         usr bin python       this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       ", "content": "#!/usr/bin/python\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n#\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'network'}\n\n\nDOCUMENTATION = '''\n---\nmodule: nxos_reboot\nextends_documentation_fragment: nxos\nversion_added: 2.2\nshort_description: Reboot a network device.\ndescription:\n    - Reboot a network device.\nauthor:\n    - Jason Edelman (@jedelman8)\n    - Gabriele Gerbino (@GGabriele)\nnotes:\n    - Tested against NXOSv 7.3.(0)D1(1) on VIRL\n    - The module will fail due to timeout issues, but the reboot will be\n      performed anyway.\noptions:\n    confirm:\n        description:\n            - Safeguard boolean. Set to true if you're sure you want to reboot.\n        required: false\n        default: false\n'''\n\nEXAMPLES = '''\n- nxos_reboot:\n    confirm: true\n'''\n\nRETURN = '''\nrebooted:\n    description: Whether the device was instructed to reboot.\n    returned: success\n    type: boolean\n    sample: true\n'''\n\nfrom ansible.module_utils.network.nxos.nxos import run_commands\nfrom ansible.module_utils.network.nxos.nxos import nxos_argument_spec, check_args\nfrom ansible.module_utils.basic import AnsibleModule\n\n\ndef reboot(module):\n    cmds = [\n        {'command': 'terminal dont-ask', 'output': 'text'},\n        {'command': 'reload', 'output': 'text'}\n    ]\n    run_commands(module, cmds)\n\n\ndef main():\n    argument_spec = dict(\n        confirm=dict(default=False, type='bool')\n    )\n    argument_spec.update(nxos_argument_spec)\n\n    module = AnsibleModule(argument_spec=argument_spec, supports_check_mode=True)\n\n    warnings = list()\n    check_args(module, warnings)\n    results = dict(changed=False, warnings=warnings)\n\n    if module.params['confirm']:\n        if not module.check_mode:\n            reboot(module)\n        results['changed'] = True\n\n    module.exit_json(**results)\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "nxos_reboot.py", "id": "31ba4b61122c42046b224c94b32637ff", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/network/nxos/nxos_reboot.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
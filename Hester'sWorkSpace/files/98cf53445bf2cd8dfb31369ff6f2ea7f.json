{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport base64\nimport binascii\nimport collections\nimport ctypes\nimport email\nimport getpass\nimport io\nimport itertools\nimport optparse\nimport os\nimport platform\nimport re\nimport shlex\nimport shutil\nimport socket\nimport struct\nimport subprocess\nimport sys\nimport xml.etree.ElementTree\n\n\ntry:\n    import urllib.request as compat_urllib_request\nexcept ImportError:  \n    import urllib2 as compat_urllib_request\n\ntry:\n    import urllib.error as compat_urllib_error\nexcept ImportError:  \n    import urllib2 as compat_urllib_error\n\ntry:\n    import urllib.parse as compat_urllib_parse\nexcept ImportError:  \n    import urllib as compat_urllib_parse\n\ntry:\n    from urllib.parse import urlparse as compat_urllib_parse_urlparse\nexcept ImportError:  \n    from urlparse import urlparse as compat_urllib_parse_urlparse\n\ntry:\n    import urllib.parse as compat_urlparse\nexcept ImportError:  \n    import urlparse as compat_urlparse\n\ntry:\n    import urllib.response as compat_urllib_response\nexcept ImportError:  \n    import urllib as compat_urllib_response\n\ntry:\n    import http.cookiejar as compat_cookiejar\nexcept ImportError:  \n    import cookielib as compat_cookiejar\n\ntry:\n    import http.cookies as compat_cookies\nexcept ImportError:  \n    import Cookie as compat_cookies\n\ntry:\n    import html.entities as compat_html_entities\nexcept ImportError:  \n    import htmlentitydefs as compat_html_entities\n\ntry:  \n    compat_html_entities_html5 = compat_html_entities.html5\nexcept AttributeError:\n    \n    compat_html_entities_html5 = {\n        'Aacute': '\\xc1',\n        'aacute': '\\xe1',\n        'Aacute;': '\\xc1',\n        'aacute;': '\\xe1',\n        'Abreve;': '\\u0102',\n        'abreve;': '\\u0103',\n        'ac;': '\\u223e',\n        'acd;': '\\u223f',\n        'acE;': '\\u223e\\u0333',\n        'Acirc': '\\xc2',\n        'acirc': '\\xe2',\n        'Acirc;': '\\xc2',\n        'acirc;': '\\xe2',\n        'acute': '\\xb4',\n        'acute;': '\\xb4',\n        'Acy;': '\\u0410',\n        'acy;': '\\u0430',\n        'AElig': '\\xc6',\n        'aelig': '\\xe6',\n        'AElig;': '\\xc6',\n        'aelig;': '\\xe6',\n        'af;': '\\u2061',\n        'Afr;': '\\U0001d504',\n        'afr;': '\\U0001d51e',\n        'Agrave': '\\xc0',\n        'agrave': '\\xe0',\n        'Agrave;': '\\xc0',\n        'agrave;': '\\xe0',\n        'alefsym;': '\\u2135',\n        'aleph;': '\\u2135',\n        'Alpha;': '\\u0391',\n        'alpha;': '\\u03b1',\n        'Amacr;': '\\u0100',\n        'amacr;': '\\u0101',\n        'amalg;': '\\u2a3f',\n        'AMP': '&',\n        'amp': '&',\n        'AMP;': '&',\n        'amp;': '&',\n        'And;': '\\u2a53',\n        'and;': '\\u2227',\n        'andand;': '\\u2a55',\n        'andd;': '\\u2a5c',\n        'andslope;': '\\u2a58',\n        'andv;': '\\u2a5a',\n        'ang;': '\\u2220',\n        'ange;': '\\u29a4',\n        'angle;': '\\u2220',\n        'angmsd;': '\\u2221',\n        'angmsdaa;': '\\u29a8',\n        'angmsdab;': '\\u29a9',\n        'angmsdac;': '\\u29aa',\n        'angmsdad;': '\\u29ab',\n        'angmsdae;': '\\u29ac',\n        'angmsdaf;': '\\u29ad',\n        'angmsdag;': '\\u29ae',\n        'angmsdah;': '\\u29af',\n        'angrt;': '\\u221f',\n        'angrtvb;': '\\u22be',\n        'angrtvbd;': '\\u299d',\n        'angsph;': '\\u2222',\n        'angst;': '\\xc5',\n        'angzarr;': '\\u237c',\n        'Aogon;': '\\u0104',\n        'aogon;': '\\u0105',\n        'Aopf;': '\\U0001d538',\n        'aopf;': '\\U0001d552',\n        'ap;': '\\u2248',\n        'apacir;': '\\u2a6f',\n        'apE;': '\\u2a70',\n        'ape;': '\\u224a',\n        'apid;': '\\u224b',\n        'apos;': \"'\",\n        'ApplyFunction;': '\\u2061',\n        'approx;': '\\u2248',\n        'approxeq;': '\\u224a',\n        'Aring': '\\xc5',\n        'aring': '\\xe5',\n        'Aring;': '\\xc5',\n        'aring;': '\\xe5',\n        'Ascr;': '\\U0001d49c',\n        'ascr;': '\\U0001d4b6',\n        'Assign;': '\\u2254',\n        'ast;': '*',\n        'asymp;': '\\u2248',\n        'asympeq;': '\\u224d',\n        'Atilde': '\\xc3',\n        'atilde': '\\xe3',\n        'Atilde;': '\\xc3',\n        'atilde;': '\\xe3',\n        'Auml': '\\xc4',\n        'auml': '\\xe4',\n        'Auml;': '\\xc4',\n        'auml;': '\\xe4',\n        'awconint;': '\\u2233',\n        'awint;': '\\u2a11',\n        'backcong;': '\\u224c',\n        'backepsilon;': '\\u03f6',\n        'backprime;': '\\u2035',\n        'backsim;': '\\u223d',\n        'backsimeq;': '\\u22cd',\n        'Backslash;': '\\u2216',\n        'Barv;': '\\u2ae7',\n        'barvee;': '\\u22bd',\n        'Barwed;': '\\u2306',\n        'barwed;': '\\u2305',\n        'barwedge;': '\\u2305',\n        'bbrk;': '\\u23b5',\n        'bbrktbrk;': '\\u23b6',\n        'bcong;': '\\u224c',\n        'Bcy;': '\\u0411',\n        'bcy;': '\\u0431',\n        'bdquo;': '\\u201e',\n        'becaus;': '\\u2235',\n        'Because;': '\\u2235',\n        'because;': '\\u2235',\n        'bemptyv;': '\\u29b0',\n        'bepsi;': '\\u03f6',\n        'bernou;': '\\u212c',\n        'Bernoullis;': '\\u212c',\n        'Beta;': '\\u0392',\n        'beta;': '\\u03b2',\n        'beth;': '\\u2136',\n        'between;': '\\u226c',\n        'Bfr;': '\\U0001d505',\n        'bfr;': '\\U0001d51f',\n        'bigcap;': '\\u22c2',\n        'bigcirc;': '\\u25ef',\n        'bigcup;': '\\u22c3',\n        'bigodot;': '\\u2a00',\n        'bigoplus;': '\\u2a01',\n        'bigotimes;': '\\u2a02',\n        'bigsqcup;': '\\u2a06',\n        'bigstar;': '\\u2605',\n        'bigtriangledown;': '\\u25bd',\n        'bigtriangleup;': '\\u25b3',\n        'biguplus;': '\\u2a04',\n        'bigvee;': '\\u22c1',\n        'bigwedge;': '\\u22c0',\n        'bkarow;': '\\u290d',\n        'blacklozenge;': '\\u29eb',\n        'blacksquare;': '\\u25aa',\n        'blacktriangle;': '\\u25b4',\n        'blacktriangledown;': '\\u25be',\n        'blacktriangleleft;': '\\u25c2',\n        'blacktriangleright;': '\\u25b8',\n        'blank;': '\\u2423',\n        'blk12;': '\\u2592',\n        'blk14;': '\\u2591',\n        'blk34;': '\\u2593',\n        'block;': '\\u2588',\n        'bne;': '=\\u20e5',\n        'bnequiv;': '\\u2261\\u20e5',\n        'bNot;': '\\u2aed',\n        'bnot;': '\\u2310',\n        'Bopf;': '\\U0001d539',\n        'bopf;': '\\U0001d553',\n        'bot;': '\\u22a5',\n        'bottom;': '\\u22a5',\n        'bowtie;': '\\u22c8',\n        'boxbox;': '\\u29c9',\n        'boxDL;': '\\u2557',\n        'boxDl;': '\\u2556',\n        'boxdL;': '\\u2555',\n        'boxdl;': '\\u2510',\n        'boxDR;': '\\u2554',\n        'boxDr;': '\\u2553',\n        'boxdR;': '\\u2552',\n        'boxdr;': '\\u250c',\n        'boxH;': '\\u2550',\n        'boxh;': '\\u2500',\n        'boxHD;': '\\u2566',\n        'boxHd;': '\\u2564',\n        'boxhD;': '\\u2565',\n        'boxhd;': '\\u252c',\n        'boxHU;': '\\u2569',\n        'boxHu;': '\\u2567',\n        'boxhU;': '\\u2568',\n        'boxhu;': '\\u2534',\n        'boxminus;': '\\u229f',\n        'boxplus;': '\\u229e',\n        'boxtimes;': '\\u22a0',\n        'boxUL;': '\\u255d',\n        'boxUl;': '\\u255c',\n        'boxuL;': '\\u255b',\n        'boxul;': '\\u2518',\n        'boxUR;': '\\u255a',\n        'boxUr;': '\\u2559',\n        'boxuR;': '\\u2558',\n        'boxur;': '\\u2514',\n        'boxV;': '\\u2551',\n        'boxv;': '\\u2502',\n        'boxVH;': '\\u256c',\n        'boxVh;': '\\u256b',\n        'boxvH;': '\\u256a',\n        'boxvh;': '\\u253c',\n        'boxVL;': '\\u2563',\n        'boxVl;': '\\u2562',\n        'boxvL;': '\\u2561',\n        'boxvl;': '\\u2524',\n        'boxVR;': '\\u2560',\n        'boxVr;': '\\u255f',\n        'boxvR;': '\\u255e',\n        'boxvr;': '\\u251c',\n        'bprime;': '\\u2035',\n        'Breve;': '\\u02d8',\n        'breve;': '\\u02d8',\n        'brvbar': '\\xa6',\n        'brvbar;': '\\xa6',\n        'Bscr;': '\\u212c',\n        'bscr;': '\\U0001d4b7',\n        'bsemi;': '\\u204f',\n        'bsim;': '\\u223d',\n        'bsime;': '\\u22cd',\n        'bsol;': '\\\\',\n        'bsolb;': '\\u29c5',\n        'bsolhsub;': '\\u27c8',\n        'bull;': '\\u2022',\n        'bullet;': '\\u2022',\n        'bump;': '\\u224e',\n        'bumpE;': '\\u2aae',\n        'bumpe;': '\\u224f',\n        'Bumpeq;': '\\u224e',\n        'bumpeq;': '\\u224f',\n        'Cacute;': '\\u0106',\n        'cacute;': '\\u0107',\n        'Cap;': '\\u22d2',\n        'cap;': '\\u2229',\n        'capand;': '\\u2a44',\n        'capbrcup;': '\\u2a49',\n        'capcap;': '\\u2a4b',\n        'capcup;': '\\u2a47',\n        'capdot;': '\\u2a40',\n        'CapitalDifferentialD;': '\\u2145',\n        'caps;': '\\u2229\\ufe00',\n        'caret;': '\\u2041',\n        'caron;': '\\u02c7',\n        'Cayleys;': '\\u212d',\n        'ccaps;': '\\u2a4d',\n        'Ccaron;': '\\u010c',\n        'ccaron;': '\\u010d',\n        'Ccedil': '\\xc7',\n        'ccedil': '\\xe7',\n        'Ccedil;': '\\xc7',\n        'ccedil;': '\\xe7',\n        'Ccirc;': '\\u0108',\n        'ccirc;': '\\u0109',\n        'Cconint;': '\\u2230',\n        'ccups;': '\\u2a4c',\n        'ccupssm;': '\\u2a50',\n        'Cdot;': '\\u010a',\n        'cdot;': '\\u010b',\n        'cedil': '\\xb8',\n        'cedil;': '\\xb8',\n        'Cedilla;': '\\xb8',\n        'cemptyv;': '\\u29b2',\n        'cent': '\\xa2',\n        'cent;': '\\xa2',\n        'CenterDot;': '\\xb7',\n        'centerdot;': '\\xb7',\n        'Cfr;': '\\u212d',\n        'cfr;': '\\U0001d520',\n        'CHcy;': '\\u0427',\n        'chcy;': '\\u0447',\n        'check;': '\\u2713',\n        'checkmark;': '\\u2713',\n        'Chi;': '\\u03a7',\n        'chi;': '\\u03c7',\n        'cir;': '\\u25cb',\n        'circ;': '\\u02c6',\n        'circeq;': '\\u2257',\n        'circlearrowleft;': '\\u21ba',\n        'circlearrowright;': '\\u21bb',\n        'circledast;': '\\u229b',\n        'circledcirc;': '\\u229a',\n        'circleddash;': '\\u229d',\n        'CircleDot;': '\\u2299',\n        'circledR;': '\\xae',\n        'circledS;': '\\u24c8',\n        'CircleMinus;': '\\u2296',\n        'CirclePlus;': '\\u2295',\n        'CircleTimes;': '\\u2297',\n        'cirE;': '\\u29c3',\n        'cire;': '\\u2257',\n        'cirfnint;': '\\u2a10',\n        'cirmid;': '\\u2aef',\n        'cirscir;': '\\u29c2',\n        'ClockwiseContourIntegral;': '\\u2232',\n        'CloseCurlyDoubleQuote;': '\\u201d',\n        'CloseCurlyQuote;': '\\u2019',\n        'clubs;': '\\u2663',\n        'clubsuit;': '\\u2663',\n        'Colon;': '\\u2237',\n        'colon;': ':',\n        'Colone;': '\\u2a74',\n        'colone;': '\\u2254',\n        'coloneq;': '\\u2254',\n        'comma;': ',',\n        'commat;': '@',\n        'comp;': '\\u2201',\n        'compfn;': '\\u2218',\n        'complement;': '\\u2201',\n        'complexes;': '\\u2102',\n        'cong;': '\\u2245',\n        'congdot;': '\\u2a6d',\n        'Congruent;': '\\u2261',\n        'Conint;': '\\u222f',\n        'conint;': '\\u222e',\n        'ContourIntegral;': '\\u222e',\n        'Copf;': '\\u2102',\n        'copf;': '\\U0001d554',\n        'coprod;': '\\u2210',\n        'Coproduct;': '\\u2210',\n        'COPY': '\\xa9',\n        'copy': '\\xa9',\n        'COPY;': '\\xa9',\n        'copy;': '\\xa9',\n        'copysr;': '\\u2117',\n        'CounterClockwiseContourIntegral;': '\\u2233',\n        'crarr;': '\\u21b5',\n        'Cross;': '\\u2a2f',\n        'cross;': '\\u2717',\n        'Cscr;': '\\U0001d49e',\n        'cscr;': '\\U0001d4b8',\n        'csub;': '\\u2acf',\n        'csube;': '\\u2ad1',\n        'csup;': '\\u2ad0',\n        'csupe;': '\\u2ad2',\n        'ctdot;': '\\u22ef',\n        'cudarrl;': '\\u2938',\n        'cudarrr;': '\\u2935',\n        'cuepr;': '\\u22de',\n        'cuesc;': '\\u22df',\n        'cularr;': '\\u21b6',\n        'cularrp;': '\\u293d',\n        'Cup;': '\\u22d3',\n        'cup;': '\\u222a',\n        'cupbrcap;': '\\u2a48',\n        'CupCap;': '\\u224d',\n        'cupcap;': '\\u2a46',\n        'cupcup;': '\\u2a4a',\n        'cupdot;': '\\u228d',\n        'cupor;': '\\u2a45',\n        'cups;': '\\u222a\\ufe00',\n        'curarr;': '\\u21b7',\n        'curarrm;': '\\u293c',\n        'curlyeqprec;': '\\u22de',\n        'curlyeqsucc;': '\\u22df',\n        'curlyvee;': '\\u22ce',\n        'curlywedge;': '\\u22cf',\n        'curren': '\\xa4',\n        'curren;': '\\xa4',\n        'curvearrowleft;': '\\u21b6',\n        'curvearrowright;': '\\u21b7',\n        'cuvee;': '\\u22ce',\n        'cuwed;': '\\u22cf',\n        'cwconint;': '\\u2232',\n        'cwint;': '\\u2231',\n        'cylcty;': '\\u232d',\n        'Dagger;': '\\u2021',\n        'dagger;': '\\u2020',\n        'daleth;': '\\u2138',\n        'Darr;': '\\u21a1',\n        'dArr;': '\\u21d3',\n        'darr;': '\\u2193',\n        'dash;': '\\u2010',\n        'Dashv;': '\\u2ae4',\n        'dashv;': '\\u22a3',\n        'dbkarow;': '\\u290f',\n        'dblac;': '\\u02dd',\n        'Dcaron;': '\\u010e',\n        'dcaron;': '\\u010f',\n        'Dcy;': '\\u0414',\n        'dcy;': '\\u0434',\n        'DD;': '\\u2145',\n        'dd;': '\\u2146',\n        'ddagger;': '\\u2021',\n        'ddarr;': '\\u21ca',\n        'DDotrahd;': '\\u2911',\n        'ddotseq;': '\\u2a77',\n        'deg': '\\xb0',\n        'deg;': '\\xb0',\n        'Del;': '\\u2207',\n        'Delta;': '\\u0394',\n        'delta;': '\\u03b4',\n        'demptyv;': '\\u29b1',\n        'dfisht;': '\\u297f',\n        'Dfr;': '\\U0001d507',\n        'dfr;': '\\U0001d521',\n        'dHar;': '\\u2965',\n        'dharl;': '\\u21c3',\n        'dharr;': '\\u21c2',\n        'DiacriticalAcute;': '\\xb4',\n        'DiacriticalDot;': '\\u02d9',\n        'DiacriticalDoubleAcute;': '\\u02dd',\n        'DiacriticalGrave;': '`',\n        'DiacriticalTilde;': '\\u02dc',\n        'diam;': '\\u22c4',\n        'Diamond;': '\\u22c4',\n        'diamond;': '\\u22c4',\n        'diamondsuit;': '\\u2666',\n        'diams;': '\\u2666',\n        'die;': '\\xa8',\n        'DifferentialD;': '\\u2146',\n        'digamma;': '\\u03dd',\n        'disin;': '\\u22f2',\n        'div;': '\\xf7',\n        'divide': '\\xf7',\n        'divide;': '\\xf7',\n        'divideontimes;': '\\u22c7',\n        'divonx;': '\\u22c7',\n        'DJcy;': '\\u0402',\n        'djcy;': '\\u0452',\n        'dlcorn;': '\\u231e',\n        'dlcrop;': '\\u230d',\n        'dollar;': '$',\n        'Dopf;': '\\U0001d53b',\n        'dopf;': '\\U0001d555',\n        'Dot;': '\\xa8',\n        'dot;': '\\u02d9',\n        'DotDot;': '\\u20dc',\n        'doteq;': '\\u2250',\n        'doteqdot;': '\\u2251',\n        'DotEqual;': '\\u2250',\n        'dotminus;': '\\u2238',\n        'dotplus;': '\\u2214',\n        'dotsquare;': '\\u22a1',\n        'doublebarwedge;': '\\u2306',\n        'DoubleContourIntegral;': '\\u222f',\n        'DoubleDot;': '\\xa8',\n        'DoubleDownArrow;': '\\u21d3',\n        'DoubleLeftArrow;': '\\u21d0',\n        'DoubleLeftRightArrow;': '\\u21d4',\n        'DoubleLeftTee;': '\\u2ae4',\n        'DoubleLongLeftArrow;': '\\u27f8',\n        'DoubleLongLeftRightArrow;': '\\u27fa',\n        'DoubleLongRightArrow;': '\\u27f9',\n        'DoubleRightArrow;': '\\u21d2',\n        'DoubleRightTee;': '\\u22a8',\n        'DoubleUpArrow;': '\\u21d1',\n        'DoubleUpDownArrow;': '\\u21d5',\n        'DoubleVerticalBar;': '\\u2225',\n        'DownArrow;': '\\u2193',\n        'Downarrow;': '\\u21d3',\n        'downarrow;': '\\u2193',\n        'DownArrowBar;': '\\u2913',\n        'DownArrowUpArrow;': '\\u21f5',\n        'DownBreve;': '\\u0311',\n        'downdownarrows;': '\\u21ca',\n        'downharpoonleft;': '\\u21c3',\n        'downharpoonright;': '\\u21c2',\n        'DownLeftRightVector;': '\\u2950',\n        'DownLeftTeeVector;': '\\u295e',\n        'DownLeftVector;': '\\u21bd',\n        'DownLeftVectorBar;': '\\u2956',\n        'DownRightTeeVector;': '\\u295f',\n        'DownRightVector;': '\\u21c1',\n        'DownRightVectorBar;': '\\u2957',\n        'DownTee;': '\\u22a4',\n        'DownTeeArrow;': '\\u21a7',\n        'drbkarow;': '\\u2910',\n        'drcorn;': '\\u231f',\n        'drcrop;': '\\u230c',\n        'Dscr;': '\\U0001d49f',\n        'dscr;': '\\U0001d4b9',\n        'DScy;': '\\u0405',\n        'dscy;': '\\u0455',\n        'dsol;': '\\u29f6',\n        'Dstrok;': '\\u0110',\n        'dstrok;': '\\u0111',\n        'dtdot;': '\\u22f1',\n        'dtri;': '\\u25bf',\n        'dtrif;': '\\u25be',\n        'duarr;': '\\u21f5',\n        'duhar;': '\\u296f',\n        'dwangle;': '\\u29a6',\n        'DZcy;': '\\u040f',\n        'dzcy;': '\\u045f',\n        'dzigrarr;': '\\u27ff',\n        'Eacute': '\\xc9',\n        'eacute': '\\xe9',\n        'Eacute;': '\\xc9',\n        'eacute;': '\\xe9',\n        'easter;': '\\u2a6e',\n        'Ecaron;': '\\u011a',\n        'ecaron;': '\\u011b',\n        'ecir;': '\\u2256',\n        'Ecirc': '\\xca',\n        'ecirc': '\\xea',\n        'Ecirc;': '\\xca',\n        'ecirc;': '\\xea',\n        'ecolon;': '\\u2255',\n        'Ecy;': '\\u042d',\n        'ecy;': '\\u044d',\n        'eDDot;': '\\u2a77',\n        'Edot;': '\\u0116',\n        'eDot;': '\\u2251',\n        'edot;': '\\u0117',\n        'ee;': '\\u2147',\n        'efDot;': '\\u2252',\n        'Efr;': '\\U0001d508',\n        'efr;': '\\U0001d522',\n        'eg;': '\\u2a9a',\n        'Egrave': '\\xc8',\n        'egrave': '\\xe8',\n        'Egrave;': '\\xc8',\n        'egrave;': '\\xe8',\n        'egs;': '\\u2a96',\n        'egsdot;': '\\u2a98',\n        'el;': '\\u2a99',\n        'Element;': '\\u2208',\n        'elinters;': '\\u23e7',\n        'ell;': '\\u2113',\n        'els;': '\\u2a95',\n        'elsdot;': '\\u2a97',\n        'Emacr;': '\\u0112',\n        'emacr;': '\\u0113',\n        'empty;': '\\u2205',\n        'emptyset;': '\\u2205',\n        'EmptySmallSquare;': '\\u25fb',\n        'emptyv;': '\\u2205',\n        'EmptyVerySmallSquare;': '\\u25ab',\n        'emsp13;': '\\u2004',\n        'emsp14;': '\\u2005',\n        'emsp;': '\\u2003',\n        'ENG;': '\\u014a',\n        'eng;': '\\u014b',\n        'ensp;': '\\u2002',\n        'Eogon;': '\\u0118',\n        'eogon;': '\\u0119',\n        'Eopf;': '\\U0001d53c',\n        'eopf;': '\\U0001d556',\n        'epar;': '\\u22d5',\n        'eparsl;': '\\u29e3',\n        'eplus;': '\\u2a71',\n        'epsi;': '\\u03b5',\n        'Epsilon;': '\\u0395',\n        'epsilon;': '\\u03b5',\n        'epsiv;': '\\u03f5',\n        'eqcirc;': '\\u2256',\n        'eqcolon;': '\\u2255',\n        'eqsim;': '\\u2242',\n        'eqslantgtr;': '\\u2a96',\n        'eqslantless;': '\\u2a95',\n        'Equal;': '\\u2a75',\n        'equals;': '=',\n        'EqualTilde;': '\\u2242',\n        'equest;': '\\u225f',\n        'Equilibrium;': '\\u21cc',\n        'equiv;': '\\u2261',\n        'equivDD;': '\\u2a78',\n        'eqvparsl;': '\\u29e5',\n        'erarr;': '\\u2971',\n        'erDot;': '\\u2253',\n        'Escr;': '\\u2130',\n        'escr;': '\\u212f',\n        'esdot;': '\\u2250',\n        'Esim;': '\\u2a73',\n        'esim;': '\\u2242',\n        'Eta;': '\\u0397',\n        'eta;': '\\u03b7',\n        'ETH': '\\xd0',\n        'eth': '\\xf0',\n        'ETH;': '\\xd0',\n        'eth;': '\\xf0',\n        'Euml': '\\xcb',\n        'euml': '\\xeb',\n        'Euml;': '\\xcb',\n        'euml;': '\\xeb',\n        'euro;': '\\u20ac',\n        'excl;': '!',\n        'exist;': '\\u2203',\n        'Exists;': '\\u2203',\n        'expectation;': '\\u2130',\n        'ExponentialE;': '\\u2147',\n        'exponentiale;': '\\u2147',\n        'fallingdotseq;': '\\u2252',\n        'Fcy;': '\\u0424',\n        'fcy;': '\\u0444',\n        'female;': '\\u2640',\n        'ffilig;': '\\ufb03',\n        'fflig;': '\\ufb00',\n        'ffllig;': '\\ufb04',\n        'Ffr;': '\\U0001d509',\n        'ffr;': '\\U0001d523',\n        'filig;': '\\ufb01',\n        'FilledSmallSquare;': '\\u25fc',\n        'FilledVerySmallSquare;': '\\u25aa',\n        'fjlig;': 'fj',\n        'flat;': '\\u266d',\n        'fllig;': '\\ufb02',\n        'fltns;': '\\u25b1',\n        'fnof;': '\\u0192',\n        'Fopf;': '\\U0001d53d',\n        'fopf;': '\\U0001d557',\n        'ForAll;': '\\u2200',\n        'forall;': '\\u2200',\n        'fork;': '\\u22d4',\n        'forkv;': '\\u2ad9',\n        'Fouriertrf;': '\\u2131',\n        'fpartint;': '\\u2a0d',\n        'frac12': '\\xbd',\n        'frac12;': '\\xbd',\n        'frac13;': '\\u2153',\n        'frac14': '\\xbc',\n        'frac14;': '\\xbc',\n        'frac15;': '\\u2155',\n        'frac16;': '\\u2159',\n        'frac18;': '\\u215b',\n        'frac23;': '\\u2154',\n        'frac25;': '\\u2156',\n        'frac34': '\\xbe',\n        'frac34;': '\\xbe',\n        'frac35;': '\\u2157',\n        'frac38;': '\\u215c',\n        'frac45;': '\\u2158',\n        'frac56;': '\\u215a',\n        'frac58;': '\\u215d',\n        'frac78;': '\\u215e',\n        'frasl;': '\\u2044',\n        'frown;': '\\u2322',\n        'Fscr;': '\\u2131',\n        'fscr;': '\\U0001d4bb',\n        'gacute;': '\\u01f5',\n        'Gamma;': '\\u0393',\n        'gamma;': '\\u03b3',\n        'Gammad;': '\\u03dc',\n        'gammad;': '\\u03dd',\n        'gap;': '\\u2a86',\n        'Gbreve;': '\\u011e',\n        'gbreve;': '\\u011f',\n        'Gcedil;': '\\u0122',\n        'Gcirc;': '\\u011c',\n        'gcirc;': '\\u011d',\n        'Gcy;': '\\u0413',\n        'gcy;': '\\u0433',\n        'Gdot;': '\\u0120',\n        'gdot;': '\\u0121',\n        'gE;': '\\u2267',\n        'ge;': '\\u2265',\n        'gEl;': '\\u2a8c',\n        'gel;': '\\u22db',\n        'geq;': '\\u2265',\n        'geqq;': '\\u2267',\n        'geqslant;': '\\u2a7e',\n        'ges;': '\\u2a7e',\n        'gescc;': '\\u2aa9',\n        'gesdot;': '\\u2a80',\n        'gesdoto;': '\\u2a82',\n        'gesdotol;': '\\u2a84',\n        'gesl;': '\\u22db\\ufe00',\n        'gesles;': '\\u2a94',\n        'Gfr;': '\\U0001d50a',\n        'gfr;': '\\U0001d524',\n        'Gg;': '\\u22d9',\n        'gg;': '\\u226b',\n        'ggg;': '\\u22d9',\n        'gimel;': '\\u2137',\n        'GJcy;': '\\u0403',\n        'gjcy;': '\\u0453',\n        'gl;': '\\u2277',\n        'gla;': '\\u2aa5',\n        'glE;': '\\u2a92',\n        'glj;': '\\u2aa4',\n        'gnap;': '\\u2a8a',\n        'gnapprox;': '\\u2a8a',\n        'gnE;': '\\u2269',\n        'gne;': '\\u2a88',\n        'gneq;': '\\u2a88',\n        'gneqq;': '\\u2269',\n        'gnsim;': '\\u22e7',\n        'Gopf;': '\\U0001d53e',\n        'gopf;': '\\U0001d558',\n        'grave;': '`',\n        'GreaterEqual;': '\\u2265',\n        'GreaterEqualLess;': '\\u22db',\n        'GreaterFullEqual;': '\\u2267',\n        'GreaterGreater;': '\\u2aa2',\n        'GreaterLess;': '\\u2277',\n        'GreaterSlantEqual;': '\\u2a7e',\n        'GreaterTilde;': '\\u2273',\n        'Gscr;': '\\U0001d4a2',\n        'gscr;': '\\u210a',\n        'gsim;': '\\u2273',\n        'gsime;': '\\u2a8e',\n        'gsiml;': '\\u2a90',\n        'GT': '>',\n        'gt': '>',\n        'GT;': '>',\n        'Gt;': '\\u226b',\n        'gt;': '>',\n        'gtcc;': '\\u2aa7',\n        'gtcir;': '\\u2a7a',\n        'gtdot;': '\\u22d7',\n        'gtlPar;': '\\u2995',\n        'gtquest;': '\\u2a7c',\n        'gtrapprox;': '\\u2a86',\n        'gtrarr;': '\\u2978',\n        'gtrdot;': '\\u22d7',\n        'gtreqless;': '\\u22db',\n        'gtreqqless;': '\\u2a8c',\n        'gtrless;': '\\u2277',\n        'gtrsim;': '\\u2273',\n        'gvertneqq;': '\\u2269\\ufe00',\n        'gvnE;': '\\u2269\\ufe00',\n        'Hacek;': '\\u02c7',\n        'hairsp;': '\\u200a',\n        'half;': '\\xbd',\n        'hamilt;': '\\u210b',\n        'HARDcy;': '\\u042a',\n        'hardcy;': '\\u044a',\n        'hArr;': '\\u21d4',\n        'harr;': '\\u2194',\n        'harrcir;': '\\u2948',\n        'harrw;': '\\u21ad',\n        'Hat;': '^',\n        'hbar;': '\\u210f',\n        'Hcirc;': '\\u0124',\n        'hcirc;': '\\u0125',\n        'hearts;': '\\u2665',\n        'heartsuit;': '\\u2665',\n        'hellip;': '\\u2026',\n        'hercon;': '\\u22b9',\n        'Hfr;': '\\u210c',\n        'hfr;': '\\U0001d525',\n        'HilbertSpace;': '\\u210b',\n        'hksearow;': '\\u2925',\n        'hkswarow;': '\\u2926',\n        'hoarr;': '\\u21ff',\n        'homtht;': '\\u223b',\n        'hookleftarrow;': '\\u21a9',\n        'hookrightarrow;': '\\u21aa',\n        'Hopf;': '\\u210d',\n        'hopf;': '\\U0001d559',\n        'horbar;': '\\u2015',\n        'HorizontalLine;': '\\u2500',\n        'Hscr;': '\\u210b',\n        'hscr;': '\\U0001d4bd',\n        'hslash;': '\\u210f',\n        'Hstrok;': '\\u0126',\n        'hstrok;': '\\u0127',\n        'HumpDownHump;': '\\u224e',\n        'HumpEqual;': '\\u224f',\n        'hybull;': '\\u2043',\n        'hyphen;': '\\u2010',\n        'Iacute': '\\xcd',\n        'iacute': '\\xed',\n        'Iacute;': '\\xcd',\n        'iacute;': '\\xed',\n        'ic;': '\\u2063',\n        'Icirc': '\\xce',\n        'icirc': '\\xee',\n        'Icirc;': '\\xce',\n        'icirc;': '\\xee',\n        'Icy;': '\\u0418',\n        'icy;': '\\u0438',\n        'Idot;': '\\u0130',\n        'IEcy;': '\\u0415',\n        'iecy;': '\\u0435',\n        'iexcl': '\\xa1',\n        'iexcl;': '\\xa1',\n        'iff;': '\\u21d4',\n        'Ifr;': '\\u2111',\n        'ifr;': '\\U0001d526',\n        'Igrave': '\\xcc',\n        'igrave': '\\xec',\n        'Igrave;': '\\xcc',\n        'igrave;': '\\xec',\n        'ii;': '\\u2148',\n        'iiiint;': '\\u2a0c',\n        'iiint;': '\\u222d',\n        'iinfin;': '\\u29dc',\n        'iiota;': '\\u2129',\n        'IJlig;': '\\u0132',\n        'ijlig;': '\\u0133',\n        'Im;': '\\u2111',\n        'Imacr;': '\\u012a',\n        'imacr;': '\\u012b',\n        'image;': '\\u2111',\n        'ImaginaryI;': '\\u2148',\n        'imagline;': '\\u2110',\n        'imagpart;': '\\u2111',\n        'imath;': '\\u0131',\n        'imof;': '\\u22b7',\n        'imped;': '\\u01b5',\n        'Implies;': '\\u21d2',\n        'in;': '\\u2208',\n        'incare;': '\\u2105',\n        'infin;': '\\u221e',\n        'infintie;': '\\u29dd',\n        'inodot;': '\\u0131',\n        'Int;': '\\u222c',\n        'int;': '\\u222b',\n        'intcal;': '\\u22ba',\n        'integers;': '\\u2124',\n        'Integral;': '\\u222b',\n        'intercal;': '\\u22ba',\n        'Intersection;': '\\u22c2',\n        'intlarhk;': '\\u2a17',\n        'intprod;': '\\u2a3c',\n        'InvisibleComma;': '\\u2063',\n        'InvisibleTimes;': '\\u2062',\n        'IOcy;': '\\u0401',\n        'iocy;': '\\u0451',\n        'Iogon;': '\\u012e',\n        'iogon;': '\\u012f',\n        'Iopf;': '\\U0001d540',\n        'iopf;': '\\U0001d55a',\n        'Iota;': '\\u0399',\n        'iota;': '\\u03b9',\n        'iprod;': '\\u2a3c',\n        'iquest': '\\xbf',\n        'iquest;': '\\xbf',\n        'Iscr;': '\\u2110',\n        'iscr;': '\\U0001d4be',\n        'isin;': '\\u2208',\n        'isindot;': '\\u22f5',\n        'isinE;': '\\u22f9',\n        'isins;': '\\u22f4',\n        'isinsv;': '\\u22f3',\n        'isinv;': '\\u2208',\n        'it;': '\\u2062',\n        'Itilde;': '\\u0128',\n        'itilde;': '\\u0129',\n        'Iukcy;': '\\u0406',\n        'iukcy;': '\\u0456',\n        'Iuml': '\\xcf',\n        'iuml': '\\xef',\n        'Iuml;': '\\xcf',\n        'iuml;': '\\xef',\n        'Jcirc;': '\\u0134',\n        'jcirc;': '\\u0135',\n        'Jcy;': '\\u0419',\n        'jcy;': '\\u0439',\n        'Jfr;': '\\U0001d50d',\n        'jfr;': '\\U0001d527',\n        'jmath;': '\\u0237',\n        'Jopf;': '\\U0001d541',\n        'jopf;': '\\U0001d55b',\n        'Jscr;': '\\U0001d4a5',\n        'jscr;': '\\U0001d4bf',\n        'Jsercy;': '\\u0408',\n        'jsercy;': '\\u0458',\n        'Jukcy;': '\\u0404',\n        'jukcy;': '\\u0454',\n        'Kappa;': '\\u039a',\n        'kappa;': '\\u03ba',\n        'kappav;': '\\u03f0',\n        'Kcedil;': '\\u0136',\n        'kcedil;': '\\u0137',\n        'Kcy;': '\\u041a',\n        'kcy;': '\\u043a',\n        'Kfr;': '\\U0001d50e',\n        'kfr;': '\\U0001d528',\n        'kgreen;': '\\u0138',\n        'KHcy;': '\\u0425',\n        'khcy;': '\\u0445',\n        'KJcy;': '\\u040c',\n        'kjcy;': '\\u045c',\n        'Kopf;': '\\U0001d542',\n        'kopf;': '\\U0001d55c',\n        'Kscr;': '\\U0001d4a6',\n        'kscr;': '\\U0001d4c0',\n        'lAarr;': '\\u21da',\n        'Lacute;': '\\u0139',\n        'lacute;': '\\u013a',\n        'laemptyv;': '\\u29b4',\n        'lagran;': '\\u2112',\n        'Lambda;': '\\u039b',\n        'lambda;': '\\u03bb',\n        'Lang;': '\\u27ea',\n        'lang;': '\\u27e8',\n        'langd;': '\\u2991',\n        'langle;': '\\u27e8',\n        'lap;': '\\u2a85',\n        'Laplacetrf;': '\\u2112',\n        'laquo': '\\xab',\n        'laquo;': '\\xab',\n        'Larr;': '\\u219e',\n        'lArr;': '\\u21d0',\n        'larr;': '\\u2190',\n        'larrb;': '\\u21e4',\n        'larrbfs;': '\\u291f',\n        'larrfs;': '\\u291d',\n        'larrhk;': '\\u21a9',\n        'larrlp;': '\\u21ab',\n        'larrpl;': '\\u2939',\n        'larrsim;': '\\u2973',\n        'larrtl;': '\\u21a2',\n        'lat;': '\\u2aab',\n        'lAtail;': '\\u291b',\n        'latail;': '\\u2919',\n        'late;': '\\u2aad',\n        'lates;': '\\u2aad\\ufe00',\n        'lBarr;': '\\u290e',\n        'lbarr;': '\\u290c',\n        'lbbrk;': '\\u2772',\n        'lbrace;': '{',\n        'lbrack;': '[',\n        'lbrke;': '\\u298b',\n        'lbrksld;': '\\u298f',\n        'lbrkslu;': '\\u298d',\n        'Lcaron;': '\\u013d',\n        'lcaron;': '\\u013e',\n        'Lcedil;': '\\u013b',\n        'lcedil;': '\\u013c',\n        'lceil;': '\\u2308',\n        'lcub;': '{',\n        'Lcy;': '\\u041b',\n        'lcy;': '\\u043b',\n        'ldca;': '\\u2936',\n        'ldquo;': '\\u201c',\n        'ldquor;': '\\u201e',\n        'ldrdhar;': '\\u2967',\n        'ldrushar;': '\\u294b',\n        'ldsh;': '\\u21b2',\n        'lE;': '\\u2266',\n        'le;': '\\u2264',\n        'LeftAngleBracket;': '\\u27e8',\n        'LeftArrow;': '\\u2190',\n        'Leftarrow;': '\\u21d0',\n        'leftarrow;': '\\u2190',\n        'LeftArrowBar;': '\\u21e4',\n        'LeftArrowRightArrow;': '\\u21c6',\n        'leftarrowtail;': '\\u21a2',\n        'LeftCeiling;': '\\u2308',\n        'LeftDoubleBracket;': '\\u27e6',\n        'LeftDownTeeVector;': '\\u2961',\n        'LeftDownVector;': '\\u21c3',\n        'LeftDownVectorBar;': '\\u2959',\n        'LeftFloor;': '\\u230a',\n        'leftharpoondown;': '\\u21bd',\n        'leftharpoonup;': '\\u21bc',\n        'leftleftarrows;': '\\u21c7',\n        'LeftRightArrow;': '\\u2194',\n        'Leftrightarrow;': '\\u21d4',\n        'leftrightarrow;': '\\u2194',\n        'leftrightarrows;': '\\u21c6',\n        'leftrightharpoons;': '\\u21cb',\n        'leftrightsquigarrow;': '\\u21ad',\n        'LeftRightVector;': '\\u294e',\n        'LeftTee;': '\\u22a3',\n        'LeftTeeArrow;': '\\u21a4',\n        'LeftTeeVector;': '\\u295a',\n        'leftthreetimes;': '\\u22cb',\n        'LeftTriangle;': '\\u22b2',\n        'LeftTriangleBar;': '\\u29cf',\n        'LeftTriangleEqual;': '\\u22b4',\n        'LeftUpDownVector;': '\\u2951',\n        'LeftUpTeeVector;': '\\u2960',\n        'LeftUpVector;': '\\u21bf',\n        'LeftUpVectorBar;': '\\u2958',\n        'LeftVector;': '\\u21bc',\n        'LeftVectorBar;': '\\u2952',\n        'lEg;': '\\u2a8b',\n        'leg;': '\\u22da',\n        'leq;': '\\u2264',\n        'leqq;': '\\u2266',\n        'leqslant;': '\\u2a7d',\n        'les;': '\\u2a7d',\n        'lescc;': '\\u2aa8',\n        'lesdot;': '\\u2a7f',\n        'lesdoto;': '\\u2a81',\n        'lesdotor;': '\\u2a83',\n        'lesg;': '\\u22da\\ufe00',\n        'lesges;': '\\u2a93',\n        'lessapprox;': '\\u2a85',\n        'lessdot;': '\\u22d6',\n        'lesseqgtr;': '\\u22da',\n        'lesseqqgtr;': '\\u2a8b',\n        'LessEqualGreater;': '\\u22da',\n        'LessFullEqual;': '\\u2266',\n        'LessGreater;': '\\u2276',\n        'lessgtr;': '\\u2276',\n        'LessLess;': '\\u2aa1',\n        'lesssim;': '\\u2272',\n        'LessSlantEqual;': '\\u2a7d',\n        'LessTilde;': '\\u2272',\n        'lfisht;': '\\u297c',\n        'lfloor;': '\\u230a',\n        'Lfr;': '\\U0001d50f',\n        'lfr;': '\\U0001d529',\n        'lg;': '\\u2276',\n        'lgE;': '\\u2a91',\n        'lHar;': '\\u2962',\n        'lhard;': '\\u21bd',\n        'lharu;': '\\u21bc',\n        'lharul;': '\\u296a',\n        'lhblk;': '\\u2584',\n        'LJcy;': '\\u0409',\n        'ljcy;': '\\u0459',\n        'Ll;': '\\u22d8',\n        'll;': '\\u226a',\n        'llarr;': '\\u21c7',\n        'llcorner;': '\\u231e',\n        'Lleftarrow;': '\\u21da',\n        'llhard;': '\\u296b',\n        'lltri;': '\\u25fa',\n        'Lmidot;': '\\u013f',\n        'lmidot;': '\\u0140',\n        'lmoust;': '\\u23b0',\n        'lmoustache;': '\\u23b0',\n        'lnap;': '\\u2a89',\n        'lnapprox;': '\\u2a89',\n        'lnE;': '\\u2268',\n        'lne;': '\\u2a87',\n        'lneq;': '\\u2a87',\n        'lneqq;': '\\u2268',\n        'lnsim;': '\\u22e6',\n        'loang;': '\\u27ec',\n        'loarr;': '\\u21fd',\n        'lobrk;': '\\u27e6',\n        'LongLeftArrow;': '\\u27f5',\n        'Longleftarrow;': '\\u27f8',\n        'longleftarrow;': '\\u27f5',\n        'LongLeftRightArrow;': '\\u27f7',\n        'Longleftrightarrow;': '\\u27fa',\n        'longleftrightarrow;': '\\u27f7',\n        'longmapsto;': '\\u27fc',\n        'LongRightArrow;': '\\u27f6',\n        'Longrightarrow;': '\\u27f9',\n        'longrightarrow;': '\\u27f6',\n        'looparrowleft;': '\\u21ab',\n        'looparrowright;': '\\u21ac',\n        'lopar;': '\\u2985',\n        'Lopf;': '\\U0001d543',\n        'lopf;': '\\U0001d55d',\n        'loplus;': '\\u2a2d',\n        'lotimes;': '\\u2a34',\n        'lowast;': '\\u2217',\n        'lowbar;': '_',\n        'LowerLeftArrow;': '\\u2199',\n        'LowerRightArrow;': '\\u2198',\n        'loz;': '\\u25ca',\n        'lozenge;': '\\u25ca',\n        'lozf;': '\\u29eb',\n        'lpar;': '(',\n        'lparlt;': '\\u2993',\n        'lrarr;': '\\u21c6',\n        'lrcorner;': '\\u231f',\n        'lrhar;': '\\u21cb',\n        'lrhard;': '\\u296d',\n        'lrm;': '\\u200e',\n        'lrtri;': '\\u22bf',\n        'lsaquo;': '\\u2039',\n        'Lscr;': '\\u2112',\n        'lscr;': '\\U0001d4c1',\n        'Lsh;': '\\u21b0',\n        'lsh;': '\\u21b0',\n        'lsim;': '\\u2272',\n        'lsime;': '\\u2a8d',\n        'lsimg;': '\\u2a8f',\n        'lsqb;': '[',\n        'lsquo;': '\\u2018',\n        'lsquor;': '\\u201a',\n        'Lstrok;': '\\u0141',\n        'lstrok;': '\\u0142',\n        'LT': '<',\n        'lt': '<',\n        'LT;': '<',\n        'Lt;': '\\u226a',\n        'lt;': '<',\n        'ltcc;': '\\u2aa6',\n        'ltcir;': '\\u2a79',\n        'ltdot;': '\\u22d6',\n        'lthree;': '\\u22cb',\n        'ltimes;': '\\u22c9',\n        'ltlarr;': '\\u2976',\n        'ltquest;': '\\u2a7b',\n        'ltri;': '\\u25c3',\n        'ltrie;': '\\u22b4',\n        'ltrif;': '\\u25c2',\n        'ltrPar;': '\\u2996',\n        'lurdshar;': '\\u294a',\n        'luruhar;': '\\u2966',\n        'lvertneqq;': '\\u2268\\ufe00',\n        'lvnE;': '\\u2268\\ufe00',\n        'macr': '\\xaf',\n        'macr;': '\\xaf',\n        'male;': '\\u2642',\n        'malt;': '\\u2720',\n        'maltese;': '\\u2720',\n        'Map;': '\\u2905',\n        'map;': '\\u21a6',\n        'mapsto;': '\\u21a6',\n        'mapstodown;': '\\u21a7',\n        'mapstoleft;': '\\u21a4',\n        'mapstoup;': '\\u21a5',\n        'marker;': '\\u25ae',\n        'mcomma;': '\\u2a29',\n        'Mcy;': '\\u041c',\n        'mcy;': '\\u043c',\n        'mdash;': '\\u2014',\n        'mDDot;': '\\u223a',\n        'measuredangle;': '\\u2221',\n        'MediumSpace;': '\\u205f',\n        'Mellintrf;': '\\u2133',\n        'Mfr;': '\\U0001d510',\n        'mfr;': '\\U0001d52a',\n        'mho;': '\\u2127',\n        'micro': '\\xb5',\n        'micro;': '\\xb5',\n        'mid;': '\\u2223',\n        'midast;': '*',\n        'midcir;': '\\u2af0',\n        'middot': '\\xb7',\n        'middot;': '\\xb7',\n        'minus;': '\\u2212',\n        'minusb;': '\\u229f',\n        'minusd;': '\\u2238',\n        'minusdu;': '\\u2a2a',\n        'MinusPlus;': '\\u2213',\n        'mlcp;': '\\u2adb',\n        'mldr;': '\\u2026',\n        'mnplus;': '\\u2213',\n        'models;': '\\u22a7',\n        'Mopf;': '\\U0001d544',\n        'mopf;': '\\U0001d55e',\n        'mp;': '\\u2213',\n        'Mscr;': '\\u2133',\n        'mscr;': '\\U0001d4c2',\n        'mstpos;': '\\u223e',\n        'Mu;': '\\u039c',\n        'mu;': '\\u03bc',\n        'multimap;': '\\u22b8',\n        'mumap;': '\\u22b8',\n        'nabla;': '\\u2207',\n        'Nacute;': '\\u0143',\n        'nacute;': '\\u0144',\n        'nang;': '\\u2220\\u20d2',\n        'nap;': '\\u2249',\n        'napE;': '\\u2a70\\u0338',\n        'napid;': '\\u224b\\u0338',\n        'napos;': '\\u0149',\n        'napprox;': '\\u2249',\n        'natur;': '\\u266e',\n        'natural;': '\\u266e',\n        'naturals;': '\\u2115',\n        'nbsp': '\\xa0',\n        'nbsp;': '\\xa0',\n        'nbump;': '\\u224e\\u0338',\n        'nbumpe;': '\\u224f\\u0338',\n        'ncap;': '\\u2a43',\n        'Ncaron;': '\\u0147',\n        'ncaron;': '\\u0148',\n        'Ncedil;': '\\u0145',\n        'ncedil;': '\\u0146',\n        'ncong;': '\\u2247',\n        'ncongdot;': '\\u2a6d\\u0338',\n        'ncup;': '\\u2a42',\n        'Ncy;': '\\u041d',\n        'ncy;': '\\u043d',\n        'ndash;': '\\u2013',\n        'ne;': '\\u2260',\n        'nearhk;': '\\u2924',\n        'neArr;': '\\u21d7',\n        'nearr;': '\\u2197',\n        'nearrow;': '\\u2197',\n        'nedot;': '\\u2250\\u0338',\n        'NegativeMediumSpace;': '\\u200b',\n        'NegativeThickSpace;': '\\u200b',\n        'NegativeThinSpace;': '\\u200b',\n        'NegativeVeryThinSpace;': '\\u200b',\n        'nequiv;': '\\u2262',\n        'nesear;': '\\u2928',\n        'nesim;': '\\u2242\\u0338',\n        'NestedGreaterGreater;': '\\u226b',\n        'NestedLessLess;': '\\u226a',\n        'NewLine;': '\\n',\n        'nexist;': '\\u2204',\n        'nexists;': '\\u2204',\n        'Nfr;': '\\U0001d511',\n        'nfr;': '\\U0001d52b',\n        'ngE;': '\\u2267\\u0338',\n        'nge;': '\\u2271',\n        'ngeq;': '\\u2271',\n        'ngeqq;': '\\u2267\\u0338',\n        'ngeqslant;': '\\u2a7e\\u0338',\n        'nges;': '\\u2a7e\\u0338',\n        'nGg;': '\\u22d9\\u0338',\n        'ngsim;': '\\u2275',\n        'nGt;': '\\u226b\\u20d2',\n        'ngt;': '\\u226f',\n        'ngtr;': '\\u226f',\n        'nGtv;': '\\u226b\\u0338',\n        'nhArr;': '\\u21ce',\n        'nharr;': '\\u21ae',\n        'nhpar;': '\\u2af2',\n        'ni;': '\\u220b',\n        'nis;': '\\u22fc',\n        'nisd;': '\\u22fa',\n        'niv;': '\\u220b',\n        'NJcy;': '\\u040a',\n        'njcy;': '\\u045a',\n        'nlArr;': '\\u21cd',\n        'nlarr;': '\\u219a',\n        'nldr;': '\\u2025',\n        'nlE;': '\\u2266\\u0338',\n        'nle;': '\\u2270',\n        'nLeftarrow;': '\\u21cd',\n        'nleftarrow;': '\\u219a',\n        'nLeftrightarrow;': '\\u21ce',\n        'nleftrightarrow;': '\\u21ae',\n        'nleq;': '\\u2270',\n        'nleqq;': '\\u2266\\u0338',\n        'nleqslant;': '\\u2a7d\\u0338',\n        'nles;': '\\u2a7d\\u0338',\n        'nless;': '\\u226e',\n        'nLl;': '\\u22d8\\u0338',\n        'nlsim;': '\\u2274',\n        'nLt;': '\\u226a\\u20d2',\n        'nlt;': '\\u226e',\n        'nltri;': '\\u22ea',\n        'nltrie;': '\\u22ec',\n        'nLtv;': '\\u226a\\u0338',\n        'nmid;': '\\u2224',\n        'NoBreak;': '\\u2060',\n        'NonBreakingSpace;': '\\xa0',\n        'Nopf;': '\\u2115',\n        'nopf;': '\\U0001d55f',\n        'not': '\\xac',\n        'Not;': '\\u2aec',\n        'not;': '\\xac',\n        'NotCongruent;': '\\u2262',\n        'NotCupCap;': '\\u226d',\n        'NotDoubleVerticalBar;': '\\u2226',\n        'NotElement;': '\\u2209',\n        'NotEqual;': '\\u2260',\n        'NotEqualTilde;': '\\u2242\\u0338',\n        'NotExists;': '\\u2204',\n        'NotGreater;': '\\u226f',\n        'NotGreaterEqual;': '\\u2271',\n        'NotGreaterFullEqual;': '\\u2267\\u0338',\n        'NotGreaterGreater;': '\\u226b\\u0338',\n        'NotGreaterLess;': '\\u2279',\n        'NotGreaterSlantEqual;': '\\u2a7e\\u0338',\n        'NotGreaterTilde;': '\\u2275',\n        'NotHumpDownHump;': '\\u224e\\u0338',\n        'NotHumpEqual;': '\\u224f\\u0338',\n        'notin;': '\\u2209',\n        'notindot;': '\\u22f5\\u0338',\n        'notinE;': '\\u22f9\\u0338',\n        'notinva;': '\\u2209',\n        'notinvb;': '\\u22f7',\n        'notinvc;': '\\u22f6',\n        'NotLeftTriangle;': '\\u22ea',\n        'NotLeftTriangleBar;': '\\u29cf\\u0338',\n        'NotLeftTriangleEqual;': '\\u22ec',\n        'NotLess;': '\\u226e',\n        'NotLessEqual;': '\\u2270',\n        'NotLessGreater;': '\\u2278',\n        'NotLessLess;': '\\u226a\\u0338',\n        'NotLessSlantEqual;': '\\u2a7d\\u0338',\n        'NotLessTilde;': '\\u2274',\n        'NotNestedGreaterGreater;': '\\u2aa2\\u0338',\n        'NotNestedLessLess;': '\\u2aa1\\u0338',\n        'notni;': '\\u220c',\n        'notniva;': '\\u220c',\n        'notnivb;': '\\u22fe',\n        'notnivc;': '\\u22fd',\n        'NotPrecedes;': '\\u2280',\n        'NotPrecedesEqual;': '\\u2aaf\\u0338',\n        'NotPrecedesSlantEqual;': '\\u22e0',\n        'NotReverseElement;': '\\u220c',\n        'NotRightTriangle;': '\\u22eb',\n        'NotRightTriangleBar;': '\\u29d0\\u0338',\n        'NotRightTriangleEqual;': '\\u22ed',\n        'NotSquareSubset;': '\\u228f\\u0338',\n        'NotSquareSubsetEqual;': '\\u22e2',\n        'NotSquareSuperset;': '\\u2290\\u0338',\n        'NotSquareSupersetEqual;': '\\u22e3',\n        'NotSubset;': '\\u2282\\u20d2',\n        'NotSubsetEqual;': '\\u2288',\n        'NotSucceeds;': '\\u2281',\n        'NotSucceedsEqual;': '\\u2ab0\\u0338',\n        'NotSucceedsSlantEqual;': '\\u22e1',\n        'NotSucceedsTilde;': '\\u227f\\u0338',\n        'NotSuperset;': '\\u2283\\u20d2',\n        'NotSupersetEqual;': '\\u2289',\n        'NotTilde;': '\\u2241',\n        'NotTildeEqual;': '\\u2244',\n        'NotTildeFullEqual;': '\\u2247',\n        'NotTildeTilde;': '\\u2249',\n        'NotVerticalBar;': '\\u2224',\n        'npar;': '\\u2226',\n        'nparallel;': '\\u2226',\n        'nparsl;': '\\u2afd\\u20e5',\n        'npart;': '\\u2202\\u0338',\n        'npolint;': '\\u2a14',\n        'npr;': '\\u2280',\n        'nprcue;': '\\u22e0',\n        'npre;': '\\u2aaf\\u0338',\n        'nprec;': '\\u2280',\n        'npreceq;': '\\u2aaf\\u0338',\n        'nrArr;': '\\u21cf',\n        'nrarr;': '\\u219b',\n        'nrarrc;': '\\u2933\\u0338',\n        'nrarrw;': '\\u219d\\u0338',\n        'nRightarrow;': '\\u21cf',\n        'nrightarrow;': '\\u219b',\n        'nrtri;': '\\u22eb',\n        'nrtrie;': '\\u22ed',\n        'nsc;': '\\u2281',\n        'nsccue;': '\\u22e1',\n        'nsce;': '\\u2ab0\\u0338',\n        'Nscr;': '\\U0001d4a9',\n        'nscr;': '\\U0001d4c3',\n        'nshortmid;': '\\u2224',\n        'nshortparallel;': '\\u2226',\n        'nsim;': '\\u2241',\n        'nsime;': '\\u2244',\n        'nsimeq;': '\\u2244',\n        'nsmid;': '\\u2224',\n        'nspar;': '\\u2226',\n        'nsqsube;': '\\u22e2',\n        'nsqsupe;': '\\u22e3',\n        'nsub;': '\\u2284',\n        'nsubE;': '\\u2ac5\\u0338',\n        'nsube;': '\\u2288',\n        'nsubset;': '\\u2282\\u20d2',\n        'nsubseteq;': '\\u2288',\n        'nsubseteqq;': '\\u2ac5\\u0338',\n        'nsucc;': '\\u2281',\n        'nsucceq;': '\\u2ab0\\u0338',\n        'nsup;': '\\u2285',\n        'nsupE;': '\\u2ac6\\u0338',\n        'nsupe;': '\\u2289',\n        'nsupset;': '\\u2283\\u20d2',\n        'nsupseteq;': '\\u2289',\n        'nsupseteqq;': '\\u2ac6\\u0338',\n        'ntgl;': '\\u2279',\n        'Ntilde': '\\xd1',\n        'ntilde': '\\xf1',\n        'Ntilde;': '\\xd1',\n        'ntilde;': '\\xf1',\n        'ntlg;': '\\u2278',\n        'ntriangleleft;': '\\u22ea',\n        'ntrianglelefteq;': '\\u22ec',\n        'ntriangleright;': '\\u22eb',\n        'ntrianglerighteq;': '\\u22ed',\n        'Nu;': '\\u039d',\n        'nu;': '\\u03bd',\n        'num;': '\n        'numero;': '\\u2116',\n        'numsp;': '\\u2007',\n        'nvap;': '\\u224d\\u20d2',\n        'nVDash;': '\\u22af',\n        'nVdash;': '\\u22ae',\n        'nvDash;': '\\u22ad',\n        'nvdash;': '\\u22ac',\n        'nvge;': '\\u2265\\u20d2',\n        'nvgt;': '>\\u20d2',\n        'nvHarr;': '\\u2904',\n        'nvinfin;': '\\u29de',\n        'nvlArr;': '\\u2902',\n        'nvle;': '\\u2264\\u20d2',\n        'nvlt;': '<\\u20d2',\n        'nvltrie;': '\\u22b4\\u20d2',\n        'nvrArr;': '\\u2903',\n        'nvrtrie;': '\\u22b5\\u20d2',\n        'nvsim;': '\\u223c\\u20d2',\n        'nwarhk;': '\\u2923',\n        'nwArr;': '\\u21d6',\n        'nwarr;': '\\u2196',\n        'nwarrow;': '\\u2196',\n        'nwnear;': '\\u2927',\n        'Oacute': '\\xd3',\n        'oacute': '\\xf3',\n        'Oacute;': '\\xd3',\n        'oacute;': '\\xf3',\n        'oast;': '\\u229b',\n        'ocir;': '\\u229a',\n        'Ocirc': '\\xd4',\n        'ocirc': '\\xf4',\n        'Ocirc;': '\\xd4',\n        'ocirc;': '\\xf4',\n        'Ocy;': '\\u041e',\n        'ocy;': '\\u043e',\n        'odash;': '\\u229d',\n        'Odblac;': '\\u0150',\n        'odblac;': '\\u0151',\n        'odiv;': '\\u2a38',\n        'odot;': '\\u2299',\n        'odsold;': '\\u29bc',\n        'OElig;': '\\u0152',\n        'oelig;': '\\u0153',\n        'ofcir;': '\\u29bf',\n        'Ofr;': '\\U0001d512',\n        'ofr;': '\\U0001d52c',\n        'ogon;': '\\u02db',\n        'Ograve': '\\xd2',\n        'ograve': '\\xf2',\n        'Ograve;': '\\xd2',\n        'ograve;': '\\xf2',\n        'ogt;': '\\u29c1',\n        'ohbar;': '\\u29b5',\n        'ohm;': '\\u03a9',\n        'oint;': '\\u222e',\n        'olarr;': '\\u21ba',\n        'olcir;': '\\u29be',\n        'olcross;': '\\u29bb',\n        'oline;': '\\u203e',\n        'olt;': '\\u29c0',\n        'Omacr;': '\\u014c',\n        'omacr;': '\\u014d',\n        'Omega;': '\\u03a9',\n        'omega;': '\\u03c9',\n        'Omicron;': '\\u039f',\n        'omicron;': '\\u03bf',\n        'omid;': '\\u29b6',\n        'ominus;': '\\u2296',\n        'Oopf;': '\\U0001d546',\n        'oopf;': '\\U0001d560',\n        'opar;': '\\u29b7',\n        'OpenCurlyDoubleQuote;': '\\u201c',\n        'OpenCurlyQuote;': '\\u2018',\n        'operp;': '\\u29b9',\n        'oplus;': '\\u2295',\n        'Or;': '\\u2a54',\n        'or;': '\\u2228',\n        'orarr;': '\\u21bb',\n        'ord;': '\\u2a5d',\n        'order;': '\\u2134',\n        'orderof;': '\\u2134',\n        'ordf': '\\xaa',\n        'ordf;': '\\xaa',\n        'ordm': '\\xba',\n        'ordm;': '\\xba',\n        'origof;': '\\u22b6',\n        'oror;': '\\u2a56',\n        'orslope;': '\\u2a57',\n        'orv;': '\\u2a5b',\n        'oS;': '\\u24c8',\n        'Oscr;': '\\U0001d4aa',\n        'oscr;': '\\u2134',\n        'Oslash': '\\xd8',\n        'oslash': '\\xf8',\n        'Oslash;': '\\xd8',\n        'oslash;': '\\xf8',\n        'osol;': '\\u2298',\n        'Otilde': '\\xd5',\n        'otilde': '\\xf5',\n        'Otilde;': '\\xd5',\n        'otilde;': '\\xf5',\n        'Otimes;': '\\u2a37',\n        'otimes;': '\\u2297',\n        'otimesas;': '\\u2a36',\n        'Ouml': '\\xd6',\n        'ouml': '\\xf6',\n        'Ouml;': '\\xd6',\n        'ouml;': '\\xf6',\n        'ovbar;': '\\u233d',\n        'OverBar;': '\\u203e',\n        'OverBrace;': '\\u23de',\n        'OverBracket;': '\\u23b4',\n        'OverParenthesis;': '\\u23dc',\n        'par;': '\\u2225',\n        'para': '\\xb6',\n        'para;': '\\xb6',\n        'parallel;': '\\u2225',\n        'parsim;': '\\u2af3',\n        'parsl;': '\\u2afd',\n        'part;': '\\u2202',\n        'PartialD;': '\\u2202',\n        'Pcy;': '\\u041f',\n        'pcy;': '\\u043f',\n        'percnt;': '%',\n        'period;': '.',\n        'permil;': '\\u2030',\n        'perp;': '\\u22a5',\n        'pertenk;': '\\u2031',\n        'Pfr;': '\\U0001d513',\n        'pfr;': '\\U0001d52d',\n        'Phi;': '\\u03a6',\n        'phi;': '\\u03c6',\n        'phiv;': '\\u03d5',\n        'phmmat;': '\\u2133',\n        'phone;': '\\u260e',\n        'Pi;': '\\u03a0',\n        'pi;': '\\u03c0',\n        'pitchfork;': '\\u22d4',\n        'piv;': '\\u03d6',\n        'planck;': '\\u210f',\n        'planckh;': '\\u210e',\n        'plankv;': '\\u210f',\n        'plus;': '+',\n        'plusacir;': '\\u2a23',\n        'plusb;': '\\u229e',\n        'pluscir;': '\\u2a22',\n        'plusdo;': '\\u2214',\n        'plusdu;': '\\u2a25',\n        'pluse;': '\\u2a72',\n        'PlusMinus;': '\\xb1',\n        'plusmn': '\\xb1',\n        'plusmn;': '\\xb1',\n        'plussim;': '\\u2a26',\n        'plustwo;': '\\u2a27',\n        'pm;': '\\xb1',\n        'Poincareplane;': '\\u210c',\n        'pointint;': '\\u2a15',\n        'Popf;': '\\u2119',\n        'popf;': '\\U0001d561',\n        'pound': '\\xa3',\n        'pound;': '\\xa3',\n        'Pr;': '\\u2abb',\n        'pr;': '\\u227a',\n        'prap;': '\\u2ab7',\n        'prcue;': '\\u227c',\n        'prE;': '\\u2ab3',\n        'pre;': '\\u2aaf',\n        'prec;': '\\u227a',\n        'precapprox;': '\\u2ab7',\n        'preccurlyeq;': '\\u227c',\n        'Precedes;': '\\u227a',\n        'PrecedesEqual;': '\\u2aaf',\n        'PrecedesSlantEqual;': '\\u227c',\n        'PrecedesTilde;': '\\u227e',\n        'preceq;': '\\u2aaf',\n        'precnapprox;': '\\u2ab9',\n        'precneqq;': '\\u2ab5',\n        'precnsim;': '\\u22e8',\n        'precsim;': '\\u227e',\n        'Prime;': '\\u2033',\n        'prime;': '\\u2032',\n        'primes;': '\\u2119',\n        'prnap;': '\\u2ab9',\n        'prnE;': '\\u2ab5',\n        'prnsim;': '\\u22e8',\n        'prod;': '\\u220f',\n        'Product;': '\\u220f',\n        'profalar;': '\\u232e',\n        'profline;': '\\u2312',\n        'profsurf;': '\\u2313',\n        'prop;': '\\u221d',\n        'Proportion;': '\\u2237',\n        'Proportional;': '\\u221d',\n        'propto;': '\\u221d',\n        'prsim;': '\\u227e',\n        'prurel;': '\\u22b0',\n        'Pscr;': '\\U0001d4ab',\n        'pscr;': '\\U0001d4c5',\n        'Psi;': '\\u03a8',\n        'psi;': '\\u03c8',\n        'puncsp;': '\\u2008',\n        'Qfr;': '\\U0001d514',\n        'qfr;': '\\U0001d52e',\n        'qint;': '\\u2a0c',\n        'Qopf;': '\\u211a',\n        'qopf;': '\\U0001d562',\n        'qprime;': '\\u2057',\n        'Qscr;': '\\U0001d4ac',\n        'qscr;': '\\U0001d4c6',\n        'quaternions;': '\\u210d',\n        'quatint;': '\\u2a16',\n        'quest;': '?',\n        'questeq;': '\\u225f',\n        'QUOT': '\"',\n        'quot': '\"',\n        'QUOT;': '\"',\n        'quot;': '\"',\n        'rAarr;': '\\u21db',\n        'race;': '\\u223d\\u0331',\n        'Racute;': '\\u0154',\n        'racute;': '\\u0155',\n        'radic;': '\\u221a',\n        'raemptyv;': '\\u29b3',\n        'Rang;': '\\u27eb',\n        'rang;': '\\u27e9',\n        'rangd;': '\\u2992',\n        'range;': '\\u29a5',\n        'rangle;': '\\u27e9',\n        'raquo': '\\xbb',\n        'raquo;': '\\xbb',\n        'Rarr;': '\\u21a0',\n        'rArr;': '\\u21d2',\n        'rarr;': '\\u2192',\n        'rarrap;': '\\u2975',\n        'rarrb;': '\\u21e5',\n        'rarrbfs;': '\\u2920',\n        'rarrc;': '\\u2933',\n        'rarrfs;': '\\u291e',\n        'rarrhk;': '\\u21aa',\n        'rarrlp;': '\\u21ac',\n        'rarrpl;': '\\u2945',\n        'rarrsim;': '\\u2974',\n        'Rarrtl;': '\\u2916',\n        'rarrtl;': '\\u21a3',\n        'rarrw;': '\\u219d',\n        'rAtail;': '\\u291c',\n        'ratail;': '\\u291a',\n        'ratio;': '\\u2236',\n        'rationals;': '\\u211a',\n        'RBarr;': '\\u2910',\n        'rBarr;': '\\u290f',\n        'rbarr;': '\\u290d',\n        'rbbrk;': '\\u2773',\n        'rbrace;': '}',\n        'rbrack;': ']',\n        'rbrke;': '\\u298c',\n        'rbrksld;': '\\u298e',\n        'rbrkslu;': '\\u2990',\n        'Rcaron;': '\\u0158',\n        'rcaron;': '\\u0159',\n        'Rcedil;': '\\u0156',\n        'rcedil;': '\\u0157',\n        'rceil;': '\\u2309',\n        'rcub;': '}',\n        'Rcy;': '\\u0420',\n        'rcy;': '\\u0440',\n        'rdca;': '\\u2937',\n        'rdldhar;': '\\u2969',\n        'rdquo;': '\\u201d',\n        'rdquor;': '\\u201d',\n        'rdsh;': '\\u21b3',\n        'Re;': '\\u211c',\n        'real;': '\\u211c',\n        'realine;': '\\u211b',\n        'realpart;': '\\u211c',\n        'reals;': '\\u211d',\n        'rect;': '\\u25ad',\n        'REG': '\\xae',\n        'reg': '\\xae',\n        'REG;': '\\xae',\n        'reg;': '\\xae',\n        'ReverseElement;': '\\u220b',\n        'ReverseEquilibrium;': '\\u21cb',\n        'ReverseUpEquilibrium;': '\\u296f',\n        'rfisht;': '\\u297d',\n        'rfloor;': '\\u230b',\n        'Rfr;': '\\u211c',\n        'rfr;': '\\U0001d52f',\n        'rHar;': '\\u2964',\n        'rhard;': '\\u21c1',\n        'rharu;': '\\u21c0',\n        'rharul;': '\\u296c',\n        'Rho;': '\\u03a1',\n        'rho;': '\\u03c1',\n        'rhov;': '\\u03f1',\n        'RightAngleBracket;': '\\u27e9',\n        'RightArrow;': '\\u2192',\n        'Rightarrow;': '\\u21d2',\n        'rightarrow;': '\\u2192',\n        'RightArrowBar;': '\\u21e5',\n        'RightArrowLeftArrow;': '\\u21c4',\n        'rightarrowtail;': '\\u21a3',\n        'RightCeiling;': '\\u2309',\n        'RightDoubleBracket;': '\\u27e7',\n        'RightDownTeeVector;': '\\u295d',\n        'RightDownVector;': '\\u21c2',\n        'RightDownVectorBar;': '\\u2955',\n        'RightFloor;': '\\u230b',\n        'rightharpoondown;': '\\u21c1',\n        'rightharpoonup;': '\\u21c0',\n        'rightleftarrows;': '\\u21c4',\n        'rightleftharpoons;': '\\u21cc',\n        'rightrightarrows;': '\\u21c9',\n        'rightsquigarrow;': '\\u219d',\n        'RightTee;': '\\u22a2',\n        'RightTeeArrow;': '\\u21a6',\n        'RightTeeVector;': '\\u295b',\n        'rightthreetimes;': '\\u22cc',\n        'RightTriangle;': '\\u22b3',\n        'RightTriangleBar;': '\\u29d0',\n        'RightTriangleEqual;': '\\u22b5',\n        'RightUpDownVector;': '\\u294f',\n        'RightUpTeeVector;': '\\u295c',\n        'RightUpVector;': '\\u21be',\n        'RightUpVectorBar;': '\\u2954',\n        'RightVector;': '\\u21c0',\n        'RightVectorBar;': '\\u2953',\n        'ring;': '\\u02da',\n        'risingdotseq;': '\\u2253',\n        'rlarr;': '\\u21c4',\n        'rlhar;': '\\u21cc',\n        'rlm;': '\\u200f',\n        'rmoust;': '\\u23b1',\n        'rmoustache;': '\\u23b1',\n        'rnmid;': '\\u2aee',\n        'roang;': '\\u27ed',\n        'roarr;': '\\u21fe',\n        'robrk;': '\\u27e7',\n        'ropar;': '\\u2986',\n        'Ropf;': '\\u211d',\n        'ropf;': '\\U0001d563',\n        'roplus;': '\\u2a2e',\n        'rotimes;': '\\u2a35',\n        'RoundImplies;': '\\u2970',\n        'rpar;': ')',\n        'rpargt;': '\\u2994',\n        'rppolint;': '\\u2a12',\n        'rrarr;': '\\u21c9',\n        'Rrightarrow;': '\\u21db',\n        'rsaquo;': '\\u203a',\n        'Rscr;': '\\u211b',\n        'rscr;': '\\U0001d4c7',\n        'Rsh;': '\\u21b1',\n        'rsh;': '\\u21b1',\n        'rsqb;': ']',\n        'rsquo;': '\\u2019',\n        'rsquor;': '\\u2019',\n        'rthree;': '\\u22cc',\n        'rtimes;': '\\u22ca',\n        'rtri;': '\\u25b9',\n        'rtrie;': '\\u22b5',\n        'rtrif;': '\\u25b8',\n        'rtriltri;': '\\u29ce',\n        'RuleDelayed;': '\\u29f4',\n        'ruluhar;': '\\u2968',\n        'rx;': '\\u211e',\n        'Sacute;': '\\u015a',\n        'sacute;': '\\u015b',\n        'sbquo;': '\\u201a',\n        'Sc;': '\\u2abc',\n        'sc;': '\\u227b',\n        'scap;': '\\u2ab8',\n        'Scaron;': '\\u0160',\n        'scaron;': '\\u0161',\n        'sccue;': '\\u227d',\n        'scE;': '\\u2ab4',\n        'sce;': '\\u2ab0',\n        'Scedil;': '\\u015e',\n        'scedil;': '\\u015f',\n        'Scirc;': '\\u015c',\n        'scirc;': '\\u015d',\n        'scnap;': '\\u2aba',\n        'scnE;': '\\u2ab6',\n        'scnsim;': '\\u22e9',\n        'scpolint;': '\\u2a13',\n        'scsim;': '\\u227f',\n        'Scy;': '\\u0421',\n        'scy;': '\\u0441',\n        'sdot;': '\\u22c5',\n        'sdotb;': '\\u22a1',\n        'sdote;': '\\u2a66',\n        'searhk;': '\\u2925',\n        'seArr;': '\\u21d8',\n        'searr;': '\\u2198',\n        'searrow;': '\\u2198',\n        'sect': '\\xa7',\n        'sect;': '\\xa7',\n        'semi;': ';',\n        'seswar;': '\\u2929',\n        'setminus;': '\\u2216',\n        'setmn;': '\\u2216',\n        'sext;': '\\u2736',\n        'Sfr;': '\\U0001d516',\n        'sfr;': '\\U0001d530',\n        'sfrown;': '\\u2322',\n        'sharp;': '\\u266f',\n        'SHCHcy;': '\\u0429',\n        'shchcy;': '\\u0449',\n        'SHcy;': '\\u0428',\n        'shcy;': '\\u0448',\n        'ShortDownArrow;': '\\u2193',\n        'ShortLeftArrow;': '\\u2190',\n        'shortmid;': '\\u2223',\n        'shortparallel;': '\\u2225',\n        'ShortRightArrow;': '\\u2192',\n        'ShortUpArrow;': '\\u2191',\n        'shy': '\\xad',\n        'shy;': '\\xad',\n        'Sigma;': '\\u03a3',\n        'sigma;': '\\u03c3',\n        'sigmaf;': '\\u03c2',\n        'sigmav;': '\\u03c2',\n        'sim;': '\\u223c',\n        'simdot;': '\\u2a6a',\n        'sime;': '\\u2243',\n        'simeq;': '\\u2243',\n        'simg;': '\\u2a9e',\n        'simgE;': '\\u2aa0',\n        'siml;': '\\u2a9d',\n        'simlE;': '\\u2a9f',\n        'simne;': '\\u2246',\n        'simplus;': '\\u2a24',\n        'simrarr;': '\\u2972',\n        'slarr;': '\\u2190',\n        'SmallCircle;': '\\u2218',\n        'smallsetminus;': '\\u2216',\n        'smashp;': '\\u2a33',\n        'smeparsl;': '\\u29e4',\n        'smid;': '\\u2223',\n        'smile;': '\\u2323',\n        'smt;': '\\u2aaa',\n        'smte;': '\\u2aac',\n        'smtes;': '\\u2aac\\ufe00',\n        'SOFTcy;': '\\u042c',\n        'softcy;': '\\u044c',\n        'sol;': '/',\n        'solb;': '\\u29c4',\n        'solbar;': '\\u233f',\n        'Sopf;': '\\U0001d54a',\n        'sopf;': '\\U0001d564',\n        'spades;': '\\u2660',\n        'spadesuit;': '\\u2660',\n        'spar;': '\\u2225',\n        'sqcap;': '\\u2293',\n        'sqcaps;': '\\u2293\\ufe00',\n        'sqcup;': '\\u2294',\n        'sqcups;': '\\u2294\\ufe00',\n        'Sqrt;': '\\u221a',\n        'sqsub;': '\\u228f',\n        'sqsube;': '\\u2291',\n        'sqsubset;': '\\u228f',\n        'sqsubseteq;': '\\u2291',\n        'sqsup;': '\\u2290',\n        'sqsupe;': '\\u2292',\n        'sqsupset;': '\\u2290',\n        'sqsupseteq;': '\\u2292',\n        'squ;': '\\u25a1',\n        'Square;': '\\u25a1',\n        'square;': '\\u25a1',\n        'SquareIntersection;': '\\u2293',\n        'SquareSubset;': '\\u228f',\n        'SquareSubsetEqual;': '\\u2291',\n        'SquareSuperset;': '\\u2290',\n        'SquareSupersetEqual;': '\\u2292',\n        'SquareUnion;': '\\u2294',\n        'squarf;': '\\u25aa',\n        'squf;': '\\u25aa',\n        'srarr;': '\\u2192',\n        'Sscr;': '\\U0001d4ae',\n        'sscr;': '\\U0001d4c8',\n        'ssetmn;': '\\u2216',\n        'ssmile;': '\\u2323',\n        'sstarf;': '\\u22c6',\n        'Star;': '\\u22c6',\n        'star;': '\\u2606',\n        'starf;': '\\u2605',\n        'straightepsilon;': '\\u03f5',\n        'straightphi;': '\\u03d5',\n        'strns;': '\\xaf',\n        'Sub;': '\\u22d0',\n        'sub;': '\\u2282',\n        'subdot;': '\\u2abd',\n        'subE;': '\\u2ac5',\n        'sube;': '\\u2286',\n        'subedot;': '\\u2ac3',\n        'submult;': '\\u2ac1',\n        'subnE;': '\\u2acb',\n        'subne;': '\\u228a',\n        'subplus;': '\\u2abf',\n        'subrarr;': '\\u2979',\n        'Subset;': '\\u22d0',\n        'subset;': '\\u2282',\n        'subseteq;': '\\u2286',\n        'subseteqq;': '\\u2ac5',\n        'SubsetEqual;': '\\u2286',\n        'subsetneq;': '\\u228a',\n        'subsetneqq;': '\\u2acb',\n        'subsim;': '\\u2ac7',\n        'subsub;': '\\u2ad5',\n        'subsup;': '\\u2ad3',\n        'succ;': '\\u227b',\n        'succapprox;': '\\u2ab8',\n        'succcurlyeq;': '\\u227d',\n        'Succeeds;': '\\u227b',\n        'SucceedsEqual;': '\\u2ab0',\n        'SucceedsSlantEqual;': '\\u227d',\n        'SucceedsTilde;': '\\u227f',\n        'succeq;': '\\u2ab0',\n        'succnapprox;': '\\u2aba',\n        'succneqq;': '\\u2ab6',\n        'succnsim;': '\\u22e9',\n        'succsim;': '\\u227f',\n        'SuchThat;': '\\u220b',\n        'Sum;': '\\u2211',\n        'sum;': '\\u2211',\n        'sung;': '\\u266a',\n        'sup1': '\\xb9',\n        'sup1;': '\\xb9',\n        'sup2': '\\xb2',\n        'sup2;': '\\xb2',\n        'sup3': '\\xb3',\n        'sup3;': '\\xb3',\n        'Sup;': '\\u22d1',\n        'sup;': '\\u2283',\n        'supdot;': '\\u2abe',\n        'supdsub;': '\\u2ad8',\n        'supE;': '\\u2ac6',\n        'supe;': '\\u2287',\n        'supedot;': '\\u2ac4',\n        'Superset;': '\\u2283',\n        'SupersetEqual;': '\\u2287',\n        'suphsol;': '\\u27c9',\n        'suphsub;': '\\u2ad7',\n        'suplarr;': '\\u297b',\n        'supmult;': '\\u2ac2',\n        'supnE;': '\\u2acc',\n        'supne;': '\\u228b',\n        'supplus;': '\\u2ac0',\n        'Supset;': '\\u22d1',\n        'supset;': '\\u2283',\n        'supseteq;': '\\u2287',\n        'supseteqq;': '\\u2ac6',\n        'supsetneq;': '\\u228b',\n        'supsetneqq;': '\\u2acc',\n        'supsim;': '\\u2ac8',\n        'supsub;': '\\u2ad4',\n        'supsup;': '\\u2ad6',\n        'swarhk;': '\\u2926',\n        'swArr;': '\\u21d9',\n        'swarr;': '\\u2199',\n        'swarrow;': '\\u2199',\n        'swnwar;': '\\u292a',\n        'szlig': '\\xdf',\n        'szlig;': '\\xdf',\n        'Tab;': '\\t',\n        'target;': '\\u2316',\n        'Tau;': '\\u03a4',\n        'tau;': '\\u03c4',\n        'tbrk;': '\\u23b4',\n        'Tcaron;': '\\u0164',\n        'tcaron;': '\\u0165',\n        'Tcedil;': '\\u0162',\n        'tcedil;': '\\u0163',\n        'Tcy;': '\\u0422',\n        'tcy;': '\\u0442',\n        'tdot;': '\\u20db',\n        'telrec;': '\\u2315',\n        'Tfr;': '\\U0001d517',\n        'tfr;': '\\U0001d531',\n        'there4;': '\\u2234',\n        'Therefore;': '\\u2234',\n        'therefore;': '\\u2234',\n        'Theta;': '\\u0398',\n        'theta;': '\\u03b8',\n        'thetasym;': '\\u03d1',\n        'thetav;': '\\u03d1',\n        'thickapprox;': '\\u2248',\n        'thicksim;': '\\u223c',\n        'ThickSpace;': '\\u205f\\u200a',\n        'thinsp;': '\\u2009',\n        'ThinSpace;': '\\u2009',\n        'thkap;': '\\u2248',\n        'thksim;': '\\u223c',\n        'THORN': '\\xde',\n        'thorn': '\\xfe',\n        'THORN;': '\\xde',\n        'thorn;': '\\xfe',\n        'Tilde;': '\\u223c',\n        'tilde;': '\\u02dc',\n        'TildeEqual;': '\\u2243',\n        'TildeFullEqual;': '\\u2245',\n        'TildeTilde;': '\\u2248',\n        'times': '\\xd7',\n        'times;': '\\xd7',\n        'timesb;': '\\u22a0',\n        'timesbar;': '\\u2a31',\n        'timesd;': '\\u2a30',\n        'tint;': '\\u222d',\n        'toea;': '\\u2928',\n        'top;': '\\u22a4',\n        'topbot;': '\\u2336',\n        'topcir;': '\\u2af1',\n        'Topf;': '\\U0001d54b',\n        'topf;': '\\U0001d565',\n        'topfork;': '\\u2ada',\n        'tosa;': '\\u2929',\n        'tprime;': '\\u2034',\n        'TRADE;': '\\u2122',\n        'trade;': '\\u2122',\n        'triangle;': '\\u25b5',\n        'triangledown;': '\\u25bf',\n        'triangleleft;': '\\u25c3',\n        'trianglelefteq;': '\\u22b4',\n        'triangleq;': '\\u225c',\n        'triangleright;': '\\u25b9',\n        'trianglerighteq;': '\\u22b5',\n        'tridot;': '\\u25ec',\n        'trie;': '\\u225c',\n        'triminus;': '\\u2a3a',\n        'TripleDot;': '\\u20db',\n        'triplus;': '\\u2a39',\n        'trisb;': '\\u29cd',\n        'tritime;': '\\u2a3b',\n        'trpezium;': '\\u23e2',\n        'Tscr;': '\\U0001d4af',\n        'tscr;': '\\U0001d4c9',\n        'TScy;': '\\u0426',\n        'tscy;': '\\u0446',\n        'TSHcy;': '\\u040b',\n        'tshcy;': '\\u045b',\n        'Tstrok;': '\\u0166',\n        'tstrok;': '\\u0167',\n        'twixt;': '\\u226c',\n        'twoheadleftarrow;': '\\u219e',\n        'twoheadrightarrow;': '\\u21a0',\n        'Uacute': '\\xda',\n        'uacute': '\\xfa',\n        'Uacute;': '\\xda',\n        'uacute;': '\\xfa',\n        'Uarr;': '\\u219f',\n        'uArr;': '\\u21d1',\n        'uarr;': '\\u2191',\n        'Uarrocir;': '\\u2949',\n        'Ubrcy;': '\\u040e',\n        'ubrcy;': '\\u045e',\n        'Ubreve;': '\\u016c',\n        'ubreve;': '\\u016d',\n        'Ucirc': '\\xdb',\n        'ucirc': '\\xfb',\n        'Ucirc;': '\\xdb',\n        'ucirc;': '\\xfb',\n        'Ucy;': '\\u0423',\n        'ucy;': '\\u0443',\n        'udarr;': '\\u21c5',\n        'Udblac;': '\\u0170',\n        'udblac;': '\\u0171',\n        'udhar;': '\\u296e',\n        'ufisht;': '\\u297e',\n        'Ufr;': '\\U0001d518',\n        'ufr;': '\\U0001d532',\n        'Ugrave': '\\xd9',\n        'ugrave': '\\xf9',\n        'Ugrave;': '\\xd9',\n        'ugrave;': '\\xf9',\n        'uHar;': '\\u2963',\n        'uharl;': '\\u21bf',\n        'uharr;': '\\u21be',\n        'uhblk;': '\\u2580',\n        'ulcorn;': '\\u231c',\n        'ulcorner;': '\\u231c',\n        'ulcrop;': '\\u230f',\n        'ultri;': '\\u25f8',\n        'Umacr;': '\\u016a',\n        'umacr;': '\\u016b',\n        'uml': '\\xa8',\n        'uml;': '\\xa8',\n        'UnderBar;': '_',\n        'UnderBrace;': '\\u23df',\n        'UnderBracket;': '\\u23b5',\n        'UnderParenthesis;': '\\u23dd',\n        'Union;': '\\u22c3',\n        'UnionPlus;': '\\u228e',\n        'Uogon;': '\\u0172',\n        'uogon;': '\\u0173',\n        'Uopf;': '\\U0001d54c',\n        'uopf;': '\\U0001d566',\n        'UpArrow;': '\\u2191',\n        'Uparrow;': '\\u21d1',\n        'uparrow;': '\\u2191',\n        'UpArrowBar;': '\\u2912',\n        'UpArrowDownArrow;': '\\u21c5',\n        'UpDownArrow;': '\\u2195',\n        'Updownarrow;': '\\u21d5',\n        'updownarrow;': '\\u2195',\n        'UpEquilibrium;': '\\u296e',\n        'upharpoonleft;': '\\u21bf',\n        'upharpoonright;': '\\u21be',\n        'uplus;': '\\u228e',\n        'UpperLeftArrow;': '\\u2196',\n        'UpperRightArrow;': '\\u2197',\n        'Upsi;': '\\u03d2',\n        'upsi;': '\\u03c5',\n        'upsih;': '\\u03d2',\n        'Upsilon;': '\\u03a5',\n        'upsilon;': '\\u03c5',\n        'UpTee;': '\\u22a5',\n        'UpTeeArrow;': '\\u21a5',\n        'upuparrows;': '\\u21c8',\n        'urcorn;': '\\u231d',\n        'urcorner;': '\\u231d',\n        'urcrop;': '\\u230e',\n        'Uring;': '\\u016e',\n        'uring;': '\\u016f',\n        'urtri;': '\\u25f9',\n        'Uscr;': '\\U0001d4b0',\n        'uscr;': '\\U0001d4ca',\n        'utdot;': '\\u22f0',\n        'Utilde;': '\\u0168',\n        'utilde;': '\\u0169',\n        'utri;': '\\u25b5',\n        'utrif;': '\\u25b4',\n        'uuarr;': '\\u21c8',\n        'Uuml': '\\xdc',\n        'uuml': '\\xfc',\n        'Uuml;': '\\xdc',\n        'uuml;': '\\xfc',\n        'uwangle;': '\\u29a7',\n        'vangrt;': '\\u299c',\n        'varepsilon;': '\\u03f5',\n        'varkappa;': '\\u03f0',\n        'varnothing;': '\\u2205',\n        'varphi;': '\\u03d5',\n        'varpi;': '\\u03d6',\n        'varpropto;': '\\u221d',\n        'vArr;': '\\u21d5',\n        'varr;': '\\u2195',\n        'varrho;': '\\u03f1',\n        'varsigma;': '\\u03c2',\n        'varsubsetneq;': '\\u228a\\ufe00',\n        'varsubsetneqq;': '\\u2acb\\ufe00',\n        'varsupsetneq;': '\\u228b\\ufe00',\n        'varsupsetneqq;': '\\u2acc\\ufe00',\n        'vartheta;': '\\u03d1',\n        'vartriangleleft;': '\\u22b2',\n        'vartriangleright;': '\\u22b3',\n        'Vbar;': '\\u2aeb',\n        'vBar;': '\\u2ae8',\n        'vBarv;': '\\u2ae9',\n        'Vcy;': '\\u0412',\n        'vcy;': '\\u0432',\n        'VDash;': '\\u22ab',\n        'Vdash;': '\\u22a9',\n        'vDash;': '\\u22a8',\n        'vdash;': '\\u22a2',\n        'Vdashl;': '\\u2ae6',\n        'Vee;': '\\u22c1',\n        'vee;': '\\u2228',\n        'veebar;': '\\u22bb',\n        'veeeq;': '\\u225a',\n        'vellip;': '\\u22ee',\n        'Verbar;': '\\u2016',\n        'verbar;': '|',\n        'Vert;': '\\u2016',\n        'vert;': '|',\n        'VerticalBar;': '\\u2223',\n        'VerticalLine;': '|',\n        'VerticalSeparator;': '\\u2758',\n        'VerticalTilde;': '\\u2240',\n        'VeryThinSpace;': '\\u200a',\n        'Vfr;': '\\U0001d519',\n        'vfr;': '\\U0001d533',\n        'vltri;': '\\u22b2',\n        'vnsub;': '\\u2282\\u20d2',\n        'vnsup;': '\\u2283\\u20d2',\n        'Vopf;': '\\U0001d54d',\n        'vopf;': '\\U0001d567',\n        'vprop;': '\\u221d',\n        'vrtri;': '\\u22b3',\n        'Vscr;': '\\U0001d4b1',\n        'vscr;': '\\U0001d4cb',\n        'vsubnE;': '\\u2acb\\ufe00',\n        'vsubne;': '\\u228a\\ufe00',\n        'vsupnE;': '\\u2acc\\ufe00',\n        'vsupne;': '\\u228b\\ufe00',\n        'Vvdash;': '\\u22aa',\n        'vzigzag;': '\\u299a',\n        'Wcirc;': '\\u0174',\n        'wcirc;': '\\u0175',\n        'wedbar;': '\\u2a5f',\n        'Wedge;': '\\u22c0',\n        'wedge;': '\\u2227',\n        'wedgeq;': '\\u2259',\n        'weierp;': '\\u2118',\n        'Wfr;': '\\U0001d51a',\n        'wfr;': '\\U0001d534',\n        'Wopf;': '\\U0001d54e',\n        'wopf;': '\\U0001d568',\n        'wp;': '\\u2118',\n        'wr;': '\\u2240',\n        'wreath;': '\\u2240',\n        'Wscr;': '\\U0001d4b2',\n        'wscr;': '\\U0001d4cc',\n        'xcap;': '\\u22c2',\n        'xcirc;': '\\u25ef',\n        'xcup;': '\\u22c3',\n        'xdtri;': '\\u25bd',\n        'Xfr;': '\\U0001d51b',\n        'xfr;': '\\U0001d535',\n        'xhArr;': '\\u27fa',\n        'xharr;': '\\u27f7',\n        'Xi;': '\\u039e',\n        'xi;': '\\u03be',\n        'xlArr;': '\\u27f8',\n        'xlarr;': '\\u27f5',\n        'xmap;': '\\u27fc',\n        'xnis;': '\\u22fb',\n        'xodot;': '\\u2a00',\n        'Xopf;': '\\U0001d54f',\n        'xopf;': '\\U0001d569',\n        'xoplus;': '\\u2a01',\n        'xotime;': '\\u2a02',\n        'xrArr;': '\\u27f9',\n        'xrarr;': '\\u27f6',\n        'Xscr;': '\\U0001d4b3',\n        'xscr;': '\\U0001d4cd',\n        'xsqcup;': '\\u2a06',\n        'xuplus;': '\\u2a04',\n        'xutri;': '\\u25b3',\n        'xvee;': '\\u22c1',\n        'xwedge;': '\\u22c0',\n        'Yacute': '\\xdd',\n        'yacute': '\\xfd',\n        'Yacute;': '\\xdd',\n        'yacute;': '\\xfd',\n        'YAcy;': '\\u042f',\n        'yacy;': '\\u044f',\n        'Ycirc;': '\\u0176',\n        'ycirc;': '\\u0177',\n        'Ycy;': '\\u042b',\n        'ycy;': '\\u044b',\n        'yen': '\\xa5',\n        'yen;': '\\xa5',\n        'Yfr;': '\\U0001d51c',\n        'yfr;': '\\U0001d536',\n        'YIcy;': '\\u0407',\n        'yicy;': '\\u0457',\n        'Yopf;': '\\U0001d550',\n        'yopf;': '\\U0001d56a',\n        'Yscr;': '\\U0001d4b4',\n        'yscr;': '\\U0001d4ce',\n        'YUcy;': '\\u042e',\n        'yucy;': '\\u044e',\n        'yuml': '\\xff',\n        'Yuml;': '\\u0178',\n        'yuml;': '\\xff',\n        'Zacute;': '\\u0179',\n        'zacute;': '\\u017a',\n        'Zcaron;': '\\u017d',\n        'zcaron;': '\\u017e',\n        'Zcy;': '\\u0417',\n        'zcy;': '\\u0437',\n        'Zdot;': '\\u017b',\n        'zdot;': '\\u017c',\n        'zeetrf;': '\\u2128',\n        'ZeroWidthSpace;': '\\u200b',\n        'Zeta;': '\\u0396',\n        'zeta;': '\\u03b6',\n        'Zfr;': '\\u2128',\n        'zfr;': '\\U0001d537',\n        'ZHcy;': '\\u0416',\n        'zhcy;': '\\u0436',\n        'zigrarr;': '\\u21dd',\n        'Zopf;': '\\u2124',\n        'zopf;': '\\U0001d56b',\n        'Zscr;': '\\U0001d4b5',\n        'zscr;': '\\U0001d4cf',\n        'zwj;': '\\u200d',\n        'zwnj;': '\\u200c',\n    }\n\ntry:\n    import http.client as compat_http_client\nexcept ImportError:  \n    import httplib as compat_http_client\n\ntry:\n    from urllib.error import HTTPError as compat_HTTPError\nexcept ImportError:  \n    from urllib2 import HTTPError as compat_HTTPError\n\ntry:\n    from urllib.request import urlretrieve as compat_urlretrieve\nexcept ImportError:  \n    from urllib import urlretrieve as compat_urlretrieve\n\ntry:\n    from html.parser import HTMLParser as compat_HTMLParser\nexcept ImportError:  \n    from HTMLParser import HTMLParser as compat_HTMLParser\n\ntry:  \n    from HTMLParser import HTMLParseError as compat_HTMLParseError\nexcept ImportError:  \n    try:\n        from html.parser import HTMLParseError as compat_HTMLParseError\n    except ImportError:  \n\n        \n        \n        \n        class compat_HTMLParseError(Exception):\n            pass\n\ntry:\n    from subprocess import DEVNULL\n    compat_subprocess_get_DEVNULL = lambda: DEVNULL\nexcept ImportError:\n    compat_subprocess_get_DEVNULL = lambda: open(os.path.devnull, 'w')\n\ntry:\n    import http.server as compat_http_server\nexcept ImportError:\n    import BaseHTTPServer as compat_http_server\n\ntry:\n    compat_str = unicode  \nexcept NameError:\n    compat_str = str\n\ntry:\n    from urllib.parse import unquote_to_bytes as compat_urllib_parse_unquote_to_bytes\n    from urllib.parse import unquote as compat_urllib_parse_unquote\n    from urllib.parse import unquote_plus as compat_urllib_parse_unquote_plus\nexcept ImportError:  \n    _asciire = (compat_urllib_parse._asciire if hasattr(compat_urllib_parse, '_asciire')\n                else re.compile(r'([\\x00-\\x7f]+)'))\n\n    \n    \n    \n\n    def compat_urllib_parse_unquote_to_bytes(string):\n        \n            if path[:1] != '~':\n                return path\n            i, n = 1, len(path)\n            while i < n and path[i] not in '/\\\\':\n                i = i + 1\n\n            if 'HOME' in os.environ:\n                userhome = compat_getenv('HOME')\n            elif 'USERPROFILE' in os.environ:\n                userhome = compat_getenv('USERPROFILE')\n            elif 'HOMEPATH' not in os.environ:\n                return path\n            else:\n                try:\n                    drive = compat_getenv('HOMEDRIVE')\n                except KeyError:\n                    drive = ''\n                userhome = os.path.join(drive, compat_getenv('HOMEPATH'))\n\n            if i != 1:  \n                userhome = os.path.join(os.path.dirname(userhome), path[1:i])\n\n            return userhome + path[i:]\n    else:\n        compat_expanduser = os.path.expanduser\n\n\nif sys.version_info < (3, 0):\n    def compat_print(s):\n        from .utils import preferredencoding\n        print(s.encode(preferredencoding(), 'xmlcharrefreplace'))\nelse:\n    def compat_print(s):\n        assert isinstance(s, compat_str)\n        print(s)\n\n\nif sys.version_info < (3, 0) and sys.platform == 'win32':\n    def compat_getpass(prompt, *args, **kwargs):\n        if isinstance(prompt, compat_str):\n            from .utils import preferredencoding\n            prompt = prompt.encode(preferredencoding())\n        return getpass.getpass(prompt, *args, **kwargs)\nelse:\n    compat_getpass = getpass.getpass\n\ntry:\n    compat_input = raw_input\nexcept NameError:  \n    compat_input = input\n\n\ntry:\n    def _testfunc(x):\n        pass\n    _testfunc(**{'x': 0})\nexcept TypeError:\n    def compat_kwargs(kwargs):\n        return dict((bytes(k), v) for k, v in kwargs.items())\nelse:\n    compat_kwargs = lambda kwargs: kwargs\n\n\ntry:\n    compat_numeric_types = (int, float, long, complex)\nexcept NameError:  \n    compat_numeric_types = (int, float, complex)\n\n\nif sys.version_info < (2, 7):\n    def compat_socket_create_connection(address, timeout, source_address=None):\n        host, port = address\n        err = None\n        for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n                sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n                sock.connect(sa)\n                return sock\n            except socket.error as _:\n                err = _\n                if sock is not None:\n                    sock.close()\n        if err is not None:\n            raise err\n        else:\n            raise socket.error('getaddrinfo returns an empty list')\nelse:\n    compat_socket_create_connection = socket.create_connection\n\n\n\n\ndef workaround_optparse_bug9161():\n    op = optparse.OptionParser()\n    og = optparse.OptionGroup(op, 'foo')\n    try:\n        og.add_option('-t')\n    except TypeError:\n        real_add_option = optparse.OptionGroup.add_option\n\n        def _compat_add_option(self, *args, **kwargs):\n            enc = lambda v: (\n                v.encode('ascii', 'replace') if isinstance(v, compat_str)\n                else v)\n            bargs = [enc(a) for a in args]\n            bkwargs = dict(\n                (k, enc(v)) for k, v in kwargs.items())\n            return real_add_option(self, *bargs, **bkwargs)\n        optparse.OptionGroup.add_option = _compat_add_option\n\n\nif hasattr(shutil, 'get_terminal_size'):  \n    compat_get_terminal_size = shutil.get_terminal_size\nelse:\n    _terminal_size = collections.namedtuple('terminal_size', ['columns', 'lines'])\n\n    def compat_get_terminal_size(fallback=(80, 24)):\n        columns = compat_getenv('COLUMNS')\n        if columns:\n            columns = int(columns)\n        else:\n            columns = None\n        lines = compat_getenv('LINES')\n        if lines:\n            lines = int(lines)\n        else:\n            lines = None\n\n        if columns is None or lines is None or columns <= 0 or lines <= 0:\n            try:\n                sp = subprocess.Popen(\n                    ['stty', 'size'],\n                    stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n                out, err = sp.communicate()\n                _lines, _columns = map(int, out.split())\n            except Exception:\n                _columns, _lines = _terminal_size(*fallback)\n\n            if columns is None or columns <= 0:\n                columns = _columns\n            if lines is None or lines <= 0:\n                lines = _lines\n        return _terminal_size(columns, lines)\n\ntry:\n    itertools.count(start=0, step=1)\n    compat_itertools_count = itertools.count\nexcept TypeError:  \n    def compat_itertools_count(start=0, step=1):\n        n = start\n        while True:\n            yield n\n            n += step\n\nif sys.version_info >= (3, 0):\n    from tokenize import tokenize as compat_tokenize_tokenize\nelse:\n    from tokenize import generate_tokens as compat_tokenize_tokenize\n\n\ntry:\n    struct.pack('!I', 0)\nexcept TypeError:\n    \n    \n    def compat_struct_pack(spec, *args):\n        if isinstance(spec, compat_str):\n            spec = spec.encode('ascii')\n        return struct.pack(spec, *args)\n\n    def compat_struct_unpack(spec, *args):\n        if isinstance(spec, compat_str):\n            spec = spec.encode('ascii')\n        return struct.unpack(spec, *args)\n\n    class compat_Struct(struct.Struct):\n        def __init__(self, fmt):\n            if isinstance(fmt, compat_str):\n                fmt = fmt.encode('ascii')\n            super(compat_Struct, self).__init__(fmt)\nelse:\n    compat_struct_pack = struct.pack\n    compat_struct_unpack = struct.unpack\n    if platform.python_implementation() == 'IronPython' and sys.version_info < (2, 7, 8):\n        class compat_Struct(struct.Struct):\n            def unpack(self, string):\n                if not isinstance(string, buffer):  \n                    string = buffer(string)  \n                return super(compat_Struct, self).unpack(string)\n    else:\n        compat_Struct = struct.Struct\n\n\ntry:\n    from future_builtins import zip as compat_zip\nexcept ImportError:  \n    try:\n        from itertools import izip as compat_zip  \n    except ImportError:\n        compat_zip = zip\n\n\nif sys.version_info < (3, 3):\n    def compat_b64decode(s, *args, **kwargs):\n        if isinstance(s, compat_str):\n            s = s.encode('ascii')\n        return base64.b64decode(s, *args, **kwargs)\nelse:\n    compat_b64decode = base64.b64decode\n\n\nif platform.python_implementation() == 'PyPy' and sys.pypy_version_info < (5, 4, 0):\n    \n    \n    \n    \n    def compat_ctypes_WINFUNCTYPE(*args, **kwargs):\n        real = ctypes.WINFUNCTYPE(*args, **kwargs)\n\n        def resf(tpl, *args, **kwargs):\n            funcname, dll = tpl\n            return real((str(funcname), dll), *args, **kwargs)\n\n        return resf\nelse:\n    def compat_ctypes_WINFUNCTYPE(*args, **kwargs):\n        return ctypes.WINFUNCTYPE(*args, **kwargs)\n\n\n__all__ = [\n    'compat_HTMLParseError',\n    'compat_HTMLParser',\n    'compat_HTTPError',\n    'compat_Struct',\n    'compat_b64decode',\n    'compat_basestring',\n    'compat_chr',\n    'compat_cookiejar',\n    'compat_cookies',\n    'compat_ctypes_WINFUNCTYPE',\n    'compat_etree_fromstring',\n    'compat_etree_register_namespace',\n    'compat_expanduser',\n    'compat_get_terminal_size',\n    'compat_getenv',\n    'compat_getpass',\n    'compat_html_entities',\n    'compat_html_entities_html5',\n    'compat_http_client',\n    'compat_http_server',\n    'compat_input',\n    'compat_itertools_count',\n    'compat_kwargs',\n    'compat_numeric_types',\n    'compat_ord',\n    'compat_os_name',\n    'compat_parse_qs',\n    'compat_print',\n    'compat_setenv',\n    'compat_shlex_quote',\n    'compat_shlex_split',\n    'compat_socket_create_connection',\n    'compat_str',\n    'compat_struct_pack',\n    'compat_struct_unpack',\n    'compat_subprocess_get_DEVNULL',\n    'compat_tokenize_tokenize',\n    'compat_urllib_error',\n    'compat_urllib_parse',\n    'compat_urllib_parse_unquote',\n    'compat_urllib_parse_unquote_plus',\n    'compat_urllib_parse_unquote_to_bytes',\n    'compat_urllib_parse_urlencode',\n    'compat_urllib_parse_urlparse',\n    'compat_urllib_request',\n    'compat_urllib_request_DataHandler',\n    'compat_urllib_response',\n    'compat_urlparse',\n    'compat_urlretrieve',\n    'compat_xml_parse_error',\n    'compat_xpath',\n    'compat_zip',\n    'workaround_optparse_bug9161',\n]\n", "comments": "unquote_to_bytes('abc%20def') -> b'abc def'.\"\"\"\n        # Note: strings are encoded as UTF-8. This is only an issue if it contains\n        # unescaped non-ASCII characters, which URIs should not.\n        if not string:\n            # Is it a string-like object?\n            string.split\n            return b''\n        if isinstance(string, compat_str):\n            string = string.encode('utf-8')\n        bits = string.split(b'%')\n        if len(bits) == 1:\n            return string\n        res = [bits[0]]\n        append = res.append\n        for item in bits[1:]:\n            try:\n                append(compat_urllib_parse._hextochr[item[:2]])\n                append(item[2:])\n            except KeyError:\n                append(b'%')\n                append(item)\n        return b''.join(res)\n\n    def compat_urllib_parse_unquote(string, encoding='utf-8', errors='replace'):\n        \"\"\"Replace %xx escapes by their single-character equivalent. The optional\n        encoding and errors parameters specify how to decode percent-encoded\n        sequences into Unicode characters, as accepted by the bytes.decode()\n        method.\n        By default, percent-encoded sequences are decoded with UTF-8, and invalid\n        sequences are replaced by a placeholder character.\n\n        unquote('abc%20def') -> 'abc def'.\n        \"\"\"\n        if '%' not in string:\n            string.split\n            return string\n        if encoding is None:\n            encoding = 'utf-8'\n        if errors is None:\n            errors = 'replace'\n        bits = _asciire.split(string)\n        res = [bits[0]]\n        append = res.append\n        for i in range(1, len(bits), 2):\n            append(compat_urllib_parse_unquote_to_bytes(bits[i]).decode(encoding, errors))\n            append(bits[i + 1])\n        return ''.join(res)\n\n    def compat_urllib_parse_unquote_plus(string, encoding='utf-8', errors='replace'):\n        \"\"\"Like unquote(), but also replace plus signs by spaces, as required for\n        unquoting HTML form values.\n\n        unquote_plus('%7e/abc+def') -> '~/abc def'\n        \"\"\"\n        string = string.replace('+', ' ')\n        return compat_urllib_parse_unquote(string, encoding, errors)\n\ntry:\n    from urllib.parse import urlencode as compat_urllib_parse_urlencode\nexcept ImportError:  # Python 2\n    # Python 2 will choke in urlencode on mixture of byte and unicode strings.\n    # Possible solutions are to either port it from python 3 with all\n    # the friends or manually ensure input query contains only byte strings.\n    # We will stick with latter thus recursively encoding the whole query.\n    def compat_urllib_parse_urlencode(query, doseq=0, encoding='utf-8'):\n        def encode_elem(e):\n            if isinstance(e, dict):\n                e = encode_dict(e)\n            elif isinstance(e, (list, tuple,)):\n                list_e = encode_list(e)\n                e = tuple(list_e) if isinstance(e, tuple) else list_e\n            elif isinstance(e, compat_str):\n                e = e.encode(encoding)\n            return e\n\n        def encode_dict(d):\n            return dict((encode_elem(k), encode_elem(v)) for k, v in d.items())\n\n        def encode_list(l):\n            return [encode_elem(e) for e in l]\n\n        return compat_urllib_parse.urlencode(encode_elem(query), doseq=doseq)\n\ntry:\n    from urllib.request import DataHandler as compat_urllib_request_DataHandler\nexcept ImportError:  # Python < 3.4\n    # Ported from CPython 98774:1733b3bd46db, Lib/urllib/request.py\n    class compat_urllib_request_DataHandler(compat_urllib_request.BaseHandler):\n        def data_open(self, req):\n            # data URLs as specified in RFC 2397.\n            #\n            # ignores POSTed data\n            #\n            # syntax:\n            # dataurl   := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\n            # mediatype := [ type \"/\" subtype ] *( \";\" parameter )\n            # data      := *urlchar\n            # parameter := attribute \"=\" value\n            url = req.get_full_url()\n\n            scheme, data = url.split(':', 1)\n            mediatype, data = data.split(',', 1)\n\n            # even base64 encoded data URLs might be quoted so unquote in any case:\n            data = compat_urllib_parse_unquote_to_bytes(data)\n            if mediatype.endswith(';base64'):\n                data = binascii.a2b_base64(data)\n                mediatype = mediatype[:-7]\n\n            if not mediatype:\n                mediatype = 'text/plain;charset=US-ASCII'\n\n            headers = email.message_from_string(\n                'Content-type: %s\\nContent-length: %d\\n' % (mediatype, len(data)))\n\n            return compat_urllib_response.addinfourl(io.BytesIO(data), headers, url)\n\ntry:\n    compat_basestring = basestring  # Python 2\nexcept NameError:\n    compat_basestring = str\n\ntry:\n    compat_chr = unichr  # Python 2\nexcept NameError:\n    compat_chr = chr\n\ntry:\n    from xml.etree.ElementTree import ParseError as compat_xml_parse_error\nexcept ImportError:  # Python 2.6\n    from xml.parsers.expat import ExpatError as compat_xml_parse_error\n\n\netree = xml.etree.ElementTree\n\n\nclass _TreeBuilder(etree.TreeBuilder):\n    def doctype(self, name, pubid, system):\n        pass\n\n\nif sys.version_info[0] >= 3:\n    def compat_etree_fromstring(text):\n        return etree.XML(text, parser=etree.XMLParser(target=_TreeBuilder()))\nelse:\n    # python 2.x tries to encode unicode strings with ascii (see the\n    # XMLParser._fixtext method)\n    try:\n        _etree_iter = etree.Element.iter\n    except AttributeError:  # Python <=2.6\n        def _etree_iter(root):\n            for el in root.findall('*'):\n                yield el\n                for sub in _etree_iter(el):\n                    yield sub\n\n    # on 2.6 XML doesn't have a parser argument, function copied from CPython\n    # 2.7 source\n    def _XML(text, parser=None):\n        if not parser:\n            parser = etree.XMLParser(target=_TreeBuilder())\n        parser.feed(text)\n        return parser.close()\n\n    def _element_factory(*args, **kwargs):\n        el = etree.Element(*args, **kwargs)\n        for k, v in el.items():\n            if isinstance(v, bytes):\n                el.set(k, v.decode('utf-8'))\n        return el\n\n    def compat_etree_fromstring(text):\n        doc = _XML(text, parser=etree.XMLParser(target=_TreeBuilder(element_factory=_element_factory)))\n        for el in _etree_iter(doc):\n            if el.text is not None and isinstance(el.text, bytes):\n                el.text = el.text.decode('utf-8')\n        return doc\n\nif hasattr(etree, 'register_namespace'):\n    compat_etree_register_namespace = etree.register_namespace\nelse:\n    def compat_etree_register_namespace(prefix, uri):\n        \"\"\"Register a namespace prefix.\n        The registry is global, and any existing mapping for either the\n        given prefix or the namespace URI will be removed.\n        *prefix* is the namespace prefix, *uri* is a namespace uri. Tags and\n        attributes in this namespace will be serialized with prefix if possible.\n        ValueError is raised if prefix is reserved or is invalid.\n        \"\"\"\n        if re.match(r\"ns\\d+$\", prefix):\n            raise ValueError(\"Prefix format reserved for internal use\")\n        for k, v in list(etree._namespace_map.items()):\n            if k == uri or v == prefix:\n                del etree._namespace_map[k]\n        etree._namespace_map[uri] = prefix\n\nif sys.version_info < (2, 7):\n    # Here comes the crazy part: In 2.6, if the xpath is a unicode,\n    # .//node does not match if a node is a direct child of . !\n    def compat_xpath(xpath):\n        if isinstance(xpath, compat_str):\n            xpath = xpath.encode('ascii')\n        return xpath\nelse:\n    compat_xpath = lambda xpath: xpath\n\ntry:\n    from urllib.parse import parse_qs as compat_parse_qs\nexcept ImportError:  # Python 2\n    # HACK: The following is the correct parse_qs implementation from cpython 3's stdlib.\n    # Python 2's version is apparently totally broken\n\n    def _parse_qsl(qs, keep_blank_values=False, strict_parsing=False,\n                   encoding='utf-8', errors='replace'):\n        qs, _coerce_result = qs, compat_str\n        pairs = [s2 for s1 in qs.split('&') for s2 in s1.split(';')]\n        r = []\n        for name_value in pairs:\n            if not name_value and not strict_parsing:\n                continue\n            nv = name_value.split('=', 1)\n            if len(nv) != 2:\n                if strict_parsing:\n                    raise ValueError('bad query field: %r' % (name_value,))\n                # Handle case of a control-name with no equal sign\n                if keep_blank_values:\n                    nv.append('')\n                else:\n                    continue\n            if len(nv[1]) or keep_blank_values:\n                name = nv[0].replace('+', ' ')\n                name = compat_urllib_parse_unquote(\n                    name, encoding=encoding, errors=errors)\n                name = _coerce_result(name)\n                value = nv[1].replace('+', ' ')\n                value = compat_urllib_parse_unquote(\n                    value, encoding=encoding, errors=errors)\n                value = _coerce_result(value)\n                r.append((name, value))\n        return r\n\n    def compat_parse_qs(qs, keep_blank_values=False, strict_parsing=False,\n                        encoding='utf-8', errors='replace'):\n        parsed_result = {}\n        pairs = _parse_qsl(qs, keep_blank_values, strict_parsing,\n                           encoding=encoding, errors=errors)\n        for name, value in pairs:\n            if name in parsed_result:\n                parsed_result[name].append(value)\n            else:\n                parsed_result[name] = [value]\n        return parsed_result\n\n\ncompat_os_name = os._name if os.name == 'java' else os.name\n\n\nif compat_os_name == 'nt':\n    def compat_shlex_quote(s):\n        return s if re.match(r'^[-_\\w./]+$', s) else '\"%s\"' % s.replace('\"', '\\\\\"')\nelse:\n    try:\n        from shlex import quote as compat_shlex_quote\n    except ImportError:  # Python < 3.3\n        def compat_shlex_quote(s):\n            if re.match(r'^[-_\\w./]+$', s):\n                return s\n            else:\n                return \"'\" + s.replace(\"'\", \"'\\\"'\\\"'\") + \"'\"\n\n\ntry:\n    args = shlex.split('\u4e2d\u6587')\n    assert (isinstance(args, list) and\n            isinstance(args[0], compat_str) and\n            args[0] == '\u4e2d\u6587')\n    compat_shlex_split = shlex.split\nexcept (AssertionError, UnicodeEncodeError):\n    # Working around shlex issue with unicode strings on some python 2\n    # versions (see http://bugs.python.org/issue1548891)\n    def compat_shlex_split(s, comments=False, posix=True):\n        if isinstance(s, compat_str):\n            s = s.encode('utf-8')\n        return list(map(lambda s: s.decode('utf-8'), shlex.split(s, comments, posix)))\n\n\ndef compat_ord(c):\n    if type(c) is int:\n        return c\n    else:\n        return ord(c)\n\n\nif sys.version_info >= (3, 0):\n    compat_getenv = os.getenv\n    compat_expanduser = os.path.expanduser\n\n    def compat_setenv(key, value, env=os.environ):\n        env[key] = value\nelse:\n    # Environment variables should be decoded with filesystem encoding.\n    # Otherwise it will fail if any non-ASCII characters present (see #3854 #3217 #2918)\n\n    def compat_getenv(key, default=None):\n        from .utils import get_filesystem_encoding\n        env = os.getenv(key, default)\n        if env:\n            env = env.decode(get_filesystem_encoding())\n        return env\n\n    def compat_setenv(key, value, env=os.environ):\n        def encode(v):\n            from .utils import get_filesystem_encoding\n            return v.encode(get_filesystem_encoding()) if isinstance(v, compat_str) else v\n        env[encode(key)] = encode(value)\n\n    # HACK: The default implementations of os.path.expanduser from cpython do not decode\n    # environment variables with filesystem encoding. We will work around this by\n    # providing adjusted implementations.\n    # The following are os.path.expanduser implementations from cpython 2.7.8 stdlib\n    # for different platforms with correct environment variables decoding.\n\n    if compat_os_name == 'posix':\n        def compat_expanduser(path):\n            \"\"\"Expand ~ and ~user constructions.  If user or $HOME is unknown,\n            do nothing.\"\"\"\n            if not path.startswith('~'):\n                return path\n            i = path.find('/', 1)\n            if i < 0:\n                i = len(path)\n            if i == 1:\n                if 'HOME' not in os.environ:\n                    import pwd\n                    userhome = pwd.getpwuid(os.getuid()).pw_dir\n                else:\n                    userhome = compat_getenv('HOME')\n            else:\n                import pwd\n                try:\n                    pwent = pwd.getpwnam(path[1:i])\n                except KeyError:\n                    return path\n                userhome = pwent.pw_dir\n            userhome = userhome.rstrip('/')\n            return (userhome + path[i:]) or '/'\n    elif compat_os_name in ('nt', 'ce'):\n        def compat_expanduser(path):\n            \"\"\"Expand ~ and ~user constructs.\n\n            If user or $HOME is unknown, do nothing.\n.\n# coding: utf-8\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python >= 3.3\n# Copied from CPython 3.5.1 html/entities.py\n#',\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python 2\n# Python <3.4\n# Python >3.4\n# HTMLParseError has been deprecated in Python 3.3 and removed in\n# Python 3.5. Introducing dummy exception for Python >3.5 for compatible\n# and uniform cross-version exceptiong handling\n# Python 2\n# Python 2\n# HACK: The following are the correct unquote_to_bytes, unquote and unquote_plus\n# implementations from cpython 3.4.3's stdlib. Python 2's version\n# is apparently broken (see https://github.com/rg3/youtube-dl/pull/6244)\n# ~user\n# Python 3\n# Python < 2.6.5 require kwargs to be bytes\n# Python 3\n# Fix https://github.com/rg3/youtube-dl/issues/4223\n# See http://bugs.python.org/issue9161 for what is broken\n# Python >= 3.3\n# Python 2.6\n# In Python 2.6 and 2.7.x < 2.7.7, struct requires a bytes argument\n# See https://bugs.python.org/issue19099\n# noqa: F821\n# noqa: F821\n# not 2.6+ or is 3.x\n# < 2.5 or 3.x\n# PyPy2 prior to version 5.4.0 expects byte strings as Windows function\n# names, see the original PyPy issue [1] and the youtube-dl one [2].\n# 1. https://bitbucket.org/pypy/pypy/issues/2360/windows-ctypescdll-typeerror-function-name\n# 2. https://github.com/rg3/youtube-dl/pull/4392\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport base64\nimport binascii\nimport collections\nimport ctypes\nimport email\nimport getpass\nimport io\nimport itertools\nimport optparse\nimport os\nimport platform\nimport re\nimport shlex\nimport shutil\nimport socket\nimport struct\nimport subprocess\nimport sys\nimport xml.etree.ElementTree\n\n\ntry:\n    import urllib.request as compat_urllib_request\nexcept ImportError:  # Python 2\n    import urllib2 as compat_urllib_request\n\ntry:\n    import urllib.error as compat_urllib_error\nexcept ImportError:  # Python 2\n    import urllib2 as compat_urllib_error\n\ntry:\n    import urllib.parse as compat_urllib_parse\nexcept ImportError:  # Python 2\n    import urllib as compat_urllib_parse\n\ntry:\n    from urllib.parse import urlparse as compat_urllib_parse_urlparse\nexcept ImportError:  # Python 2\n    from urlparse import urlparse as compat_urllib_parse_urlparse\n\ntry:\n    import urllib.parse as compat_urlparse\nexcept ImportError:  # Python 2\n    import urlparse as compat_urlparse\n\ntry:\n    import urllib.response as compat_urllib_response\nexcept ImportError:  # Python 2\n    import urllib as compat_urllib_response\n\ntry:\n    import http.cookiejar as compat_cookiejar\nexcept ImportError:  # Python 2\n    import cookielib as compat_cookiejar\n\ntry:\n    import http.cookies as compat_cookies\nexcept ImportError:  # Python 2\n    import Cookie as compat_cookies\n\ntry:\n    import html.entities as compat_html_entities\nexcept ImportError:  # Python 2\n    import htmlentitydefs as compat_html_entities\n\ntry:  # Python >= 3.3\n    compat_html_entities_html5 = compat_html_entities.html5\nexcept AttributeError:\n    # Copied from CPython 3.5.1 html/entities.py\n    compat_html_entities_html5 = {\n        'Aacute': '\\xc1',\n        'aacute': '\\xe1',\n        'Aacute;': '\\xc1',\n        'aacute;': '\\xe1',\n        'Abreve;': '\\u0102',\n        'abreve;': '\\u0103',\n        'ac;': '\\u223e',\n        'acd;': '\\u223f',\n        'acE;': '\\u223e\\u0333',\n        'Acirc': '\\xc2',\n        'acirc': '\\xe2',\n        'Acirc;': '\\xc2',\n        'acirc;': '\\xe2',\n        'acute': '\\xb4',\n        'acute;': '\\xb4',\n        'Acy;': '\\u0410',\n        'acy;': '\\u0430',\n        'AElig': '\\xc6',\n        'aelig': '\\xe6',\n        'AElig;': '\\xc6',\n        'aelig;': '\\xe6',\n        'af;': '\\u2061',\n        'Afr;': '\\U0001d504',\n        'afr;': '\\U0001d51e',\n        'Agrave': '\\xc0',\n        'agrave': '\\xe0',\n        'Agrave;': '\\xc0',\n        'agrave;': '\\xe0',\n        'alefsym;': '\\u2135',\n        'aleph;': '\\u2135',\n        'Alpha;': '\\u0391',\n        'alpha;': '\\u03b1',\n        'Amacr;': '\\u0100',\n        'amacr;': '\\u0101',\n        'amalg;': '\\u2a3f',\n        'AMP': '&',\n        'amp': '&',\n        'AMP;': '&',\n        'amp;': '&',\n        'And;': '\\u2a53',\n        'and;': '\\u2227',\n        'andand;': '\\u2a55',\n        'andd;': '\\u2a5c',\n        'andslope;': '\\u2a58',\n        'andv;': '\\u2a5a',\n        'ang;': '\\u2220',\n        'ange;': '\\u29a4',\n        'angle;': '\\u2220',\n        'angmsd;': '\\u2221',\n        'angmsdaa;': '\\u29a8',\n        'angmsdab;': '\\u29a9',\n        'angmsdac;': '\\u29aa',\n        'angmsdad;': '\\u29ab',\n        'angmsdae;': '\\u29ac',\n        'angmsdaf;': '\\u29ad',\n        'angmsdag;': '\\u29ae',\n        'angmsdah;': '\\u29af',\n        'angrt;': '\\u221f',\n        'angrtvb;': '\\u22be',\n        'angrtvbd;': '\\u299d',\n        'angsph;': '\\u2222',\n        'angst;': '\\xc5',\n        'angzarr;': '\\u237c',\n        'Aogon;': '\\u0104',\n        'aogon;': '\\u0105',\n        'Aopf;': '\\U0001d538',\n        'aopf;': '\\U0001d552',\n        'ap;': '\\u2248',\n        'apacir;': '\\u2a6f',\n        'apE;': '\\u2a70',\n        'ape;': '\\u224a',\n        'apid;': '\\u224b',\n        'apos;': \"'\",\n        'ApplyFunction;': '\\u2061',\n        'approx;': '\\u2248',\n        'approxeq;': '\\u224a',\n        'Aring': '\\xc5',\n        'aring': '\\xe5',\n        'Aring;': '\\xc5',\n        'aring;': '\\xe5',\n        'Ascr;': '\\U0001d49c',\n        'ascr;': '\\U0001d4b6',\n        'Assign;': '\\u2254',\n        'ast;': '*',\n        'asymp;': '\\u2248',\n        'asympeq;': '\\u224d',\n        'Atilde': '\\xc3',\n        'atilde': '\\xe3',\n        'Atilde;': '\\xc3',\n        'atilde;': '\\xe3',\n        'Auml': '\\xc4',\n        'auml': '\\xe4',\n        'Auml;': '\\xc4',\n        'auml;': '\\xe4',\n        'awconint;': '\\u2233',\n        'awint;': '\\u2a11',\n        'backcong;': '\\u224c',\n        'backepsilon;': '\\u03f6',\n        'backprime;': '\\u2035',\n        'backsim;': '\\u223d',\n        'backsimeq;': '\\u22cd',\n        'Backslash;': '\\u2216',\n        'Barv;': '\\u2ae7',\n        'barvee;': '\\u22bd',\n        'Barwed;': '\\u2306',\n        'barwed;': '\\u2305',\n        'barwedge;': '\\u2305',\n        'bbrk;': '\\u23b5',\n        'bbrktbrk;': '\\u23b6',\n        'bcong;': '\\u224c',\n        'Bcy;': '\\u0411',\n        'bcy;': '\\u0431',\n        'bdquo;': '\\u201e',\n        'becaus;': '\\u2235',\n        'Because;': '\\u2235',\n        'because;': '\\u2235',\n        'bemptyv;': '\\u29b0',\n        'bepsi;': '\\u03f6',\n        'bernou;': '\\u212c',\n        'Bernoullis;': '\\u212c',\n        'Beta;': '\\u0392',\n        'beta;': '\\u03b2',\n        'beth;': '\\u2136',\n        'between;': '\\u226c',\n        'Bfr;': '\\U0001d505',\n        'bfr;': '\\U0001d51f',\n        'bigcap;': '\\u22c2',\n        'bigcirc;': '\\u25ef',\n        'bigcup;': '\\u22c3',\n        'bigodot;': '\\u2a00',\n        'bigoplus;': '\\u2a01',\n        'bigotimes;': '\\u2a02',\n        'bigsqcup;': '\\u2a06',\n        'bigstar;': '\\u2605',\n        'bigtriangledown;': '\\u25bd',\n        'bigtriangleup;': '\\u25b3',\n        'biguplus;': '\\u2a04',\n        'bigvee;': '\\u22c1',\n        'bigwedge;': '\\u22c0',\n        'bkarow;': '\\u290d',\n        'blacklozenge;': '\\u29eb',\n        'blacksquare;': '\\u25aa',\n        'blacktriangle;': '\\u25b4',\n        'blacktriangledown;': '\\u25be',\n        'blacktriangleleft;': '\\u25c2',\n        'blacktriangleright;': '\\u25b8',\n        'blank;': '\\u2423',\n        'blk12;': '\\u2592',\n        'blk14;': '\\u2591',\n        'blk34;': '\\u2593',\n        'block;': '\\u2588',\n        'bne;': '=\\u20e5',\n        'bnequiv;': '\\u2261\\u20e5',\n        'bNot;': '\\u2aed',\n        'bnot;': '\\u2310',\n        'Bopf;': '\\U0001d539',\n        'bopf;': '\\U0001d553',\n        'bot;': '\\u22a5',\n        'bottom;': '\\u22a5',\n        'bowtie;': '\\u22c8',\n        'boxbox;': '\\u29c9',\n        'boxDL;': '\\u2557',\n        'boxDl;': '\\u2556',\n        'boxdL;': '\\u2555',\n        'boxdl;': '\\u2510',\n        'boxDR;': '\\u2554',\n        'boxDr;': '\\u2553',\n        'boxdR;': '\\u2552',\n        'boxdr;': '\\u250c',\n        'boxH;': '\\u2550',\n        'boxh;': '\\u2500',\n        'boxHD;': '\\u2566',\n        'boxHd;': '\\u2564',\n        'boxhD;': '\\u2565',\n        'boxhd;': '\\u252c',\n        'boxHU;': '\\u2569',\n        'boxHu;': '\\u2567',\n        'boxhU;': '\\u2568',\n        'boxhu;': '\\u2534',\n        'boxminus;': '\\u229f',\n        'boxplus;': '\\u229e',\n        'boxtimes;': '\\u22a0',\n        'boxUL;': '\\u255d',\n        'boxUl;': '\\u255c',\n        'boxuL;': '\\u255b',\n        'boxul;': '\\u2518',\n        'boxUR;': '\\u255a',\n        'boxUr;': '\\u2559',\n        'boxuR;': '\\u2558',\n        'boxur;': '\\u2514',\n        'boxV;': '\\u2551',\n        'boxv;': '\\u2502',\n        'boxVH;': '\\u256c',\n        'boxVh;': '\\u256b',\n        'boxvH;': '\\u256a',\n        'boxvh;': '\\u253c',\n        'boxVL;': '\\u2563',\n        'boxVl;': '\\u2562',\n        'boxvL;': '\\u2561',\n        'boxvl;': '\\u2524',\n        'boxVR;': '\\u2560',\n        'boxVr;': '\\u255f',\n        'boxvR;': '\\u255e',\n        'boxvr;': '\\u251c',\n        'bprime;': '\\u2035',\n        'Breve;': '\\u02d8',\n        'breve;': '\\u02d8',\n        'brvbar': '\\xa6',\n        'brvbar;': '\\xa6',\n        'Bscr;': '\\u212c',\n        'bscr;': '\\U0001d4b7',\n        'bsemi;': '\\u204f',\n        'bsim;': '\\u223d',\n        'bsime;': '\\u22cd',\n        'bsol;': '\\\\',\n        'bsolb;': '\\u29c5',\n        'bsolhsub;': '\\u27c8',\n        'bull;': '\\u2022',\n        'bullet;': '\\u2022',\n        'bump;': '\\u224e',\n        'bumpE;': '\\u2aae',\n        'bumpe;': '\\u224f',\n        'Bumpeq;': '\\u224e',\n        'bumpeq;': '\\u224f',\n        'Cacute;': '\\u0106',\n        'cacute;': '\\u0107',\n        'Cap;': '\\u22d2',\n        'cap;': '\\u2229',\n        'capand;': '\\u2a44',\n        'capbrcup;': '\\u2a49',\n        'capcap;': '\\u2a4b',\n        'capcup;': '\\u2a47',\n        'capdot;': '\\u2a40',\n        'CapitalDifferentialD;': '\\u2145',\n        'caps;': '\\u2229\\ufe00',\n        'caret;': '\\u2041',\n        'caron;': '\\u02c7',\n        'Cayleys;': '\\u212d',\n        'ccaps;': '\\u2a4d',\n        'Ccaron;': '\\u010c',\n        'ccaron;': '\\u010d',\n        'Ccedil': '\\xc7',\n        'ccedil': '\\xe7',\n        'Ccedil;': '\\xc7',\n        'ccedil;': '\\xe7',\n        'Ccirc;': '\\u0108',\n        'ccirc;': '\\u0109',\n        'Cconint;': '\\u2230',\n        'ccups;': '\\u2a4c',\n        'ccupssm;': '\\u2a50',\n        'Cdot;': '\\u010a',\n        'cdot;': '\\u010b',\n        'cedil': '\\xb8',\n        'cedil;': '\\xb8',\n        'Cedilla;': '\\xb8',\n        'cemptyv;': '\\u29b2',\n        'cent': '\\xa2',\n        'cent;': '\\xa2',\n        'CenterDot;': '\\xb7',\n        'centerdot;': '\\xb7',\n        'Cfr;': '\\u212d',\n        'cfr;': '\\U0001d520',\n        'CHcy;': '\\u0427',\n        'chcy;': '\\u0447',\n        'check;': '\\u2713',\n        'checkmark;': '\\u2713',\n        'Chi;': '\\u03a7',\n        'chi;': '\\u03c7',\n        'cir;': '\\u25cb',\n        'circ;': '\\u02c6',\n        'circeq;': '\\u2257',\n        'circlearrowleft;': '\\u21ba',\n        'circlearrowright;': '\\u21bb',\n        'circledast;': '\\u229b',\n        'circledcirc;': '\\u229a',\n        'circleddash;': '\\u229d',\n        'CircleDot;': '\\u2299',\n        'circledR;': '\\xae',\n        'circledS;': '\\u24c8',\n        'CircleMinus;': '\\u2296',\n        'CirclePlus;': '\\u2295',\n        'CircleTimes;': '\\u2297',\n        'cirE;': '\\u29c3',\n        'cire;': '\\u2257',\n        'cirfnint;': '\\u2a10',\n        'cirmid;': '\\u2aef',\n        'cirscir;': '\\u29c2',\n        'ClockwiseContourIntegral;': '\\u2232',\n        'CloseCurlyDoubleQuote;': '\\u201d',\n        'CloseCurlyQuote;': '\\u2019',\n        'clubs;': '\\u2663',\n        'clubsuit;': '\\u2663',\n        'Colon;': '\\u2237',\n        'colon;': ':',\n        'Colone;': '\\u2a74',\n        'colone;': '\\u2254',\n        'coloneq;': '\\u2254',\n        'comma;': ',',\n        'commat;': '@',\n        'comp;': '\\u2201',\n        'compfn;': '\\u2218',\n        'complement;': '\\u2201',\n        'complexes;': '\\u2102',\n        'cong;': '\\u2245',\n        'congdot;': '\\u2a6d',\n        'Congruent;': '\\u2261',\n        'Conint;': '\\u222f',\n        'conint;': '\\u222e',\n        'ContourIntegral;': '\\u222e',\n        'Copf;': '\\u2102',\n        'copf;': '\\U0001d554',\n        'coprod;': '\\u2210',\n        'Coproduct;': '\\u2210',\n        'COPY': '\\xa9',\n        'copy': '\\xa9',\n        'COPY;': '\\xa9',\n        'copy;': '\\xa9',\n        'copysr;': '\\u2117',\n        'CounterClockwiseContourIntegral;': '\\u2233',\n        'crarr;': '\\u21b5',\n        'Cross;': '\\u2a2f',\n        'cross;': '\\u2717',\n        'Cscr;': '\\U0001d49e',\n        'cscr;': '\\U0001d4b8',\n        'csub;': '\\u2acf',\n        'csube;': '\\u2ad1',\n        'csup;': '\\u2ad0',\n        'csupe;': '\\u2ad2',\n        'ctdot;': '\\u22ef',\n        'cudarrl;': '\\u2938',\n        'cudarrr;': '\\u2935',\n        'cuepr;': '\\u22de',\n        'cuesc;': '\\u22df',\n        'cularr;': '\\u21b6',\n        'cularrp;': '\\u293d',\n        'Cup;': '\\u22d3',\n        'cup;': '\\u222a',\n        'cupbrcap;': '\\u2a48',\n        'CupCap;': '\\u224d',\n        'cupcap;': '\\u2a46',\n        'cupcup;': '\\u2a4a',\n        'cupdot;': '\\u228d',\n        'cupor;': '\\u2a45',\n        'cups;': '\\u222a\\ufe00',\n        'curarr;': '\\u21b7',\n        'curarrm;': '\\u293c',\n        'curlyeqprec;': '\\u22de',\n        'curlyeqsucc;': '\\u22df',\n        'curlyvee;': '\\u22ce',\n        'curlywedge;': '\\u22cf',\n        'curren': '\\xa4',\n        'curren;': '\\xa4',\n        'curvearrowleft;': '\\u21b6',\n        'curvearrowright;': '\\u21b7',\n        'cuvee;': '\\u22ce',\n        'cuwed;': '\\u22cf',\n        'cwconint;': '\\u2232',\n        'cwint;': '\\u2231',\n        'cylcty;': '\\u232d',\n        'Dagger;': '\\u2021',\n        'dagger;': '\\u2020',\n        'daleth;': '\\u2138',\n        'Darr;': '\\u21a1',\n        'dArr;': '\\u21d3',\n        'darr;': '\\u2193',\n        'dash;': '\\u2010',\n        'Dashv;': '\\u2ae4',\n        'dashv;': '\\u22a3',\n        'dbkarow;': '\\u290f',\n        'dblac;': '\\u02dd',\n        'Dcaron;': '\\u010e',\n        'dcaron;': '\\u010f',\n        'Dcy;': '\\u0414',\n        'dcy;': '\\u0434',\n        'DD;': '\\u2145',\n        'dd;': '\\u2146',\n        'ddagger;': '\\u2021',\n        'ddarr;': '\\u21ca',\n        'DDotrahd;': '\\u2911',\n        'ddotseq;': '\\u2a77',\n        'deg': '\\xb0',\n        'deg;': '\\xb0',\n        'Del;': '\\u2207',\n        'Delta;': '\\u0394',\n        'delta;': '\\u03b4',\n        'demptyv;': '\\u29b1',\n        'dfisht;': '\\u297f',\n        'Dfr;': '\\U0001d507',\n        'dfr;': '\\U0001d521',\n        'dHar;': '\\u2965',\n        'dharl;': '\\u21c3',\n        'dharr;': '\\u21c2',\n        'DiacriticalAcute;': '\\xb4',\n        'DiacriticalDot;': '\\u02d9',\n        'DiacriticalDoubleAcute;': '\\u02dd',\n        'DiacriticalGrave;': '`',\n        'DiacriticalTilde;': '\\u02dc',\n        'diam;': '\\u22c4',\n        'Diamond;': '\\u22c4',\n        'diamond;': '\\u22c4',\n        'diamondsuit;': '\\u2666',\n        'diams;': '\\u2666',\n        'die;': '\\xa8',\n        'DifferentialD;': '\\u2146',\n        'digamma;': '\\u03dd',\n        'disin;': '\\u22f2',\n        'div;': '\\xf7',\n        'divide': '\\xf7',\n        'divide;': '\\xf7',\n        'divideontimes;': '\\u22c7',\n        'divonx;': '\\u22c7',\n        'DJcy;': '\\u0402',\n        'djcy;': '\\u0452',\n        'dlcorn;': '\\u231e',\n        'dlcrop;': '\\u230d',\n        'dollar;': '$',\n        'Dopf;': '\\U0001d53b',\n        'dopf;': '\\U0001d555',\n        'Dot;': '\\xa8',\n        'dot;': '\\u02d9',\n        'DotDot;': '\\u20dc',\n        'doteq;': '\\u2250',\n        'doteqdot;': '\\u2251',\n        'DotEqual;': '\\u2250',\n        'dotminus;': '\\u2238',\n        'dotplus;': '\\u2214',\n        'dotsquare;': '\\u22a1',\n        'doublebarwedge;': '\\u2306',\n        'DoubleContourIntegral;': '\\u222f',\n        'DoubleDot;': '\\xa8',\n        'DoubleDownArrow;': '\\u21d3',\n        'DoubleLeftArrow;': '\\u21d0',\n        'DoubleLeftRightArrow;': '\\u21d4',\n        'DoubleLeftTee;': '\\u2ae4',\n        'DoubleLongLeftArrow;': '\\u27f8',\n        'DoubleLongLeftRightArrow;': '\\u27fa',\n        'DoubleLongRightArrow;': '\\u27f9',\n        'DoubleRightArrow;': '\\u21d2',\n        'DoubleRightTee;': '\\u22a8',\n        'DoubleUpArrow;': '\\u21d1',\n        'DoubleUpDownArrow;': '\\u21d5',\n        'DoubleVerticalBar;': '\\u2225',\n        'DownArrow;': '\\u2193',\n        'Downarrow;': '\\u21d3',\n        'downarrow;': '\\u2193',\n        'DownArrowBar;': '\\u2913',\n        'DownArrowUpArrow;': '\\u21f5',\n        'DownBreve;': '\\u0311',\n        'downdownarrows;': '\\u21ca',\n        'downharpoonleft;': '\\u21c3',\n        'downharpoonright;': '\\u21c2',\n        'DownLeftRightVector;': '\\u2950',\n        'DownLeftTeeVector;': '\\u295e',\n        'DownLeftVector;': '\\u21bd',\n        'DownLeftVectorBar;': '\\u2956',\n        'DownRightTeeVector;': '\\u295f',\n        'DownRightVector;': '\\u21c1',\n        'DownRightVectorBar;': '\\u2957',\n        'DownTee;': '\\u22a4',\n        'DownTeeArrow;': '\\u21a7',\n        'drbkarow;': '\\u2910',\n        'drcorn;': '\\u231f',\n        'drcrop;': '\\u230c',\n        'Dscr;': '\\U0001d49f',\n        'dscr;': '\\U0001d4b9',\n        'DScy;': '\\u0405',\n        'dscy;': '\\u0455',\n        'dsol;': '\\u29f6',\n        'Dstrok;': '\\u0110',\n        'dstrok;': '\\u0111',\n        'dtdot;': '\\u22f1',\n        'dtri;': '\\u25bf',\n        'dtrif;': '\\u25be',\n        'duarr;': '\\u21f5',\n        'duhar;': '\\u296f',\n        'dwangle;': '\\u29a6',\n        'DZcy;': '\\u040f',\n        'dzcy;': '\\u045f',\n        'dzigrarr;': '\\u27ff',\n        'Eacute': '\\xc9',\n        'eacute': '\\xe9',\n        'Eacute;': '\\xc9',\n        'eacute;': '\\xe9',\n        'easter;': '\\u2a6e',\n        'Ecaron;': '\\u011a',\n        'ecaron;': '\\u011b',\n        'ecir;': '\\u2256',\n        'Ecirc': '\\xca',\n        'ecirc': '\\xea',\n        'Ecirc;': '\\xca',\n        'ecirc;': '\\xea',\n        'ecolon;': '\\u2255',\n        'Ecy;': '\\u042d',\n        'ecy;': '\\u044d',\n        'eDDot;': '\\u2a77',\n        'Edot;': '\\u0116',\n        'eDot;': '\\u2251',\n        'edot;': '\\u0117',\n        'ee;': '\\u2147',\n        'efDot;': '\\u2252',\n        'Efr;': '\\U0001d508',\n        'efr;': '\\U0001d522',\n        'eg;': '\\u2a9a',\n        'Egrave': '\\xc8',\n        'egrave': '\\xe8',\n        'Egrave;': '\\xc8',\n        'egrave;': '\\xe8',\n        'egs;': '\\u2a96',\n        'egsdot;': '\\u2a98',\n        'el;': '\\u2a99',\n        'Element;': '\\u2208',\n        'elinters;': '\\u23e7',\n        'ell;': '\\u2113',\n        'els;': '\\u2a95',\n        'elsdot;': '\\u2a97',\n        'Emacr;': '\\u0112',\n        'emacr;': '\\u0113',\n        'empty;': '\\u2205',\n        'emptyset;': '\\u2205',\n        'EmptySmallSquare;': '\\u25fb',\n        'emptyv;': '\\u2205',\n        'EmptyVerySmallSquare;': '\\u25ab',\n        'emsp13;': '\\u2004',\n        'emsp14;': '\\u2005',\n        'emsp;': '\\u2003',\n        'ENG;': '\\u014a',\n        'eng;': '\\u014b',\n        'ensp;': '\\u2002',\n        'Eogon;': '\\u0118',\n        'eogon;': '\\u0119',\n        'Eopf;': '\\U0001d53c',\n        'eopf;': '\\U0001d556',\n        'epar;': '\\u22d5',\n        'eparsl;': '\\u29e3',\n        'eplus;': '\\u2a71',\n        'epsi;': '\\u03b5',\n        'Epsilon;': '\\u0395',\n        'epsilon;': '\\u03b5',\n        'epsiv;': '\\u03f5',\n        'eqcirc;': '\\u2256',\n        'eqcolon;': '\\u2255',\n        'eqsim;': '\\u2242',\n        'eqslantgtr;': '\\u2a96',\n        'eqslantless;': '\\u2a95',\n        'Equal;': '\\u2a75',\n        'equals;': '=',\n        'EqualTilde;': '\\u2242',\n        'equest;': '\\u225f',\n        'Equilibrium;': '\\u21cc',\n        'equiv;': '\\u2261',\n        'equivDD;': '\\u2a78',\n        'eqvparsl;': '\\u29e5',\n        'erarr;': '\\u2971',\n        'erDot;': '\\u2253',\n        'Escr;': '\\u2130',\n        'escr;': '\\u212f',\n        'esdot;': '\\u2250',\n        'Esim;': '\\u2a73',\n        'esim;': '\\u2242',\n        'Eta;': '\\u0397',\n        'eta;': '\\u03b7',\n        'ETH': '\\xd0',\n        'eth': '\\xf0',\n        'ETH;': '\\xd0',\n        'eth;': '\\xf0',\n        'Euml': '\\xcb',\n        'euml': '\\xeb',\n        'Euml;': '\\xcb',\n        'euml;': '\\xeb',\n        'euro;': '\\u20ac',\n        'excl;': '!',\n        'exist;': '\\u2203',\n        'Exists;': '\\u2203',\n        'expectation;': '\\u2130',\n        'ExponentialE;': '\\u2147',\n        'exponentiale;': '\\u2147',\n        'fallingdotseq;': '\\u2252',\n        'Fcy;': '\\u0424',\n        'fcy;': '\\u0444',\n        'female;': '\\u2640',\n        'ffilig;': '\\ufb03',\n        'fflig;': '\\ufb00',\n        'ffllig;': '\\ufb04',\n        'Ffr;': '\\U0001d509',\n        'ffr;': '\\U0001d523',\n        'filig;': '\\ufb01',\n        'FilledSmallSquare;': '\\u25fc',\n        'FilledVerySmallSquare;': '\\u25aa',\n        'fjlig;': 'fj',\n        'flat;': '\\u266d',\n        'fllig;': '\\ufb02',\n        'fltns;': '\\u25b1',\n        'fnof;': '\\u0192',\n        'Fopf;': '\\U0001d53d',\n        'fopf;': '\\U0001d557',\n        'ForAll;': '\\u2200',\n        'forall;': '\\u2200',\n        'fork;': '\\u22d4',\n        'forkv;': '\\u2ad9',\n        'Fouriertrf;': '\\u2131',\n        'fpartint;': '\\u2a0d',\n        'frac12': '\\xbd',\n        'frac12;': '\\xbd',\n        'frac13;': '\\u2153',\n        'frac14': '\\xbc',\n        'frac14;': '\\xbc',\n        'frac15;': '\\u2155',\n        'frac16;': '\\u2159',\n        'frac18;': '\\u215b',\n        'frac23;': '\\u2154',\n        'frac25;': '\\u2156',\n        'frac34': '\\xbe',\n        'frac34;': '\\xbe',\n        'frac35;': '\\u2157',\n        'frac38;': '\\u215c',\n        'frac45;': '\\u2158',\n        'frac56;': '\\u215a',\n        'frac58;': '\\u215d',\n        'frac78;': '\\u215e',\n        'frasl;': '\\u2044',\n        'frown;': '\\u2322',\n        'Fscr;': '\\u2131',\n        'fscr;': '\\U0001d4bb',\n        'gacute;': '\\u01f5',\n        'Gamma;': '\\u0393',\n        'gamma;': '\\u03b3',\n        'Gammad;': '\\u03dc',\n        'gammad;': '\\u03dd',\n        'gap;': '\\u2a86',\n        'Gbreve;': '\\u011e',\n        'gbreve;': '\\u011f',\n        'Gcedil;': '\\u0122',\n        'Gcirc;': '\\u011c',\n        'gcirc;': '\\u011d',\n        'Gcy;': '\\u0413',\n        'gcy;': '\\u0433',\n        'Gdot;': '\\u0120',\n        'gdot;': '\\u0121',\n        'gE;': '\\u2267',\n        'ge;': '\\u2265',\n        'gEl;': '\\u2a8c',\n        'gel;': '\\u22db',\n        'geq;': '\\u2265',\n        'geqq;': '\\u2267',\n        'geqslant;': '\\u2a7e',\n        'ges;': '\\u2a7e',\n        'gescc;': '\\u2aa9',\n        'gesdot;': '\\u2a80',\n        'gesdoto;': '\\u2a82',\n        'gesdotol;': '\\u2a84',\n        'gesl;': '\\u22db\\ufe00',\n        'gesles;': '\\u2a94',\n        'Gfr;': '\\U0001d50a',\n        'gfr;': '\\U0001d524',\n        'Gg;': '\\u22d9',\n        'gg;': '\\u226b',\n        'ggg;': '\\u22d9',\n        'gimel;': '\\u2137',\n        'GJcy;': '\\u0403',\n        'gjcy;': '\\u0453',\n        'gl;': '\\u2277',\n        'gla;': '\\u2aa5',\n        'glE;': '\\u2a92',\n        'glj;': '\\u2aa4',\n        'gnap;': '\\u2a8a',\n        'gnapprox;': '\\u2a8a',\n        'gnE;': '\\u2269',\n        'gne;': '\\u2a88',\n        'gneq;': '\\u2a88',\n        'gneqq;': '\\u2269',\n        'gnsim;': '\\u22e7',\n        'Gopf;': '\\U0001d53e',\n        'gopf;': '\\U0001d558',\n        'grave;': '`',\n        'GreaterEqual;': '\\u2265',\n        'GreaterEqualLess;': '\\u22db',\n        'GreaterFullEqual;': '\\u2267',\n        'GreaterGreater;': '\\u2aa2',\n        'GreaterLess;': '\\u2277',\n        'GreaterSlantEqual;': '\\u2a7e',\n        'GreaterTilde;': '\\u2273',\n        'Gscr;': '\\U0001d4a2',\n        'gscr;': '\\u210a',\n        'gsim;': '\\u2273',\n        'gsime;': '\\u2a8e',\n        'gsiml;': '\\u2a90',\n        'GT': '>',\n        'gt': '>',\n        'GT;': '>',\n        'Gt;': '\\u226b',\n        'gt;': '>',\n        'gtcc;': '\\u2aa7',\n        'gtcir;': '\\u2a7a',\n        'gtdot;': '\\u22d7',\n        'gtlPar;': '\\u2995',\n        'gtquest;': '\\u2a7c',\n        'gtrapprox;': '\\u2a86',\n        'gtrarr;': '\\u2978',\n        'gtrdot;': '\\u22d7',\n        'gtreqless;': '\\u22db',\n        'gtreqqless;': '\\u2a8c',\n        'gtrless;': '\\u2277',\n        'gtrsim;': '\\u2273',\n        'gvertneqq;': '\\u2269\\ufe00',\n        'gvnE;': '\\u2269\\ufe00',\n        'Hacek;': '\\u02c7',\n        'hairsp;': '\\u200a',\n        'half;': '\\xbd',\n        'hamilt;': '\\u210b',\n        'HARDcy;': '\\u042a',\n        'hardcy;': '\\u044a',\n        'hArr;': '\\u21d4',\n        'harr;': '\\u2194',\n        'harrcir;': '\\u2948',\n        'harrw;': '\\u21ad',\n        'Hat;': '^',\n        'hbar;': '\\u210f',\n        'Hcirc;': '\\u0124',\n        'hcirc;': '\\u0125',\n        'hearts;': '\\u2665',\n        'heartsuit;': '\\u2665',\n        'hellip;': '\\u2026',\n        'hercon;': '\\u22b9',\n        'Hfr;': '\\u210c',\n        'hfr;': '\\U0001d525',\n        'HilbertSpace;': '\\u210b',\n        'hksearow;': '\\u2925',\n        'hkswarow;': '\\u2926',\n        'hoarr;': '\\u21ff',\n        'homtht;': '\\u223b',\n        'hookleftarrow;': '\\u21a9',\n        'hookrightarrow;': '\\u21aa',\n        'Hopf;': '\\u210d',\n        'hopf;': '\\U0001d559',\n        'horbar;': '\\u2015',\n        'HorizontalLine;': '\\u2500',\n        'Hscr;': '\\u210b',\n        'hscr;': '\\U0001d4bd',\n        'hslash;': '\\u210f',\n        'Hstrok;': '\\u0126',\n        'hstrok;': '\\u0127',\n        'HumpDownHump;': '\\u224e',\n        'HumpEqual;': '\\u224f',\n        'hybull;': '\\u2043',\n        'hyphen;': '\\u2010',\n        'Iacute': '\\xcd',\n        'iacute': '\\xed',\n        'Iacute;': '\\xcd',\n        'iacute;': '\\xed',\n        'ic;': '\\u2063',\n        'Icirc': '\\xce',\n        'icirc': '\\xee',\n        'Icirc;': '\\xce',\n        'icirc;': '\\xee',\n        'Icy;': '\\u0418',\n        'icy;': '\\u0438',\n        'Idot;': '\\u0130',\n        'IEcy;': '\\u0415',\n        'iecy;': '\\u0435',\n        'iexcl': '\\xa1',\n        'iexcl;': '\\xa1',\n        'iff;': '\\u21d4',\n        'Ifr;': '\\u2111',\n        'ifr;': '\\U0001d526',\n        'Igrave': '\\xcc',\n        'igrave': '\\xec',\n        'Igrave;': '\\xcc',\n        'igrave;': '\\xec',\n        'ii;': '\\u2148',\n        'iiiint;': '\\u2a0c',\n        'iiint;': '\\u222d',\n        'iinfin;': '\\u29dc',\n        'iiota;': '\\u2129',\n        'IJlig;': '\\u0132',\n        'ijlig;': '\\u0133',\n        'Im;': '\\u2111',\n        'Imacr;': '\\u012a',\n        'imacr;': '\\u012b',\n        'image;': '\\u2111',\n        'ImaginaryI;': '\\u2148',\n        'imagline;': '\\u2110',\n        'imagpart;': '\\u2111',\n        'imath;': '\\u0131',\n        'imof;': '\\u22b7',\n        'imped;': '\\u01b5',\n        'Implies;': '\\u21d2',\n        'in;': '\\u2208',\n        'incare;': '\\u2105',\n        'infin;': '\\u221e',\n        'infintie;': '\\u29dd',\n        'inodot;': '\\u0131',\n        'Int;': '\\u222c',\n        'int;': '\\u222b',\n        'intcal;': '\\u22ba',\n        'integers;': '\\u2124',\n        'Integral;': '\\u222b',\n        'intercal;': '\\u22ba',\n        'Intersection;': '\\u22c2',\n        'intlarhk;': '\\u2a17',\n        'intprod;': '\\u2a3c',\n        'InvisibleComma;': '\\u2063',\n        'InvisibleTimes;': '\\u2062',\n        'IOcy;': '\\u0401',\n        'iocy;': '\\u0451',\n        'Iogon;': '\\u012e',\n        'iogon;': '\\u012f',\n        'Iopf;': '\\U0001d540',\n        'iopf;': '\\U0001d55a',\n        'Iota;': '\\u0399',\n        'iota;': '\\u03b9',\n        'iprod;': '\\u2a3c',\n        'iquest': '\\xbf',\n        'iquest;': '\\xbf',\n        'Iscr;': '\\u2110',\n        'iscr;': '\\U0001d4be',\n        'isin;': '\\u2208',\n        'isindot;': '\\u22f5',\n        'isinE;': '\\u22f9',\n        'isins;': '\\u22f4',\n        'isinsv;': '\\u22f3',\n        'isinv;': '\\u2208',\n        'it;': '\\u2062',\n        'Itilde;': '\\u0128',\n        'itilde;': '\\u0129',\n        'Iukcy;': '\\u0406',\n        'iukcy;': '\\u0456',\n        'Iuml': '\\xcf',\n        'iuml': '\\xef',\n        'Iuml;': '\\xcf',\n        'iuml;': '\\xef',\n        'Jcirc;': '\\u0134',\n        'jcirc;': '\\u0135',\n        'Jcy;': '\\u0419',\n        'jcy;': '\\u0439',\n        'Jfr;': '\\U0001d50d',\n        'jfr;': '\\U0001d527',\n        'jmath;': '\\u0237',\n        'Jopf;': '\\U0001d541',\n        'jopf;': '\\U0001d55b',\n        'Jscr;': '\\U0001d4a5',\n        'jscr;': '\\U0001d4bf',\n        'Jsercy;': '\\u0408',\n        'jsercy;': '\\u0458',\n        'Jukcy;': '\\u0404',\n        'jukcy;': '\\u0454',\n        'Kappa;': '\\u039a',\n        'kappa;': '\\u03ba',\n        'kappav;': '\\u03f0',\n        'Kcedil;': '\\u0136',\n        'kcedil;': '\\u0137',\n        'Kcy;': '\\u041a',\n        'kcy;': '\\u043a',\n        'Kfr;': '\\U0001d50e',\n        'kfr;': '\\U0001d528',\n        'kgreen;': '\\u0138',\n        'KHcy;': '\\u0425',\n        'khcy;': '\\u0445',\n        'KJcy;': '\\u040c',\n        'kjcy;': '\\u045c',\n        'Kopf;': '\\U0001d542',\n        'kopf;': '\\U0001d55c',\n        'Kscr;': '\\U0001d4a6',\n        'kscr;': '\\U0001d4c0',\n        'lAarr;': '\\u21da',\n        'Lacute;': '\\u0139',\n        'lacute;': '\\u013a',\n        'laemptyv;': '\\u29b4',\n        'lagran;': '\\u2112',\n        'Lambda;': '\\u039b',\n        'lambda;': '\\u03bb',\n        'Lang;': '\\u27ea',\n        'lang;': '\\u27e8',\n        'langd;': '\\u2991',\n        'langle;': '\\u27e8',\n        'lap;': '\\u2a85',\n        'Laplacetrf;': '\\u2112',\n        'laquo': '\\xab',\n        'laquo;': '\\xab',\n        'Larr;': '\\u219e',\n        'lArr;': '\\u21d0',\n        'larr;': '\\u2190',\n        'larrb;': '\\u21e4',\n        'larrbfs;': '\\u291f',\n        'larrfs;': '\\u291d',\n        'larrhk;': '\\u21a9',\n        'larrlp;': '\\u21ab',\n        'larrpl;': '\\u2939',\n        'larrsim;': '\\u2973',\n        'larrtl;': '\\u21a2',\n        'lat;': '\\u2aab',\n        'lAtail;': '\\u291b',\n        'latail;': '\\u2919',\n        'late;': '\\u2aad',\n        'lates;': '\\u2aad\\ufe00',\n        'lBarr;': '\\u290e',\n        'lbarr;': '\\u290c',\n        'lbbrk;': '\\u2772',\n        'lbrace;': '{',\n        'lbrack;': '[',\n        'lbrke;': '\\u298b',\n        'lbrksld;': '\\u298f',\n        'lbrkslu;': '\\u298d',\n        'Lcaron;': '\\u013d',\n        'lcaron;': '\\u013e',\n        'Lcedil;': '\\u013b',\n        'lcedil;': '\\u013c',\n        'lceil;': '\\u2308',\n        'lcub;': '{',\n        'Lcy;': '\\u041b',\n        'lcy;': '\\u043b',\n        'ldca;': '\\u2936',\n        'ldquo;': '\\u201c',\n        'ldquor;': '\\u201e',\n        'ldrdhar;': '\\u2967',\n        'ldrushar;': '\\u294b',\n        'ldsh;': '\\u21b2',\n        'lE;': '\\u2266',\n        'le;': '\\u2264',\n        'LeftAngleBracket;': '\\u27e8',\n        'LeftArrow;': '\\u2190',\n        'Leftarrow;': '\\u21d0',\n        'leftarrow;': '\\u2190',\n        'LeftArrowBar;': '\\u21e4',\n        'LeftArrowRightArrow;': '\\u21c6',\n        'leftarrowtail;': '\\u21a2',\n        'LeftCeiling;': '\\u2308',\n        'LeftDoubleBracket;': '\\u27e6',\n        'LeftDownTeeVector;': '\\u2961',\n        'LeftDownVector;': '\\u21c3',\n        'LeftDownVectorBar;': '\\u2959',\n        'LeftFloor;': '\\u230a',\n        'leftharpoondown;': '\\u21bd',\n        'leftharpoonup;': '\\u21bc',\n        'leftleftarrows;': '\\u21c7',\n        'LeftRightArrow;': '\\u2194',\n        'Leftrightarrow;': '\\u21d4',\n        'leftrightarrow;': '\\u2194',\n        'leftrightarrows;': '\\u21c6',\n        'leftrightharpoons;': '\\u21cb',\n        'leftrightsquigarrow;': '\\u21ad',\n        'LeftRightVector;': '\\u294e',\n        'LeftTee;': '\\u22a3',\n        'LeftTeeArrow;': '\\u21a4',\n        'LeftTeeVector;': '\\u295a',\n        'leftthreetimes;': '\\u22cb',\n        'LeftTriangle;': '\\u22b2',\n        'LeftTriangleBar;': '\\u29cf',\n        'LeftTriangleEqual;': '\\u22b4',\n        'LeftUpDownVector;': '\\u2951',\n        'LeftUpTeeVector;': '\\u2960',\n        'LeftUpVector;': '\\u21bf',\n        'LeftUpVectorBar;': '\\u2958',\n        'LeftVector;': '\\u21bc',\n        'LeftVectorBar;': '\\u2952',\n        'lEg;': '\\u2a8b',\n        'leg;': '\\u22da',\n        'leq;': '\\u2264',\n        'leqq;': '\\u2266',\n        'leqslant;': '\\u2a7d',\n        'les;': '\\u2a7d',\n        'lescc;': '\\u2aa8',\n        'lesdot;': '\\u2a7f',\n        'lesdoto;': '\\u2a81',\n        'lesdotor;': '\\u2a83',\n        'lesg;': '\\u22da\\ufe00',\n        'lesges;': '\\u2a93',\n        'lessapprox;': '\\u2a85',\n        'lessdot;': '\\u22d6',\n        'lesseqgtr;': '\\u22da',\n        'lesseqqgtr;': '\\u2a8b',\n        'LessEqualGreater;': '\\u22da',\n        'LessFullEqual;': '\\u2266',\n        'LessGreater;': '\\u2276',\n        'lessgtr;': '\\u2276',\n        'LessLess;': '\\u2aa1',\n        'lesssim;': '\\u2272',\n        'LessSlantEqual;': '\\u2a7d',\n        'LessTilde;': '\\u2272',\n        'lfisht;': '\\u297c',\n        'lfloor;': '\\u230a',\n        'Lfr;': '\\U0001d50f',\n        'lfr;': '\\U0001d529',\n        'lg;': '\\u2276',\n        'lgE;': '\\u2a91',\n        'lHar;': '\\u2962',\n        'lhard;': '\\u21bd',\n        'lharu;': '\\u21bc',\n        'lharul;': '\\u296a',\n        'lhblk;': '\\u2584',\n        'LJcy;': '\\u0409',\n        'ljcy;': '\\u0459',\n        'Ll;': '\\u22d8',\n        'll;': '\\u226a',\n        'llarr;': '\\u21c7',\n        'llcorner;': '\\u231e',\n        'Lleftarrow;': '\\u21da',\n        'llhard;': '\\u296b',\n        'lltri;': '\\u25fa',\n        'Lmidot;': '\\u013f',\n        'lmidot;': '\\u0140',\n        'lmoust;': '\\u23b0',\n        'lmoustache;': '\\u23b0',\n        'lnap;': '\\u2a89',\n        'lnapprox;': '\\u2a89',\n        'lnE;': '\\u2268',\n        'lne;': '\\u2a87',\n        'lneq;': '\\u2a87',\n        'lneqq;': '\\u2268',\n        'lnsim;': '\\u22e6',\n        'loang;': '\\u27ec',\n        'loarr;': '\\u21fd',\n        'lobrk;': '\\u27e6',\n        'LongLeftArrow;': '\\u27f5',\n        'Longleftarrow;': '\\u27f8',\n        'longleftarrow;': '\\u27f5',\n        'LongLeftRightArrow;': '\\u27f7',\n        'Longleftrightarrow;': '\\u27fa',\n        'longleftrightarrow;': '\\u27f7',\n        'longmapsto;': '\\u27fc',\n        'LongRightArrow;': '\\u27f6',\n        'Longrightarrow;': '\\u27f9',\n        'longrightarrow;': '\\u27f6',\n        'looparrowleft;': '\\u21ab',\n        'looparrowright;': '\\u21ac',\n        'lopar;': '\\u2985',\n        'Lopf;': '\\U0001d543',\n        'lopf;': '\\U0001d55d',\n        'loplus;': '\\u2a2d',\n        'lotimes;': '\\u2a34',\n        'lowast;': '\\u2217',\n        'lowbar;': '_',\n        'LowerLeftArrow;': '\\u2199',\n        'LowerRightArrow;': '\\u2198',\n        'loz;': '\\u25ca',\n        'lozenge;': '\\u25ca',\n        'lozf;': '\\u29eb',\n        'lpar;': '(',\n        'lparlt;': '\\u2993',\n        'lrarr;': '\\u21c6',\n        'lrcorner;': '\\u231f',\n        'lrhar;': '\\u21cb',\n        'lrhard;': '\\u296d',\n        'lrm;': '\\u200e',\n        'lrtri;': '\\u22bf',\n        'lsaquo;': '\\u2039',\n        'Lscr;': '\\u2112',\n        'lscr;': '\\U0001d4c1',\n        'Lsh;': '\\u21b0',\n        'lsh;': '\\u21b0',\n        'lsim;': '\\u2272',\n        'lsime;': '\\u2a8d',\n        'lsimg;': '\\u2a8f',\n        'lsqb;': '[',\n        'lsquo;': '\\u2018',\n        'lsquor;': '\\u201a',\n        'Lstrok;': '\\u0141',\n        'lstrok;': '\\u0142',\n        'LT': '<',\n        'lt': '<',\n        'LT;': '<',\n        'Lt;': '\\u226a',\n        'lt;': '<',\n        'ltcc;': '\\u2aa6',\n        'ltcir;': '\\u2a79',\n        'ltdot;': '\\u22d6',\n        'lthree;': '\\u22cb',\n        'ltimes;': '\\u22c9',\n        'ltlarr;': '\\u2976',\n        'ltquest;': '\\u2a7b',\n        'ltri;': '\\u25c3',\n        'ltrie;': '\\u22b4',\n        'ltrif;': '\\u25c2',\n        'ltrPar;': '\\u2996',\n        'lurdshar;': '\\u294a',\n        'luruhar;': '\\u2966',\n        'lvertneqq;': '\\u2268\\ufe00',\n        'lvnE;': '\\u2268\\ufe00',\n        'macr': '\\xaf',\n        'macr;': '\\xaf',\n        'male;': '\\u2642',\n        'malt;': '\\u2720',\n        'maltese;': '\\u2720',\n        'Map;': '\\u2905',\n        'map;': '\\u21a6',\n        'mapsto;': '\\u21a6',\n        'mapstodown;': '\\u21a7',\n        'mapstoleft;': '\\u21a4',\n        'mapstoup;': '\\u21a5',\n        'marker;': '\\u25ae',\n        'mcomma;': '\\u2a29',\n        'Mcy;': '\\u041c',\n        'mcy;': '\\u043c',\n        'mdash;': '\\u2014',\n        'mDDot;': '\\u223a',\n        'measuredangle;': '\\u2221',\n        'MediumSpace;': '\\u205f',\n        'Mellintrf;': '\\u2133',\n        'Mfr;': '\\U0001d510',\n        'mfr;': '\\U0001d52a',\n        'mho;': '\\u2127',\n        'micro': '\\xb5',\n        'micro;': '\\xb5',\n        'mid;': '\\u2223',\n        'midast;': '*',\n        'midcir;': '\\u2af0',\n        'middot': '\\xb7',\n        'middot;': '\\xb7',\n        'minus;': '\\u2212',\n        'minusb;': '\\u229f',\n        'minusd;': '\\u2238',\n        'minusdu;': '\\u2a2a',\n        'MinusPlus;': '\\u2213',\n        'mlcp;': '\\u2adb',\n        'mldr;': '\\u2026',\n        'mnplus;': '\\u2213',\n        'models;': '\\u22a7',\n        'Mopf;': '\\U0001d544',\n        'mopf;': '\\U0001d55e',\n        'mp;': '\\u2213',\n        'Mscr;': '\\u2133',\n        'mscr;': '\\U0001d4c2',\n        'mstpos;': '\\u223e',\n        'Mu;': '\\u039c',\n        'mu;': '\\u03bc',\n        'multimap;': '\\u22b8',\n        'mumap;': '\\u22b8',\n        'nabla;': '\\u2207',\n        'Nacute;': '\\u0143',\n        'nacute;': '\\u0144',\n        'nang;': '\\u2220\\u20d2',\n        'nap;': '\\u2249',\n        'napE;': '\\u2a70\\u0338',\n        'napid;': '\\u224b\\u0338',\n        'napos;': '\\u0149',\n        'napprox;': '\\u2249',\n        'natur;': '\\u266e',\n        'natural;': '\\u266e',\n        'naturals;': '\\u2115',\n        'nbsp': '\\xa0',\n        'nbsp;': '\\xa0',\n        'nbump;': '\\u224e\\u0338',\n        'nbumpe;': '\\u224f\\u0338',\n        'ncap;': '\\u2a43',\n        'Ncaron;': '\\u0147',\n        'ncaron;': '\\u0148',\n        'Ncedil;': '\\u0145',\n        'ncedil;': '\\u0146',\n        'ncong;': '\\u2247',\n        'ncongdot;': '\\u2a6d\\u0338',\n        'ncup;': '\\u2a42',\n        'Ncy;': '\\u041d',\n        'ncy;': '\\u043d',\n        'ndash;': '\\u2013',\n        'ne;': '\\u2260',\n        'nearhk;': '\\u2924',\n        'neArr;': '\\u21d7',\n        'nearr;': '\\u2197',\n        'nearrow;': '\\u2197',\n        'nedot;': '\\u2250\\u0338',\n        'NegativeMediumSpace;': '\\u200b',\n        'NegativeThickSpace;': '\\u200b',\n        'NegativeThinSpace;': '\\u200b',\n        'NegativeVeryThinSpace;': '\\u200b',\n        'nequiv;': '\\u2262',\n        'nesear;': '\\u2928',\n        'nesim;': '\\u2242\\u0338',\n        'NestedGreaterGreater;': '\\u226b',\n        'NestedLessLess;': '\\u226a',\n        'NewLine;': '\\n',\n        'nexist;': '\\u2204',\n        'nexists;': '\\u2204',\n        'Nfr;': '\\U0001d511',\n        'nfr;': '\\U0001d52b',\n        'ngE;': '\\u2267\\u0338',\n        'nge;': '\\u2271',\n        'ngeq;': '\\u2271',\n        'ngeqq;': '\\u2267\\u0338',\n        'ngeqslant;': '\\u2a7e\\u0338',\n        'nges;': '\\u2a7e\\u0338',\n        'nGg;': '\\u22d9\\u0338',\n        'ngsim;': '\\u2275',\n        'nGt;': '\\u226b\\u20d2',\n        'ngt;': '\\u226f',\n        'ngtr;': '\\u226f',\n        'nGtv;': '\\u226b\\u0338',\n        'nhArr;': '\\u21ce',\n        'nharr;': '\\u21ae',\n        'nhpar;': '\\u2af2',\n        'ni;': '\\u220b',\n        'nis;': '\\u22fc',\n        'nisd;': '\\u22fa',\n        'niv;': '\\u220b',\n        'NJcy;': '\\u040a',\n        'njcy;': '\\u045a',\n        'nlArr;': '\\u21cd',\n        'nlarr;': '\\u219a',\n        'nldr;': '\\u2025',\n        'nlE;': '\\u2266\\u0338',\n        'nle;': '\\u2270',\n        'nLeftarrow;': '\\u21cd',\n        'nleftarrow;': '\\u219a',\n        'nLeftrightarrow;': '\\u21ce',\n        'nleftrightarrow;': '\\u21ae',\n        'nleq;': '\\u2270',\n        'nleqq;': '\\u2266\\u0338',\n        'nleqslant;': '\\u2a7d\\u0338',\n        'nles;': '\\u2a7d\\u0338',\n        'nless;': '\\u226e',\n        'nLl;': '\\u22d8\\u0338',\n        'nlsim;': '\\u2274',\n        'nLt;': '\\u226a\\u20d2',\n        'nlt;': '\\u226e',\n        'nltri;': '\\u22ea',\n        'nltrie;': '\\u22ec',\n        'nLtv;': '\\u226a\\u0338',\n        'nmid;': '\\u2224',\n        'NoBreak;': '\\u2060',\n        'NonBreakingSpace;': '\\xa0',\n        'Nopf;': '\\u2115',\n        'nopf;': '\\U0001d55f',\n        'not': '\\xac',\n        'Not;': '\\u2aec',\n        'not;': '\\xac',\n        'NotCongruent;': '\\u2262',\n        'NotCupCap;': '\\u226d',\n        'NotDoubleVerticalBar;': '\\u2226',\n        'NotElement;': '\\u2209',\n        'NotEqual;': '\\u2260',\n        'NotEqualTilde;': '\\u2242\\u0338',\n        'NotExists;': '\\u2204',\n        'NotGreater;': '\\u226f',\n        'NotGreaterEqual;': '\\u2271',\n        'NotGreaterFullEqual;': '\\u2267\\u0338',\n        'NotGreaterGreater;': '\\u226b\\u0338',\n        'NotGreaterLess;': '\\u2279',\n        'NotGreaterSlantEqual;': '\\u2a7e\\u0338',\n        'NotGreaterTilde;': '\\u2275',\n        'NotHumpDownHump;': '\\u224e\\u0338',\n        'NotHumpEqual;': '\\u224f\\u0338',\n        'notin;': '\\u2209',\n        'notindot;': '\\u22f5\\u0338',\n        'notinE;': '\\u22f9\\u0338',\n        'notinva;': '\\u2209',\n        'notinvb;': '\\u22f7',\n        'notinvc;': '\\u22f6',\n        'NotLeftTriangle;': '\\u22ea',\n        'NotLeftTriangleBar;': '\\u29cf\\u0338',\n        'NotLeftTriangleEqual;': '\\u22ec',\n        'NotLess;': '\\u226e',\n        'NotLessEqual;': '\\u2270',\n        'NotLessGreater;': '\\u2278',\n        'NotLessLess;': '\\u226a\\u0338',\n        'NotLessSlantEqual;': '\\u2a7d\\u0338',\n        'NotLessTilde;': '\\u2274',\n        'NotNestedGreaterGreater;': '\\u2aa2\\u0338',\n        'NotNestedLessLess;': '\\u2aa1\\u0338',\n        'notni;': '\\u220c',\n        'notniva;': '\\u220c',\n        'notnivb;': '\\u22fe',\n        'notnivc;': '\\u22fd',\n        'NotPrecedes;': '\\u2280',\n        'NotPrecedesEqual;': '\\u2aaf\\u0338',\n        'NotPrecedesSlantEqual;': '\\u22e0',\n        'NotReverseElement;': '\\u220c',\n        'NotRightTriangle;': '\\u22eb',\n        'NotRightTriangleBar;': '\\u29d0\\u0338',\n        'NotRightTriangleEqual;': '\\u22ed',\n        'NotSquareSubset;': '\\u228f\\u0338',\n        'NotSquareSubsetEqual;': '\\u22e2',\n        'NotSquareSuperset;': '\\u2290\\u0338',\n        'NotSquareSupersetEqual;': '\\u22e3',\n        'NotSubset;': '\\u2282\\u20d2',\n        'NotSubsetEqual;': '\\u2288',\n        'NotSucceeds;': '\\u2281',\n        'NotSucceedsEqual;': '\\u2ab0\\u0338',\n        'NotSucceedsSlantEqual;': '\\u22e1',\n        'NotSucceedsTilde;': '\\u227f\\u0338',\n        'NotSuperset;': '\\u2283\\u20d2',\n        'NotSupersetEqual;': '\\u2289',\n        'NotTilde;': '\\u2241',\n        'NotTildeEqual;': '\\u2244',\n        'NotTildeFullEqual;': '\\u2247',\n        'NotTildeTilde;': '\\u2249',\n        'NotVerticalBar;': '\\u2224',\n        'npar;': '\\u2226',\n        'nparallel;': '\\u2226',\n        'nparsl;': '\\u2afd\\u20e5',\n        'npart;': '\\u2202\\u0338',\n        'npolint;': '\\u2a14',\n        'npr;': '\\u2280',\n        'nprcue;': '\\u22e0',\n        'npre;': '\\u2aaf\\u0338',\n        'nprec;': '\\u2280',\n        'npreceq;': '\\u2aaf\\u0338',\n        'nrArr;': '\\u21cf',\n        'nrarr;': '\\u219b',\n        'nrarrc;': '\\u2933\\u0338',\n        'nrarrw;': '\\u219d\\u0338',\n        'nRightarrow;': '\\u21cf',\n        'nrightarrow;': '\\u219b',\n        'nrtri;': '\\u22eb',\n        'nrtrie;': '\\u22ed',\n        'nsc;': '\\u2281',\n        'nsccue;': '\\u22e1',\n        'nsce;': '\\u2ab0\\u0338',\n        'Nscr;': '\\U0001d4a9',\n        'nscr;': '\\U0001d4c3',\n        'nshortmid;': '\\u2224',\n        'nshortparallel;': '\\u2226',\n        'nsim;': '\\u2241',\n        'nsime;': '\\u2244',\n        'nsimeq;': '\\u2244',\n        'nsmid;': '\\u2224',\n        'nspar;': '\\u2226',\n        'nsqsube;': '\\u22e2',\n        'nsqsupe;': '\\u22e3',\n        'nsub;': '\\u2284',\n        'nsubE;': '\\u2ac5\\u0338',\n        'nsube;': '\\u2288',\n        'nsubset;': '\\u2282\\u20d2',\n        'nsubseteq;': '\\u2288',\n        'nsubseteqq;': '\\u2ac5\\u0338',\n        'nsucc;': '\\u2281',\n        'nsucceq;': '\\u2ab0\\u0338',\n        'nsup;': '\\u2285',\n        'nsupE;': '\\u2ac6\\u0338',\n        'nsupe;': '\\u2289',\n        'nsupset;': '\\u2283\\u20d2',\n        'nsupseteq;': '\\u2289',\n        'nsupseteqq;': '\\u2ac6\\u0338',\n        'ntgl;': '\\u2279',\n        'Ntilde': '\\xd1',\n        'ntilde': '\\xf1',\n        'Ntilde;': '\\xd1',\n        'ntilde;': '\\xf1',\n        'ntlg;': '\\u2278',\n        'ntriangleleft;': '\\u22ea',\n        'ntrianglelefteq;': '\\u22ec',\n        'ntriangleright;': '\\u22eb',\n        'ntrianglerighteq;': '\\u22ed',\n        'Nu;': '\\u039d',\n        'nu;': '\\u03bd',\n        'num;': '#',\n        'numero;': '\\u2116',\n        'numsp;': '\\u2007',\n        'nvap;': '\\u224d\\u20d2',\n        'nVDash;': '\\u22af',\n        'nVdash;': '\\u22ae',\n        'nvDash;': '\\u22ad',\n        'nvdash;': '\\u22ac',\n        'nvge;': '\\u2265\\u20d2',\n        'nvgt;': '>\\u20d2',\n        'nvHarr;': '\\u2904',\n        'nvinfin;': '\\u29de',\n        'nvlArr;': '\\u2902',\n        'nvle;': '\\u2264\\u20d2',\n        'nvlt;': '<\\u20d2',\n        'nvltrie;': '\\u22b4\\u20d2',\n        'nvrArr;': '\\u2903',\n        'nvrtrie;': '\\u22b5\\u20d2',\n        'nvsim;': '\\u223c\\u20d2',\n        'nwarhk;': '\\u2923',\n        'nwArr;': '\\u21d6',\n        'nwarr;': '\\u2196',\n        'nwarrow;': '\\u2196',\n        'nwnear;': '\\u2927',\n        'Oacute': '\\xd3',\n        'oacute': '\\xf3',\n        'Oacute;': '\\xd3',\n        'oacute;': '\\xf3',\n        'oast;': '\\u229b',\n        'ocir;': '\\u229a',\n        'Ocirc': '\\xd4',\n        'ocirc': '\\xf4',\n        'Ocirc;': '\\xd4',\n        'ocirc;': '\\xf4',\n        'Ocy;': '\\u041e',\n        'ocy;': '\\u043e',\n        'odash;': '\\u229d',\n        'Odblac;': '\\u0150',\n        'odblac;': '\\u0151',\n        'odiv;': '\\u2a38',\n        'odot;': '\\u2299',\n        'odsold;': '\\u29bc',\n        'OElig;': '\\u0152',\n        'oelig;': '\\u0153',\n        'ofcir;': '\\u29bf',\n        'Ofr;': '\\U0001d512',\n        'ofr;': '\\U0001d52c',\n        'ogon;': '\\u02db',\n        'Ograve': '\\xd2',\n        'ograve': '\\xf2',\n        'Ograve;': '\\xd2',\n        'ograve;': '\\xf2',\n        'ogt;': '\\u29c1',\n        'ohbar;': '\\u29b5',\n        'ohm;': '\\u03a9',\n        'oint;': '\\u222e',\n        'olarr;': '\\u21ba',\n        'olcir;': '\\u29be',\n        'olcross;': '\\u29bb',\n        'oline;': '\\u203e',\n        'olt;': '\\u29c0',\n        'Omacr;': '\\u014c',\n        'omacr;': '\\u014d',\n        'Omega;': '\\u03a9',\n        'omega;': '\\u03c9',\n        'Omicron;': '\\u039f',\n        'omicron;': '\\u03bf',\n        'omid;': '\\u29b6',\n        'ominus;': '\\u2296',\n        'Oopf;': '\\U0001d546',\n        'oopf;': '\\U0001d560',\n        'opar;': '\\u29b7',\n        'OpenCurlyDoubleQuote;': '\\u201c',\n        'OpenCurlyQuote;': '\\u2018',\n        'operp;': '\\u29b9',\n        'oplus;': '\\u2295',\n        'Or;': '\\u2a54',\n        'or;': '\\u2228',\n        'orarr;': '\\u21bb',\n        'ord;': '\\u2a5d',\n        'order;': '\\u2134',\n        'orderof;': '\\u2134',\n        'ordf': '\\xaa',\n        'ordf;': '\\xaa',\n        'ordm': '\\xba',\n        'ordm;': '\\xba',\n        'origof;': '\\u22b6',\n        'oror;': '\\u2a56',\n        'orslope;': '\\u2a57',\n        'orv;': '\\u2a5b',\n        'oS;': '\\u24c8',\n        'Oscr;': '\\U0001d4aa',\n        'oscr;': '\\u2134',\n        'Oslash': '\\xd8',\n        'oslash': '\\xf8',\n        'Oslash;': '\\xd8',\n        'oslash;': '\\xf8',\n        'osol;': '\\u2298',\n        'Otilde': '\\xd5',\n        'otilde': '\\xf5',\n        'Otilde;': '\\xd5',\n        'otilde;': '\\xf5',\n        'Otimes;': '\\u2a37',\n        'otimes;': '\\u2297',\n        'otimesas;': '\\u2a36',\n        'Ouml': '\\xd6',\n        'ouml': '\\xf6',\n        'Ouml;': '\\xd6',\n        'ouml;': '\\xf6',\n        'ovbar;': '\\u233d',\n        'OverBar;': '\\u203e',\n        'OverBrace;': '\\u23de',\n        'OverBracket;': '\\u23b4',\n        'OverParenthesis;': '\\u23dc',\n        'par;': '\\u2225',\n        'para': '\\xb6',\n        'para;': '\\xb6',\n        'parallel;': '\\u2225',\n        'parsim;': '\\u2af3',\n        'parsl;': '\\u2afd',\n        'part;': '\\u2202',\n        'PartialD;': '\\u2202',\n        'Pcy;': '\\u041f',\n        'pcy;': '\\u043f',\n        'percnt;': '%',\n        'period;': '.',\n        'permil;': '\\u2030',\n        'perp;': '\\u22a5',\n        'pertenk;': '\\u2031',\n        'Pfr;': '\\U0001d513',\n        'pfr;': '\\U0001d52d',\n        'Phi;': '\\u03a6',\n        'phi;': '\\u03c6',\n        'phiv;': '\\u03d5',\n        'phmmat;': '\\u2133',\n        'phone;': '\\u260e',\n        'Pi;': '\\u03a0',\n        'pi;': '\\u03c0',\n        'pitchfork;': '\\u22d4',\n        'piv;': '\\u03d6',\n        'planck;': '\\u210f',\n        'planckh;': '\\u210e',\n        'plankv;': '\\u210f',\n        'plus;': '+',\n        'plusacir;': '\\u2a23',\n        'plusb;': '\\u229e',\n        'pluscir;': '\\u2a22',\n        'plusdo;': '\\u2214',\n        'plusdu;': '\\u2a25',\n        'pluse;': '\\u2a72',\n        'PlusMinus;': '\\xb1',\n        'plusmn': '\\xb1',\n        'plusmn;': '\\xb1',\n        'plussim;': '\\u2a26',\n        'plustwo;': '\\u2a27',\n        'pm;': '\\xb1',\n        'Poincareplane;': '\\u210c',\n        'pointint;': '\\u2a15',\n        'Popf;': '\\u2119',\n        'popf;': '\\U0001d561',\n        'pound': '\\xa3',\n        'pound;': '\\xa3',\n        'Pr;': '\\u2abb',\n        'pr;': '\\u227a',\n        'prap;': '\\u2ab7',\n        'prcue;': '\\u227c',\n        'prE;': '\\u2ab3',\n        'pre;': '\\u2aaf',\n        'prec;': '\\u227a',\n        'precapprox;': '\\u2ab7',\n        'preccurlyeq;': '\\u227c',\n        'Precedes;': '\\u227a',\n        'PrecedesEqual;': '\\u2aaf',\n        'PrecedesSlantEqual;': '\\u227c',\n        'PrecedesTilde;': '\\u227e',\n        'preceq;': '\\u2aaf',\n        'precnapprox;': '\\u2ab9',\n        'precneqq;': '\\u2ab5',\n        'precnsim;': '\\u22e8',\n        'precsim;': '\\u227e',\n        'Prime;': '\\u2033',\n        'prime;': '\\u2032',\n        'primes;': '\\u2119',\n        'prnap;': '\\u2ab9',\n        'prnE;': '\\u2ab5',\n        'prnsim;': '\\u22e8',\n        'prod;': '\\u220f',\n        'Product;': '\\u220f',\n        'profalar;': '\\u232e',\n        'profline;': '\\u2312',\n        'profsurf;': '\\u2313',\n        'prop;': '\\u221d',\n        'Proportion;': '\\u2237',\n        'Proportional;': '\\u221d',\n        'propto;': '\\u221d',\n        'prsim;': '\\u227e',\n        'prurel;': '\\u22b0',\n        'Pscr;': '\\U0001d4ab',\n        'pscr;': '\\U0001d4c5',\n        'Psi;': '\\u03a8',\n        'psi;': '\\u03c8',\n        'puncsp;': '\\u2008',\n        'Qfr;': '\\U0001d514',\n        'qfr;': '\\U0001d52e',\n        'qint;': '\\u2a0c',\n        'Qopf;': '\\u211a',\n        'qopf;': '\\U0001d562',\n        'qprime;': '\\u2057',\n        'Qscr;': '\\U0001d4ac',\n        'qscr;': '\\U0001d4c6',\n        'quaternions;': '\\u210d',\n        'quatint;': '\\u2a16',\n        'quest;': '?',\n        'questeq;': '\\u225f',\n        'QUOT': '\"',\n        'quot': '\"',\n        'QUOT;': '\"',\n        'quot;': '\"',\n        'rAarr;': '\\u21db',\n        'race;': '\\u223d\\u0331',\n        'Racute;': '\\u0154',\n        'racute;': '\\u0155',\n        'radic;': '\\u221a',\n        'raemptyv;': '\\u29b3',\n        'Rang;': '\\u27eb',\n        'rang;': '\\u27e9',\n        'rangd;': '\\u2992',\n        'range;': '\\u29a5',\n        'rangle;': '\\u27e9',\n        'raquo': '\\xbb',\n        'raquo;': '\\xbb',\n        'Rarr;': '\\u21a0',\n        'rArr;': '\\u21d2',\n        'rarr;': '\\u2192',\n        'rarrap;': '\\u2975',\n        'rarrb;': '\\u21e5',\n        'rarrbfs;': '\\u2920',\n        'rarrc;': '\\u2933',\n        'rarrfs;': '\\u291e',\n        'rarrhk;': '\\u21aa',\n        'rarrlp;': '\\u21ac',\n        'rarrpl;': '\\u2945',\n        'rarrsim;': '\\u2974',\n        'Rarrtl;': '\\u2916',\n        'rarrtl;': '\\u21a3',\n        'rarrw;': '\\u219d',\n        'rAtail;': '\\u291c',\n        'ratail;': '\\u291a',\n        'ratio;': '\\u2236',\n        'rationals;': '\\u211a',\n        'RBarr;': '\\u2910',\n        'rBarr;': '\\u290f',\n        'rbarr;': '\\u290d',\n        'rbbrk;': '\\u2773',\n        'rbrace;': '}',\n        'rbrack;': ']',\n        'rbrke;': '\\u298c',\n        'rbrksld;': '\\u298e',\n        'rbrkslu;': '\\u2990',\n        'Rcaron;': '\\u0158',\n        'rcaron;': '\\u0159',\n        'Rcedil;': '\\u0156',\n        'rcedil;': '\\u0157',\n        'rceil;': '\\u2309',\n        'rcub;': '}',\n        'Rcy;': '\\u0420',\n        'rcy;': '\\u0440',\n        'rdca;': '\\u2937',\n        'rdldhar;': '\\u2969',\n        'rdquo;': '\\u201d',\n        'rdquor;': '\\u201d',\n        'rdsh;': '\\u21b3',\n        'Re;': '\\u211c',\n        'real;': '\\u211c',\n        'realine;': '\\u211b',\n        'realpart;': '\\u211c',\n        'reals;': '\\u211d',\n        'rect;': '\\u25ad',\n        'REG': '\\xae',\n        'reg': '\\xae',\n        'REG;': '\\xae',\n        'reg;': '\\xae',\n        'ReverseElement;': '\\u220b',\n        'ReverseEquilibrium;': '\\u21cb',\n        'ReverseUpEquilibrium;': '\\u296f',\n        'rfisht;': '\\u297d',\n        'rfloor;': '\\u230b',\n        'Rfr;': '\\u211c',\n        'rfr;': '\\U0001d52f',\n        'rHar;': '\\u2964',\n        'rhard;': '\\u21c1',\n        'rharu;': '\\u21c0',\n        'rharul;': '\\u296c',\n        'Rho;': '\\u03a1',\n        'rho;': '\\u03c1',\n        'rhov;': '\\u03f1',\n        'RightAngleBracket;': '\\u27e9',\n        'RightArrow;': '\\u2192',\n        'Rightarrow;': '\\u21d2',\n        'rightarrow;': '\\u2192',\n        'RightArrowBar;': '\\u21e5',\n        'RightArrowLeftArrow;': '\\u21c4',\n        'rightarrowtail;': '\\u21a3',\n        'RightCeiling;': '\\u2309',\n        'RightDoubleBracket;': '\\u27e7',\n        'RightDownTeeVector;': '\\u295d',\n        'RightDownVector;': '\\u21c2',\n        'RightDownVectorBar;': '\\u2955',\n        'RightFloor;': '\\u230b',\n        'rightharpoondown;': '\\u21c1',\n        'rightharpoonup;': '\\u21c0',\n        'rightleftarrows;': '\\u21c4',\n        'rightleftharpoons;': '\\u21cc',\n        'rightrightarrows;': '\\u21c9',\n        'rightsquigarrow;': '\\u219d',\n        'RightTee;': '\\u22a2',\n        'RightTeeArrow;': '\\u21a6',\n        'RightTeeVector;': '\\u295b',\n        'rightthreetimes;': '\\u22cc',\n        'RightTriangle;': '\\u22b3',\n        'RightTriangleBar;': '\\u29d0',\n        'RightTriangleEqual;': '\\u22b5',\n        'RightUpDownVector;': '\\u294f',\n        'RightUpTeeVector;': '\\u295c',\n        'RightUpVector;': '\\u21be',\n        'RightUpVectorBar;': '\\u2954',\n        'RightVector;': '\\u21c0',\n        'RightVectorBar;': '\\u2953',\n        'ring;': '\\u02da',\n        'risingdotseq;': '\\u2253',\n        'rlarr;': '\\u21c4',\n        'rlhar;': '\\u21cc',\n        'rlm;': '\\u200f',\n        'rmoust;': '\\u23b1',\n        'rmoustache;': '\\u23b1',\n        'rnmid;': '\\u2aee',\n        'roang;': '\\u27ed',\n        'roarr;': '\\u21fe',\n        'robrk;': '\\u27e7',\n        'ropar;': '\\u2986',\n        'Ropf;': '\\u211d',\n        'ropf;': '\\U0001d563',\n        'roplus;': '\\u2a2e',\n        'rotimes;': '\\u2a35',\n        'RoundImplies;': '\\u2970',\n        'rpar;': ')',\n        'rpargt;': '\\u2994',\n        'rppolint;': '\\u2a12',\n        'rrarr;': '\\u21c9',\n        'Rrightarrow;': '\\u21db',\n        'rsaquo;': '\\u203a',\n        'Rscr;': '\\u211b',\n        'rscr;': '\\U0001d4c7',\n        'Rsh;': '\\u21b1',\n        'rsh;': '\\u21b1',\n        'rsqb;': ']',\n        'rsquo;': '\\u2019',\n        'rsquor;': '\\u2019',\n        'rthree;': '\\u22cc',\n        'rtimes;': '\\u22ca',\n        'rtri;': '\\u25b9',\n        'rtrie;': '\\u22b5',\n        'rtrif;': '\\u25b8',\n        'rtriltri;': '\\u29ce',\n        'RuleDelayed;': '\\u29f4',\n        'ruluhar;': '\\u2968',\n        'rx;': '\\u211e',\n        'Sacute;': '\\u015a',\n        'sacute;': '\\u015b',\n        'sbquo;': '\\u201a',\n        'Sc;': '\\u2abc',\n        'sc;': '\\u227b',\n        'scap;': '\\u2ab8',\n        'Scaron;': '\\u0160',\n        'scaron;': '\\u0161',\n        'sccue;': '\\u227d',\n        'scE;': '\\u2ab4',\n        'sce;': '\\u2ab0',\n        'Scedil;': '\\u015e',\n        'scedil;': '\\u015f',\n        'Scirc;': '\\u015c',\n        'scirc;': '\\u015d',\n        'scnap;': '\\u2aba',\n        'scnE;': '\\u2ab6',\n        'scnsim;': '\\u22e9',\n        'scpolint;': '\\u2a13',\n        'scsim;': '\\u227f',\n        'Scy;': '\\u0421',\n        'scy;': '\\u0441',\n        'sdot;': '\\u22c5',\n        'sdotb;': '\\u22a1',\n        'sdote;': '\\u2a66',\n        'searhk;': '\\u2925',\n        'seArr;': '\\u21d8',\n        'searr;': '\\u2198',\n        'searrow;': '\\u2198',\n        'sect': '\\xa7',\n        'sect;': '\\xa7',\n        'semi;': ';',\n        'seswar;': '\\u2929',\n        'setminus;': '\\u2216',\n        'setmn;': '\\u2216',\n        'sext;': '\\u2736',\n        'Sfr;': '\\U0001d516',\n        'sfr;': '\\U0001d530',\n        'sfrown;': '\\u2322',\n        'sharp;': '\\u266f',\n        'SHCHcy;': '\\u0429',\n        'shchcy;': '\\u0449',\n        'SHcy;': '\\u0428',\n        'shcy;': '\\u0448',\n        'ShortDownArrow;': '\\u2193',\n        'ShortLeftArrow;': '\\u2190',\n        'shortmid;': '\\u2223',\n        'shortparallel;': '\\u2225',\n        'ShortRightArrow;': '\\u2192',\n        'ShortUpArrow;': '\\u2191',\n        'shy': '\\xad',\n        'shy;': '\\xad',\n        'Sigma;': '\\u03a3',\n        'sigma;': '\\u03c3',\n        'sigmaf;': '\\u03c2',\n        'sigmav;': '\\u03c2',\n        'sim;': '\\u223c',\n        'simdot;': '\\u2a6a',\n        'sime;': '\\u2243',\n        'simeq;': '\\u2243',\n        'simg;': '\\u2a9e',\n        'simgE;': '\\u2aa0',\n        'siml;': '\\u2a9d',\n        'simlE;': '\\u2a9f',\n        'simne;': '\\u2246',\n        'simplus;': '\\u2a24',\n        'simrarr;': '\\u2972',\n        'slarr;': '\\u2190',\n        'SmallCircle;': '\\u2218',\n        'smallsetminus;': '\\u2216',\n        'smashp;': '\\u2a33',\n        'smeparsl;': '\\u29e4',\n        'smid;': '\\u2223',\n        'smile;': '\\u2323',\n        'smt;': '\\u2aaa',\n        'smte;': '\\u2aac',\n        'smtes;': '\\u2aac\\ufe00',\n        'SOFTcy;': '\\u042c',\n        'softcy;': '\\u044c',\n        'sol;': '/',\n        'solb;': '\\u29c4',\n        'solbar;': '\\u233f',\n        'Sopf;': '\\U0001d54a',\n        'sopf;': '\\U0001d564',\n        'spades;': '\\u2660',\n        'spadesuit;': '\\u2660',\n        'spar;': '\\u2225',\n        'sqcap;': '\\u2293',\n        'sqcaps;': '\\u2293\\ufe00',\n        'sqcup;': '\\u2294',\n        'sqcups;': '\\u2294\\ufe00',\n        'Sqrt;': '\\u221a',\n        'sqsub;': '\\u228f',\n        'sqsube;': '\\u2291',\n        'sqsubset;': '\\u228f',\n        'sqsubseteq;': '\\u2291',\n        'sqsup;': '\\u2290',\n        'sqsupe;': '\\u2292',\n        'sqsupset;': '\\u2290',\n        'sqsupseteq;': '\\u2292',\n        'squ;': '\\u25a1',\n        'Square;': '\\u25a1',\n        'square;': '\\u25a1',\n        'SquareIntersection;': '\\u2293',\n        'SquareSubset;': '\\u228f',\n        'SquareSubsetEqual;': '\\u2291',\n        'SquareSuperset;': '\\u2290',\n        'SquareSupersetEqual;': '\\u2292',\n        'SquareUnion;': '\\u2294',\n        'squarf;': '\\u25aa',\n        'squf;': '\\u25aa',\n        'srarr;': '\\u2192',\n        'Sscr;': '\\U0001d4ae',\n        'sscr;': '\\U0001d4c8',\n        'ssetmn;': '\\u2216',\n        'ssmile;': '\\u2323',\n        'sstarf;': '\\u22c6',\n        'Star;': '\\u22c6',\n        'star;': '\\u2606',\n        'starf;': '\\u2605',\n        'straightepsilon;': '\\u03f5',\n        'straightphi;': '\\u03d5',\n        'strns;': '\\xaf',\n        'Sub;': '\\u22d0',\n        'sub;': '\\u2282',\n        'subdot;': '\\u2abd',\n        'subE;': '\\u2ac5',\n        'sube;': '\\u2286',\n        'subedot;': '\\u2ac3',\n        'submult;': '\\u2ac1',\n        'subnE;': '\\u2acb',\n        'subne;': '\\u228a',\n        'subplus;': '\\u2abf',\n        'subrarr;': '\\u2979',\n        'Subset;': '\\u22d0',\n        'subset;': '\\u2282',\n        'subseteq;': '\\u2286',\n        'subseteqq;': '\\u2ac5',\n        'SubsetEqual;': '\\u2286',\n        'subsetneq;': '\\u228a',\n        'subsetneqq;': '\\u2acb',\n        'subsim;': '\\u2ac7',\n        'subsub;': '\\u2ad5',\n        'subsup;': '\\u2ad3',\n        'succ;': '\\u227b',\n        'succapprox;': '\\u2ab8',\n        'succcurlyeq;': '\\u227d',\n        'Succeeds;': '\\u227b',\n        'SucceedsEqual;': '\\u2ab0',\n        'SucceedsSlantEqual;': '\\u227d',\n        'SucceedsTilde;': '\\u227f',\n        'succeq;': '\\u2ab0',\n        'succnapprox;': '\\u2aba',\n        'succneqq;': '\\u2ab6',\n        'succnsim;': '\\u22e9',\n        'succsim;': '\\u227f',\n        'SuchThat;': '\\u220b',\n        'Sum;': '\\u2211',\n        'sum;': '\\u2211',\n        'sung;': '\\u266a',\n        'sup1': '\\xb9',\n        'sup1;': '\\xb9',\n        'sup2': '\\xb2',\n        'sup2;': '\\xb2',\n        'sup3': '\\xb3',\n        'sup3;': '\\xb3',\n        'Sup;': '\\u22d1',\n        'sup;': '\\u2283',\n        'supdot;': '\\u2abe',\n        'supdsub;': '\\u2ad8',\n        'supE;': '\\u2ac6',\n        'supe;': '\\u2287',\n        'supedot;': '\\u2ac4',\n        'Superset;': '\\u2283',\n        'SupersetEqual;': '\\u2287',\n        'suphsol;': '\\u27c9',\n        'suphsub;': '\\u2ad7',\n        'suplarr;': '\\u297b',\n        'supmult;': '\\u2ac2',\n        'supnE;': '\\u2acc',\n        'supne;': '\\u228b',\n        'supplus;': '\\u2ac0',\n        'Supset;': '\\u22d1',\n        'supset;': '\\u2283',\n        'supseteq;': '\\u2287',\n        'supseteqq;': '\\u2ac6',\n        'supsetneq;': '\\u228b',\n        'supsetneqq;': '\\u2acc',\n        'supsim;': '\\u2ac8',\n        'supsub;': '\\u2ad4',\n        'supsup;': '\\u2ad6',\n        'swarhk;': '\\u2926',\n        'swArr;': '\\u21d9',\n        'swarr;': '\\u2199',\n        'swarrow;': '\\u2199',\n        'swnwar;': '\\u292a',\n        'szlig': '\\xdf',\n        'szlig;': '\\xdf',\n        'Tab;': '\\t',\n        'target;': '\\u2316',\n        'Tau;': '\\u03a4',\n        'tau;': '\\u03c4',\n        'tbrk;': '\\u23b4',\n        'Tcaron;': '\\u0164',\n        'tcaron;': '\\u0165',\n        'Tcedil;': '\\u0162',\n        'tcedil;': '\\u0163',\n        'Tcy;': '\\u0422',\n        'tcy;': '\\u0442',\n        'tdot;': '\\u20db',\n        'telrec;': '\\u2315',\n        'Tfr;': '\\U0001d517',\n        'tfr;': '\\U0001d531',\n        'there4;': '\\u2234',\n        'Therefore;': '\\u2234',\n        'therefore;': '\\u2234',\n        'Theta;': '\\u0398',\n        'theta;': '\\u03b8',\n        'thetasym;': '\\u03d1',\n        'thetav;': '\\u03d1',\n        'thickapprox;': '\\u2248',\n        'thicksim;': '\\u223c',\n        'ThickSpace;': '\\u205f\\u200a',\n        'thinsp;': '\\u2009',\n        'ThinSpace;': '\\u2009',\n        'thkap;': '\\u2248',\n        'thksim;': '\\u223c',\n        'THORN': '\\xde',\n        'thorn': '\\xfe',\n        'THORN;': '\\xde',\n        'thorn;': '\\xfe',\n        'Tilde;': '\\u223c',\n        'tilde;': '\\u02dc',\n        'TildeEqual;': '\\u2243',\n        'TildeFullEqual;': '\\u2245',\n        'TildeTilde;': '\\u2248',\n        'times': '\\xd7',\n        'times;': '\\xd7',\n        'timesb;': '\\u22a0',\n        'timesbar;': '\\u2a31',\n        'timesd;': '\\u2a30',\n        'tint;': '\\u222d',\n        'toea;': '\\u2928',\n        'top;': '\\u22a4',\n        'topbot;': '\\u2336',\n        'topcir;': '\\u2af1',\n        'Topf;': '\\U0001d54b',\n        'topf;': '\\U0001d565',\n        'topfork;': '\\u2ada',\n        'tosa;': '\\u2929',\n        'tprime;': '\\u2034',\n        'TRADE;': '\\u2122',\n        'trade;': '\\u2122',\n        'triangle;': '\\u25b5',\n        'triangledown;': '\\u25bf',\n        'triangleleft;': '\\u25c3',\n        'trianglelefteq;': '\\u22b4',\n        'triangleq;': '\\u225c',\n        'triangleright;': '\\u25b9',\n        'trianglerighteq;': '\\u22b5',\n        'tridot;': '\\u25ec',\n        'trie;': '\\u225c',\n        'triminus;': '\\u2a3a',\n        'TripleDot;': '\\u20db',\n        'triplus;': '\\u2a39',\n        'trisb;': '\\u29cd',\n        'tritime;': '\\u2a3b',\n        'trpezium;': '\\u23e2',\n        'Tscr;': '\\U0001d4af',\n        'tscr;': '\\U0001d4c9',\n        'TScy;': '\\u0426',\n        'tscy;': '\\u0446',\n        'TSHcy;': '\\u040b',\n        'tshcy;': '\\u045b',\n        'Tstrok;': '\\u0166',\n        'tstrok;': '\\u0167',\n        'twixt;': '\\u226c',\n        'twoheadleftarrow;': '\\u219e',\n        'twoheadrightarrow;': '\\u21a0',\n        'Uacute': '\\xda',\n        'uacute': '\\xfa',\n        'Uacute;': '\\xda',\n        'uacute;': '\\xfa',\n        'Uarr;': '\\u219f',\n        'uArr;': '\\u21d1',\n        'uarr;': '\\u2191',\n        'Uarrocir;': '\\u2949',\n        'Ubrcy;': '\\u040e',\n        'ubrcy;': '\\u045e',\n        'Ubreve;': '\\u016c',\n        'ubreve;': '\\u016d',\n        'Ucirc': '\\xdb',\n        'ucirc': '\\xfb',\n        'Ucirc;': '\\xdb',\n        'ucirc;': '\\xfb',\n        'Ucy;': '\\u0423',\n        'ucy;': '\\u0443',\n        'udarr;': '\\u21c5',\n        'Udblac;': '\\u0170',\n        'udblac;': '\\u0171',\n        'udhar;': '\\u296e',\n        'ufisht;': '\\u297e',\n        'Ufr;': '\\U0001d518',\n        'ufr;': '\\U0001d532',\n        'Ugrave': '\\xd9',\n        'ugrave': '\\xf9',\n        'Ugrave;': '\\xd9',\n        'ugrave;': '\\xf9',\n        'uHar;': '\\u2963',\n        'uharl;': '\\u21bf',\n        'uharr;': '\\u21be',\n        'uhblk;': '\\u2580',\n        'ulcorn;': '\\u231c',\n        'ulcorner;': '\\u231c',\n        'ulcrop;': '\\u230f',\n        'ultri;': '\\u25f8',\n        'Umacr;': '\\u016a',\n        'umacr;': '\\u016b',\n        'uml': '\\xa8',\n        'uml;': '\\xa8',\n        'UnderBar;': '_',\n        'UnderBrace;': '\\u23df',\n        'UnderBracket;': '\\u23b5',\n        'UnderParenthesis;': '\\u23dd',\n        'Union;': '\\u22c3',\n        'UnionPlus;': '\\u228e',\n        'Uogon;': '\\u0172',\n        'uogon;': '\\u0173',\n        'Uopf;': '\\U0001d54c',\n        'uopf;': '\\U0001d566',\n        'UpArrow;': '\\u2191',\n        'Uparrow;': '\\u21d1',\n        'uparrow;': '\\u2191',\n        'UpArrowBar;': '\\u2912',\n        'UpArrowDownArrow;': '\\u21c5',\n        'UpDownArrow;': '\\u2195',\n        'Updownarrow;': '\\u21d5',\n        'updownarrow;': '\\u2195',\n        'UpEquilibrium;': '\\u296e',\n        'upharpoonleft;': '\\u21bf',\n        'upharpoonright;': '\\u21be',\n        'uplus;': '\\u228e',\n        'UpperLeftArrow;': '\\u2196',\n        'UpperRightArrow;': '\\u2197',\n        'Upsi;': '\\u03d2',\n        'upsi;': '\\u03c5',\n        'upsih;': '\\u03d2',\n        'Upsilon;': '\\u03a5',\n        'upsilon;': '\\u03c5',\n        'UpTee;': '\\u22a5',\n        'UpTeeArrow;': '\\u21a5',\n        'upuparrows;': '\\u21c8',\n        'urcorn;': '\\u231d',\n        'urcorner;': '\\u231d',\n        'urcrop;': '\\u230e',\n        'Uring;': '\\u016e',\n        'uring;': '\\u016f',\n        'urtri;': '\\u25f9',\n        'Uscr;': '\\U0001d4b0',\n        'uscr;': '\\U0001d4ca',\n        'utdot;': '\\u22f0',\n        'Utilde;': '\\u0168',\n        'utilde;': '\\u0169',\n        'utri;': '\\u25b5',\n        'utrif;': '\\u25b4',\n        'uuarr;': '\\u21c8',\n        'Uuml': '\\xdc',\n        'uuml': '\\xfc',\n        'Uuml;': '\\xdc',\n        'uuml;': '\\xfc',\n        'uwangle;': '\\u29a7',\n        'vangrt;': '\\u299c',\n        'varepsilon;': '\\u03f5',\n        'varkappa;': '\\u03f0',\n        'varnothing;': '\\u2205',\n        'varphi;': '\\u03d5',\n        'varpi;': '\\u03d6',\n        'varpropto;': '\\u221d',\n        'vArr;': '\\u21d5',\n        'varr;': '\\u2195',\n        'varrho;': '\\u03f1',\n        'varsigma;': '\\u03c2',\n        'varsubsetneq;': '\\u228a\\ufe00',\n        'varsubsetneqq;': '\\u2acb\\ufe00',\n        'varsupsetneq;': '\\u228b\\ufe00',\n        'varsupsetneqq;': '\\u2acc\\ufe00',\n        'vartheta;': '\\u03d1',\n        'vartriangleleft;': '\\u22b2',\n        'vartriangleright;': '\\u22b3',\n        'Vbar;': '\\u2aeb',\n        'vBar;': '\\u2ae8',\n        'vBarv;': '\\u2ae9',\n        'Vcy;': '\\u0412',\n        'vcy;': '\\u0432',\n        'VDash;': '\\u22ab',\n        'Vdash;': '\\u22a9',\n        'vDash;': '\\u22a8',\n        'vdash;': '\\u22a2',\n        'Vdashl;': '\\u2ae6',\n        'Vee;': '\\u22c1',\n        'vee;': '\\u2228',\n        'veebar;': '\\u22bb',\n        'veeeq;': '\\u225a',\n        'vellip;': '\\u22ee',\n        'Verbar;': '\\u2016',\n        'verbar;': '|',\n        'Vert;': '\\u2016',\n        'vert;': '|',\n        'VerticalBar;': '\\u2223',\n        'VerticalLine;': '|',\n        'VerticalSeparator;': '\\u2758',\n        'VerticalTilde;': '\\u2240',\n        'VeryThinSpace;': '\\u200a',\n        'Vfr;': '\\U0001d519',\n        'vfr;': '\\U0001d533',\n        'vltri;': '\\u22b2',\n        'vnsub;': '\\u2282\\u20d2',\n        'vnsup;': '\\u2283\\u20d2',\n        'Vopf;': '\\U0001d54d',\n        'vopf;': '\\U0001d567',\n        'vprop;': '\\u221d',\n        'vrtri;': '\\u22b3',\n        'Vscr;': '\\U0001d4b1',\n        'vscr;': '\\U0001d4cb',\n        'vsubnE;': '\\u2acb\\ufe00',\n        'vsubne;': '\\u228a\\ufe00',\n        'vsupnE;': '\\u2acc\\ufe00',\n        'vsupne;': '\\u228b\\ufe00',\n        'Vvdash;': '\\u22aa',\n        'vzigzag;': '\\u299a',\n        'Wcirc;': '\\u0174',\n        'wcirc;': '\\u0175',\n        'wedbar;': '\\u2a5f',\n        'Wedge;': '\\u22c0',\n        'wedge;': '\\u2227',\n        'wedgeq;': '\\u2259',\n        'weierp;': '\\u2118',\n        'Wfr;': '\\U0001d51a',\n        'wfr;': '\\U0001d534',\n        'Wopf;': '\\U0001d54e',\n        'wopf;': '\\U0001d568',\n        'wp;': '\\u2118',\n        'wr;': '\\u2240',\n        'wreath;': '\\u2240',\n        'Wscr;': '\\U0001d4b2',\n        'wscr;': '\\U0001d4cc',\n        'xcap;': '\\u22c2',\n        'xcirc;': '\\u25ef',\n        'xcup;': '\\u22c3',\n        'xdtri;': '\\u25bd',\n        'Xfr;': '\\U0001d51b',\n        'xfr;': '\\U0001d535',\n        'xhArr;': '\\u27fa',\n        'xharr;': '\\u27f7',\n        'Xi;': '\\u039e',\n        'xi;': '\\u03be',\n        'xlArr;': '\\u27f8',\n        'xlarr;': '\\u27f5',\n        'xmap;': '\\u27fc',\n        'xnis;': '\\u22fb',\n        'xodot;': '\\u2a00',\n        'Xopf;': '\\U0001d54f',\n        'xopf;': '\\U0001d569',\n        'xoplus;': '\\u2a01',\n        'xotime;': '\\u2a02',\n        'xrArr;': '\\u27f9',\n        'xrarr;': '\\u27f6',\n        'Xscr;': '\\U0001d4b3',\n        'xscr;': '\\U0001d4cd',\n        'xsqcup;': '\\u2a06',\n        'xuplus;': '\\u2a04',\n        'xutri;': '\\u25b3',\n        'xvee;': '\\u22c1',\n        'xwedge;': '\\u22c0',\n        'Yacute': '\\xdd',\n        'yacute': '\\xfd',\n        'Yacute;': '\\xdd',\n        'yacute;': '\\xfd',\n        'YAcy;': '\\u042f',\n        'yacy;': '\\u044f',\n        'Ycirc;': '\\u0176',\n        'ycirc;': '\\u0177',\n        'Ycy;': '\\u042b',\n        'ycy;': '\\u044b',\n        'yen': '\\xa5',\n        'yen;': '\\xa5',\n        'Yfr;': '\\U0001d51c',\n        'yfr;': '\\U0001d536',\n        'YIcy;': '\\u0407',\n        'yicy;': '\\u0457',\n        'Yopf;': '\\U0001d550',\n        'yopf;': '\\U0001d56a',\n        'Yscr;': '\\U0001d4b4',\n        'yscr;': '\\U0001d4ce',\n        'YUcy;': '\\u042e',\n        'yucy;': '\\u044e',\n        'yuml': '\\xff',\n        'Yuml;': '\\u0178',\n        'yuml;': '\\xff',\n        'Zacute;': '\\u0179',\n        'zacute;': '\\u017a',\n        'Zcaron;': '\\u017d',\n        'zcaron;': '\\u017e',\n        'Zcy;': '\\u0417',\n        'zcy;': '\\u0437',\n        'Zdot;': '\\u017b',\n        'zdot;': '\\u017c',\n        'zeetrf;': '\\u2128',\n        'ZeroWidthSpace;': '\\u200b',\n        'Zeta;': '\\u0396',\n        'zeta;': '\\u03b6',\n        'Zfr;': '\\u2128',\n        'zfr;': '\\U0001d537',\n        'ZHcy;': '\\u0416',\n        'zhcy;': '\\u0436',\n        'zigrarr;': '\\u21dd',\n        'Zopf;': '\\u2124',\n        'zopf;': '\\U0001d56b',\n        'Zscr;': '\\U0001d4b5',\n        'zscr;': '\\U0001d4cf',\n        'zwj;': '\\u200d',\n        'zwnj;': '\\u200c',\n    }\n\ntry:\n    import http.client as compat_http_client\nexcept ImportError:  # Python 2\n    import httplib as compat_http_client\n\ntry:\n    from urllib.error import HTTPError as compat_HTTPError\nexcept ImportError:  # Python 2\n    from urllib2 import HTTPError as compat_HTTPError\n\ntry:\n    from urllib.request import urlretrieve as compat_urlretrieve\nexcept ImportError:  # Python 2\n    from urllib import urlretrieve as compat_urlretrieve\n\ntry:\n    from html.parser import HTMLParser as compat_HTMLParser\nexcept ImportError:  # Python 2\n    from HTMLParser import HTMLParser as compat_HTMLParser\n\ntry:  # Python 2\n    from HTMLParser import HTMLParseError as compat_HTMLParseError\nexcept ImportError:  # Python <3.4\n    try:\n        from html.parser import HTMLParseError as compat_HTMLParseError\n    except ImportError:  # Python >3.4\n\n        # HTMLParseError has been deprecated in Python 3.3 and removed in\n        # Python 3.5. Introducing dummy exception for Python >3.5 for compatible\n        # and uniform cross-version exceptiong handling\n        class compat_HTMLParseError(Exception):\n            pass\n\ntry:\n    from subprocess import DEVNULL\n    compat_subprocess_get_DEVNULL = lambda: DEVNULL\nexcept ImportError:\n    compat_subprocess_get_DEVNULL = lambda: open(os.path.devnull, 'w')\n\ntry:\n    import http.server as compat_http_server\nexcept ImportError:\n    import BaseHTTPServer as compat_http_server\n\ntry:\n    compat_str = unicode  # Python 2\nexcept NameError:\n    compat_str = str\n\ntry:\n    from urllib.parse import unquote_to_bytes as compat_urllib_parse_unquote_to_bytes\n    from urllib.parse import unquote as compat_urllib_parse_unquote\n    from urllib.parse import unquote_plus as compat_urllib_parse_unquote_plus\nexcept ImportError:  # Python 2\n    _asciire = (compat_urllib_parse._asciire if hasattr(compat_urllib_parse, '_asciire')\n                else re.compile(r'([\\x00-\\x7f]+)'))\n\n    # HACK: The following are the correct unquote_to_bytes, unquote and unquote_plus\n    # implementations from cpython 3.4.3's stdlib. Python 2's version\n    # is apparently broken (see https://github.com/rg3/youtube-dl/pull/6244)\n\n    def compat_urllib_parse_unquote_to_bytes(string):\n        \"\"\"unquote_to_bytes('abc%20def') -> b'abc def'.\"\"\"\n        # Note: strings are encoded as UTF-8. This is only an issue if it contains\n        # unescaped non-ASCII characters, which URIs should not.\n        if not string:\n            # Is it a string-like object?\n            string.split\n            return b''\n        if isinstance(string, compat_str):\n            string = string.encode('utf-8')\n        bits = string.split(b'%')\n        if len(bits) == 1:\n            return string\n        res = [bits[0]]\n        append = res.append\n        for item in bits[1:]:\n            try:\n                append(compat_urllib_parse._hextochr[item[:2]])\n                append(item[2:])\n            except KeyError:\n                append(b'%')\n                append(item)\n        return b''.join(res)\n\n    def compat_urllib_parse_unquote(string, encoding='utf-8', errors='replace'):\n        \"\"\"Replace %xx escapes by their single-character equivalent. The optional\n        encoding and errors parameters specify how to decode percent-encoded\n        sequences into Unicode characters, as accepted by the bytes.decode()\n        method.\n        By default, percent-encoded sequences are decoded with UTF-8, and invalid\n        sequences are replaced by a placeholder character.\n\n        unquote('abc%20def') -> 'abc def'.\n        \"\"\"\n        if '%' not in string:\n            string.split\n            return string\n        if encoding is None:\n            encoding = 'utf-8'\n        if errors is None:\n            errors = 'replace'\n        bits = _asciire.split(string)\n        res = [bits[0]]\n        append = res.append\n        for i in range(1, len(bits), 2):\n            append(compat_urllib_parse_unquote_to_bytes(bits[i]).decode(encoding, errors))\n            append(bits[i + 1])\n        return ''.join(res)\n\n    def compat_urllib_parse_unquote_plus(string, encoding='utf-8', errors='replace'):\n        \"\"\"Like unquote(), but also replace plus signs by spaces, as required for\n        unquoting HTML form values.\n\n        unquote_plus('%7e/abc+def') -> '~/abc def'\n        \"\"\"\n        string = string.replace('+', ' ')\n        return compat_urllib_parse_unquote(string, encoding, errors)\n\ntry:\n    from urllib.parse import urlencode as compat_urllib_parse_urlencode\nexcept ImportError:  # Python 2\n    # Python 2 will choke in urlencode on mixture of byte and unicode strings.\n    # Possible solutions are to either port it from python 3 with all\n    # the friends or manually ensure input query contains only byte strings.\n    # We will stick with latter thus recursively encoding the whole query.\n    def compat_urllib_parse_urlencode(query, doseq=0, encoding='utf-8'):\n        def encode_elem(e):\n            if isinstance(e, dict):\n                e = encode_dict(e)\n            elif isinstance(e, (list, tuple,)):\n                list_e = encode_list(e)\n                e = tuple(list_e) if isinstance(e, tuple) else list_e\n            elif isinstance(e, compat_str):\n                e = e.encode(encoding)\n            return e\n\n        def encode_dict(d):\n            return dict((encode_elem(k), encode_elem(v)) for k, v in d.items())\n\n        def encode_list(l):\n            return [encode_elem(e) for e in l]\n\n        return compat_urllib_parse.urlencode(encode_elem(query), doseq=doseq)\n\ntry:\n    from urllib.request import DataHandler as compat_urllib_request_DataHandler\nexcept ImportError:  # Python < 3.4\n    # Ported from CPython 98774:1733b3bd46db, Lib/urllib/request.py\n    class compat_urllib_request_DataHandler(compat_urllib_request.BaseHandler):\n        def data_open(self, req):\n            # data URLs as specified in RFC 2397.\n            #\n            # ignores POSTed data\n            #\n            # syntax:\n            # dataurl   := \"data:\" [ mediatype ] [ \";base64\" ] \",\" data\n            # mediatype := [ type \"/\" subtype ] *( \";\" parameter )\n            # data      := *urlchar\n            # parameter := attribute \"=\" value\n            url = req.get_full_url()\n\n            scheme, data = url.split(':', 1)\n            mediatype, data = data.split(',', 1)\n\n            # even base64 encoded data URLs might be quoted so unquote in any case:\n            data = compat_urllib_parse_unquote_to_bytes(data)\n            if mediatype.endswith(';base64'):\n                data = binascii.a2b_base64(data)\n                mediatype = mediatype[:-7]\n\n            if not mediatype:\n                mediatype = 'text/plain;charset=US-ASCII'\n\n            headers = email.message_from_string(\n                'Content-type: %s\\nContent-length: %d\\n' % (mediatype, len(data)))\n\n            return compat_urllib_response.addinfourl(io.BytesIO(data), headers, url)\n\ntry:\n    compat_basestring = basestring  # Python 2\nexcept NameError:\n    compat_basestring = str\n\ntry:\n    compat_chr = unichr  # Python 2\nexcept NameError:\n    compat_chr = chr\n\ntry:\n    from xml.etree.ElementTree import ParseError as compat_xml_parse_error\nexcept ImportError:  # Python 2.6\n    from xml.parsers.expat import ExpatError as compat_xml_parse_error\n\n\netree = xml.etree.ElementTree\n\n\nclass _TreeBuilder(etree.TreeBuilder):\n    def doctype(self, name, pubid, system):\n        pass\n\n\nif sys.version_info[0] >= 3:\n    def compat_etree_fromstring(text):\n        return etree.XML(text, parser=etree.XMLParser(target=_TreeBuilder()))\nelse:\n    # python 2.x tries to encode unicode strings with ascii (see the\n    # XMLParser._fixtext method)\n    try:\n        _etree_iter = etree.Element.iter\n    except AttributeError:  # Python <=2.6\n        def _etree_iter(root):\n            for el in root.findall('*'):\n                yield el\n                for sub in _etree_iter(el):\n                    yield sub\n\n    # on 2.6 XML doesn't have a parser argument, function copied from CPython\n    # 2.7 source\n    def _XML(text, parser=None):\n        if not parser:\n            parser = etree.XMLParser(target=_TreeBuilder())\n        parser.feed(text)\n        return parser.close()\n\n    def _element_factory(*args, **kwargs):\n        el = etree.Element(*args, **kwargs)\n        for k, v in el.items():\n            if isinstance(v, bytes):\n                el.set(k, v.decode('utf-8'))\n        return el\n\n    def compat_etree_fromstring(text):\n        doc = _XML(text, parser=etree.XMLParser(target=_TreeBuilder(element_factory=_element_factory)))\n        for el in _etree_iter(doc):\n            if el.text is not None and isinstance(el.text, bytes):\n                el.text = el.text.decode('utf-8')\n        return doc\n\nif hasattr(etree, 'register_namespace'):\n    compat_etree_register_namespace = etree.register_namespace\nelse:\n    def compat_etree_register_namespace(prefix, uri):\n        \"\"\"Register a namespace prefix.\n        The registry is global, and any existing mapping for either the\n        given prefix or the namespace URI will be removed.\n        *prefix* is the namespace prefix, *uri* is a namespace uri. Tags and\n        attributes in this namespace will be serialized with prefix if possible.\n        ValueError is raised if prefix is reserved or is invalid.\n        \"\"\"\n        if re.match(r\"ns\\d+$\", prefix):\n            raise ValueError(\"Prefix format reserved for internal use\")\n        for k, v in list(etree._namespace_map.items()):\n            if k == uri or v == prefix:\n                del etree._namespace_map[k]\n        etree._namespace_map[uri] = prefix\n\nif sys.version_info < (2, 7):\n    # Here comes the crazy part: In 2.6, if the xpath is a unicode,\n    # .//node does not match if a node is a direct child of . !\n    def compat_xpath(xpath):\n        if isinstance(xpath, compat_str):\n            xpath = xpath.encode('ascii')\n        return xpath\nelse:\n    compat_xpath = lambda xpath: xpath\n\ntry:\n    from urllib.parse import parse_qs as compat_parse_qs\nexcept ImportError:  # Python 2\n    # HACK: The following is the correct parse_qs implementation from cpython 3's stdlib.\n    # Python 2's version is apparently totally broken\n\n    def _parse_qsl(qs, keep_blank_values=False, strict_parsing=False,\n                   encoding='utf-8', errors='replace'):\n        qs, _coerce_result = qs, compat_str\n        pairs = [s2 for s1 in qs.split('&') for s2 in s1.split(';')]\n        r = []\n        for name_value in pairs:\n            if not name_value and not strict_parsing:\n                continue\n            nv = name_value.split('=', 1)\n            if len(nv) != 2:\n                if strict_parsing:\n                    raise ValueError('bad query field: %r' % (name_value,))\n                # Handle case of a control-name with no equal sign\n                if keep_blank_values:\n                    nv.append('')\n                else:\n                    continue\n            if len(nv[1]) or keep_blank_values:\n                name = nv[0].replace('+', ' ')\n                name = compat_urllib_parse_unquote(\n                    name, encoding=encoding, errors=errors)\n                name = _coerce_result(name)\n                value = nv[1].replace('+', ' ')\n                value = compat_urllib_parse_unquote(\n                    value, encoding=encoding, errors=errors)\n                value = _coerce_result(value)\n                r.append((name, value))\n        return r\n\n    def compat_parse_qs(qs, keep_blank_values=False, strict_parsing=False,\n                        encoding='utf-8', errors='replace'):\n        parsed_result = {}\n        pairs = _parse_qsl(qs, keep_blank_values, strict_parsing,\n                           encoding=encoding, errors=errors)\n        for name, value in pairs:\n            if name in parsed_result:\n                parsed_result[name].append(value)\n            else:\n                parsed_result[name] = [value]\n        return parsed_result\n\n\ncompat_os_name = os._name if os.name == 'java' else os.name\n\n\nif compat_os_name == 'nt':\n    def compat_shlex_quote(s):\n        return s if re.match(r'^[-_\\w./]+$', s) else '\"%s\"' % s.replace('\"', '\\\\\"')\nelse:\n    try:\n        from shlex import quote as compat_shlex_quote\n    except ImportError:  # Python < 3.3\n        def compat_shlex_quote(s):\n            if re.match(r'^[-_\\w./]+$', s):\n                return s\n            else:\n                return \"'\" + s.replace(\"'\", \"'\\\"'\\\"'\") + \"'\"\n\n\ntry:\n    args = shlex.split('\u4e2d\u6587')\n    assert (isinstance(args, list) and\n            isinstance(args[0], compat_str) and\n            args[0] == '\u4e2d\u6587')\n    compat_shlex_split = shlex.split\nexcept (AssertionError, UnicodeEncodeError):\n    # Working around shlex issue with unicode strings on some python 2\n    # versions (see http://bugs.python.org/issue1548891)\n    def compat_shlex_split(s, comments=False, posix=True):\n        if isinstance(s, compat_str):\n            s = s.encode('utf-8')\n        return list(map(lambda s: s.decode('utf-8'), shlex.split(s, comments, posix)))\n\n\ndef compat_ord(c):\n    if type(c) is int:\n        return c\n    else:\n        return ord(c)\n\n\nif sys.version_info >= (3, 0):\n    compat_getenv = os.getenv\n    compat_expanduser = os.path.expanduser\n\n    def compat_setenv(key, value, env=os.environ):\n        env[key] = value\nelse:\n    # Environment variables should be decoded with filesystem encoding.\n    # Otherwise it will fail if any non-ASCII characters present (see #3854 #3217 #2918)\n\n    def compat_getenv(key, default=None):\n        from .utils import get_filesystem_encoding\n        env = os.getenv(key, default)\n        if env:\n            env = env.decode(get_filesystem_encoding())\n        return env\n\n    def compat_setenv(key, value, env=os.environ):\n        def encode(v):\n            from .utils import get_filesystem_encoding\n            return v.encode(get_filesystem_encoding()) if isinstance(v, compat_str) else v\n        env[encode(key)] = encode(value)\n\n    # HACK: The default implementations of os.path.expanduser from cpython do not decode\n    # environment variables with filesystem encoding. We will work around this by\n    # providing adjusted implementations.\n    # The following are os.path.expanduser implementations from cpython 2.7.8 stdlib\n    # for different platforms with correct environment variables decoding.\n\n    if compat_os_name == 'posix':\n        def compat_expanduser(path):\n            \"\"\"Expand ~ and ~user constructions.  If user or $HOME is unknown,\n            do nothing.\"\"\"\n            if not path.startswith('~'):\n                return path\n            i = path.find('/', 1)\n            if i < 0:\n                i = len(path)\n            if i == 1:\n                if 'HOME' not in os.environ:\n                    import pwd\n                    userhome = pwd.getpwuid(os.getuid()).pw_dir\n                else:\n                    userhome = compat_getenv('HOME')\n            else:\n                import pwd\n                try:\n                    pwent = pwd.getpwnam(path[1:i])\n                except KeyError:\n                    return path\n                userhome = pwent.pw_dir\n            userhome = userhome.rstrip('/')\n            return (userhome + path[i:]) or '/'\n    elif compat_os_name in ('nt', 'ce'):\n        def compat_expanduser(path):\n            \"\"\"Expand ~ and ~user constructs.\n\n            If user or $HOME is unknown, do nothing.\"\"\"\n            if path[:1] != '~':\n                return path\n            i, n = 1, len(path)\n            while i < n and path[i] not in '/\\\\':\n                i = i + 1\n\n            if 'HOME' in os.environ:\n                userhome = compat_getenv('HOME')\n            elif 'USERPROFILE' in os.environ:\n                userhome = compat_getenv('USERPROFILE')\n            elif 'HOMEPATH' not in os.environ:\n                return path\n            else:\n                try:\n                    drive = compat_getenv('HOMEDRIVE')\n                except KeyError:\n                    drive = ''\n                userhome = os.path.join(drive, compat_getenv('HOMEPATH'))\n\n            if i != 1:  # ~user\n                userhome = os.path.join(os.path.dirname(userhome), path[1:i])\n\n            return userhome + path[i:]\n    else:\n        compat_expanduser = os.path.expanduser\n\n\nif sys.version_info < (3, 0):\n    def compat_print(s):\n        from .utils import preferredencoding\n        print(s.encode(preferredencoding(), 'xmlcharrefreplace'))\nelse:\n    def compat_print(s):\n        assert isinstance(s, compat_str)\n        print(s)\n\n\nif sys.version_info < (3, 0) and sys.platform == 'win32':\n    def compat_getpass(prompt, *args, **kwargs):\n        if isinstance(prompt, compat_str):\n            from .utils import preferredencoding\n            prompt = prompt.encode(preferredencoding())\n        return getpass.getpass(prompt, *args, **kwargs)\nelse:\n    compat_getpass = getpass.getpass\n\ntry:\n    compat_input = raw_input\nexcept NameError:  # Python 3\n    compat_input = input\n\n# Python < 2.6.5 require kwargs to be bytes\ntry:\n    def _testfunc(x):\n        pass\n    _testfunc(**{'x': 0})\nexcept TypeError:\n    def compat_kwargs(kwargs):\n        return dict((bytes(k), v) for k, v in kwargs.items())\nelse:\n    compat_kwargs = lambda kwargs: kwargs\n\n\ntry:\n    compat_numeric_types = (int, float, long, complex)\nexcept NameError:  # Python 3\n    compat_numeric_types = (int, float, complex)\n\n\nif sys.version_info < (2, 7):\n    def compat_socket_create_connection(address, timeout, source_address=None):\n        host, port = address\n        err = None\n        for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n                sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n                sock.connect(sa)\n                return sock\n            except socket.error as _:\n                err = _\n                if sock is not None:\n                    sock.close()\n        if err is not None:\n            raise err\n        else:\n            raise socket.error('getaddrinfo returns an empty list')\nelse:\n    compat_socket_create_connection = socket.create_connection\n\n\n# Fix https://github.com/rg3/youtube-dl/issues/4223\n# See http://bugs.python.org/issue9161 for what is broken\ndef workaround_optparse_bug9161():\n    op = optparse.OptionParser()\n    og = optparse.OptionGroup(op, 'foo')\n    try:\n        og.add_option('-t')\n    except TypeError:\n        real_add_option = optparse.OptionGroup.add_option\n\n        def _compat_add_option(self, *args, **kwargs):\n            enc = lambda v: (\n                v.encode('ascii', 'replace') if isinstance(v, compat_str)\n                else v)\n            bargs = [enc(a) for a in args]\n            bkwargs = dict(\n                (k, enc(v)) for k, v in kwargs.items())\n            return real_add_option(self, *bargs, **bkwargs)\n        optparse.OptionGroup.add_option = _compat_add_option\n\n\nif hasattr(shutil, 'get_terminal_size'):  # Python >= 3.3\n    compat_get_terminal_size = shutil.get_terminal_size\nelse:\n    _terminal_size = collections.namedtuple('terminal_size', ['columns', 'lines'])\n\n    def compat_get_terminal_size(fallback=(80, 24)):\n        columns = compat_getenv('COLUMNS')\n        if columns:\n            columns = int(columns)\n        else:\n            columns = None\n        lines = compat_getenv('LINES')\n        if lines:\n            lines = int(lines)\n        else:\n            lines = None\n\n        if columns is None or lines is None or columns <= 0 or lines <= 0:\n            try:\n                sp = subprocess.Popen(\n                    ['stty', 'size'],\n                    stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n                out, err = sp.communicate()\n                _lines, _columns = map(int, out.split())\n            except Exception:\n                _columns, _lines = _terminal_size(*fallback)\n\n            if columns is None or columns <= 0:\n                columns = _columns\n            if lines is None or lines <= 0:\n                lines = _lines\n        return _terminal_size(columns, lines)\n\ntry:\n    itertools.count(start=0, step=1)\n    compat_itertools_count = itertools.count\nexcept TypeError:  # Python 2.6\n    def compat_itertools_count(start=0, step=1):\n        n = start\n        while True:\n            yield n\n            n += step\n\nif sys.version_info >= (3, 0):\n    from tokenize import tokenize as compat_tokenize_tokenize\nelse:\n    from tokenize import generate_tokens as compat_tokenize_tokenize\n\n\ntry:\n    struct.pack('!I', 0)\nexcept TypeError:\n    # In Python 2.6 and 2.7.x < 2.7.7, struct requires a bytes argument\n    # See https://bugs.python.org/issue19099\n    def compat_struct_pack(spec, *args):\n        if isinstance(spec, compat_str):\n            spec = spec.encode('ascii')\n        return struct.pack(spec, *args)\n\n    def compat_struct_unpack(spec, *args):\n        if isinstance(spec, compat_str):\n            spec = spec.encode('ascii')\n        return struct.unpack(spec, *args)\n\n    class compat_Struct(struct.Struct):\n        def __init__(self, fmt):\n            if isinstance(fmt, compat_str):\n                fmt = fmt.encode('ascii')\n            super(compat_Struct, self).__init__(fmt)\nelse:\n    compat_struct_pack = struct.pack\n    compat_struct_unpack = struct.unpack\n    if platform.python_implementation() == 'IronPython' and sys.version_info < (2, 7, 8):\n        class compat_Struct(struct.Struct):\n            def unpack(self, string):\n                if not isinstance(string, buffer):  # noqa: F821\n                    string = buffer(string)  # noqa: F821\n                return super(compat_Struct, self).unpack(string)\n    else:\n        compat_Struct = struct.Struct\n\n\ntry:\n    from future_builtins import zip as compat_zip\nexcept ImportError:  # not 2.6+ or is 3.x\n    try:\n        from itertools import izip as compat_zip  # < 2.5 or 3.x\n    except ImportError:\n        compat_zip = zip\n\n\nif sys.version_info < (3, 3):\n    def compat_b64decode(s, *args, **kwargs):\n        if isinstance(s, compat_str):\n            s = s.encode('ascii')\n        return base64.b64decode(s, *args, **kwargs)\nelse:\n    compat_b64decode = base64.b64decode\n\n\nif platform.python_implementation() == 'PyPy' and sys.pypy_version_info < (5, 4, 0):\n    # PyPy2 prior to version 5.4.0 expects byte strings as Windows function\n    # names, see the original PyPy issue [1] and the youtube-dl one [2].\n    # 1. https://bitbucket.org/pypy/pypy/issues/2360/windows-ctypescdll-typeerror-function-name\n    # 2. https://github.com/rg3/youtube-dl/pull/4392\n    def compat_ctypes_WINFUNCTYPE(*args, **kwargs):\n        real = ctypes.WINFUNCTYPE(*args, **kwargs)\n\n        def resf(tpl, *args, **kwargs):\n            funcname, dll = tpl\n            return real((str(funcname), dll), *args, **kwargs)\n\n        return resf\nelse:\n    def compat_ctypes_WINFUNCTYPE(*args, **kwargs):\n        return ctypes.WINFUNCTYPE(*args, **kwargs)\n\n\n__all__ = [\n    'compat_HTMLParseError',\n    'compat_HTMLParser',\n    'compat_HTTPError',\n    'compat_Struct',\n    'compat_b64decode',\n    'compat_basestring',\n    'compat_chr',\n    'compat_cookiejar',\n    'compat_cookies',\n    'compat_ctypes_WINFUNCTYPE',\n    'compat_etree_fromstring',\n    'compat_etree_register_namespace',\n    'compat_expanduser',\n    'compat_get_terminal_size',\n    'compat_getenv',\n    'compat_getpass',\n    'compat_html_entities',\n    'compat_html_entities_html5',\n    'compat_http_client',\n    'compat_http_server',\n    'compat_input',\n    'compat_itertools_count',\n    'compat_kwargs',\n    'compat_numeric_types',\n    'compat_ord',\n    'compat_os_name',\n    'compat_parse_qs',\n    'compat_print',\n    'compat_setenv',\n    'compat_shlex_quote',\n    'compat_shlex_split',\n    'compat_socket_create_connection',\n    'compat_str',\n    'compat_struct_pack',\n    'compat_struct_unpack',\n    'compat_subprocess_get_DEVNULL',\n    'compat_tokenize_tokenize',\n    'compat_urllib_error',\n    'compat_urllib_parse',\n    'compat_urllib_parse_unquote',\n    'compat_urllib_parse_unquote_plus',\n    'compat_urllib_parse_unquote_to_bytes',\n    'compat_urllib_parse_urlencode',\n    'compat_urllib_parse_urlparse',\n    'compat_urllib_request',\n    'compat_urllib_request_DataHandler',\n    'compat_urllib_response',\n    'compat_urlparse',\n    'compat_urlretrieve',\n    'compat_xml_parse_error',\n    'compat_xpath',\n    'compat_zip',\n    'workaround_optparse_bug9161',\n]\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "compat.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/compat.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
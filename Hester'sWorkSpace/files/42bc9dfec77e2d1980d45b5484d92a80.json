{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass DHMIE(InfoExtractor):\n    IE_DESC = 'Filmarchiv - Deutsches Historisches Museum'\n    _VALID_URL = r'https?://(?:www\\.)?dhm\\.de/filmarchiv/(?:[^/]+/)+(?P<id>[^/]+)'\n\n    _TESTS = [{\n        'url': 'http://www.dhm.de/filmarchiv/die-filme/the-marshallplan-at-work-in-west-germany/',\n        'md5': '11c475f670209bf6acca0b2b7ef51827',\n        'info_dict': {\n            'id': 'the-marshallplan-at-work-in-west-germany',\n            'ext': 'flv',\n            'title': 'MARSHALL PLAN AT WORK IN WESTERN GERMANY, THE',\n            'description': 'md5:1fabd480c153f97b07add61c44407c82',\n            'duration': 660,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        },\n    }, {\n        'url': 'http://www.dhm.de/filmarchiv/02-mapping-the-wall/peter-g/rolle-1/',\n        'md5': '09890226332476a3e3f6f2cb74734aa5',\n        'info_dict': {\n            'id': 'rolle-1',\n            'ext': 'flv',\n            'title': 'ROLLE 1',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        },\n    }]\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, playlist_id)\n\n        playlist_url = self._search_regex(\n            r\"file\\s*:\\s*'([^']+)'\", webpage, 'playlist url')\n\n        entries = self._extract_xspf_playlist(playlist_url, playlist_id)\n\n        title = self._search_regex(\n            [r'dc:title=\"([^\"]+)\"', r'<title> &raquo;([^<]+)</title>'],\n            webpage, 'title').strip()\n        description = self._html_search_regex(\n            r'<p><strong>Description:</strong>(.+?)</p>',\n            webpage, 'description', default=None)\n        duration = parse_duration(self._search_regex(\n            r'<em>Length\\s*</em>\\s*:\\s*</strong>([^<]+)',\n            webpage, 'duration', default=None))\n\n        entries[0].update({\n            'title': title,\n            'description': description,\n            'duration': duration,\n        })\n\n        return self.playlist_result(entries, playlist_id)\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import parse_duration\n\n\nclass DHMIE(InfoExtractor):\n    IE_DESC = 'Filmarchiv - Deutsches Historisches Museum'\n    _VALID_URL = r'https?://(?:www\\.)?dhm\\.de/filmarchiv/(?:[^/]+/)+(?P<id>[^/]+)'\n\n    _TESTS = [{\n        'url': 'http://www.dhm.de/filmarchiv/die-filme/the-marshallplan-at-work-in-west-germany/',\n        'md5': '11c475f670209bf6acca0b2b7ef51827',\n        'info_dict': {\n            'id': 'the-marshallplan-at-work-in-west-germany',\n            'ext': 'flv',\n            'title': 'MARSHALL PLAN AT WORK IN WESTERN GERMANY, THE',\n            'description': 'md5:1fabd480c153f97b07add61c44407c82',\n            'duration': 660,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        },\n    }, {\n        'url': 'http://www.dhm.de/filmarchiv/02-mapping-the-wall/peter-g/rolle-1/',\n        'md5': '09890226332476a3e3f6f2cb74734aa5',\n        'info_dict': {\n            'id': 'rolle-1',\n            'ext': 'flv',\n            'title': 'ROLLE 1',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        },\n    }]\n\n    def _real_extract(self, url):\n        playlist_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, playlist_id)\n\n        playlist_url = self._search_regex(\n            r\"file\\s*:\\s*'([^']+)'\", webpage, 'playlist url')\n\n        entries = self._extract_xspf_playlist(playlist_url, playlist_id)\n\n        title = self._search_regex(\n            [r'dc:title=\"([^\"]+)\"', r'<title> &raquo;([^<]+)</title>'],\n            webpage, 'title').strip()\n        description = self._html_search_regex(\n            r'<p><strong>Description:</strong>(.+?)</p>',\n            webpage, 'description', default=None)\n        duration = parse_duration(self._search_regex(\n            r'<em>Length\\s*</em>\\s*:\\s*</strong>([^<]+)',\n            webpage, 'duration', default=None))\n\n        entries[0].update({\n            'title': title,\n            'description': description,\n            'duration': duration,\n        })\n\n        return self.playlist_result(entries, playlist_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "dhm.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/dhm.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
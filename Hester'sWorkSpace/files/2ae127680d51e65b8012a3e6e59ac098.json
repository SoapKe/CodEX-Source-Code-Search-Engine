{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass CloserToTruthIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?closertotruth\\.com/(?:[^/]+/)*(?P<id>[^/?\n    _TESTS = [{\n        'url': 'http://closertotruth.com/series/solutions-the-mind-body-problem\n        'info_dict': {\n            'id': '0_zof1ktre',\n            'display_id': 'solutions-the-mind-body-problem',\n            'ext': 'mov',\n            'title': 'Solutions to the Mind-Body Problem?',\n            'upload_date': '20140221',\n            'timestamp': 1392956007,\n            'uploader_id': 'CTTXML'\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://closertotruth.com/episodes/how-do-brains-work',\n        'info_dict': {\n            'id': '0_iuxai6g6',\n            'display_id': 'how-do-brains-work',\n            'ext': 'mov',\n            'title': 'How do Brains Work?',\n            'upload_date': '20140221',\n            'timestamp': 1392956024,\n            'uploader_id': 'CTTXML'\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://closertotruth.com/interviews/1725',\n        'info_dict': {\n            'id': '1725',\n            'title': 'AyaFr-002',\n        },\n        'playlist_mincount': 2,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        partner_id = self._search_regex(\n            r'<script[^>]+src=[\"\\'].*?\\b(?:partner_id|p)/(\\d+)',\n            webpage, 'kaltura partner_id')\n\n        title = self._search_regex(\n            r'<title>(.+?)\\s*\\|\\s*.+?</title>', webpage, 'video title')\n\n        select = self._search_regex(\n            r'(?s)<select[^>]+id=\"select-version\"[^>]*>(.+?)</select>',\n            webpage, 'select version', default=None)\n        if select:\n            entry_ids = set()\n            entries = []\n            for mobj in re.finditer(\n                    r'<option[^>]+value=([\"\\'])(?P<id>[0-9a-z_]+)(?:\n                    webpage):\n                entry_id = mobj.group('id')\n                if entry_id in entry_ids:\n                    continue\n                entry_ids.add(entry_id)\n                entries.append({\n                    '_type': 'url_transparent',\n                    'url': 'kaltura:%s:%s' % (partner_id, entry_id),\n                    'ie_key': 'Kaltura',\n                    'title': mobj.group('title'),\n                })\n            if entries:\n                return self.playlist_result(entries, display_id, title)\n\n        entry_id = self._search_regex(\n            r'<a[^>]+id=([\"\\'])embed-kaltura\\1[^>]+data-kaltura=([\"\\'])(?P<id>[0-9a-z_]+)\\2',\n            webpage, 'kaltura entry_id', group='id')\n\n        return {\n            '_type': 'url_transparent',\n            'display_id': display_id,\n            'url': 'kaltura:%s:%s' % (partner_id, entry_id),\n            'ie_key': 'Kaltura',\n            'title': title\n        }\n", "comments": "# coding: utf-8\n#&]+)'\n#video-3688',\n#.+?)?\\1[^>]*>(?P<title>[^<]+)',\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\n\n\nclass CloserToTruthIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?closertotruth\\.com/(?:[^/]+/)*(?P<id>[^/?#&]+)'\n    _TESTS = [{\n        'url': 'http://closertotruth.com/series/solutions-the-mind-body-problem#video-3688',\n        'info_dict': {\n            'id': '0_zof1ktre',\n            'display_id': 'solutions-the-mind-body-problem',\n            'ext': 'mov',\n            'title': 'Solutions to the Mind-Body Problem?',\n            'upload_date': '20140221',\n            'timestamp': 1392956007,\n            'uploader_id': 'CTTXML'\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://closertotruth.com/episodes/how-do-brains-work',\n        'info_dict': {\n            'id': '0_iuxai6g6',\n            'display_id': 'how-do-brains-work',\n            'ext': 'mov',\n            'title': 'How do Brains Work?',\n            'upload_date': '20140221',\n            'timestamp': 1392956024,\n            'uploader_id': 'CTTXML'\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://closertotruth.com/interviews/1725',\n        'info_dict': {\n            'id': '1725',\n            'title': 'AyaFr-002',\n        },\n        'playlist_mincount': 2,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        partner_id = self._search_regex(\n            r'<script[^>]+src=[\"\\'].*?\\b(?:partner_id|p)/(\\d+)',\n            webpage, 'kaltura partner_id')\n\n        title = self._search_regex(\n            r'<title>(.+?)\\s*\\|\\s*.+?</title>', webpage, 'video title')\n\n        select = self._search_regex(\n            r'(?s)<select[^>]+id=\"select-version\"[^>]*>(.+?)</select>',\n            webpage, 'select version', default=None)\n        if select:\n            entry_ids = set()\n            entries = []\n            for mobj in re.finditer(\n                    r'<option[^>]+value=([\"\\'])(?P<id>[0-9a-z_]+)(?:#.+?)?\\1[^>]*>(?P<title>[^<]+)',\n                    webpage):\n                entry_id = mobj.group('id')\n                if entry_id in entry_ids:\n                    continue\n                entry_ids.add(entry_id)\n                entries.append({\n                    '_type': 'url_transparent',\n                    'url': 'kaltura:%s:%s' % (partner_id, entry_id),\n                    'ie_key': 'Kaltura',\n                    'title': mobj.group('title'),\n                })\n            if entries:\n                return self.playlist_result(entries, display_id, title)\n\n        entry_id = self._search_regex(\n            r'<a[^>]+id=([\"\\'])embed-kaltura\\1[^>]+data-kaltura=([\"\\'])(?P<id>[0-9a-z_]+)\\2',\n            webpage, 'kaltura entry_id', group='id')\n\n        return {\n            '_type': 'url_transparent',\n            'display_id': display_id,\n            'url': 'kaltura:%s:%s' % (partner_id, entry_id),\n            'ie_key': 'Kaltura',\n            'title': title\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "closertotruth.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/closertotruth.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass OrganizationIntegrationsTest(AcceptanceTestCase):\n    def setUp(self):\n        super(OrganizationIntegrationsTest, self).setUp()\n        self.user = self.create_user('foo@example.com')\n        self.org = self.create_organization(\n            name='Rowdy Tiger',\n            owner=None,\n        )\n        self.team = self.create_team(organization=self.org, name='Mariachi Band')\n        self.project = self.create_project(\n            organization=self.org,\n            teams=[self.team],\n            name='Bengal',\n        )\n        self.create_member(\n            user=self.user,\n            organization=self.org,\n            role='owner',\n            teams=[self.team],\n        )\n        self.login_as(self.user)\n        self.path = '/organizations/{}/integrations/'.format(self.org.slug)\n\n    def test_simple(self):\n        with self.feature('organizations:integrations-v3'):\n            self.browser.get(self.path)\n            self.browser.wait_until('.organization-home')\n            self.browser.wait_until_not('.loading-indicator')\n            self.browser.snapshot('organization integrations')\n            assert self.browser.element_exists('.ref-organization-integrations')\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass OrganizationIntegrationsTest(AcceptanceTestCase):\n    def setUp(self):\n        super(OrganizationIntegrationsTest, self).setUp()\n        self.user = self.create_user('foo@example.com')\n        self.org = self.create_organization(\n            name='Rowdy Tiger',\n            owner=None,\n        )\n        self.team = self.create_team(organization=self.org, name='Mariachi Band')\n        self.project = self.create_project(\n            organization=self.org,\n            teams=[self.team],\n            name='Bengal',\n        )\n        self.create_member(\n            user=self.user,\n            organization=self.org,\n            role='owner',\n            teams=[self.team],\n        )\n        self.login_as(self.user)\n        self.path = '/organizations/{}/integrations/'.format(self.org.slug)\n\n    def test_simple(self):\n        with self.feature('organizations:integrations-v3'):\n            self.browser.get(self.path)\n            self.browser.wait_until('.organization-home')\n            self.browser.wait_until_not('.loading-indicator')\n            self.browser.snapshot('organization integrations')\n            assert self.browser.element_exists('.ref-organization-integrations')\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_organization_integrations.py", "id": "7a5d66706839ce32cd015d61e97fcd24", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/acceptance/test_organization_integrations.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
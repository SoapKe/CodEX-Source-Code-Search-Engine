{"author": "pallets", "code": "\n\n\n\n\n\n\n\n\n\n\n\nfrom __future__ import print_function\nimport os\nimport sys\nimport pkg_resources\nimport time\nimport datetime\n\nfrom sphinx.application import Sphinx\n\nBUILD_DATE = datetime.datetime.utcfromtimestamp(int(os.environ.get('SOURCE_DATE_EPOCH', time.time())))\n\n\n\n\nsys.path.append(os.path.dirname(__file__))\n\n\n\n\n\n\n\n\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.intersphinx',\n    'flaskdocext'\n]\n\ntry:\n    __import__('sphinxcontrib.log_cabinet')\nexcept ImportError:\n    print('sphinxcontrib-log-cabinet is not installed.')\n    print('Changelog directives will not be re-organized.')\nelse:\n    extensions.append('sphinxcontrib.log_cabinet')\n\n\ntemplates_path = ['_templates']\n\n\nsource_suffix = '.rst'\n\n\n\n\n\nmaster_doc = 'index'\n\n\nproject = u'Flask'\ncopyright = u'2010 - {0}, Armin Ronacher'.format(BUILD_DATE.year)\n\n\n\n\ntry:\n    release = pkg_resources.get_distribution('Flask').version\nexcept pkg_resources.DistributionNotFound:\n    print('Flask must be installed to build the documentation.')\n    print('Install from source using `pip install -e .` in a virtualenv.')\n    sys.exit(1)\n\nif 'dev' in release:\n    release = ''.join(release.partition('dev')[:2])\n\nversion = '.'.join(release.split('.')[:2])\n\n\n\n\n\n\n\n\n\n\n\n\n\nexclude_patterns = ['_build']\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtml_favicon = '_static/flask-favicon.ico'\n\n\n\n\nhtml_static_path = ['_static']\n\n\n\n\n\n\n\n\n\n\nhtml_sidebars = {\n    'index': [\n        'sidebarintro.html',\n        'sourcelink.html',\n        'searchbox.html'\n    ],\n    '**': [\n        'sidebarlogo.html',\n        'localtoc.html',\n        'relations.html',\n        'sourcelink.html',\n        'searchbox.html'\n    ]\n}\n\n\n\n\n\n\nhtml_use_modindex = False\n\n\n\n\n\n\n\n\n\n\n\nhtml_show_sphinx = False\n\n\n\n\n\n\n\n\n\n\n\n\n\nhtmlhelp_basename = 'Flaskdoc'\n\n\n\n\n\n\nlatex_documents = [\n  ('latexindex', 'Flask.tex', u'Flask Documentation', u'Armin Ronacher', 'manual'),\n]\n\n\n\n\n\nlatex_use_modindex = False\n\nlatex_elements = {\n    'fontpkg': r'\\usepackage{mathpazo}',\n    'papersize': 'a4paper',\n    'pointsize': '12pt',\n    'preamble': r'\\usepackage{flaskstyle}'\n}\nlatex_use_parts = True\n\nlatex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/3/', None),\n    'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n    'click': ('http://click.pocoo.org/', None),\n    'jinja': ('http://jinja.pocoo.org/docs/', None),\n    'itsdangerous': ('https://pythonhosted.org/itsdangerous', None),\n    'sqlalchemy': ('https://docs.sqlalchemy.org/en/latest/', None),\n    'wtforms': ('https://wtforms.readthedocs.io/en/latest/', None),\n    'blinker': ('https://pythonhosted.org/blinker/', None),\n}\n\nhtml_theme_options = {\n    'touch_icon': 'touch-icon.png'\n}\n\n\ndef unwrap_decorators():\n    import sphinx.util.inspect as inspect\n    import functools\n\n    old_getargspec = inspect.getargspec\n    def getargspec(x):\n        return old_getargspec(getattr(x, '_original_function', x))\n    inspect.getargspec = getargspec\n\n    old_update_wrapper = functools.update_wrapper\n    def update_wrapper(wrapper, wrapped, *a, **kw):\n        rv = old_update_wrapper(wrapper, wrapped, *a, **kw)\n        rv._original_function = wrapped\n        return rv\n    functools.update_wrapper = update_wrapper\n\nunwrap_decorators()\ndel unwrap_decorators\n\n\ndef setup(app: Sphinx):\n    def cut_module_meta(app, what, name, obj, options, lines):\n        \n        if what != 'module':\n            return\n\n        lines[:] = [\n            line for line in lines\n            if not line.startswith((':copyright:', ':license:'))\n        ]\n\n    app.connect('autodoc-process-docstring', cut_module_meta)\n", "comments": "Remove metadata from autodoc output.\n.\n# -*- coding: utf-8 -*-\n#\n# Flask documentation build configuration file, created by\n# sphinx-quickstart on Tue Apr  6 15:24:58 2010.\n#\n# This file is execfile()d with the current directory set to its containing dir.\n#\n# Note that not all possible configuration values are present in this\n# autogenerated file.\n#\n# All configuration values have a default; values that are commented out\n# serve to show the default.\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\n# -- General configuration -----------------------------------------------------\n# If your documentation needs a minimal Sphinx version, state it here.\n#needs_sphinx = '1.0'\n# Add any Sphinx extension module names here, as strings. They can be extensions\n# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\n# Add any paths that contain templates here, relative to this directory.\n# The suffix of source filenames.\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n# The master toctree document.\n# General information about the project.\n# The version info for the project you're documenting, acts as replacement for\n# |version| and |release|, also used in various other places throughout the\n# built documents.\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------\n# The theme to use for HTML and HTML Help pages.  Major themes that come with\n# Sphinx are currently 'default' and 'sphinxdoc'.\n# html_theme = 'default'\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n# html_theme_options = {}\n# Add any paths that contain custom themes here, relative to this directory.\n# html_theme_path = ['_themes']\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.  Do not set, template magic!\n#html_logo = None\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\n#html_last_updated_fmt = '%b %d, %Y'\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n# Custom sidebar templates, maps document names to template names.\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n# If false, no module index is generated.\n# If false, no index is generated.\n#html_use_index = True\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n# If nonempty, this is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = ''\n# Output file base name for HTML help builder.\n# -- Options for LaTeX output --------------------------------------------------\n# Grouping the document tree into LaTeX files. List of tuples\n# (source start file, target name, title, author, documentclass [howto/manual]).\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n# If false, no module index is generated.\n# -- Options for Epub output ---------------------------------------------------\n# Bibliographic Dublin Core info.\n#epub_title = ''\n#epub_author = ''\n#epub_publisher = ''\n#epub_copyright = ''\n# The language of the text. It defaults to the language option\n# or en if the language is not set.\n#epub_language = ''\n# The scheme of the identifier. Typical schemes are ISBN or URL.\n#epub_scheme = ''\n# The unique identifier of the text. This can be an ISBN number\n# or the project homepage.\n#epub_identifier = ''\n# A unique identification for the text.\n#epub_uid = ''\n# HTML files that should be inserted before the pages created by sphinx.\n# The format is a list of tuples containing the path and title.\n#epub_pre_files = []\n# HTML files shat should be inserted after the pages created by sphinx.\n# The format is a list of tuples containing the path and title.\n#epub_post_files = []\n# A list of files that should not be packed into the epub file.\n#epub_exclude_files = []\n# The depth of the table of contents in toc.ncx.\n#epub_tocdepth = 3\n# unwrap decorators\n", "content": "# -*- coding: utf-8 -*-\n#\n# Flask documentation build configuration file, created by\n# sphinx-quickstart on Tue Apr  6 15:24:58 2010.\n#\n# This file is execfile()d with the current directory set to its containing dir.\n#\n# Note that not all possible configuration values are present in this\n# autogenerated file.\n#\n# All configuration values have a default; values that are commented out\n# serve to show the default.\nfrom __future__ import print_function\nimport os\nimport sys\nimport pkg_resources\nimport time\nimport datetime\n\nfrom sphinx.application import Sphinx\n\nBUILD_DATE = datetime.datetime.utcfromtimestamp(int(os.environ.get('SOURCE_DATE_EPOCH', time.time())))\n\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\nsys.path.append(os.path.dirname(__file__))\n\n# -- General configuration -----------------------------------------------------\n\n# If your documentation needs a minimal Sphinx version, state it here.\n#needs_sphinx = '1.0'\n\n# Add any Sphinx extension module names here, as strings. They can be extensions\n# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.intersphinx',\n    'flaskdocext'\n]\n\ntry:\n    __import__('sphinxcontrib.log_cabinet')\nexcept ImportError:\n    print('sphinxcontrib-log-cabinet is not installed.')\n    print('Changelog directives will not be re-organized.')\nelse:\n    extensions.append('sphinxcontrib.log_cabinet')\n\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n\n# The suffix of source filenames.\nsource_suffix = '.rst'\n\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n\n# The master toctree document.\nmaster_doc = 'index'\n\n# General information about the project.\nproject = u'Flask'\ncopyright = u'2010 - {0}, Armin Ronacher'.format(BUILD_DATE.year)\n\n# The version info for the project you're documenting, acts as replacement for\n# |version| and |release|, also used in various other places throughout the\n# built documents.\ntry:\n    release = pkg_resources.get_distribution('Flask').version\nexcept pkg_resources.DistributionNotFound:\n    print('Flask must be installed to build the documentation.')\n    print('Install from source using `pip install -e .` in a virtualenv.')\n    sys.exit(1)\n\nif 'dev' in release:\n    release = ''.join(release.partition('dev')[:2])\n\nversion = '.'.join(release.split('.')[:2])\n\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n\n\n# -- Options for HTML output ---------------------------------------------------\n\n# The theme to use for HTML and HTML Help pages.  Major themes that come with\n# Sphinx are currently 'default' and 'sphinxdoc'.\n# html_theme = 'default'\n\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n# html_theme_options = {}\n\n# Add any paths that contain custom themes here, relative to this directory.\n# html_theme_path = ['_themes']\n\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None\n\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.  Do not set, template magic!\n#html_logo = None\n\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\nhtml_favicon = '_static/flask-favicon.ico'\n\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = ['_static']\n\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\n#html_last_updated_fmt = '%b %d, %Y'\n\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n\n# Custom sidebar templates, maps document names to template names.\nhtml_sidebars = {\n    'index': [\n        'sidebarintro.html',\n        'sourcelink.html',\n        'searchbox.html'\n    ],\n    '**': [\n        'sidebarlogo.html',\n        'localtoc.html',\n        'relations.html',\n        'sourcelink.html',\n        'searchbox.html'\n    ]\n}\n\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n\n# If false, no module index is generated.\nhtml_use_modindex = False\n\n# If false, no index is generated.\n#html_use_index = True\n\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\nhtml_show_sphinx = False\n\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n\n# If nonempty, this is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = ''\n\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'Flaskdoc'\n\n\n# -- Options for LaTeX output --------------------------------------------------\n\n# Grouping the document tree into LaTeX files. List of tuples\n# (source start file, target name, title, author, documentclass [howto/manual]).\nlatex_documents = [\n  ('latexindex', 'Flask.tex', u'Flask Documentation', u'Armin Ronacher', 'manual'),\n]\n\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n\n# If false, no module index is generated.\nlatex_use_modindex = False\n\nlatex_elements = {\n    'fontpkg': r'\\usepackage{mathpazo}',\n    'papersize': 'a4paper',\n    'pointsize': '12pt',\n    'preamble': r'\\usepackage{flaskstyle}'\n}\nlatex_use_parts = True\n\nlatex_additional_files = ['flaskstyle.sty', 'logo.pdf']\n\n\n# -- Options for Epub output ---------------------------------------------------\n\n# Bibliographic Dublin Core info.\n#epub_title = ''\n#epub_author = ''\n#epub_publisher = ''\n#epub_copyright = ''\n\n# The language of the text. It defaults to the language option\n# or en if the language is not set.\n#epub_language = ''\n\n# The scheme of the identifier. Typical schemes are ISBN or URL.\n#epub_scheme = ''\n\n# The unique identifier of the text. This can be an ISBN number\n# or the project homepage.\n#epub_identifier = ''\n\n# A unique identification for the text.\n#epub_uid = ''\n\n# HTML files that should be inserted before the pages created by sphinx.\n# The format is a list of tuples containing the path and title.\n#epub_pre_files = []\n\n# HTML files shat should be inserted after the pages created by sphinx.\n# The format is a list of tuples containing the path and title.\n#epub_post_files = []\n\n# A list of files that should not be packed into the epub file.\n#epub_exclude_files = []\n\n# The depth of the table of contents in toc.ncx.\n#epub_tocdepth = 3\n\nintersphinx_mapping = {\n    'python': ('https://docs.python.org/3/', None),\n    'werkzeug': ('http://werkzeug.pocoo.org/docs/', None),\n    'click': ('http://click.pocoo.org/', None),\n    'jinja': ('http://jinja.pocoo.org/docs/', None),\n    'itsdangerous': ('https://pythonhosted.org/itsdangerous', None),\n    'sqlalchemy': ('https://docs.sqlalchemy.org/en/latest/', None),\n    'wtforms': ('https://wtforms.readthedocs.io/en/latest/', None),\n    'blinker': ('https://pythonhosted.org/blinker/', None),\n}\n\nhtml_theme_options = {\n    'touch_icon': 'touch-icon.png'\n}\n\n# unwrap decorators\ndef unwrap_decorators():\n    import sphinx.util.inspect as inspect\n    import functools\n\n    old_getargspec = inspect.getargspec\n    def getargspec(x):\n        return old_getargspec(getattr(x, '_original_function', x))\n    inspect.getargspec = getargspec\n\n    old_update_wrapper = functools.update_wrapper\n    def update_wrapper(wrapper, wrapped, *a, **kw):\n        rv = old_update_wrapper(wrapper, wrapped, *a, **kw)\n        rv._original_function = wrapped\n        return rv\n    functools.update_wrapper = update_wrapper\n\nunwrap_decorators()\ndel unwrap_decorators\n\n\ndef setup(app: Sphinx):\n    def cut_module_meta(app, what, name, obj, options, lines):\n        \"\"\"Remove metadata from autodoc output.\"\"\"\n        if what != 'module':\n            return\n\n        lines[:] = [\n            line for line in lines\n            if not line.startswith((':copyright:', ':license:'))\n        ]\n\n    app.connect('autodoc-process-docstring', cut_module_meta)\n", "description": "The Python micro framework for building web applications.", "file_name": "conf.py", "language": "Python", "project_name": "flask", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/pallets_flask/pallets-flask-a2ea186/docs/conf.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:52:03Z", "url": "https://github.com/pallets/flask", "wiki": false}
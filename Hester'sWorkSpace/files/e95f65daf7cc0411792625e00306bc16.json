{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport re\nfrom odoo import fields, models, api, _\nfrom odoo.exceptions import UserError\n\n\nclass ResPartnerBank(models.Model):\n    _inherit = 'res.partner.bank'\n\n    aba_routing = fields.Integer(string=\"ABA/Routing\", help=\"American Bankers Association Routing Number\")\n\n    def _check_aba_routing(self, aba_routing):\n        if aba_routing and not re.match(r'^\\d{1,9}$', aba_routing):\n            raise UserError(_('ABA/Routing should only contains numbers (maximum 9 digits).'))\n        return aba_routing\n\n    \n    @api.model\n    def create(self, vals):\n        if vals.get('aba_routing'):\n            vals['aba_routing'] = int(self._check_aba_routing(vals['aba_routing']))\n        return super(ResPartnerBank, self).create(vals)\n\n    @api.multi\n    def write(self, vals):\n        if vals.get('aba_routing'):\n            vals['aba_routing'] = int(self._check_aba_routing(vals['aba_routing']))\n        return super(ResPartnerBank, self).write(vals)\n\n    @api.multi\n    def read(self, fields=None, load='_classic_read'):\n        result = super(ResPartnerBank, self).read(fields, load=load)\n        for record in result:\n            if record.get('aba_routing'):\n                record['aba_routing'] = str(record['aba_routing'])\n        return result\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     only for v11  do not forwardport  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport re\nfrom odoo import fields, models, api, _\nfrom odoo.exceptions import UserError\n\n\nclass ResPartnerBank(models.Model):\n    _inherit = 'res.partner.bank'\n\n    aba_routing = fields.Integer(string=\"ABA/Routing\", help=\"American Bankers Association Routing Number\")\n\n    def _check_aba_routing(self, aba_routing):\n        if aba_routing and not re.match(r'^\\d{1,9}$', aba_routing):\n            raise UserError(_('ABA/Routing should only contains numbers (maximum 9 digits).'))\n        return aba_routing\n\n    # ONLY FOR v11. DO NOT FORWARDPORT!\n    @api.model\n    def create(self, vals):\n        if vals.get('aba_routing'):\n            vals['aba_routing'] = int(self._check_aba_routing(vals['aba_routing']))\n        return super(ResPartnerBank, self).create(vals)\n\n    @api.multi\n    def write(self, vals):\n        if vals.get('aba_routing'):\n            vals['aba_routing'] = int(self._check_aba_routing(vals['aba_routing']))\n        return super(ResPartnerBank, self).write(vals)\n\n    @api.multi\n    def read(self, fields=None, load='_classic_read'):\n        result = super(ResPartnerBank, self).read(fields, load=load)\n        for record in result:\n            if record.get('aba_routing'):\n                record['aba_routing'] = str(record['aba_routing'])\n        return result\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "res_partner_bank.py", "id": "e95f65daf7cc0411792625e00306bc16", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_us/models/res_partner_bank.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
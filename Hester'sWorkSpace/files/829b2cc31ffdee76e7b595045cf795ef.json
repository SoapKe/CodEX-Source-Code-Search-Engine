{"author": "geekcomputers", "code": "\n\n\n\n\n\n\n\n\n\nimport subprocess\t\t\t\t\nimport sys\t\t\t\t\t\t\t\nimport os\t\t\t\t\t\t\t\nimport time\t\t\t\t\t\t\n\ndropbox = os.getenv(\"dropbox\")\t\t\t\t\t\t\t\nrdpfile = (\"remote\\\\workpc.rdp\")\t\t\t\t\t\t\t\nconffilename=os.path.join(dropbox, rdpfile)\t\t\t\nremote = (r\"c:\\windows\\system32\\mstsc.exe \")\t\n\ntext = \t\t\t\t\t\t\t\t\t\t\t\n\nif len(sys.argv) < 2:\t\t\t\t\t\t\t\t\t\t\t\n  print text\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n  sys.exit()\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n  \nif '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:\t\n    print text\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    sys.exit(0)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nelse:\n  if sys.argv[1].lower().startswith('-c'):\t\t\t\t\t\n    passwd = sys.argv[2] \t\t\t\t\t\t\t\t\t\n    subprocess.Popen((r\"c:\\Program Files\\Checkpoint\\Endpoint Connect\\trac.exe connect -u username -p \"+passwd))\n    subprocess.Popen((r\"c:\\geektools\\puttycm.exe\"))\n    time.sleep(15)\t\t\t\t\t\t\t\t\t\t\t\t\n    subprocess.Popen([remote, conffilename])\n  elif sys.argv[1].lower().startswith('-d'):\t\t\t\t\t\n    subprocess.Popen((r\"c:\\Program Files\\Checkpoint\\Endpoint Connect\\trac.exe disconnect \"))\n  else:\n    print 'Unknown option - ' + text\t\t\t\t\t\t# If any other option is passed, then print Unknown option and the text from above - 1.2", "comments": "   you need pass argument   c followed login password connect   disconnect       script name    work connect py    author      craig richards    created      11th may 2012    last modified    31st october 2012    version      1 1    modifications    1 1   cr   added extra code  check argument passed script first  check valid input    description     this simple script loads everything i need connect work etc    load library module     load library module     load library module    load library module    set variable dropbox  getting values environment setting dropbox    set variable logfile  using arguments passed create logfile    set variable conffilename joining confdir conffile together    set variable remote path mstsc    text display argument passed invalid option   1 2    check least one option passed script   1 2    if print text   1 2    exit program   1 2    help menu called    print text  stored text variable   1 2    exit program    if first argument  c    set variable passwd second argument passed  case login password    sleep 15 seconds  checkpoint software connect opening mstsc    if first argument  disconnect checkpoint session  ", "content": "# Script Name\t\t: work_connect.py\n# Author\t\t\t\t: Craig Richards\n# Created\t\t\t\t: 11th May 2012\n# Last Modified\t\t: 31st October 2012\n# Version\t\t\t\t: 1.1\n\n# Modifications\t\t: 1.1 - CR - Added some extra code, to check an argument is passed to the script first of all, then check it's a valid input\n\n# Description\t\t\t: This simple script loads everything I need to connect to work etc\n\nimport subprocess\t\t\t\t# Load the Library Module \nimport sys\t\t\t\t\t\t\t# Load the Library Module \nimport os\t\t\t\t\t\t\t# Load the Library Module\nimport time\t\t\t\t\t\t# Load the Library Module\n\ndropbox = os.getenv(\"dropbox\")\t\t\t\t\t\t\t# Set the variable dropbox, by getting the values of the environment setting for dropbox\nrdpfile = (\"remote\\\\workpc.rdp\")\t\t\t\t\t\t\t# Set the variable logfile, using the arguments passed to create the logfile\nconffilename=os.path.join(dropbox, rdpfile)\t\t\t# Set the variable conffilename by joining confdir and conffile together\nremote = (r\"c:\\windows\\system32\\mstsc.exe \")\t# Set the variable remote with the path to mstsc\n\ntext = '''You need to pass an argument\n\t-c Followed by login password to connect\n\t-d to disconnect'''\t\t\t\t\t\t\t\t\t\t\t# Text to display if there is no argument passed or it's an invalid option - 1.2\n\nif len(sys.argv) < 2:\t\t\t\t\t\t\t\t\t\t\t# Check there is at least one option passed to the script - 1.2\n  print text\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# If not print the text above - 1.2\n  sys.exit()\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Exit the program - 1.2\n  \nif '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:\t# Help Menu if called\n    print text\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Print the text, stored in the text variable - 1.2\n    sys.exit(0)\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Exit the program\nelse:\n  if sys.argv[1].lower().startswith('-c'):\t\t\t\t\t# If the first argument is -c then\n    passwd = sys.argv[2] \t\t\t\t\t\t\t\t\t# Set the variable passwd as the second argument passed, in this case my login password\n    subprocess.Popen((r\"c:\\Program Files\\Checkpoint\\Endpoint Connect\\trac.exe connect -u username -p \"+passwd))\n    subprocess.Popen((r\"c:\\geektools\\puttycm.exe\"))\n    time.sleep(15)\t\t\t\t\t\t\t\t\t\t\t\t# Sleep for 15 seconds, so the checkpoint software can connect before opening mstsc\n    subprocess.Popen([remote, conffilename])\n  elif sys.argv[1].lower().startswith('-d'):\t\t\t\t\t# If the first argument is -d then disconnect my checkpoint session.\n    subprocess.Popen((r\"c:\\Program Files\\Checkpoint\\Endpoint Connect\\trac.exe disconnect \"))\n  else:\n    print 'Unknown option - ' + text\t\t\t\t\t\t# If any other option is passed, then print Unknown option and the text from above - 1.2", "description": "My Python Examples", "file_name": "work_connect.py", "id": "829b2cc31ffdee76e7b595045cf795ef", "language": "Python", "project_name": "Python", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/geekcomputers-Python/geekcomputers-Python-ef88c96/work_connect.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:41:16Z", "url": "https://github.com/geekcomputers/Python", "wiki": true}
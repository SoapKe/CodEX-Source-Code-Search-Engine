{"author": "gunthercox", "code": "from chatterbot import ChatBot\nfrom chatterbot.adapters import Adapter\nfrom .base_case import ChatBotTestCase\n\n\nclass AdapterValidationTests(ChatBotTestCase):\n\n    def test_invalid_storage_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = 'chatterbot.input.TerminalAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_storage_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = 'chatterbot.storage.SQLStorageAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_input_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['input_adapter'] = 'chatterbot.storage.SQLStorageAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_input_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['input_adapter'] = 'chatterbot.input.TerminalAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_output_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['output_adapter'] = 'chatterbot.input.TerminalAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_output_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['output_adapter'] = 'chatterbot.output.TerminalAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_logic_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['logic_adapters'] = ['chatterbot.input.TerminalAdapter']\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_logic_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['logic_adapters'] = ['chatterbot.logic.BestMatch']\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_valid_adapter_dictionary(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = {\n            'import_path': 'chatterbot.storage.SQLStorageAdapter'\n        }\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_adapter_dictionary(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = {\n            'import_path': 'chatterbot.logic.BestMatch'\n        }\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n\nclass MultiAdapterTests(ChatBotTestCase):\n\n    def test_add_logic_adapter(self):\n        count_before = len(self.chatbot.logic.adapters)\n\n        self.chatbot.logic.add_adapter(\n            'chatterbot.logic.BestMatch'\n        )\n        self.assertIsLength(self.chatbot.logic.adapters, count_before + 1)\n\n    def test_insert_logic_adapter(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n        self.chatbot.logic.add_adapter('chatterbot.logic.BestMatch')\n\n        self.chatbot.logic.insert_logic_adapter('chatterbot.logic.MathematicalEvaluation', 1)\n\n        self.assertEqual(\n            type(self.chatbot.logic.adapters[1]).__name__,\n            'MathematicalEvaluation'\n        )\n\n    def test_remove_logic_adapter(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n        self.chatbot.logic.add_adapter('chatterbot.logic.MathematicalEvaluation')\n\n        adapter_count = len(self.chatbot.logic.adapters)\n\n        removed = self.chatbot.logic.remove_logic_adapter('MathematicalEvaluation')\n\n        self.assertTrue(removed)\n        self.assertIsLength(self.chatbot.logic.adapters, adapter_count - 1)\n\n    def test_remove_logic_adapter_not_found(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n\n        adapter_count = len(self.chatbot.logic.adapters)\n\n        removed = self.chatbot.logic.remove_logic_adapter('MathematicalEvaluation')\n\n        self.assertFalse(removed)\n        self.assertIsLength(self.chatbot.logic.adapters, adapter_count)\n", "comments": "", "content": "from chatterbot import ChatBot\nfrom chatterbot.adapters import Adapter\nfrom .base_case import ChatBotTestCase\n\n\nclass AdapterValidationTests(ChatBotTestCase):\n\n    def test_invalid_storage_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = 'chatterbot.input.TerminalAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_storage_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = 'chatterbot.storage.SQLStorageAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_input_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['input_adapter'] = 'chatterbot.storage.SQLStorageAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_input_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['input_adapter'] = 'chatterbot.input.TerminalAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_output_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['output_adapter'] = 'chatterbot.input.TerminalAdapter'\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_output_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['output_adapter'] = 'chatterbot.output.TerminalAdapter'\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_logic_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['logic_adapters'] = ['chatterbot.input.TerminalAdapter']\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n    def test_valid_logic_adapter(self):\n        kwargs = self.get_kwargs()\n        kwargs['logic_adapters'] = ['chatterbot.logic.BestMatch']\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_valid_adapter_dictionary(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = {\n            'import_path': 'chatterbot.storage.SQLStorageAdapter'\n        }\n        try:\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n        except Adapter.InvalidAdapterTypeException:\n            self.fail('Test raised InvalidAdapterException unexpectedly!')\n\n    def test_invalid_adapter_dictionary(self):\n        kwargs = self.get_kwargs()\n        kwargs['storage_adapter'] = {\n            'import_path': 'chatterbot.logic.BestMatch'\n        }\n        with self.assertRaises(Adapter.InvalidAdapterTypeException):\n            self.chatbot = ChatBot('Test Bot', **kwargs)\n\n\nclass MultiAdapterTests(ChatBotTestCase):\n\n    def test_add_logic_adapter(self):\n        count_before = len(self.chatbot.logic.adapters)\n\n        self.chatbot.logic.add_adapter(\n            'chatterbot.logic.BestMatch'\n        )\n        self.assertIsLength(self.chatbot.logic.adapters, count_before + 1)\n\n    def test_insert_logic_adapter(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n        self.chatbot.logic.add_adapter('chatterbot.logic.BestMatch')\n\n        self.chatbot.logic.insert_logic_adapter('chatterbot.logic.MathematicalEvaluation', 1)\n\n        self.assertEqual(\n            type(self.chatbot.logic.adapters[1]).__name__,\n            'MathematicalEvaluation'\n        )\n\n    def test_remove_logic_adapter(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n        self.chatbot.logic.add_adapter('chatterbot.logic.MathematicalEvaluation')\n\n        adapter_count = len(self.chatbot.logic.adapters)\n\n        removed = self.chatbot.logic.remove_logic_adapter('MathematicalEvaluation')\n\n        self.assertTrue(removed)\n        self.assertIsLength(self.chatbot.logic.adapters, adapter_count - 1)\n\n    def test_remove_logic_adapter_not_found(self):\n        self.chatbot.logic.add_adapter('chatterbot.logic.TimeLogicAdapter')\n\n        adapter_count = len(self.chatbot.logic.adapters)\n\n        removed = self.chatbot.logic.remove_logic_adapter('MathematicalEvaluation')\n\n        self.assertFalse(removed)\n        self.assertIsLength(self.chatbot.logic.adapters, adapter_count)\n", "description": "ChatterBot is a machine learning, conversational dialog engine for creating chat bots", "file_name": "test_adapter_validation.py", "id": "b49a350f840bf9026ffc60a283a3681a", "language": "Python", "project_name": "ChatterBot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/gunthercox-ChatterBot/gunthercox-ChatterBot-f20c412/tests/test_adapter_validation.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:44:53Z", "url": "https://github.com/gunthercox/ChatterBot", "wiki": true}
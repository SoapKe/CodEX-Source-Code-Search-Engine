{"author": "mitmproxy", "code": "import requests\nfrom pathod import test\n\n\ndef test_simple():\n    \n    \n    with test.Daemon() as d:\n        \n        url = d.p(\"200:b@100\")\n        \n        r = requests.put(url)\n\n        \n        assert r.status_code == 200\n        assert len(r.content) == 100\n\n        \n        log = d.last_log()[\"request\"]\n        assert log[\"method\"] == \"PUT\"\n", "comments": "            testing requests module         pathod context manager             start pathod separate thread    get url pathod spec        request    check returned data    check pathod internal log ", "content": "import requests\nfrom pathod import test\n\n\ndef test_simple():\n    \"\"\"\n        Testing the requests module with\n        a pathod context manager.\n    \"\"\"\n    # Start pathod in a separate thread\n    with test.Daemon() as d:\n        # Get a URL for a pathod spec\n        url = d.p(\"200:b@100\")\n        # ... and request it\n        r = requests.put(url)\n\n        # Check the returned data\n        assert r.status_code == 200\n        assert len(r.content) == 100\n\n        # Check pathod's internal log\n        log = d.last_log()[\"request\"]\n        assert log[\"method\"] == \"PUT\"\n", "description": "An interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers.", "file_name": "test_context.py", "id": "2901b39e129cf143fe5dce2992215813", "language": "Python", "project_name": "mitmproxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/mitmproxy-mitmproxy/mitmproxy-mitmproxy-0bc3f1f/docs/src/examples/pathod/test_context.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:46Z", "url": "https://github.com/mitmproxy/mitmproxy", "wiki": false}
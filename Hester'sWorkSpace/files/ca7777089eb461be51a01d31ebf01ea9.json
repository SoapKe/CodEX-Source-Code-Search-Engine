{"author": "HelloZeroNet", "code": "import json\nimport re\nimport os\n\n\ndef queryFile(file_path, filter_path, filter_key=None, filter_val=None):\n    back = []\n    data = json.load(open(file_path))\n    if filter_path == ['']:\n        return [data]\n    for key in filter_path:  \n        data = data.get(key)\n        if not data:\n            return\n\n    for row in data:\n        if filter_val:  \n            if row[filter_key] == filter_val:\n                back.append(row)\n        else:\n            back.append(row)\n\n    return back\n\n\n\n# Return: [{u'body': u'Hello Topic 1!!', 'inner_path': '1KRxE1...beEp6', u'added': 1422740732, u'message_id': 1},...]\ndef query(path_pattern, filter):\n    if \"=\" in filter:  \n        filter_path, filter_val = filter.split(\"=\")\n        filter_path = filter_path.split(\".\")\n        filter_key = filter_path.pop()  \n        filter_val = int(filter_val)\n    else:  \n        filter_path = filter\n        filter_path = filter_path.split(\".\")\n        filter_key = None\n        filter_val = None\n\n    if \"/*/\" in path_pattern:  \n        root_dir, file_pattern = path_pattern.replace(\"\\\\\", \"/\").split(\"/*/\")\n    else:  \n        root_dir, file_pattern = re.match(\"(.*)/(.*?)$\", path_pattern.replace(\"\\\\\", \"/\")).groups()\n    for root, dirs, files in os.walk(root_dir, topdown=False):\n        root = root.replace(\"\\\\\", \"/\")\n        inner_path = root.replace(root_dir, \"\").strip(\"/\")\n        for file_name in files:\n            if file_pattern != file_name:\n                continue\n\n            try:\n                res = queryFile(root + \"/\" + file_name, filter_path, filter_key, filter_val)\n                if not res:\n                    continue\n            except Exception:  \n                continue\n            for row in res:\n                row[\"inner_path\"] = inner_path\n                yield row\n\n\nif __name__ == \"__main__\":\n    for row in list(query(\"../../data/12Hw8rTgzrNo4DSh2AkqwPRqDyTticwJyH/data/users/*/data.json\", \"\")):\n        print row\n", "comments": "  get point    filter value    find json files    return    u body   u hello topic 1      inner path    1krxe1   beep6   u added   1422740732  u message id   1          filter value    last element key    no filter    wildcard search    no wildcard    json load error ", "content": "import json\nimport re\nimport os\n\n\ndef queryFile(file_path, filter_path, filter_key=None, filter_val=None):\n    back = []\n    data = json.load(open(file_path))\n    if filter_path == ['']:\n        return [data]\n    for key in filter_path:  # Get to the point\n        data = data.get(key)\n        if not data:\n            return\n\n    for row in data:\n        if filter_val:  # Filter by value\n            if row[filter_key] == filter_val:\n                back.append(row)\n        else:\n            back.append(row)\n\n    return back\n\n\n# Find in json files\n# Return: [{u'body': u'Hello Topic 1!!', 'inner_path': '1KRxE1...beEp6', u'added': 1422740732, u'message_id': 1},...]\ndef query(path_pattern, filter):\n    if \"=\" in filter:  # Filter by value\n        filter_path, filter_val = filter.split(\"=\")\n        filter_path = filter_path.split(\".\")\n        filter_key = filter_path.pop()  # Last element is the key\n        filter_val = int(filter_val)\n    else:  # No filter\n        filter_path = filter\n        filter_path = filter_path.split(\".\")\n        filter_key = None\n        filter_val = None\n\n    if \"/*/\" in path_pattern:  # Wildcard search\n        root_dir, file_pattern = path_pattern.replace(\"\\\\\", \"/\").split(\"/*/\")\n    else:  # No wildcard\n        root_dir, file_pattern = re.match(\"(.*)/(.*?)$\", path_pattern.replace(\"\\\\\", \"/\")).groups()\n    for root, dirs, files in os.walk(root_dir, topdown=False):\n        root = root.replace(\"\\\\\", \"/\")\n        inner_path = root.replace(root_dir, \"\").strip(\"/\")\n        for file_name in files:\n            if file_pattern != file_name:\n                continue\n\n            try:\n                res = queryFile(root + \"/\" + file_name, filter_path, filter_key, filter_val)\n                if not res:\n                    continue\n            except Exception:  # Json load error\n                continue\n            for row in res:\n                row[\"inner_path\"] = inner_path\n                yield row\n\n\nif __name__ == \"__main__\":\n    for row in list(query(\"../../data/12Hw8rTgzrNo4DSh2AkqwPRqDyTticwJyH/data/users/*/data.json\", \"\")):\n        print row\n", "description": "ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network", "file_name": "QueryJson.py", "id": "ca7777089eb461be51a01d31ebf01ea9", "language": "Python", "project_name": "ZeroNet", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/HelloZeroNet-ZeroNet/HelloZeroNet-ZeroNet-8828629/src/util/QueryJson.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:17:52Z", "url": "https://github.com/HelloZeroNet/ZeroNet", "wiki": true}
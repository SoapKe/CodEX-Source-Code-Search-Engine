{"author": "USArmyResearchLab", "code": "import dshell\nimport netflowout\n\n\nclass DshellDecoder(dshell.TCPDecoder):\n\n    def __init__(self):\n        dshell.TCPDecoder.__init__(self,\n                                   name='large-flows',\n                                   description='display netflows that have at least 1MB transferred',\n                                   filter='tcp',\n                                   author='bg',\n                                   optiondict={'size': {\n                                       'type': 'float', 'default': 1, 'help': 'number of megabytes transferred'}}\n                                   )\n        self.out = netflowout.NetflowOutput()\n        self.min = 1048576      \n\n    def preModule(self):\n        if self.size <= 0:\n            self.warn(\n                \"Cannot have a size that's less than or equal to zero. (size: %s)\" % (self.size))\n            self.size = 1\n        self.min = 1048576 * self.size\n        self.debug(\"Input: %s,  Final size: %s bytes\" % (self.size, self.min))\n\n    def connectionHandler(self, conn):\n        if (conn.clientbytes + conn.serverbytes) >= self.min:\n            self.alert(**conn.info())\n\n\nif __name__ == '__main__':\n    dObj = DshellDecoder()\n    print dObj\nelse:\n    dObj = DshellDecoder()\n", "comments": "  1mb ", "content": "import dshell\nimport netflowout\n\n\nclass DshellDecoder(dshell.TCPDecoder):\n\n    def __init__(self):\n        dshell.TCPDecoder.__init__(self,\n                                   name='large-flows',\n                                   description='display netflows that have at least 1MB transferred',\n                                   filter='tcp',\n                                   author='bg',\n                                   optiondict={'size': {\n                                       'type': 'float', 'default': 1, 'help': 'number of megabytes transferred'}}\n                                   )\n        self.out = netflowout.NetflowOutput()\n        self.min = 1048576      # 1MB\n\n    def preModule(self):\n        if self.size <= 0:\n            self.warn(\n                \"Cannot have a size that's less than or equal to zero. (size: %s)\" % (self.size))\n            self.size = 1\n        self.min = 1048576 * self.size\n        self.debug(\"Input: %s,  Final size: %s bytes\" % (self.size, self.min))\n\n    def connectionHandler(self, conn):\n        if (conn.clientbytes + conn.serverbytes) >= self.min:\n            self.alert(**conn.info())\n\n\nif __name__ == '__main__':\n    dObj = DshellDecoder()\n    print dObj\nelse:\n    dObj = DshellDecoder()\n", "description": "Dshell is a network forensic analysis framework.", "file_name": "large-flows.py", "id": "c454a1e46c208e77b01e4568dc1d495b", "language": "Python", "project_name": "Dshell", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/USArmyResearchLab-Dshell/USArmyResearchLab-Dshell-5850adf/decoders/flows/large-flows.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:01:29Z", "url": "https://github.com/USArmyResearchLab/Dshell", "wiki": true}
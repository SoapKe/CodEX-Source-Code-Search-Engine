{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import ExtractorError\n\n\nclass Vbox7IE(InfoExtractor):\n    _VALID_URL = r\n    _GEO_COUNTRIES = ['BG']\n    _TESTS = [{\n        'url': 'http://vbox7.com/play:0946fff23c',\n        'md5': 'a60f9ab3a3a2f013ef9a967d5f7be5bf',\n        'info_dict': {\n            'id': '0946fff23c',\n            'ext': 'mp4',\n            'title': '\u0411\u043e\u0440\u0438\u0441\u043e\u0432: \u041f\u0440\u0438\u0442\u0435\u0441\u043d\u0435\u043d \u0441\u044a\u043c \u0437\u0430 \u0431\u044a\u0434\u0435\u0449\u0435\u0442\u043e \u043d\u0430 \u0411\u044a\u043b\u0433\u0430\u0440\u0438\u044f',\n            'description': '\u041f\u043e \u0434\u0443\u043c\u0438\u0442\u0435 \u043c\u0443 \u0435 \u043e\u043f\u0430\u0441\u043d\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u0442\u0430 \u043d\u0438 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0431\u044f\u0432\u0435\u043d\u0430 \u0437\u0430 \"\u0441\u0438\u0433\u0443\u0440\u043d\u0430\"',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1470982814,\n            'upload_date': '20160812',\n            'uploader': 'zdraveibulgaria',\n        },\n        'params': {\n            'proxy': '127.0.0.1:8118',\n        },\n    }, {\n        'url': 'http://vbox7.com/play:249bb972c2',\n        'md5': '99f65c0c9ef9b682b97313e052734c3f',\n        'info_dict': {\n            'id': '249bb972c2',\n            'ext': 'mp4',\n            'title': '\u0421\u043c\u044f\u0445! \u0427\u0443\u0434\u043e - \u0447\u0438\u0441\u0442 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0438 - \u0421\u043a\u0440\u0438\u0442\u0430 \u043a\u0430\u043c\u0435\u0440\u0430',\n        },\n        'skip': 'georestricted',\n    }, {\n        'url': 'http://vbox7.com/emb/external.php?vid=a240d20f9c&autoplay=1',\n        'only_matching': True,\n    }, {\n        'url': 'http://i49.vbox7.com/player/ext.swf?vid=0946fff23c&autoplay=1',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<iframe[^>]+src=(?P<q>[\"\\'])(?P<url>(?:https?:)?//vbox7\\.com/emb/external\\.php.+?)(?P=q)',\n            webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        response = self._download_json(\n            'https://www.vbox7.com/ajax/video/nextvideo.php?vid=%s' % video_id,\n            video_id)\n\n        if 'error' in response:\n            raise ExtractorError(\n                '%s said: %s' % (self.IE_NAME, response['error']), expected=True)\n\n        video = response['options']\n\n        title = video['title']\n        video_url = video['src']\n\n        if '/na.mp4' in video_url:\n            self.raise_geo_restricted(countries=self._GEO_COUNTRIES)\n\n        uploader = video.get('uploader')\n\n        webpage = self._download_webpage(\n            'http://vbox7.com/play:%s' % video_id, video_id, fatal=None)\n\n        info = {}\n\n        if webpage:\n            info = self._search_json_ld(\n                webpage.replace('\"/*@context\"', '\"@context\"'), video_id,\n                fatal=False)\n\n        info.update({\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'uploader': uploader,\n            'thumbnail': self._proto_relative_url(\n                info.get('thumbnail') or self._og_search_thumbnail(webpage),\n                'http:'),\n        })\n        return info\n", "comments": "(?x)\n                    https?://\n                        (?:[^/]+\\.)?vbox7\\.com/\n                        (?:\n                            play:|\n                            (?:\n                                emb/external\\.php|\n                                player/ext\\.swf\n                            )\\?.*?\\bvid=\n                        )\n                        (?P<id>[\\da-fA-F]+)\n                    \n \n# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import ExtractorError\n\n\nclass Vbox7IE(InfoExtractor):\n    _VALID_URL = r'''(?x)\n                    https?://\n                        (?:[^/]+\\.)?vbox7\\.com/\n                        (?:\n                            play:|\n                            (?:\n                                emb/external\\.php|\n                                player/ext\\.swf\n                            )\\?.*?\\bvid=\n                        )\n                        (?P<id>[\\da-fA-F]+)\n                    '''\n    _GEO_COUNTRIES = ['BG']\n    _TESTS = [{\n        'url': 'http://vbox7.com/play:0946fff23c',\n        'md5': 'a60f9ab3a3a2f013ef9a967d5f7be5bf',\n        'info_dict': {\n            'id': '0946fff23c',\n            'ext': 'mp4',\n            'title': '\u0411\u043e\u0440\u0438\u0441\u043e\u0432: \u041f\u0440\u0438\u0442\u0435\u0441\u043d\u0435\u043d \u0441\u044a\u043c \u0437\u0430 \u0431\u044a\u0434\u0435\u0449\u0435\u0442\u043e \u043d\u0430 \u0411\u044a\u043b\u0433\u0430\u0440\u0438\u044f',\n            'description': '\u041f\u043e \u0434\u0443\u043c\u0438\u0442\u0435 \u043c\u0443 \u0435 \u043e\u043f\u0430\u0441\u043d\u043e \u0441\u0442\u0440\u0430\u043d\u0430\u0442\u0430 \u043d\u0438 \u0434\u0430 \u0431\u044a\u0434\u0435 \u043e\u0431\u044f\u0432\u0435\u043d\u0430 \u0437\u0430 \"\u0441\u0438\u0433\u0443\u0440\u043d\u0430\"',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n            'timestamp': 1470982814,\n            'upload_date': '20160812',\n            'uploader': 'zdraveibulgaria',\n        },\n        'params': {\n            'proxy': '127.0.0.1:8118',\n        },\n    }, {\n        'url': 'http://vbox7.com/play:249bb972c2',\n        'md5': '99f65c0c9ef9b682b97313e052734c3f',\n        'info_dict': {\n            'id': '249bb972c2',\n            'ext': 'mp4',\n            'title': '\u0421\u043c\u044f\u0445! \u0427\u0443\u0434\u043e - \u0447\u0438\u0441\u0442 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0438 - \u0421\u043a\u0440\u0438\u0442\u0430 \u043a\u0430\u043c\u0435\u0440\u0430',\n        },\n        'skip': 'georestricted',\n    }, {\n        'url': 'http://vbox7.com/emb/external.php?vid=a240d20f9c&autoplay=1',\n        'only_matching': True,\n    }, {\n        'url': 'http://i49.vbox7.com/player/ext.swf?vid=0946fff23c&autoplay=1',\n        'only_matching': True,\n    }]\n\n    @staticmethod\n    def _extract_url(webpage):\n        mobj = re.search(\n            r'<iframe[^>]+src=(?P<q>[\"\\'])(?P<url>(?:https?:)?//vbox7\\.com/emb/external\\.php.+?)(?P=q)',\n            webpage)\n        if mobj:\n            return mobj.group('url')\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        response = self._download_json(\n            'https://www.vbox7.com/ajax/video/nextvideo.php?vid=%s' % video_id,\n            video_id)\n\n        if 'error' in response:\n            raise ExtractorError(\n                '%s said: %s' % (self.IE_NAME, response['error']), expected=True)\n\n        video = response['options']\n\n        title = video['title']\n        video_url = video['src']\n\n        if '/na.mp4' in video_url:\n            self.raise_geo_restricted(countries=self._GEO_COUNTRIES)\n\n        uploader = video.get('uploader')\n\n        webpage = self._download_webpage(\n            'http://vbox7.com/play:%s' % video_id, video_id, fatal=None)\n\n        info = {}\n\n        if webpage:\n            info = self._search_json_ld(\n                webpage.replace('\"/*@context\"', '\"@context\"'), video_id,\n                fatal=False)\n\n        info.update({\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'uploader': uploader,\n            'thumbnail': self._proto_relative_url(\n                info.get('thumbnail') or self._og_search_thumbnail(webpage),\n                'http:'),\n        })\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "vbox7.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/vbox7.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom django.core.urlresolvers import reverse\n\nfrom sentry.testutils import TestCase\n\n\nclass ReactPageViewTest(TestCase):\n    def test_superuser_can_load(self):\n        org = self.create_organization(owner=self.user)\n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(self.user)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 200\n        self.assertTemplateUsed(resp, 'sentry/bases/react.html')\n        assert resp.context['request']\n\n    def test_redirects_user_to_auth_without_membership(self):\n        owner = self.create_user('bar@example.com')\n        org = self.create_organization(owner=owner)\n        non_member = self.create_user('foo@example.com')\n\n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(non_member)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 302\n        assert resp['Location'] == 'http://testserver{}'.format(\n            reverse('sentry-auth-organization', args=[org.slug]),\n        )\n\n        \n        path = reverse('sentry-organization-home', args=['foobar'])\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 302\n        assert resp['Location'] != 'http://testserver{}'.format(\n            reverse('sentry-auth-organization', args=[org.slug]),\n        )\n\n        \n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(owner)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 200\n        self.assertTemplateUsed(resp, 'sentry/bases/react.html')\n        assert resp.context['request']\n", "comments": "  ensure dont redirect auth valid org    ensure dont redirect valid membership ", "content": "from __future__ import absolute_import\n\nfrom django.core.urlresolvers import reverse\n\nfrom sentry.testutils import TestCase\n\n\nclass ReactPageViewTest(TestCase):\n    def test_superuser_can_load(self):\n        org = self.create_organization(owner=self.user)\n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(self.user)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 200\n        self.assertTemplateUsed(resp, 'sentry/bases/react.html')\n        assert resp.context['request']\n\n    def test_redirects_user_to_auth_without_membership(self):\n        owner = self.create_user('bar@example.com')\n        org = self.create_organization(owner=owner)\n        non_member = self.create_user('foo@example.com')\n\n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(non_member)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 302\n        assert resp['Location'] == 'http://testserver{}'.format(\n            reverse('sentry-auth-organization', args=[org.slug]),\n        )\n\n        # ensure we dont redirect to auth if its not a valid org\n        path = reverse('sentry-organization-home', args=['foobar'])\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 302\n        assert resp['Location'] != 'http://testserver{}'.format(\n            reverse('sentry-auth-organization', args=[org.slug]),\n        )\n\n        # ensure we dont redirect with valid membership\n        path = reverse('sentry-organization-home', args=[org.slug])\n\n        self.login_as(owner)\n\n        resp = self.client.get(path)\n\n        assert resp.status_code == 200\n        self.assertTemplateUsed(resp, 'sentry/bases/react.html')\n        assert resp.context['request']\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_react_page.py", "id": "f3a6775fd78d2ec9e110022654a7bb27", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/web/frontend/test_react_page.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport os.path\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_unquote\nfrom ..utils import url_basename\n\n\nclass DropboxIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?dropbox[.]com/sh?/(?P<id>[a-zA-Z0-9]{15})/.*'\n    _TESTS = [\n        {\n            'url': 'https://www.dropbox.com/s/nelirfsxnmcfbfh/youtube-dl%20test%20video%20%27%C3%A4%22BaW_jenozKc.mp4?dl=0',\n            'info_dict': {\n                'id': 'nelirfsxnmcfbfh',\n                'ext': 'mp4',\n                'title': 'youtube-dl test video \\'\u00e4\"BaW_jenozKc'\n            }\n        }, {\n            'url': 'https://www.dropbox.com/sh/662glsejgzoj9sr/AAByil3FGH9KFNZ13e08eSa1a/Pregame%20Ceremony%20Program%20PA%2020140518.m4v',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        fn = compat_urllib_parse_unquote(url_basename(url))\n        title = os.path.splitext(fn)[0]\n        video_url = re.sub(r'[?&]dl=0', '', url)\n        video_url += ('?' if '?' not in video_url else '&') + 'dl=1'\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport os.path\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_unquote\nfrom ..utils import url_basename\n\n\nclass DropboxIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?dropbox[.]com/sh?/(?P<id>[a-zA-Z0-9]{15})/.*'\n    _TESTS = [\n        {\n            'url': 'https://www.dropbox.com/s/nelirfsxnmcfbfh/youtube-dl%20test%20video%20%27%C3%A4%22BaW_jenozKc.mp4?dl=0',\n            'info_dict': {\n                'id': 'nelirfsxnmcfbfh',\n                'ext': 'mp4',\n                'title': 'youtube-dl test video \\'\u00e4\"BaW_jenozKc'\n            }\n        }, {\n            'url': 'https://www.dropbox.com/sh/662glsejgzoj9sr/AAByil3FGH9KFNZ13e08eSa1a/Pregame%20Ceremony%20Program%20PA%2020140518.m4v',\n            'only_matching': True,\n        },\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        fn = compat_urllib_parse_unquote(url_basename(url))\n        title = os.path.splitext(fn)[0]\n        video_url = re.sub(r'[?&]dl=0', '', url)\n        video_url += ('?' if '?' not in video_url else '&') + 'dl=1'\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "dropbox.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/dropbox.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
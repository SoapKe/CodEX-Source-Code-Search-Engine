{"author": "getsentry", "code": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nfrom sentry.models import OrganizationOption, ProjectKey\nfrom sentry.quotas.base import Quota\nfrom sentry.testutils import TestCase\n\n\nclass QuotaTest(TestCase):\n    def setUp(self):\n        self.backend = Quota()\n\n    def test_get_project_quota(self):\n        org = self.create_organization()\n        project = self.create_project(organization=org)\n\n        with self.settings(SENTRY_DEFAULT_MAX_EVENTS_PER_MINUTE=0):\n            with self.options({'system.rate-limit': 0}):\n                assert self.backend.get_project_quota(project) == (0, 60)\n\n            OrganizationOption.objects.set_value(\n                org,\n                'sentry:project-rate-limit',\n                80,\n            )\n\n            with self.options({'system.rate-limit': 100}):\n                assert self.backend.get_project_quota(project) == (80, 60)\n\n            with self.options({'system.rate-limit': 0}):\n                assert self.backend.get_project_quota(project) == (0, 60)\n\n    def test_get_key_quota(self):\n        key = ProjectKey.objects.create(\n            project=self.project, rate_limit_window=5, rate_limit_count=60\n        )\n        assert self.backend.get_key_quota(key) == (60, 5)\n\n        key = ProjectKey.objects.create(\n            project=self.project, rate_limit_window=None, rate_limit_count=None\n        )\n        assert self.backend.get_key_quota(key) == (0, 0)\n", "comments": "      coding  utf 8     ", "content": "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import\n\nfrom sentry.models import OrganizationOption, ProjectKey\nfrom sentry.quotas.base import Quota\nfrom sentry.testutils import TestCase\n\n\nclass QuotaTest(TestCase):\n    def setUp(self):\n        self.backend = Quota()\n\n    def test_get_project_quota(self):\n        org = self.create_organization()\n        project = self.create_project(organization=org)\n\n        with self.settings(SENTRY_DEFAULT_MAX_EVENTS_PER_MINUTE=0):\n            with self.options({'system.rate-limit': 0}):\n                assert self.backend.get_project_quota(project) == (0, 60)\n\n            OrganizationOption.objects.set_value(\n                org,\n                'sentry:project-rate-limit',\n                80,\n            )\n\n            with self.options({'system.rate-limit': 100}):\n                assert self.backend.get_project_quota(project) == (80, 60)\n\n            with self.options({'system.rate-limit': 0}):\n                assert self.backend.get_project_quota(project) == (0, 60)\n\n    def test_get_key_quota(self):\n        key = ProjectKey.objects.create(\n            project=self.project, rate_limit_window=5, rate_limit_count=60\n        )\n        assert self.backend.get_key_quota(key) == (60, 5)\n\n        key = ProjectKey.objects.create(\n            project=self.project, rate_limit_window=None, rate_limit_count=None\n        )\n        assert self.backend.get_key_quota(key) == (0, 0)\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_base.py", "id": "9688e27cad1ce5fc2a23e0db3153dda9", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/sentry/quotas/test_base.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
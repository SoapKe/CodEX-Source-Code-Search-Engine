{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteLivechat(http.Controller):\n\n    @http.route('/livechat/', type='http', auth=\"public\", website=True)\n    def channel_list(self, **kw):\n        \n        channels = request.env['im_livechat.channel'].search([('website_published', '=', True)])\n        values = {\n            'channels': channels\n        }\n        return request.render('website_livechat.channel_list_page', values)\n\n\n    @http.route('/livechat/channel/<model(\"im_livechat.channel\"):channel>', type='http', auth='public', website=True)\n    def channel_rating(self, channel, **kw):\n        \n        ratings = request.env['rating.rating'].search([('res_model', '=', 'mail.channel'), ('res_id', 'in', channel.sudo().channel_ids.ids)], order='create_date desc', limit=100)\n        repartition = channel.sudo().channel_ids.rating_get_grades()\n\n        \n        percentage = dict.fromkeys(['great', 'okay', 'bad'], 0)\n        for grade in repartition:\n            percentage[grade] = repartition[grade] * 100 / sum(repartition.values()) if sum(repartition.values()) else 0\n\n        \n        values = {\n            'channel': channel,\n            'ratings': ratings,\n            'team': channel.sudo().user_ids,\n            'percentage': percentage\n        }\n        return request.render(\"website_livechat.channel_page\", values)\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     display list channel    get last 100 ratings repartition per grade    compute percentage    value dict render template ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteLivechat(http.Controller):\n\n    @http.route('/livechat/', type='http', auth=\"public\", website=True)\n    def channel_list(self, **kw):\n        # display the list of the channel\n        channels = request.env['im_livechat.channel'].search([('website_published', '=', True)])\n        values = {\n            'channels': channels\n        }\n        return request.render('website_livechat.channel_list_page', values)\n\n\n    @http.route('/livechat/channel/<model(\"im_livechat.channel\"):channel>', type='http', auth='public', website=True)\n    def channel_rating(self, channel, **kw):\n        # get the last 100 ratings and the repartition per grade\n        ratings = request.env['rating.rating'].search([('res_model', '=', 'mail.channel'), ('res_id', 'in', channel.sudo().channel_ids.ids)], order='create_date desc', limit=100)\n        repartition = channel.sudo().channel_ids.rating_get_grades()\n\n        # compute percentage\n        percentage = dict.fromkeys(['great', 'okay', 'bad'], 0)\n        for grade in repartition:\n            percentage[grade] = repartition[grade] * 100 / sum(repartition.values()) if sum(repartition.values()) else 0\n\n        # the value dict to render the template\n        values = {\n            'channel': channel,\n            'ratings': ratings,\n            'team': channel.sudo().user_ids,\n            'percentage': percentage\n        }\n        return request.render(\"website_livechat.channel_page\", values)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "d56b121eca5346b4a3a6934eb30296fa", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_livechat/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
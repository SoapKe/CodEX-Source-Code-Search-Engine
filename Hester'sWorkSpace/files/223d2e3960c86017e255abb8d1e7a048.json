{"author": "keon", "code": "class ZigZagIterator:\n    def __init__(self, v1, v2):\n        \"\"\"\n        Initialize your data structure here.\n        :type v1: List[int]\n        :type v2: List[int]\n        \"\"\"\n        self.queue=[_ for _ in (v1,v2) if _]\n        print(self.queue)\n\n    def next(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        v=self.queue.pop(0)\n        ret=v.pop(0)\n        if v: self.queue.append(v)\n        return ret\n\n    def has_next(self):\n        \"\"\"\n        :rtype: bool\n        \"\"\"\n        if self.queue: return True\n        return False\n\nl1 = [1, 2]\nl2 = [3, 4, 5, 6]\nit = ZigZagIterator(l1, l2)\nwhile it.has_next():\n    print(it.next())\n", "comments": "            initialize data structure           type v1  list int           type v2  list int                      self queue      (v1 v2)            print(self queue)      def next(self)                       rtype  int                     v self queue pop(0)         ret v pop(0)         v  self queue append(v)         return ret      def next(self)                       rtype  bool             ", "content": "class ZigZagIterator:\n    def __init__(self, v1, v2):\n        \"\"\"\n        Initialize your data structure here.\n        :type v1: List[int]\n        :type v2: List[int]\n        \"\"\"\n        self.queue=[_ for _ in (v1,v2) if _]\n        print(self.queue)\n\n    def next(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        v=self.queue.pop(0)\n        ret=v.pop(0)\n        if v: self.queue.append(v)\n        return ret\n\n    def has_next(self):\n        \"\"\"\n        :rtype: bool\n        \"\"\"\n        if self.queue: return True\n        return False\n\nl1 = [1, 2]\nl2 = [3, 4, 5, 6]\nit = ZigZagIterator(l1, l2)\nwhile it.has_next():\n    print(it.next())\n", "description": "Minimal examples of data structures and algorithms in Python", "file_name": "zigzagiterator.py", "id": "223d2e3960c86017e255abb8d1e7a048", "language": "Python", "project_name": "algorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/keon-algorithms/keon-algorithms-abe4cb1/queues/zigzagiterator.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:56:36Z", "url": "https://github.com/keon/algorithms", "wiki": true}
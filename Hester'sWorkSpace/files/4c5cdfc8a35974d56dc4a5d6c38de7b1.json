{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import api, fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\n\nclass PayslipReport(models.Model):\n    _name = \"payslip.report\"\n    _description = \"Payslip Analysis\"\n    _auto = False\n\n    name = fields.Char(readonly=True)\n    date_from = fields.Date(string='Date From', readonly=True)\n    date_to = fields.Date(string='Date To', readonly=True)\n    year = fields.Char(size=4, readonly=True)\n    month = fields.Selection([('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'),\n        ('10', 'October'), ('11', 'November'), ('12', 'December')], readonly=True)\n    day = fields.Char(size=128, readonly=True)\n    state = fields.Selection([\n        ('draft', 'Draft'),\n        ('done', 'Done'),\n        ('cancel', 'Rejected'),\n    ], string='Status', readonly=True)\n    employee_id = fields.Many2one('hr.employee', string='Employee', readonly=True)\n    nbr = fields.Integer(string='# Payslip lines', readonly=True)\n    number = fields.Char(readonly=True)\n    struct_id = fields.Many2one('hr.payroll.structure', string='Structure', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n    paid = fields.Boolean(string='Made Payment Order ? ', readonly=True)\n    total = fields.Float(readonly=True)\n    category_id = fields.Many2one('hr.salary.rule.category', string='Category', readonly=True)\n\n    @api.model_cr\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view payslip_report as (\n                select\n                    min(l.id) as id,\n                    l.name,\n                    p.struct_id,\n                    p.state,\n                    p.date_from,\n                    p.date_to,\n                    p.number,\n                    p.company_id,\n                    p.paid,\n                    l.category_id,\n                    l.employee_id,\n                    sum(l.total) as total,\n                    to_char(p.date_from, 'YYYY') as year,\n                    to_char(p.date_from, 'MM') as month,\n                    to_char(p.date_from, 'YYYY-MM-DD') as day,\n                    to_char(p.date_to, 'YYYY') as to_year,\n                    to_char(p.date_to, 'MM') as to_month,\n                    to_char(p.date_to, 'YYYY-MM-DD') as to_day,\n                    1 AS nbr\n                from\n                    hr_payslip as p\n                    left join hr_payslip_line as l on (p.id=l.slip_id)\n                where\n                    l.employee_id IS NOT NULL\n                group by\n                    p.number,l.name,p.date_from,p.date_to,p.state,p.company_id,p.paid,\n                    l.employee_id,p.struct_id,l.category_id\n            )\n        \"\"\")\n", "comments": "                create replace view payslip report (                 select                     min(l id) id                      l name                      p struct id                      p state                      p date                      p date                      p number                      p company id                      p paid                      l category id                      l employee id                      sum(l total) total                      char(p date   yyyy ) year                      char(p date   mm ) month                      char(p date   yyyy mm dd ) day                      char(p date   yyyy ) year                      char(p date   mm ) month                      char(p date   yyyy mm dd ) day                      1 as nbr                                     hr payslip p                     left join hr payslip line l (p id l slip id)                                     l employee id is not null                 group                     p number l name p date p date p state p company id p paid                      l employee id p struct id l category id             )                    coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import api, fields, models\nfrom odoo.tools.sql import drop_view_if_exists\n\n\nclass PayslipReport(models.Model):\n    _name = \"payslip.report\"\n    _description = \"Payslip Analysis\"\n    _auto = False\n\n    name = fields.Char(readonly=True)\n    date_from = fields.Date(string='Date From', readonly=True)\n    date_to = fields.Date(string='Date To', readonly=True)\n    year = fields.Char(size=4, readonly=True)\n    month = fields.Selection([('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'),\n        ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'),\n        ('10', 'October'), ('11', 'November'), ('12', 'December')], readonly=True)\n    day = fields.Char(size=128, readonly=True)\n    state = fields.Selection([\n        ('draft', 'Draft'),\n        ('done', 'Done'),\n        ('cancel', 'Rejected'),\n    ], string='Status', readonly=True)\n    employee_id = fields.Many2one('hr.employee', string='Employee', readonly=True)\n    nbr = fields.Integer(string='# Payslip lines', readonly=True)\n    number = fields.Char(readonly=True)\n    struct_id = fields.Many2one('hr.payroll.structure', string='Structure', readonly=True)\n    company_id = fields.Many2one('res.company', string='Company', readonly=True)\n    paid = fields.Boolean(string='Made Payment Order ? ', readonly=True)\n    total = fields.Float(readonly=True)\n    category_id = fields.Many2one('hr.salary.rule.category', string='Category', readonly=True)\n\n    @api.model_cr\n    def init(self):\n        drop_view_if_exists(self.env.cr, self._table)\n        self.env.cr.execute(\"\"\"\n            create or replace view payslip_report as (\n                select\n                    min(l.id) as id,\n                    l.name,\n                    p.struct_id,\n                    p.state,\n                    p.date_from,\n                    p.date_to,\n                    p.number,\n                    p.company_id,\n                    p.paid,\n                    l.category_id,\n                    l.employee_id,\n                    sum(l.total) as total,\n                    to_char(p.date_from, 'YYYY') as year,\n                    to_char(p.date_from, 'MM') as month,\n                    to_char(p.date_from, 'YYYY-MM-DD') as day,\n                    to_char(p.date_to, 'YYYY') as to_year,\n                    to_char(p.date_to, 'MM') as to_month,\n                    to_char(p.date_to, 'YYYY-MM-DD') as to_day,\n                    1 AS nbr\n                from\n                    hr_payslip as p\n                    left join hr_payslip_line as l on (p.id=l.slip_id)\n                where\n                    l.employee_id IS NOT NULL\n                group by\n                    p.number,l.name,p.date_from,p.date_to,p.state,p.company_id,p.paid,\n                    l.employee_id,p.struct_id,l.category_id\n            )\n        \"\"\")\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "payslip_report.py", "id": "4c5cdfc8a35974d56dc4a5d6c38de7b1", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_in_hr_payroll/report/payslip_report.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
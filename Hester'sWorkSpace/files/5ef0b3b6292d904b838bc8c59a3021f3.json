{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import fields, models, tools\n\n\nclass Alias(models.Model):\n    _inherit = 'mail.alias'\n\n    alias_contact = fields.Selection(selection_add=[('employees', 'Authenticated Employees')])\n\n\nclass MailAlias(models.AbstractModel):\n    _inherit = 'mail.alias.mixin'\n\n    def _alias_check_contact_on_record(self, record, message, message_dict, alias):\n        if alias.alias_contact == 'employees' and record.ids:\n            email_from = tools.decode_message_header(message, 'From')\n            email_address = tools.email_split(email_from)[0]\n            employee = self.env['hr.employee'].search([('work_email', 'ilike', email_address)], limit=1)\n            if not employee:\n                employee = self.env['hr.employee'].search([('user_id.email', 'ilike', email_address)], limit=1)\n            if not employee:\n                return {\n                    'error_message': 'restricted to employees',\n                    'error_template': self.env.ref('hr.mail_template_data_unknown_employee_email_address').body_html,\n                }\n            return True\n        return super(MailAlias, self)._alias_check_contact_on_record(record, message, message_dict, alias)\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import fields, models, tools\n\n\nclass Alias(models.Model):\n    _inherit = 'mail.alias'\n\n    alias_contact = fields.Selection(selection_add=[('employees', 'Authenticated Employees')])\n\n\nclass MailAlias(models.AbstractModel):\n    _inherit = 'mail.alias.mixin'\n\n    def _alias_check_contact_on_record(self, record, message, message_dict, alias):\n        if alias.alias_contact == 'employees' and record.ids:\n            email_from = tools.decode_message_header(message, 'From')\n            email_address = tools.email_split(email_from)[0]\n            employee = self.env['hr.employee'].search([('work_email', 'ilike', email_address)], limit=1)\n            if not employee:\n                employee = self.env['hr.employee'].search([('user_id.email', 'ilike', email_address)], limit=1)\n            if not employee:\n                return {\n                    'error_message': 'restricted to employees',\n                    'error_template': self.env.ref('hr.mail_template_data_unknown_employee_email_address').body_html,\n                }\n            return True\n        return super(MailAlias, self)._alias_check_contact_on_record(record, message, message_dict, alias)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "mail_alias.py", "id": "5ef0b3b6292d904b838bc8c59a3021f3", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hr/models/mail_alias.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
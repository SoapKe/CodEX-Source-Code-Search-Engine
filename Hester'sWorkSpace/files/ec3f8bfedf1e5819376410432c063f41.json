{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .brightcove import BrightcoveNewIE\n\n\nclass TVANouvellesIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tvanouvelles\\.ca/videos/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.tvanouvelles.ca/videos/5117035533001',\n        'info_dict': {\n            'id': '5117035533001',\n            'ext': 'mp4',\n            'title': 'L\u2019industrie du taxi d\u00e9nonce l\u2019entente entre Qu\u00e9bec et Uber: explications',\n            'description': 'md5:479653b7c8cf115747bf5118066bd8b3',\n            'uploader_id': '1741764581',\n            'timestamp': 1473352030,\n            'upload_date': '20160908',\n        },\n        'add_ie': ['BrightcoveNew'],\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/1741764581/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        brightcove_id = self._match_id(url)\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id,\n            BrightcoveNewIE.ie_key(), brightcove_id)\n\n\nclass TVANouvellesArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tvanouvelles\\.ca/(?:[^/]+/)+(?P<id>[^/?\n    _TEST = {\n        'url': 'http://www.tvanouvelles.ca/2016/11/17/des-policiers-qui-ont-la-meche-un-peu-courte',\n        'info_dict': {\n            'id': 'des-policiers-qui-ont-la-meche-un-peu-courte',\n            'title': 'Des policiers qui ont \u00abla m\u00e8che un peu courte\u00bb?',\n            'description': 'md5:92d363c8eb0f0f030de9a4a84a90a3a0',\n        },\n        'playlist_mincount': 4,\n    }\n\n    @classmethod\n    def suitable(cls, url):\n        return False if TVANouvellesIE.suitable(url) else super(TVANouvellesArticleIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        entries = [\n            self.url_result(\n                'http://www.tvanouvelles.ca/videos/%s' % mobj.group('id'),\n                ie=TVANouvellesIE.ie_key(), video_id=mobj.group('id'))\n            for mobj in re.finditer(\n                r'data-video-id=([\"\\'])?(?P<id>\\d+)', webpage)]\n\n        title = self._og_search_title(webpage, fatal=False)\n        description = self._og_search_description(webpage)\n\n        return self.playlist_result(entries, display_id, title, description)\n", "comments": "# coding: utf-8\n#&]+)'\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom .brightcove import BrightcoveNewIE\n\n\nclass TVANouvellesIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tvanouvelles\\.ca/videos/(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.tvanouvelles.ca/videos/5117035533001',\n        'info_dict': {\n            'id': '5117035533001',\n            'ext': 'mp4',\n            'title': 'L\u2019industrie du taxi d\u00e9nonce l\u2019entente entre Qu\u00e9bec et Uber: explications',\n            'description': 'md5:479653b7c8cf115747bf5118066bd8b3',\n            'uploader_id': '1741764581',\n            'timestamp': 1473352030,\n            'upload_date': '20160908',\n        },\n        'add_ie': ['BrightcoveNew'],\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/1741764581/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        brightcove_id = self._match_id(url)\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id,\n            BrightcoveNewIE.ie_key(), brightcove_id)\n\n\nclass TVANouvellesArticleIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tvanouvelles\\.ca/(?:[^/]+/)+(?P<id>[^/?#&]+)'\n    _TEST = {\n        'url': 'http://www.tvanouvelles.ca/2016/11/17/des-policiers-qui-ont-la-meche-un-peu-courte',\n        'info_dict': {\n            'id': 'des-policiers-qui-ont-la-meche-un-peu-courte',\n            'title': 'Des policiers qui ont \u00abla m\u00e8che un peu courte\u00bb?',\n            'description': 'md5:92d363c8eb0f0f030de9a4a84a90a3a0',\n        },\n        'playlist_mincount': 4,\n    }\n\n    @classmethod\n    def suitable(cls, url):\n        return False if TVANouvellesIE.suitable(url) else super(TVANouvellesArticleIE, cls).suitable(url)\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, display_id)\n\n        entries = [\n            self.url_result(\n                'http://www.tvanouvelles.ca/videos/%s' % mobj.group('id'),\n                ie=TVANouvellesIE.ie_key(), video_id=mobj.group('id'))\n            for mobj in re.finditer(\n                r'data-video-id=([\"\\'])?(?P<id>\\d+)', webpage)]\n\n        title = self._og_search_title(webpage, fatal=False)\n        description = self._og_search_description(webpage)\n\n        return self.playlist_result(entries, display_id, title, description)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tvanouvelles.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tvanouvelles.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
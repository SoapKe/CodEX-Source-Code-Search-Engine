{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import http\nfrom odoo.exceptions import AccessError\nfrom odoo.http import request\n\n\nclass HrOrgChartController(http.Controller):\n    _managers_level = 2  \n\n    def _prepare_employee_data(self, employee):\n        job = employee.sudo().job_id\n        return dict(\n            id=employee.id,\n            name=employee.name,\n            link='/mail/view?model=hr.employee&res_id=%s' % employee.id,\n            job_id=job.id,\n            job_name=job.name or '',\n            direct_sub_count=len(employee.child_ids),\n            indirect_sub_count=employee.child_all_count,\n        )\n\n    @http.route('/hr/get_org_chart', type='json', auth='user')\n    def get_org_chart(self, employee_id):\n        if not employee_id:  \n            return {}\n        employee_id = int(employee_id)\n\n        Employee = request.env['hr.employee']\n        \n        if not Employee.check_access_rights('read', raise_exception=False):\n            return {}\n        try:\n            Employee.browse(employee_id).check_access_rule('read')\n        except AccessError:\n            return {}\n        else:\n            employee = Employee.browse(employee_id)\n\n        \n        ancestors, current = request.env['hr.employee'], employee\n        while current.parent_id:\n            ancestors += current.parent_id\n            current = current.parent_id\n\n        values = dict(\n            self=self._prepare_employee_data(employee),\n            managers=[self._prepare_employee_data(ancestor) for idx, ancestor in enumerate(ancestors) if idx < self._managers_level],\n            managers_more=len(ancestors) > self._managers_level,\n            children=[self._prepare_employee_data(child) for child in employee.child_ids],\n        )\n        values['managers'].reverse()\n        return values\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details     fp request    check    check raise    compute employee data org chart ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import http\nfrom odoo.exceptions import AccessError\nfrom odoo.http import request\n\n\nclass HrOrgChartController(http.Controller):\n    _managers_level = 2  # FP request\n\n    def _prepare_employee_data(self, employee):\n        job = employee.sudo().job_id\n        return dict(\n            id=employee.id,\n            name=employee.name,\n            link='/mail/view?model=hr.employee&res_id=%s' % employee.id,\n            job_id=job.id,\n            job_name=job.name or '',\n            direct_sub_count=len(employee.child_ids),\n            indirect_sub_count=employee.child_all_count,\n        )\n\n    @http.route('/hr/get_org_chart', type='json', auth='user')\n    def get_org_chart(self, employee_id):\n        if not employee_id:  # to check\n            return {}\n        employee_id = int(employee_id)\n\n        Employee = request.env['hr.employee']\n        # check and raise\n        if not Employee.check_access_rights('read', raise_exception=False):\n            return {}\n        try:\n            Employee.browse(employee_id).check_access_rule('read')\n        except AccessError:\n            return {}\n        else:\n            employee = Employee.browse(employee_id)\n\n        # compute employee data for org chart\n        ancestors, current = request.env['hr.employee'], employee\n        while current.parent_id:\n            ancestors += current.parent_id\n            current = current.parent_id\n\n        values = dict(\n            self=self._prepare_employee_data(employee),\n            managers=[self._prepare_employee_data(ancestor) for idx, ancestor in enumerate(ancestors) if idx < self._managers_level],\n            managers_more=len(ancestors) > self._managers_level,\n            children=[self._prepare_employee_data(child) for child in employee.child_ids],\n        )\n        values['managers'].reverse()\n        return values\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "hr_org_chart.py", "id": "8b7e64667b16734f32056a23d0b49b4a", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/hr_org_chart/controllers/hr_org_chart.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
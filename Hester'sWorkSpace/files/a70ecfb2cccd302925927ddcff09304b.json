{"author": "nvbn", "code": "\nfrom thefuck.utils import memoize, get_alias\n\ntarget_layout = ]\n\n\n@memoize\ndef _get_matched_layout(command):\n    \n    \n    cmd = command.script.split(' ')\n    for source_layout in source_layouts:\n        if all([ch in source_layout or ch in '-_' for ch in cmd[0]]):\n            return source_layout\n\n\ndef _switch(ch, layout):\n    if ch in layout:\n        return target_layout[layout.index(ch)]\n    else:\n        return ch\n\n\ndef _switch_command(command, layout):\n    return ''.join(_switch(ch, layout) for ch in command.script)\n\n\ndef match(command):\n    if 'not found' not in command.output:\n        return False\n    matched_layout = _get_matched_layout(command)\n    return (matched_layout and\n            _switch_command(command, matched_layout) != get_alias())\n\n\ndef get_new_command(command):\n    matched_layout = _get_matched_layout(command)\n    return _switch_command(command, matched_layout)\n", "comments": "qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?'''\n\nsource_layouts = [u'''\u0439\u0446\u0443\u043a\u0435\u043d\u0433\u0448\u0449\u0437\u0445\u044a\u0444\u044b\u0432\u0430\u043f\u0440\u043e\u043b\u0434\u0436\u044d\u044f\u0447\u0441\u043c\u0438\u0442\u044c\u0431\u044e.\u0419\u0426\u0423\u041a\u0415\u041d\u0413\u0428\u0429\u0417\u0425\u042a\u0424\u042b\u0412\u0410\u041f\u0420\u041e\u041b\u0414\u0416\u042d\u042f\u0427\u0421\u041c\u0418\u0422\u042c\u0411\u042e,''',\n                  u'''\u0636\u0635\u062b\u0642\u0641\u063a\u0639\u0647\u062e\u062d\u062c\u0686\u0634\u0633\u06cc\u0628\u0644\u0627\u062a\u0646\u0645\u06a9\u06af\u0638\u0637\u0632\u0631\u0630\u062f\u067e\u0648./\u0652\u064c\u064d\u064b\u064f\u0650\u064e\u0651][}{\u0624\u0626\u064a\u0625\u0623\u0622\u0629\u00bb\u00ab:\u061b\u0643\u0653\u0698\u0670\u200c\u0654\u0621><\u061f''',\n                  u''';\u03c2\u03b5\u03c1\u03c4\u03c5\u03b8\u03b9\u03bf\u03c0[]\u03b1\u03c3\u03b4\u03c6\u03b3\u03b7\u03be\u03ba\u03bb\u0384\u03b6\u03c7\u03c8\u03c9\u03b2\u03bd\u03bc,./:\u0385\u0395\u03a1\u03a4\u03a5\u0398\u0399\u039f\u03a0{}\u0391\u03a3\u0394\u03a6\u0393\u0397\u039e\u039a\u039b\u00a8\"\u0396\u03a7\u03a8\u03a9\u0392\u039d\u039c<>?''',\n                  u'''/'\u05e7\u05e8\u05d0\u05d8\u05d5\u05df\u05dd\u05e4][\u05e9\u05d3\u05d2\u05db\u05e2\u05d9\u05d7\u05dc\u05da\u05e3,\u05d6\u05e1\u05d1\u05d4\u05e0\u05de\u05e6\u05ea\u05e5.QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?\n?\n# -*- encoding: utf-8 -*-\n# don't use command.split_script here because a layout mismatch will likely\n# result in a non-splitable sript as per shlex\n", "content": "# -*- encoding: utf-8 -*-\nfrom thefuck.utils import memoize, get_alias\n\ntarget_layout = '''qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?'''\n\nsource_layouts = [u'''\u0439\u0446\u0443\u043a\u0435\u043d\u0433\u0448\u0449\u0437\u0445\u044a\u0444\u044b\u0432\u0430\u043f\u0440\u043e\u043b\u0434\u0436\u044d\u044f\u0447\u0441\u043c\u0438\u0442\u044c\u0431\u044e.\u0419\u0426\u0423\u041a\u0415\u041d\u0413\u0428\u0429\u0417\u0425\u042a\u0424\u042b\u0412\u0410\u041f\u0420\u041e\u041b\u0414\u0416\u042d\u042f\u0427\u0421\u041c\u0418\u0422\u042c\u0411\u042e,''',\n                  u'''\u0636\u0635\u062b\u0642\u0641\u063a\u0639\u0647\u062e\u062d\u062c\u0686\u0634\u0633\u06cc\u0628\u0644\u0627\u062a\u0646\u0645\u06a9\u06af\u0638\u0637\u0632\u0631\u0630\u062f\u067e\u0648./\u0652\u064c\u064d\u064b\u064f\u0650\u064e\u0651][}{\u0624\u0626\u064a\u0625\u0623\u0622\u0629\u00bb\u00ab:\u061b\u0643\u0653\u0698\u0670\u200c\u0654\u0621><\u061f''',\n                  u''';\u03c2\u03b5\u03c1\u03c4\u03c5\u03b8\u03b9\u03bf\u03c0[]\u03b1\u03c3\u03b4\u03c6\u03b3\u03b7\u03be\u03ba\u03bb\u0384\u03b6\u03c7\u03c8\u03c9\u03b2\u03bd\u03bc,./:\u0385\u0395\u03a1\u03a4\u03a5\u0398\u0399\u039f\u03a0{}\u0391\u03a3\u0394\u03a6\u0393\u0397\u039e\u039a\u039b\u00a8\"\u0396\u03a7\u03a8\u03a9\u0392\u039d\u039c<>?''',\n                  u'''/'\u05e7\u05e8\u05d0\u05d8\u05d5\u05df\u05dd\u05e4][\u05e9\u05d3\u05d2\u05db\u05e2\u05d9\u05d7\u05dc\u05da\u05e3,\u05d6\u05e1\u05d1\u05d4\u05e0\u05de\u05e6\u05ea\u05e5.QWERTYUIOP{}ASDFGHJKL:\"ZXCVBNM<>?''']\n\n\n@memoize\ndef _get_matched_layout(command):\n    # don't use command.split_script here because a layout mismatch will likely\n    # result in a non-splitable sript as per shlex\n    cmd = command.script.split(' ')\n    for source_layout in source_layouts:\n        if all([ch in source_layout or ch in '-_' for ch in cmd[0]]):\n            return source_layout\n\n\ndef _switch(ch, layout):\n    if ch in layout:\n        return target_layout[layout.index(ch)]\n    else:\n        return ch\n\n\ndef _switch_command(command, layout):\n    return ''.join(_switch(ch, layout) for ch in command.script)\n\n\ndef match(command):\n    if 'not found' not in command.output:\n        return False\n    matched_layout = _get_matched_layout(command)\n    return (matched_layout and\n            _switch_command(command, matched_layout) != get_alias())\n\n\ndef get_new_command(command):\n    matched_layout = _get_matched_layout(command)\n    return _switch_command(command, matched_layout)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "switch_lang.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/switch_lang.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
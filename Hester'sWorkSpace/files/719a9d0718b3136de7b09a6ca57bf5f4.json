{"author": "tgalal", "code": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom .protocolentities import ImageDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import AudioDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import VideoDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import LocationMediaMessageProtocolEntity\nfrom .protocolentities import VCardMediaMessageProtocolEntity\nfrom .protocolentities import RequestUploadIqProtocolEntity, ResultRequestUploadIqProtocolEntity\nfrom yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity, ErrorIqProtocolEntity\n\nclass YowMediaProtocolLayer(YowProtocolLayer):\n\n    \n\n    def __init__(self):\n        handleMap = {\n            \"message\": (self.recvMessageStanza, self.sendMessageEntity),\n            \"iq\": (self.recvIq, self.sendIq)\n        }\n        super(YowMediaProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Media Layer\"\n\n    # def onEvent(self, yowLayerEvent):\n    #     if yowLayerEvent.getArg(self.__class__.EVENT_REQUEST_UPLOAD):\n    #         fpath = yowLayerEvent.getArg(\"file\")\n    #         _type = yowLayerEvent.getArg(\"type\")\n    \n    #         entity = RequestUploadIqProtocolEntity(_type, filePath=fpath)\n    #         self._sendIq(entity, self.onRequestUploadSuccess, self.onRequestUploadError)\n\n\n    def sendMessageEntity(self, entity):\n        if entity.getType() == \"media\":\n            self.entityToLower(entity)\n\n    def recvMessageStanza(self, node):\n        if node.getAttributeValue(\"type\") == \"media\":\n            mediaNode = node.getChild(\"media\")\n            if mediaNode.getAttributeValue(\"type\") == \"image\":\n                entity = ImageDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"audio\":\n                entity = AudioDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"video\":\n                entity = VideoDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"location\":\n                entity = LocationMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"vcard\":\n                entity = VCardMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n\n    def sendIq(self, entity):\n        \"\"\"\n        :type entity: IqProtocolEntity\n        \"\"\"\n        if entity.getType() == IqProtocolEntity.TYPE_SET and entity.getXmlns() == \"w:m\":\n            \n            self._sendIq(entity, self.onRequestUploadSuccess, self.onRequestUploadError)\n\n    def recvIq(self, node):\n        \"\"\"\n        :type node: ProtocolTreeNode\n        \"\"\"\n\n    def onRequestUploadSuccess(self, resultNode, requestUploadEntity):\n        self.toUpper(ResultRequestUploadIqProtocolEntity.fromProtocolTreeNode(resultNode))\n\n    def onRequestUploadError(self, errorNode, requestUploadEntity):\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(errorNode))\n", "comments": "             type entity  iqprotocolentity                     entity gettype()    iqprotocolentity type set entity getxmlns()     w                media upload              self  sendiq(entity  self onrequestuploadsuccess  self onrequestuploaderror)      def recviq(self  node)                       type node  protocoltreenode                event request upload    org openwhatsapp org yowsup event protocol media request upload     def onevent(self  yowlayerevent)         yowlayerevent getarg(self   class   event request upload)             fpath   yowlayerevent getarg( file )             type   yowlayerevent getarg( type )            assert fpath  type   must specify  file   type  event request upload args             entity   requestuploadiqprotocolentity( type  filepath fpath)            self  sendiq(entity  self onrequestuploadsuccess  self onrequestuploaderror)   media upload  ", "content": "from yowsup.layers import YowLayer, YowLayerEvent, YowProtocolLayer\nfrom .protocolentities import ImageDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import AudioDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import VideoDownloadableMediaMessageProtocolEntity\nfrom .protocolentities import LocationMediaMessageProtocolEntity\nfrom .protocolentities import VCardMediaMessageProtocolEntity\nfrom .protocolentities import RequestUploadIqProtocolEntity, ResultRequestUploadIqProtocolEntity\nfrom yowsup.layers.protocol_iq.protocolentities import IqProtocolEntity, ErrorIqProtocolEntity\n\nclass YowMediaProtocolLayer(YowProtocolLayer):\n\n    # EVENT_REQUEST_UPLOAD = \"org.openwhatsapp.org.yowsup.event.protocol_media.request_upload\"\n\n    def __init__(self):\n        handleMap = {\n            \"message\": (self.recvMessageStanza, self.sendMessageEntity),\n            \"iq\": (self.recvIq, self.sendIq)\n        }\n        super(YowMediaProtocolLayer, self).__init__(handleMap)\n\n    def __str__(self):\n        return \"Media Layer\"\n\n    # def onEvent(self, yowLayerEvent):\n    #     if yowLayerEvent.getArg(self.__class__.EVENT_REQUEST_UPLOAD):\n    #         fpath = yowLayerEvent.getArg(\"file\")\n    #         _type = yowLayerEvent.getArg(\"type\")\n    #         assert fpath and _type, \"Must specify 'file' and 'type' in EVENT_REQUEST_UPLOAD args\"\n    #         entity = RequestUploadIqProtocolEntity(_type, filePath=fpath)\n    #         self._sendIq(entity, self.onRequestUploadSuccess, self.onRequestUploadError)\n\n\n    def sendMessageEntity(self, entity):\n        if entity.getType() == \"media\":\n            self.entityToLower(entity)\n\n    def recvMessageStanza(self, node):\n        if node.getAttributeValue(\"type\") == \"media\":\n            mediaNode = node.getChild(\"media\")\n            if mediaNode.getAttributeValue(\"type\") == \"image\":\n                entity = ImageDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"audio\":\n                entity = AudioDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"video\":\n                entity = VideoDownloadableMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"location\":\n                entity = LocationMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n            elif mediaNode.getAttributeValue(\"type\") == \"vcard\":\n                entity = VCardMediaMessageProtocolEntity.fromProtocolTreeNode(node)\n                self.toUpper(entity)\n\n    def sendIq(self, entity):\n        \"\"\"\n        :type entity: IqProtocolEntity\n        \"\"\"\n        if entity.getType() == IqProtocolEntity.TYPE_SET and entity.getXmlns() == \"w:m\":\n            #media upload!\n            self._sendIq(entity, self.onRequestUploadSuccess, self.onRequestUploadError)\n\n    def recvIq(self, node):\n        \"\"\"\n        :type node: ProtocolTreeNode\n        \"\"\"\n\n    def onRequestUploadSuccess(self, resultNode, requestUploadEntity):\n        self.toUpper(ResultRequestUploadIqProtocolEntity.fromProtocolTreeNode(resultNode))\n\n    def onRequestUploadError(self, errorNode, requestUploadEntity):\n        self.toUpper(ErrorIqProtocolEntity.fromProtocolTreeNode(errorNode))\n", "description": "The python WhatsApp library", "file_name": "layer.py", "id": "719a9d0718b3136de7b09a6ca57bf5f4", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_media/layer.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
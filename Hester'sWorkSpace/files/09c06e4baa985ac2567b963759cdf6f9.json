{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .ooyala import OoyalaIE\n\n\nclass TastyTradeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tastytrade\\.com/tt/shows/[^/]+/episodes/(?P<id>[^/?\n\n    _TESTS = [{\n        'url': 'https://www.tastytrade.com/tt/shows/market-measures/episodes/correlation-in-short-volatility-06-28-2017',\n        'info_dict': {\n            'id': 'F3bnlzbToeI6pLEfRyrlfooIILUjz4nM',\n            'ext': 'mp4',\n            'title': 'A History of Teaming',\n            'description': 'md5:2a9033db8da81f2edffa4c99888140b3',\n            'duration': 422.255,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'add_ie': ['Ooyala'],\n    }, {\n        'url': 'https://www.tastytrade.com/tt/shows/daily-dose/episodes/daily-dose-06-30-2017',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n\n        ooyala_code = self._search_regex(\n            r'data-media-id=([\"\\'])(?P<code>(?:(?!\\1).)+)\\1',\n            webpage, 'ooyala code', group='code')\n\n        info = self._search_json_ld(webpage, display_id, fatal=False)\n        info.update({\n            '_type': 'url_transparent',\n            'ie_key': OoyalaIE.ie_key(),\n            'url': 'ooyala:%s' % ooyala_code,\n            'display_id': display_id,\n        })\n        return info\n", "comments": "#&]+)'\n", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom .ooyala import OoyalaIE\n\n\nclass TastyTradeIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?tastytrade\\.com/tt/shows/[^/]+/episodes/(?P<id>[^/?#&]+)'\n\n    _TESTS = [{\n        'url': 'https://www.tastytrade.com/tt/shows/market-measures/episodes/correlation-in-short-volatility-06-28-2017',\n        'info_dict': {\n            'id': 'F3bnlzbToeI6pLEfRyrlfooIILUjz4nM',\n            'ext': 'mp4',\n            'title': 'A History of Teaming',\n            'description': 'md5:2a9033db8da81f2edffa4c99888140b3',\n            'duration': 422.255,\n        },\n        'params': {\n            'skip_download': True,\n        },\n        'add_ie': ['Ooyala'],\n    }, {\n        'url': 'https://www.tastytrade.com/tt/shows/daily-dose/episodes/daily-dose-06-30-2017',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(url, display_id)\n\n        ooyala_code = self._search_regex(\n            r'data-media-id=([\"\\'])(?P<code>(?:(?!\\1).)+)\\1',\n            webpage, 'ooyala code', group='code')\n\n        info = self._search_json_ld(webpage, display_id, fatal=False)\n        info.update({\n            '_type': 'url_transparent',\n            'ie_key': OoyalaIE.ie_key(),\n            'url': 'ooyala:%s' % ooyala_code,\n            'display_id': display_id,\n        })\n        return info\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tastytrade.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tastytrade.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
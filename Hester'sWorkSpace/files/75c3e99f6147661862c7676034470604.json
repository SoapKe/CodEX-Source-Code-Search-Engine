{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport random\n\nfrom .common import InfoExtractor\nfrom ..utils import xpath_text\n\n\nclass MatchTVIE(InfoExtractor):\n    _VALID_URL = r'https?://matchtv\\.ru(?:/on-air|/?\n    _TESTS = [{\n        'url': 'http://matchtv.ru/\n        'info_dict': {\n            'id': 'matchtv-live',\n            'ext': 'flv',\n            'title': r're:^\u041c\u0430\u0442\u0447 \u0422\u0412 - \u041f\u0440\u044f\u043c\u043e\u0439 \u044d\u0444\u0438\u0440 \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://matchtv.ru/on-air/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = 'matchtv-live'\n        video_url = self._download_json(\n            'http://player.matchtv.ntvplus.tv/player/smil', video_id,\n            query={\n                'ts': '',\n                'quality': 'SD',\n                'contentId': '561d2c0df7159b37178b4567',\n                'sign': '',\n                'includeHighlights': '0',\n                'userId': '',\n                'sessionId': random.randint(1, 1000000000),\n                'contentType': 'channel',\n                'timeShift': '0',\n                'platform': 'portal',\n            },\n            headers={\n                'Referer': 'http://player.matchtv.ntvplus.tv/embed-player/NTVEmbedPlayer.swf',\n            })['data']['videoUrl']\n        f4m_url = xpath_text(self._download_xml(video_url, video_id), './to')\n        formats = self._extract_f4m_formats(f4m_url, video_id)\n        self._sort_formats(formats)\n        return {\n            'id': video_id,\n            'title': self._live_title('\u041c\u0430\u0442\u0447 \u0422\u0412 - \u041f\u0440\u044f\u043c\u043e\u0439 \u044d\u0444\u0438\u0440'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n#live-player)'\n#live-player',\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport random\n\nfrom .common import InfoExtractor\nfrom ..utils import xpath_text\n\n\nclass MatchTVIE(InfoExtractor):\n    _VALID_URL = r'https?://matchtv\\.ru(?:/on-air|/?#live-player)'\n    _TESTS = [{\n        'url': 'http://matchtv.ru/#live-player',\n        'info_dict': {\n            'id': 'matchtv-live',\n            'ext': 'flv',\n            'title': r're:^\u041c\u0430\u0442\u0447 \u0422\u0412 - \u041f\u0440\u044f\u043c\u043e\u0439 \u044d\u0444\u0438\u0440 \\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$',\n            'is_live': True,\n        },\n        'params': {\n            'skip_download': True,\n        },\n    }, {\n        'url': 'http://matchtv.ru/on-air/',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = 'matchtv-live'\n        video_url = self._download_json(\n            'http://player.matchtv.ntvplus.tv/player/smil', video_id,\n            query={\n                'ts': '',\n                'quality': 'SD',\n                'contentId': '561d2c0df7159b37178b4567',\n                'sign': '',\n                'includeHighlights': '0',\n                'userId': '',\n                'sessionId': random.randint(1, 1000000000),\n                'contentType': 'channel',\n                'timeShift': '0',\n                'platform': 'portal',\n            },\n            headers={\n                'Referer': 'http://player.matchtv.ntvplus.tv/embed-player/NTVEmbedPlayer.swf',\n            })['data']['videoUrl']\n        f4m_url = xpath_text(self._download_xml(video_url, video_id), './to')\n        formats = self._extract_f4m_formats(f4m_url, video_id)\n        self._sort_formats(formats)\n        return {\n            'id': video_id,\n            'title': self._live_title('\u041c\u0430\u0442\u0447 \u0422\u0412 - \u041f\u0440\u044f\u043c\u043e\u0439 \u044d\u0444\u0438\u0440'),\n            'is_live': True,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "matchtv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/matchtv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
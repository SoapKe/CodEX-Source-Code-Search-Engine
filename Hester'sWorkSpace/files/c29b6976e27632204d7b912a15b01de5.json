{"author": "getredash", "code": "from tests import BaseTestCase\nfrom redash import models\n\n\nclass WidgetAPITest(BaseTestCase):\n    def create_widget(self, dashboard, visualization, width=1):\n        data = {\n            'visualization_id': visualization.id,\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': width\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n\n        return rv\n\n    def test_create_widget(self):\n        dashboard = self.factory.create_dashboard()\n        vis = self.factory.create_visualization()\n\n        rv = self.create_widget(dashboard, vis)\n        self.assertEquals(rv.status_code, 200)\n\n    def test_wont_create_widget_for_visualization_you_dont_have_access_to(self):\n        dashboard = self.factory.create_dashboard()\n        vis = self.factory.create_visualization()\n        ds = self.factory.create_data_source(group=self.factory.create_group())\n        vis.query_rel.data_source = ds\n\n        models.db.session.add(vis.query_rel)\n\n        data = {\n            'visualization_id': vis.id,\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': 1\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n        self.assertEqual(rv.status_code, 403)\n\n    def test_create_text_widget(self):\n        dashboard = self.factory.create_dashboard()\n\n        data = {\n            'visualization_id': None,\n            'text': 'Sample text.',\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': 2\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n\n        self.assertEquals(rv.status_code, 200)\n        self.assertEquals(rv.json['widget']['text'], 'Sample text.')\n\n    def test_delete_widget(self):\n        widget = self.factory.create_widget()\n\n        rv = self.make_request('delete', '/api/widgets/{0}'.format(widget.id))\n\n        self.assertEquals(rv.status_code, 200)\n        dashboard = models.Dashboard.get_by_slug_and_org(widget.dashboard.slug, widget.dashboard.org)\n        self.assertEquals(dashboard.widgets.count(), 0)\n", "comments": "", "content": "from tests import BaseTestCase\nfrom redash import models\n\n\nclass WidgetAPITest(BaseTestCase):\n    def create_widget(self, dashboard, visualization, width=1):\n        data = {\n            'visualization_id': visualization.id,\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': width\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n\n        return rv\n\n    def test_create_widget(self):\n        dashboard = self.factory.create_dashboard()\n        vis = self.factory.create_visualization()\n\n        rv = self.create_widget(dashboard, vis)\n        self.assertEquals(rv.status_code, 200)\n\n    def test_wont_create_widget_for_visualization_you_dont_have_access_to(self):\n        dashboard = self.factory.create_dashboard()\n        vis = self.factory.create_visualization()\n        ds = self.factory.create_data_source(group=self.factory.create_group())\n        vis.query_rel.data_source = ds\n\n        models.db.session.add(vis.query_rel)\n\n        data = {\n            'visualization_id': vis.id,\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': 1\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n        self.assertEqual(rv.status_code, 403)\n\n    def test_create_text_widget(self):\n        dashboard = self.factory.create_dashboard()\n\n        data = {\n            'visualization_id': None,\n            'text': 'Sample text.',\n            'dashboard_id': dashboard.id,\n            'options': {},\n            'width': 2\n        }\n\n        rv = self.make_request('post', '/api/widgets', data=data)\n\n        self.assertEquals(rv.status_code, 200)\n        self.assertEquals(rv.json['widget']['text'], 'Sample text.')\n\n    def test_delete_widget(self):\n        widget = self.factory.create_widget()\n\n        rv = self.make_request('delete', '/api/widgets/{0}'.format(widget.id))\n\n        self.assertEquals(rv.status_code, 200)\n        dashboard = models.Dashboard.get_by_slug_and_org(widget.dashboard.slug, widget.dashboard.org)\n        self.assertEquals(dashboard.widgets.count(), 0)\n", "description": "Make Your Company Data Driven. Connect to any data source, easily visualize and share your data.", "file_name": "test_widgets.py", "id": "c29b6976e27632204d7b912a15b01de5", "language": "Python", "project_name": "redash", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/getredash-redash/getredash-redash-0410d83/tests/handlers/test_widgets.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:54:55Z", "url": "https://github.com/getredash/redash", "wiki": false}
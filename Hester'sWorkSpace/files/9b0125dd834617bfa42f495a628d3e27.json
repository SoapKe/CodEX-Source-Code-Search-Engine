{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unescapeHTML,\n)\n\n\nclass TVN24IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:(?:[^/]+)\\.)?tvn24(?:bis)?\\.pl/(?:[^/]+/)*(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://www.tvn24.pl/wiadomosci-z-kraju,3/oredzie-artura-andrusa,702428.html',\n        'md5': 'fbdec753d7bc29d96036808275f2130c',\n        'info_dict': {\n            'id': '1584444',\n            'ext': 'mp4',\n            'title': '\"\u015awi\u0119ta maj\u0105 by\u0107 weso\u0142e, dlatego, ludziska, wszyscy pod jemio\u0142\u0119\"',\n            'description': 'Wyj\u0105tkowe or\u0119dzie Artura Andrusa, jednego z go\u015bci \"Szk\u0142a kontaktowego\".',\n            'thumbnail': 're:https?://.*[.]jpeg',\n        }\n    }, {\n        'url': 'http://fakty.tvn24.pl/ogladaj-online,60/53-konferencja-bezpieczenstwa-w-monachium,716431.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://sport.tvn24.pl/pilka-nozna,105/ligue-1-kamil-glik-rozcial-glowe-monaco-tylko-remisuje-z-bastia,716522.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://tvn24bis.pl/poranek,146,m/gen-koziej-w-tvn24-bis-wracamy-do-czasow-zimnej-wojny,715660.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.tvn24.pl/magazyn-tvn24/angie-w-jednej-czwartej-polka-od-szarej-myszki-do-cesarzowej-europy,119,2158',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._og_search_title(webpage)\n\n        def extract_json(attr, name, fatal=True):\n            return self._parse_json(\n                self._search_regex(\n                    r'\\b%s=([\"\\'])(?P<json>(?!\\1).+?)\\1' % attr, webpage,\n                    name, group='json', fatal=fatal) or '{}',\n                video_id, transform_source=unescapeHTML, fatal=fatal)\n\n        quality_data = extract_json('data-quality', 'formats')\n\n        formats = []\n        for format_id, url in quality_data.items():\n            formats.append({\n                'url': url,\n                'format_id': format_id,\n                'height': int_or_none(format_id.rstrip('p')),\n            })\n        self._sort_formats(formats)\n\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(\n            webpage, default=None) or self._html_search_regex(\n            r'\\bdata-poster=([\"\\'])(?P<url>(?!\\1).+?)\\1', webpage,\n            'thumbnail', group='url')\n\n        share_params = extract_json(\n            'data-share-params', 'share params', fatal=False)\n        if isinstance(share_params, dict):\n            video_id = share_params.get('id') or video_id\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unescapeHTML,\n)\n\n\nclass TVN24IE(InfoExtractor):\n    _VALID_URL = r'https?://(?:(?:[^/]+)\\.)?tvn24(?:bis)?\\.pl/(?:[^/]+/)*(?P<id>[^/]+)'\n    _TESTS = [{\n        'url': 'http://www.tvn24.pl/wiadomosci-z-kraju,3/oredzie-artura-andrusa,702428.html',\n        'md5': 'fbdec753d7bc29d96036808275f2130c',\n        'info_dict': {\n            'id': '1584444',\n            'ext': 'mp4',\n            'title': '\"\u015awi\u0119ta maj\u0105 by\u0107 weso\u0142e, dlatego, ludziska, wszyscy pod jemio\u0142\u0119\"',\n            'description': 'Wyj\u0105tkowe or\u0119dzie Artura Andrusa, jednego z go\u015bci \"Szk\u0142a kontaktowego\".',\n            'thumbnail': 're:https?://.*[.]jpeg',\n        }\n    }, {\n        'url': 'http://fakty.tvn24.pl/ogladaj-online,60/53-konferencja-bezpieczenstwa-w-monachium,716431.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://sport.tvn24.pl/pilka-nozna,105/ligue-1-kamil-glik-rozcial-glowe-monaco-tylko-remisuje-z-bastia,716522.html',\n        'only_matching': True,\n    }, {\n        'url': 'http://tvn24bis.pl/poranek,146,m/gen-koziej-w-tvn24-bis-wracamy-do-czasow-zimnej-wojny,715660.html',\n        'only_matching': True,\n    }, {\n        'url': 'https://www.tvn24.pl/magazyn-tvn24/angie-w-jednej-czwartej-polka-od-szarej-myszki-do-cesarzowej-europy,119,2158',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._og_search_title(webpage)\n\n        def extract_json(attr, name, fatal=True):\n            return self._parse_json(\n                self._search_regex(\n                    r'\\b%s=([\"\\'])(?P<json>(?!\\1).+?)\\1' % attr, webpage,\n                    name, group='json', fatal=fatal) or '{}',\n                video_id, transform_source=unescapeHTML, fatal=fatal)\n\n        quality_data = extract_json('data-quality', 'formats')\n\n        formats = []\n        for format_id, url in quality_data.items():\n            formats.append({\n                'url': url,\n                'format_id': format_id,\n                'height': int_or_none(format_id.rstrip('p')),\n            })\n        self._sort_formats(formats)\n\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(\n            webpage, default=None) or self._html_search_regex(\n            r'\\bdata-poster=([\"\\'])(?P<url>(?!\\1).+?)\\1', webpage,\n            'thumbnail', group='url')\n\n        share_params = extract_json(\n            'data-share-params', 'share params', fatal=False)\n        if isinstance(share_params, dict):\n            video_id = share_params.get('id') or video_id\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tvn24.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tvn24.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "ansible", "code": " (c) 2012, Michael DeHaan <michael.dehaan@gmail.com>\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.errors import AnsibleError\nfrom ansible.plugins.action import ActionBase\nfrom ansible.utils.vars import merge_hash\n\n\nclass ActionModule(ActionBase):\n\n    def run(self, tmp=None, task_vars=None):\n\n         individual modules might disagree but as the generic the action plugin, pass at this point.\n        self._supports_check_mode = True\n        self._supports_async = True\n\n        result = super(ActionModule, self).run(tmp, task_vars)\n        del tmp   tmp no longer has any effect\n\n        if not result.get('skipped'):\n\n            if result.get('invocation', {}).get('module_args'):\n                 avoid passing to modules in case of no_log\n                 should not be set anymore but here for backwards compatibility\n                del result['invocation']['module_args']\n\n             FUTURE: better to let _execute_module calculate this internally?\n            wrap_async = self._task.async_val and not self._connection.has_native_async\n\n             do work!\n            result = merge_hash(result, self._execute_module(task_vars=task_vars, wrap_async=wrap_async))\n\n             hack to keep --verbose from showing all the setup module result\n             moved from setup module as now we filter out all _ansible_ from result\n            if self._task.action == 'setup':\n                result['_ansible_verbose_override'] = True\n\n         Simulate a transient network failure\n        if self._task.action == 'async_status' and 'finished' in result and result['finished'] != 1:\n            raise AnsibleError('Pretend to fail somewher ein executing async_status')\n\n        if not wrap_async:\n             remove a temporary path we created\n            self._remove_tmp_path(self._connection._shell.tmpdir)\n\n        return result\n", "comments": "  (c) 2012  michael dehaan  michael dehaan gmail com        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       individual modules might disagree generic action plugin  pass point     tmp longer effect    avoid passing modules case log    set anymore backwards compatibility    future  better let  execute module calculate internally     work     hack keep   verbose showing setup module result    moved setup module filter  ansible  result    simulate transient network failure    remove temporary path created ", "content": "# (c) 2012, Michael DeHaan <michael.dehaan@gmail.com>\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.errors import AnsibleError\nfrom ansible.plugins.action import ActionBase\nfrom ansible.utils.vars import merge_hash\n\n\nclass ActionModule(ActionBase):\n\n    def run(self, tmp=None, task_vars=None):\n\n        # individual modules might disagree but as the generic the action plugin, pass at this point.\n        self._supports_check_mode = True\n        self._supports_async = True\n\n        result = super(ActionModule, self).run(tmp, task_vars)\n        del tmp  # tmp no longer has any effect\n\n        if not result.get('skipped'):\n\n            if result.get('invocation', {}).get('module_args'):\n                # avoid passing to modules in case of no_log\n                # should not be set anymore but here for backwards compatibility\n                del result['invocation']['module_args']\n\n            # FUTURE: better to let _execute_module calculate this internally?\n            wrap_async = self._task.async_val and not self._connection.has_native_async\n\n            # do work!\n            result = merge_hash(result, self._execute_module(task_vars=task_vars, wrap_async=wrap_async))\n\n            # hack to keep --verbose from showing all the setup module result\n            # moved from setup module as now we filter out all _ansible_ from result\n            if self._task.action == 'setup':\n                result['_ansible_verbose_override'] = True\n\n        # Simulate a transient network failure\n        if self._task.action == 'async_status' and 'finished' in result and result['finished'] != 1:\n            raise AnsibleError('Pretend to fail somewher ein executing async_status')\n\n        if not wrap_async:\n            # remove a temporary path we created\n            self._remove_tmp_path(self._connection._shell.tmpdir)\n\n        return result\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "normal.py", "id": "0becd6f4fd1f4da8a01a06f1768f96f6", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/integration/targets/async_fail/action_plugins/normal.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
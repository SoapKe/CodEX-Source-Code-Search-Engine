{"author": "odoo", "code": "# -*- coding:utf-8 -*-\n\n\nimport time\nfrom datetime import datetime\n\nfrom odoo import api, models\n\n\nclass payroll_advice_report(models.AbstractModel):\n    _name = 'report.l10n_in_hr_payroll.report_payrolladvice'\n\n    def get_month(self, input_date):\n        res = {\n               'from_name': '', 'to_name': ''\n               }\n        slip = self.env['hr.payslip'].search([('date_from', '<=', input_date), ('date_to', '>=', input_date)], limit=1)\n        if slip:\n            from_date = datetime.strptime(slip.date_from, '%Y-%m-%d')\n            to_date = datetime.strptime(slip.date_to, '%Y-%m-%d')\n            res['from_name'] = from_date.strftime('%d') + '-' + from_date.strftime('%B') + '-' + from_date.strftime('%Y')\n            res['to_name'] = to_date.strftime('%d') + '-' + to_date.strftime('%B') + '-' + to_date.strftime('%Y')\n        return res\n\n    def get_bysal_total(self):\n        return self.total_bysal\n\n    def get_detail(self, line_ids):\n        result = []\n        self.total_bysal = 0.00\n        for l in line_ids:\n            res = {}\n            res.update({\n                    'name': l.employee_id.name,\n                    'acc_no': l.name,\n                    'ifsc_code': l.ifsc_code,\n                    'bysal': l.bysal,\n                    'debit_credit': l.debit_credit,\n                    })\n            self.total_bysal += l.bysal\n            result.append(res)\n        return result\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        advice = self.env['hr.payroll.advice'].browse(docids)\n        return {\n            'doc_ids': docids,\n            'doc_model': 'hr.payroll.advice',\n            'data': data,\n            'docs': advice,\n            'time': time,\n            'get_month': self.get_month,\n            'get_detail': self.get_detail,\n            'get_bysal_total': self.get_bysal_total,\n        }\n", "comments": "      coding utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding:utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport time\nfrom datetime import datetime\n\nfrom odoo import api, models\n\n\nclass payroll_advice_report(models.AbstractModel):\n    _name = 'report.l10n_in_hr_payroll.report_payrolladvice'\n\n    def get_month(self, input_date):\n        res = {\n               'from_name': '', 'to_name': ''\n               }\n        slip = self.env['hr.payslip'].search([('date_from', '<=', input_date), ('date_to', '>=', input_date)], limit=1)\n        if slip:\n            from_date = datetime.strptime(slip.date_from, '%Y-%m-%d')\n            to_date = datetime.strptime(slip.date_to, '%Y-%m-%d')\n            res['from_name'] = from_date.strftime('%d') + '-' + from_date.strftime('%B') + '-' + from_date.strftime('%Y')\n            res['to_name'] = to_date.strftime('%d') + '-' + to_date.strftime('%B') + '-' + to_date.strftime('%Y')\n        return res\n\n    def get_bysal_total(self):\n        return self.total_bysal\n\n    def get_detail(self, line_ids):\n        result = []\n        self.total_bysal = 0.00\n        for l in line_ids:\n            res = {}\n            res.update({\n                    'name': l.employee_id.name,\n                    'acc_no': l.name,\n                    'ifsc_code': l.ifsc_code,\n                    'bysal': l.bysal,\n                    'debit_credit': l.debit_credit,\n                    })\n            self.total_bysal += l.bysal\n            result.append(res)\n        return result\n\n    @api.model\n    def get_report_values(self, docids, data=None):\n        advice = self.env['hr.payroll.advice'].browse(docids)\n        return {\n            'doc_ids': docids,\n            'doc_model': 'hr.payroll.advice',\n            'data': data,\n            'docs': advice,\n            'time': time,\n            'get_month': self.get_month,\n            'get_detail': self.get_detail,\n            'get_bysal_total': self.get_bysal_total,\n        }\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "report_payroll_advice.py", "id": "87fcf8e9e65bb6a122afa577e1edbf25", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/l10n_in_hr_payroll/report/report_payroll_advice.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
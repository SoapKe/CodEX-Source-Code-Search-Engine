{"author": "rushter", "code": "\nimport numpy as np\n\n\ndef one_hot(y):\n    n_values = np.max(y) + 1\n    return np.eye(n_values)[y]\n\n\ndef batch_iterator(X, batch_size=64):\n    \n    n_samples = X.shape[0]\n    n_batches = n_samples // batch_size\n    batch_end = 0\n\n    for b in range(n_batches):\n        batch_begin = b * batch_size\n        batch_end = batch_begin + batch_size\n\n        X_batch = X[batch_begin:batch_end]\n\n        yield X_batch\n\n    if n_batches * batch_size < n_samples:\n        yield X[batch_end:]\n", "comments": "   splits x equal sized chunks        coding utf 8 ", "content": "# coding:utf-8\nimport numpy as np\n\n\ndef one_hot(y):\n    n_values = np.max(y) + 1\n    return np.eye(n_values)[y]\n\n\ndef batch_iterator(X, batch_size=64):\n    \"\"\"Splits X into equal sized chunks.\"\"\"\n    n_samples = X.shape[0]\n    n_batches = n_samples // batch_size\n    batch_end = 0\n\n    for b in range(n_batches):\n        batch_begin = b * batch_size\n        batch_end = batch_begin + batch_size\n\n        X_batch = X[batch_begin:batch_end]\n\n        yield X_batch\n\n    if n_batches * batch_size < n_samples:\n        yield X[batch_end:]\n", "description": "Minimal and clean examples of machine learning algorithms", "file_name": "main.py", "id": "77ae5ebea84e5ed4da588201acd4eee0", "language": "Python", "project_name": "MLAlgorithms", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rushter-MLAlgorithms/rushter-MLAlgorithms-d398777/mla/utils/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:25:48Z", "url": "https://github.com/rushter/MLAlgorithms", "wiki": false}
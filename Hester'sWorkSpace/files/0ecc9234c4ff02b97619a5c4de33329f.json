{"author": "jakubroztocil", "code": "import mock\nfrom pytest import raises\nfrom requests import Request, Timeout\nfrom requests.exceptions import ConnectionError\n\nfrom httpie import ExitStatus\nfrom httpie.core import main\n\nerror_msg = None\n\n\n@mock.patch('httpie.core.get_response')\ndef test_error(get_response):\n    def error(msg, *args, **kwargs):\n        global error_msg\n        error_msg = msg % args\n\n    exc = ConnectionError('Connection aborted')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    ret = main(['--ignore-stdin', 'www.google.com'], custom_log_error=error)\n    assert ret == ExitStatus.ERROR\n    assert error_msg == (\n        'ConnectionError: '\n        'Connection aborted while doing GET request to URL: '\n        'http://www.google.com')\n\n\n@mock.patch('httpie.core.get_response')\ndef test_error_traceback(get_response):\n    exc = ConnectionError('Connection aborted')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    with raises(ConnectionError):\n        main(['--ignore-stdin', '--traceback', 'www.google.com'])\n\n\n@mock.patch('httpie.core.get_response')\ndef test_timeout(get_response):\n    def error(msg, *args, **kwargs):\n        global error_msg\n        error_msg = msg % args\n\n    exc = Timeout('Request timed out')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    ret = main(['--ignore-stdin', 'www.google.com'], custom_log_error=error)\n    assert ret == ExitStatus.ERROR_TIMEOUT\n    assert error_msg == 'Request timed out (30s).'\n", "comments": "", "content": "import mock\nfrom pytest import raises\nfrom requests import Request, Timeout\nfrom requests.exceptions import ConnectionError\n\nfrom httpie import ExitStatus\nfrom httpie.core import main\n\nerror_msg = None\n\n\n@mock.patch('httpie.core.get_response')\ndef test_error(get_response):\n    def error(msg, *args, **kwargs):\n        global error_msg\n        error_msg = msg % args\n\n    exc = ConnectionError('Connection aborted')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    ret = main(['--ignore-stdin', 'www.google.com'], custom_log_error=error)\n    assert ret == ExitStatus.ERROR\n    assert error_msg == (\n        'ConnectionError: '\n        'Connection aborted while doing GET request to URL: '\n        'http://www.google.com')\n\n\n@mock.patch('httpie.core.get_response')\ndef test_error_traceback(get_response):\n    exc = ConnectionError('Connection aborted')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    with raises(ConnectionError):\n        main(['--ignore-stdin', '--traceback', 'www.google.com'])\n\n\n@mock.patch('httpie.core.get_response')\ndef test_timeout(get_response):\n    def error(msg, *args, **kwargs):\n        global error_msg\n        error_msg = msg % args\n\n    exc = Timeout('Request timed out')\n    exc.request = Request(method='GET', url='http://www.google.com')\n    get_response.side_effect = exc\n    ret = main(['--ignore-stdin', 'www.google.com'], custom_log_error=error)\n    assert ret == ExitStatus.ERROR_TIMEOUT\n    assert error_msg == 'Request timed out (30s).'\n", "description": "Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://httpie.org", "file_name": "test_errors.py", "id": "0ecc9234c4ff02b97619a5c4de33329f", "language": "Python", "project_name": "httpie", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/jakubroztocil-httpie/jakubroztocil-httpie-0f4dce9/tests/test_errors.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:39:35Z", "url": "https://github.com/jakubroztocil/httpie", "wiki": false}
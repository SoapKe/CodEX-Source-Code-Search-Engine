{"author": "sympy", "code": "from sympy.multipledispatch import dispatch, Dispatcher\nfrom sympy.core import Basic, Expr, Function, Add, Mul, Pow, Dummy, Integer\nfrom sympy import Min, Max, Set, sympify, Lambda, symbols, exp, log, S\nfrom sympy.core.numbers import Infinity, NegativeInfinity\nfrom sympy.sets import (imageset, Interval, FiniteSet, Union, ImageSet,\n    ProductSet, EmptySet, Intersection)\nfrom sympy.core.function import FunctionClass\nfrom sympy.logic.boolalg import And, Or, Not, true, false\n\n\n_x, _y = symbols(\"x y\")\n\n\n@dispatch(Basic, Basic)\ndef _set_add(x, y):\n    return None\n\n@dispatch(Expr, Expr)\ndef _set_add(x, y):\n    return x+y\n\n@dispatch(Interval, Interval)\ndef _set_add(x, y):\n    \"\"\"\n    Additions in interval arithmetic\n    https://en.wikipedia.org/wiki/Interval_arithmetic\n    \"\"\"\n    return Interval(x.start + y.start, x.end + y.end,\n        x.left_open or y.left_open, x.right_open or y.right_open)\n\n@dispatch(Interval, Infinity)\ndef _set_add(x, y):\n    if x.start == S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet({S.Infinity})\n\n@dispatch(Interval, NegativeInfinity)\ndef _set_add(x, y):\n    if x.end == S.Infinity:\n        return Interval(-oo, oo)\n    return FiniteSet({S.NegativeInfinity})\n\n\n@dispatch(Basic, Basic)\ndef _set_sub(x, y):\n    return None\n\n@dispatch(Expr, Expr)\ndef _set_sub(x, y):\n    return x-y\n\n@dispatch(Interval, Interval)\ndef _set_sub(x, y):\n    \"\"\"\n    Subtractions in interval arithmetic\n    https://en.wikipedia.org/wiki/Interval_arithmetic\n    \"\"\"\n    return Interval(x.start - y.end, x.end - y.start,\n        x.left_open or y.right_open, x.right_open or y.left_open)\n\n@dispatch(Interval, Infinity)\ndef _set_sub(x, y):\n    if self.start is S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet(-oo)\n\n@dispatch(Interval, NegativeInfinity)\ndef _set_sub(x, y):\n    if self.start is S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet(-oo)\n", "comments": "        additions interval arithmetic     https   en wikipedia org wiki interval arithmetic             return interval(x start   start  x end   end          x left open left open  x right open right open)   dispatch(interval  infinity) def  set add(x  y)      x start    s negativeinfinity          return interval( oo  oo)     return finiteset( s infinity )   dispatch(interval  negativeinfinity) def  set add(x  y)      x end    s infinity          return interval( oo  oo)     return finiteset( s negativeinfinity )    dispatch(basic  basic) def  set sub(x  y)      return none   dispatch(expr  expr) def  set sub(x  y)      return x   dispatch(interval  interval) def  set sub(x  y)              subtractions interval arithmetic     https   en wikipedia org wiki interval arithmetic         ", "content": "from sympy.multipledispatch import dispatch, Dispatcher\nfrom sympy.core import Basic, Expr, Function, Add, Mul, Pow, Dummy, Integer\nfrom sympy import Min, Max, Set, sympify, Lambda, symbols, exp, log, S\nfrom sympy.core.numbers import Infinity, NegativeInfinity\nfrom sympy.sets import (imageset, Interval, FiniteSet, Union, ImageSet,\n    ProductSet, EmptySet, Intersection)\nfrom sympy.core.function import FunctionClass\nfrom sympy.logic.boolalg import And, Or, Not, true, false\n\n\n_x, _y = symbols(\"x y\")\n\n\n@dispatch(Basic, Basic)\ndef _set_add(x, y):\n    return None\n\n@dispatch(Expr, Expr)\ndef _set_add(x, y):\n    return x+y\n\n@dispatch(Interval, Interval)\ndef _set_add(x, y):\n    \"\"\"\n    Additions in interval arithmetic\n    https://en.wikipedia.org/wiki/Interval_arithmetic\n    \"\"\"\n    return Interval(x.start + y.start, x.end + y.end,\n        x.left_open or y.left_open, x.right_open or y.right_open)\n\n@dispatch(Interval, Infinity)\ndef _set_add(x, y):\n    if x.start == S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet({S.Infinity})\n\n@dispatch(Interval, NegativeInfinity)\ndef _set_add(x, y):\n    if x.end == S.Infinity:\n        return Interval(-oo, oo)\n    return FiniteSet({S.NegativeInfinity})\n\n\n@dispatch(Basic, Basic)\ndef _set_sub(x, y):\n    return None\n\n@dispatch(Expr, Expr)\ndef _set_sub(x, y):\n    return x-y\n\n@dispatch(Interval, Interval)\ndef _set_sub(x, y):\n    \"\"\"\n    Subtractions in interval arithmetic\n    https://en.wikipedia.org/wiki/Interval_arithmetic\n    \"\"\"\n    return Interval(x.start - y.end, x.end - y.start,\n        x.left_open or y.right_open, x.right_open or y.left_open)\n\n@dispatch(Interval, Infinity)\ndef _set_sub(x, y):\n    if self.start is S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet(-oo)\n\n@dispatch(Interval, NegativeInfinity)\ndef _set_sub(x, y):\n    if self.start is S.NegativeInfinity:\n        return Interval(-oo, oo)\n    return FiniteSet(-oo)\n", "description": "A computer algebra system written in pure Python", "file_name": "add.py", "id": "37728f3737ef0b56b6f875905e4239e6", "language": "Python", "project_name": "sympy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/sympy-sympy/sympy-sympy-205da79/sympy/sets/handlers/add.py", "save_time": "", "source": "", "update_at": "2018-03-18T16:35:56Z", "url": "https://github.com/sympy/sympy", "wiki": true}
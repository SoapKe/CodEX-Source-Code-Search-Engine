{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nfrom odoo import exceptions\nfrom odoo.addons.sale.controllers.portal import CustomerPortal\nfrom odoo.http import request, route\nfrom odoo.tools import consteq\n\n\nclass SaleStockPortal(CustomerPortal):\n\n    def _stock_picking_check_access(self, picking_id, access_token=None):\n        picking = request.env['stock.picking'].browse([picking_id])\n        picking_sudo = picking.sudo()\n        try:\n            picking.check_access_rights('read')\n            picking.check_access_rule('read')\n        except exceptions.AccessError:\n            if not access_token or not consteq(picking_sudo.sale_id.access_token, access_token):\n                raise\n        return picking_sudo\n\n    @route(['/my/picking/pdf/<int:picking_id>'], type='http', auth=\"public\", website=True)\n    def portal_my_picking_report(self, picking_id, access_token=None, **kw):\n        \n        try:\n            picking_sudo = self._stock_picking_check_access(picking_id, access_token=access_token)\n        except exceptions.AccessError:\n            return request.redirect('/my')\n\n        \n        pdf = request.env.ref('stock.action_report_delivery').sudo().render_qweb_pdf([picking_sudo.id])[0]\n        pdfhttpheaders = [\n            ('Content-Type', 'application/pdf'),\n            ('Content-Length', len(pdf)),\n        ]\n        return request.make_response(pdf, headers=pdfhttpheaders)\n", "comments": "    print delivery slip customer  using either access rights access token         sure customer access            coding  utf 8        part odoo  see license file full copyright licensing details     print report sudo  since require access product  taxes  payment term etc   portal access rights  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nfrom odoo import exceptions\nfrom odoo.addons.sale.controllers.portal import CustomerPortal\nfrom odoo.http import request, route\nfrom odoo.tools import consteq\n\n\nclass SaleStockPortal(CustomerPortal):\n\n    def _stock_picking_check_access(self, picking_id, access_token=None):\n        picking = request.env['stock.picking'].browse([picking_id])\n        picking_sudo = picking.sudo()\n        try:\n            picking.check_access_rights('read')\n            picking.check_access_rule('read')\n        except exceptions.AccessError:\n            if not access_token or not consteq(picking_sudo.sale_id.access_token, access_token):\n                raise\n        return picking_sudo\n\n    @route(['/my/picking/pdf/<int:picking_id>'], type='http', auth=\"public\", website=True)\n    def portal_my_picking_report(self, picking_id, access_token=None, **kw):\n        \"\"\" Print delivery slip for customer, using either access rights or access token\n        to be sure customer has access \"\"\"\n        try:\n            picking_sudo = self._stock_picking_check_access(picking_id, access_token=access_token)\n        except exceptions.AccessError:\n            return request.redirect('/my')\n\n        # print report as sudo, since it require access to product, taxes, payment term etc.. and portal does not have those access rights.\n        pdf = request.env.ref('stock.action_report_delivery').sudo().render_qweb_pdf([picking_sudo.id])[0]\n        pdfhttpheaders = [\n            ('Content-Type', 'application/pdf'),\n            ('Content-Length', len(pdf)),\n        ]\n        return request.make_response(pdf, headers=pdfhttpheaders)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "portal.py", "id": "d8cffd5bb88fe188733bd36196f3d33d", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_sale_stock/controllers/portal.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
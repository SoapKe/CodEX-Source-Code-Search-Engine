{"author": "Urinx", "code": "\n\n\n\nfrom wechat.utils import *\nfrom config import Constant\n\nimport random, time, json\n\n\n\nclass Bot(object):\n\n    def __init__(self):\n        self.emoticons = Constant.EMOTICON\n        self.gifs = []\n        self.last_time = time.time()\n    \n    def time_schedule(self):\n        r = ''\n        now = time.time()\n        if int(now - self.last_time) > 3600:\n            self.last_time = now\n            url_latest = Constant.BOT_ZHIHU_URL_LATEST\n            url_daily = Constant.BOT_ZHIHU_URL_DAILY\n            data = get(url_latest)\n            j = json.loads(data)\n            story = j['stories'][random.randint(0, len(j['stories'])-1)]\n            r = story['title'] + '\\n' + url_daily + str(story['id'])\n        return r.encode('utf-8')\n\n    def reply(self, text):\n        APIKEY = Constant.BOT_TULING_API_KEY\n        api_url = Constant.BOT_TULING_API_URL % (APIKEY, text, '12345678')\n        r = json.loads(get(api_url))\n        if r.get('code') == 100000 and r.get('text') != Constant.BOT_TULING_BOT_REPLY:\n            p = random.randint(1, 10)\n            if p > 3:\n                return r['text']\n            elif p > 1:\n                \n                if random.randint(1, 10) > 5:\n                    n = random.randint(0, len(self.emoticons)-1)\n                    m = random.randint(1, 3)\n                    reply = self.emoticons[n].encode('utf-8') * m\n                    return reply\n        return ''\n", "comments": "   usr bin env python    coding  utf 8                                                                                                                                                                      send emoji ", "content": "#!/usr/bin/env python\n# coding: utf-8\n\n#===================================================\nfrom wechat.utils import *\nfrom config import Constant\n#---------------------------------------------------\nimport random, time, json\n#===================================================\n\n\nclass Bot(object):\n\n    def __init__(self):\n        self.emoticons = Constant.EMOTICON\n        self.gifs = []\n        self.last_time = time.time()\n    \n    def time_schedule(self):\n        r = ''\n        now = time.time()\n        if int(now - self.last_time) > 3600:\n            self.last_time = now\n            url_latest = Constant.BOT_ZHIHU_URL_LATEST\n            url_daily = Constant.BOT_ZHIHU_URL_DAILY\n            data = get(url_latest)\n            j = json.loads(data)\n            story = j['stories'][random.randint(0, len(j['stories'])-1)]\n            r = story['title'] + '\\n' + url_daily + str(story['id'])\n        return r.encode('utf-8')\n\n    def reply(self, text):\n        APIKEY = Constant.BOT_TULING_API_KEY\n        api_url = Constant.BOT_TULING_API_URL % (APIKEY, text, '12345678')\n        r = json.loads(get(api_url))\n        if r.get('code') == 100000 and r.get('text') != Constant.BOT_TULING_BOT_REPLY:\n            p = random.randint(1, 10)\n            if p > 3:\n                return r['text']\n            elif p > 1:\n                # send emoji\n                if random.randint(1, 10) > 5:\n                    n = random.randint(0, len(self.emoticons)-1)\n                    m = random.randint(1, 3)\n                    reply = self.emoticons[n].encode('utf-8') * m\n                    return reply\n        return ''\n", "description": "\u7f51\u9875\u7248\u5fae\u4fe1API\uff0c\u5305\u542b\u7ec8\u7aef\u7248\u5fae\u4fe1\u53ca\u5fae\u4fe1\u673a\u5668\u4eba", "file_name": "bot.py", "id": "69f16b13338e7e6af19fc22fa81fb8fe", "language": "Python", "project_name": "WeixinBot", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/Urinx-WeixinBot/Urinx-WeixinBot-56928ab/wxbot_project_py2.7/wx_handler/bot.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:03:15Z", "url": "https://github.com/Urinx/WeixinBot", "wiki": true}
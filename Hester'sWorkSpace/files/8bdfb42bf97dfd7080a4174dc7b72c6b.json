{"author": "jakubroztocil", "code": "import os\nimport fnmatch\nimport subprocess\n\nimport pytest\n\nfrom utils import TESTS_ROOT\n\n\ndef has_docutils():\n    try:\n        \n        import docutils\n        return True\n    except ImportError:\n        return False\n\n\ndef rst_filenames():\n    for root, dirnames, filenames in os.walk(os.path.dirname(TESTS_ROOT)):\n        if '.tox' not in root:\n            for filename in fnmatch.filter(filenames, '*.rst'):\n                yield os.path.join(root, filename)\n\n\nfilenames = list(rst_filenames())\nassert filenames\n\n\n@pytest.mark.skipif(not has_docutils(), reason='docutils not installed')\n@pytest.mark.parametrize('filename', filenames)\ndef test_rst_file_syntax(filename):\n    p = subprocess.Popen(\n        ['rst2pseudoxml.py', '--report=1', '--exit-status=1', filename],\n        stderr=subprocess.PIPE,\n        stdout=subprocess.PIPE\n    )\n    err = p.communicate()[1]\n    assert p.returncode == 0, err.decode('utf8')\n", "comments": "  noinspection pyunresolvedreferences ", "content": "import os\nimport fnmatch\nimport subprocess\n\nimport pytest\n\nfrom utils import TESTS_ROOT\n\n\ndef has_docutils():\n    try:\n        # noinspection PyUnresolvedReferences\n        import docutils\n        return True\n    except ImportError:\n        return False\n\n\ndef rst_filenames():\n    for root, dirnames, filenames in os.walk(os.path.dirname(TESTS_ROOT)):\n        if '.tox' not in root:\n            for filename in fnmatch.filter(filenames, '*.rst'):\n                yield os.path.join(root, filename)\n\n\nfilenames = list(rst_filenames())\nassert filenames\n\n\n@pytest.mark.skipif(not has_docutils(), reason='docutils not installed')\n@pytest.mark.parametrize('filename', filenames)\ndef test_rst_file_syntax(filename):\n    p = subprocess.Popen(\n        ['rst2pseudoxml.py', '--report=1', '--exit-status=1', filename],\n        stderr=subprocess.PIPE,\n        stdout=subprocess.PIPE\n    )\n    err = p.communicate()[1]\n    assert p.returncode == 0, err.decode('utf8')\n", "description": "Modern command line HTTP client \u2013 user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.  https://httpie.org", "file_name": "test_docs.py", "id": "8bdfb42bf97dfd7080a4174dc7b72c6b", "language": "Python", "project_name": "httpie", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/jakubroztocil-httpie/jakubroztocil-httpie-0f4dce9/tests/test_docs.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:39:35Z", "url": "https://github.com/jakubroztocil/httpie", "wiki": false}
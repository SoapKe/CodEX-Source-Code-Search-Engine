{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import remove_end\n\n\nclass CharlieRoseIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?charlierose\\.com/(?:video|episode)(?:s|/player)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'https://charlierose.com/videos/27996',\n        'md5': 'fda41d49e67d4ce7c2411fd2c4702e09',\n        'info_dict': {\n            'id': '27996',\n            'ext': 'mp4',\n            'title': 'Remembering Zaha Hadid',\n            'thumbnail': r're:^https?://.*\\.jpg\\?\\d+',\n            'description': 'We revisit past conversations with Zaha Hadid, in memory of the world renowned Iraqi architect.',\n            'subtitles': {\n                'en': [{\n                    'ext': 'vtt',\n                }],\n            },\n        },\n    }, {\n        'url': 'https://charlierose.com/videos/27996',\n        'only_matching': True,\n    }, {\n        'url': 'https://charlierose.com/episodes/30887?autoplay=true',\n        'only_matching': True,\n    }]\n\n    _PLAYER_BASE = 'https://charlierose.com/video/player/%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(self._PLAYER_BASE % video_id, video_id)\n\n        title = remove_end(self._og_search_title(webpage), ' - Charlie Rose')\n\n        info_dict = self._parse_html5_media_entries(\n            self._PLAYER_BASE % video_id, webpage, video_id,\n            m3u8_entry_protocol='m3u8_native')[0]\n\n        self._sort_formats(info_dict['formats'])\n        self._remove_duplicate_formats(info_dict['formats'])\n\n        info_dict.update({\n            'id': video_id,\n            'title': title,\n            'thumbnail': self._og_search_thumbnail(webpage),\n            'description': self._og_search_description(webpage),\n        })\n\n        return info_dict\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import remove_end\n\n\nclass CharlieRoseIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?charlierose\\.com/(?:video|episode)(?:s|/player)/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'https://charlierose.com/videos/27996',\n        'md5': 'fda41d49e67d4ce7c2411fd2c4702e09',\n        'info_dict': {\n            'id': '27996',\n            'ext': 'mp4',\n            'title': 'Remembering Zaha Hadid',\n            'thumbnail': r're:^https?://.*\\.jpg\\?\\d+',\n            'description': 'We revisit past conversations with Zaha Hadid, in memory of the world renowned Iraqi architect.',\n            'subtitles': {\n                'en': [{\n                    'ext': 'vtt',\n                }],\n            },\n        },\n    }, {\n        'url': 'https://charlierose.com/videos/27996',\n        'only_matching': True,\n    }, {\n        'url': 'https://charlierose.com/episodes/30887?autoplay=true',\n        'only_matching': True,\n    }]\n\n    _PLAYER_BASE = 'https://charlierose.com/video/player/%s'\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(self._PLAYER_BASE % video_id, video_id)\n\n        title = remove_end(self._og_search_title(webpage), ' - Charlie Rose')\n\n        info_dict = self._parse_html5_media_entries(\n            self._PLAYER_BASE % video_id, webpage, video_id,\n            m3u8_entry_protocol='m3u8_native')[0]\n\n        self._sort_formats(info_dict['formats'])\n        self._remove_duplicate_formats(info_dict['formats'])\n\n        info_dict.update({\n            'id': video_id,\n            'title': title,\n            'thumbnail': self._og_search_thumbnail(webpage),\n            'description': self._og_search_description(webpage),\n        })\n\n        return info_dict\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "charlierose.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/charlierose.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass TOnlineIE(InfoExtractor):\n    IE_NAME = 't-online.de'\n    _VALID_URL = r'https?://(?:www\\.)?t-online\\.de/tv/(?:[^/]+/)*id_(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.t-online.de/tv/sport/fussball/id_79166266/drittes-remis-zidane-es-muss-etwas-passieren-.html',\n        'md5': '7d94dbdde5f9d77c5accc73c39632c29',\n        'info_dict': {\n            'id': '79166266',\n            'ext': 'mp4',\n            'title': 'Drittes Remis! Zidane: \"Es muss etwas passieren\"',\n            'description': 'Es l\u00e4uft nicht rund bei Real Madrid. Das 1:1 gegen den SD Eibar war das dritte Unentschieden in Folge in der Liga.',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            'http://www.t-online.de/tv/id_%s/tid_json_video' % video_id, video_id)\n        title = video_data['subtitle']\n\n        formats = []\n        for asset in video_data.get('assets', []):\n            asset_source = asset.get('source') or asset.get('source2')\n            if not asset_source:\n                continue\n            formats_id = []\n            for field_key in ('type', 'profile'):\n                field_value = asset.get(field_key)\n                if field_value:\n                    formats_id.append(field_value)\n            formats.append({\n                'format_id': '-'.join(formats_id),\n                'url': asset_source,\n            })\n\n        thumbnails = []\n        for image in video_data.get('images', []):\n            image_source = image.get('source')\n            if not image_source:\n                continue\n            thumbnails.append({\n                'url': image_source,\n            })\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': video_data.get('description'),\n            'duration': int_or_none(video_data.get('duration')),\n            'thumbnails': thumbnails,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass TOnlineIE(InfoExtractor):\n    IE_NAME = 't-online.de'\n    _VALID_URL = r'https?://(?:www\\.)?t-online\\.de/tv/(?:[^/]+/)*id_(?P<id>\\d+)'\n    _TEST = {\n        'url': 'http://www.t-online.de/tv/sport/fussball/id_79166266/drittes-remis-zidane-es-muss-etwas-passieren-.html',\n        'md5': '7d94dbdde5f9d77c5accc73c39632c29',\n        'info_dict': {\n            'id': '79166266',\n            'ext': 'mp4',\n            'title': 'Drittes Remis! Zidane: \"Es muss etwas passieren\"',\n            'description': 'Es l\u00e4uft nicht rund bei Real Madrid. Das 1:1 gegen den SD Eibar war das dritte Unentschieden in Folge in der Liga.',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        video_data = self._download_json(\n            'http://www.t-online.de/tv/id_%s/tid_json_video' % video_id, video_id)\n        title = video_data['subtitle']\n\n        formats = []\n        for asset in video_data.get('assets', []):\n            asset_source = asset.get('source') or asset.get('source2')\n            if not asset_source:\n                continue\n            formats_id = []\n            for field_key in ('type', 'profile'):\n                field_value = asset.get(field_key)\n                if field_value:\n                    formats_id.append(field_value)\n            formats.append({\n                'format_id': '-'.join(formats_id),\n                'url': asset_source,\n            })\n\n        thumbnails = []\n        for image in video_data.get('images', []):\n            image_source = image.get('source')\n            if not image_source:\n                continue\n            thumbnails.append({\n                'url': image_source,\n            })\n\n        return {\n            'id': video_id,\n            'title': title,\n            'description': video_data.get('description'),\n            'duration': int_or_none(video_data.get('duration')),\n            'thumbnails': thumbnails,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "tonline.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/tonline.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
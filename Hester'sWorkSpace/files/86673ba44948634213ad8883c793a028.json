{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    extract_attributes,\n    int_or_none,\n    parse_age_limit,\n    smuggle_url,\n    update_url_query,\n)\n\n\nclass FXNetworksIE(AdobePassIE):\n    _VALID_URL = r'https?://(?:www\\.)?(?:fxnetworks|simpsonsworld)\\.com/video/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://www.fxnetworks.com/video/1032565827847',\n        'md5': '8d99b97b4aa7a202f55b6ed47ea7e703',\n        'info_dict': {\n            'id': 'dRzwHC_MMqIv',\n            'ext': 'mp4',\n            'title': 'First Look: Better Things - Season 2',\n            'description': 'Because real life is like a fart. Watch this FIRST LOOK to see what inspired the new season of Better Things.',\n            'age_limit': 14,\n            'uploader': 'NEWA-FNG-FX',\n            'upload_date': '20170825',\n            'timestamp': 1503686274,\n            'episode_number': 0,\n            'season_number': 2,\n            'series': 'Better Things',\n        },\n        'add_ie': ['ThePlatform'],\n    }, {\n        'url': 'http://www.simpsonsworld.com/video/716094019682',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        if 'The content you are trying to access is not available in your region.' in webpage:\n            self.raise_geo_restricted()\n        video_data = extract_attributes(self._search_regex(\n            r'(<a.+?rel=\"http://link\\.theplatform\\.com/s/.+?</a>)', webpage, 'video data'))\n        player_type = self._search_regex(r'playerType\\s*=\\s*[\\'\"]([^\\'\"]+)', webpage, 'player type', default=None)\n        release_url = video_data['rel']\n        title = video_data['data-title']\n        rating = video_data.get('data-rating')\n        query = {\n            'mbr': 'true',\n        }\n        if player_type == 'movies':\n            query.update({\n                'manifest': 'm3u',\n            })\n        else:\n            query.update({\n                'switch': 'http',\n            })\n        if video_data.get('data-req-auth') == '1':\n            resource = self._get_mvpd_resource(\n                video_data['data-channel'], title,\n                video_data.get('data-guid'), rating)\n            query['auth'] = self._extract_mvpd_auth(url, video_id, 'fx', resource)\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': title,\n            'url': smuggle_url(update_url_query(release_url, query), {'force_smil_url': True}),\n            'series': video_data.get('data-show-title'),\n            'episode_number': int_or_none(video_data.get('data-episode')),\n            'season_number': int_or_none(video_data.get('data-season')),\n            'thumbnail': video_data.get('data-large-thumb'),\n            'age_limit': parse_age_limit(rating),\n            'ie_key': 'ThePlatform',\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .adobepass import AdobePassIE\nfrom ..utils import (\n    extract_attributes,\n    int_or_none,\n    parse_age_limit,\n    smuggle_url,\n    update_url_query,\n)\n\n\nclass FXNetworksIE(AdobePassIE):\n    _VALID_URL = r'https?://(?:www\\.)?(?:fxnetworks|simpsonsworld)\\.com/video/(?P<id>\\d+)'\n    _TESTS = [{\n        'url': 'http://www.fxnetworks.com/video/1032565827847',\n        'md5': '8d99b97b4aa7a202f55b6ed47ea7e703',\n        'info_dict': {\n            'id': 'dRzwHC_MMqIv',\n            'ext': 'mp4',\n            'title': 'First Look: Better Things - Season 2',\n            'description': 'Because real life is like a fart. Watch this FIRST LOOK to see what inspired the new season of Better Things.',\n            'age_limit': 14,\n            'uploader': 'NEWA-FNG-FX',\n            'upload_date': '20170825',\n            'timestamp': 1503686274,\n            'episode_number': 0,\n            'season_number': 2,\n            'series': 'Better Things',\n        },\n        'add_ie': ['ThePlatform'],\n    }, {\n        'url': 'http://www.simpsonsworld.com/video/716094019682',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n        if 'The content you are trying to access is not available in your region.' in webpage:\n            self.raise_geo_restricted()\n        video_data = extract_attributes(self._search_regex(\n            r'(<a.+?rel=\"http://link\\.theplatform\\.com/s/.+?</a>)', webpage, 'video data'))\n        player_type = self._search_regex(r'playerType\\s*=\\s*[\\'\"]([^\\'\"]+)', webpage, 'player type', default=None)\n        release_url = video_data['rel']\n        title = video_data['data-title']\n        rating = video_data.get('data-rating')\n        query = {\n            'mbr': 'true',\n        }\n        if player_type == 'movies':\n            query.update({\n                'manifest': 'm3u',\n            })\n        else:\n            query.update({\n                'switch': 'http',\n            })\n        if video_data.get('data-req-auth') == '1':\n            resource = self._get_mvpd_resource(\n                video_data['data-channel'], title,\n                video_data.get('data-guid'), rating)\n            query['auth'] = self._extract_mvpd_auth(url, video_id, 'fx', resource)\n\n        return {\n            '_type': 'url_transparent',\n            'id': video_id,\n            'title': title,\n            'url': smuggle_url(update_url_query(release_url, query), {'force_smil_url': True}),\n            'series': video_data.get('data-show-title'),\n            'episode_number': int_or_none(video_data.get('data-episode')),\n            'season_number': int_or_none(video_data.get('data-season')),\n            'thumbnail': video_data.get('data-large-thumb'),\n            'age_limit': parse_age_limit(rating),\n            'ie_key': 'ThePlatform',\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "fxnetworks.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/fxnetworks.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
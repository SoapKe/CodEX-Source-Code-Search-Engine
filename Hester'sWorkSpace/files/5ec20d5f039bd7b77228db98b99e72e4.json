{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport werkzeug\n\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteUrl(http.Controller):\n    @http.route('/website_links/new', type='json', auth='user', methods=['POST'])\n    def create_shorten_url(self, **post):\n        if 'url' not in post or post['url'] == '':\n            return {'error': 'empty_url'}\n        return request.env['link.tracker'].create(post).read()\n\n    @http.route('/r', type='http', auth='user', website=True)\n    def shorten_url(self, **post):\n        return request.render(\"website_links.page_shorten_url\", post)\n\n    @http.route('/website_links/add_code', type='json', auth='user')\n    def add_code(self, **post):\n        link_id = request.env['link.tracker.code'].search([('code', '=', post['init_code'])], limit=1).link_id.id\n        new_code = request.env['link.tracker.code'].search_count([('code', '=', post['new_code']), ('link_id', '=', link_id)])\n        if new_code > 0:\n            return new_code.read()\n        else:\n            return request.env['link.tracker.code'].create({'code': post['new_code'], 'link_id': link_id})[0].read()\n\n    @http.route('/website_links/recent_links', type='json', auth='user')\n    def recent_links(self, **post):\n        return request.env['link.tracker'].recent_links(post['filter'], post['limit'])\n\n    @http.route('/r/<string:code>+', type='http', auth=\"user\", website=True)\n    def statistics_shorten_url(self, code, **post):\n        code = request.env['link.tracker.code'].search([('code', '=', code)], limit=1)\n\n        if code:\n            return request.render(\"website_links.graphs\", code.link_id.read()[0])\n        else:\n            return werkzeug.utils.redirect('', 301)\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport werkzeug\n\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass WebsiteUrl(http.Controller):\n    @http.route('/website_links/new', type='json', auth='user', methods=['POST'])\n    def create_shorten_url(self, **post):\n        if 'url' not in post or post['url'] == '':\n            return {'error': 'empty_url'}\n        return request.env['link.tracker'].create(post).read()\n\n    @http.route('/r', type='http', auth='user', website=True)\n    def shorten_url(self, **post):\n        return request.render(\"website_links.page_shorten_url\", post)\n\n    @http.route('/website_links/add_code', type='json', auth='user')\n    def add_code(self, **post):\n        link_id = request.env['link.tracker.code'].search([('code', '=', post['init_code'])], limit=1).link_id.id\n        new_code = request.env['link.tracker.code'].search_count([('code', '=', post['new_code']), ('link_id', '=', link_id)])\n        if new_code > 0:\n            return new_code.read()\n        else:\n            return request.env['link.tracker.code'].create({'code': post['new_code'], 'link_id': link_id})[0].read()\n\n    @http.route('/website_links/recent_links', type='json', auth='user')\n    def recent_links(self, **post):\n        return request.env['link.tracker'].recent_links(post['filter'], post['limit'])\n\n    @http.route('/r/<string:code>+', type='http', auth=\"user\", website=True)\n    def statistics_shorten_url(self, code, **post):\n        code = request.env['link.tracker.code'].search([('code', '=', code)], limit=1)\n\n        if code:\n            return request.render(\"website_links.graphs\", code.link_id.read()[0])\n        else:\n            return werkzeug.utils.redirect('', 301)\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "5ec20d5f039bd7b77228db98b99e72e4", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_links/controller/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
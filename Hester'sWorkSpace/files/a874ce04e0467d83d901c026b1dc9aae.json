{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\n\nimport json\nfrom odoo import _\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass Twitter(http.Controller):\n    @http.route(['/twitter_reload'], type='json', auth=\"user\", website=True)\n    def twitter_reload(self):\n        return request.website.fetch_favorite_tweets()\n\n    @http.route(['/get_favorites'], type='json', auth=\"public\", website=True)\n    def get_tweets(self, limit=20):\n        key = request.website.twitter_api_key\n        secret = request.website.twitter_api_secret\n        screen_name = request.website.twitter_screen_name\n        debug = request.env['res.users'].has_group('website.group_website_publisher')\n        if not key or not secret:\n            if debug:\n                return {\"error\": _(\"Please set the Twitter API Key and Secret in the Website Settings.\")}\n            return []\n        if not screen_name:\n            if debug:\n                return {\"error\": _(\"Please set a Twitter screen name to load favorites from, \"\n                                   \"in the Website Settings (it does not have to be yours)\")}\n            return []\n        TwitterTweets = request.env['website.twitter.tweet']\n        tweets = TwitterTweets.search(\n                [('website_id', '=', request.website.id),\n                 ('screen_name', '=', screen_name)],\n                limit=int(limit), order=\"tweet_id desc\")\n        if len(tweets) < 12:\n            if debug:\n                return {\"error\": _(\"Twitter user @%(username)s has less than 12 favorite tweets. \"\n                                   \"Please add more or choose a different screen name.\") % \\\n                                      {'username': screen_name}}\n            else:\n                return []\n        return tweets.mapped(lambda t: json.loads(t.tweet))\n", "comments": "      coding  utf 8        part odoo  see license file full copyright licensing details  ", "content": "# -*- coding: utf-8 -*-\n# Part of Odoo. See LICENSE file for full copyright and licensing details.\n\nimport json\nfrom odoo import _\nfrom odoo import http\nfrom odoo.http import request\n\n\nclass Twitter(http.Controller):\n    @http.route(['/twitter_reload'], type='json', auth=\"user\", website=True)\n    def twitter_reload(self):\n        return request.website.fetch_favorite_tweets()\n\n    @http.route(['/get_favorites'], type='json', auth=\"public\", website=True)\n    def get_tweets(self, limit=20):\n        key = request.website.twitter_api_key\n        secret = request.website.twitter_api_secret\n        screen_name = request.website.twitter_screen_name\n        debug = request.env['res.users'].has_group('website.group_website_publisher')\n        if not key or not secret:\n            if debug:\n                return {\"error\": _(\"Please set the Twitter API Key and Secret in the Website Settings.\")}\n            return []\n        if not screen_name:\n            if debug:\n                return {\"error\": _(\"Please set a Twitter screen name to load favorites from, \"\n                                   \"in the Website Settings (it does not have to be yours)\")}\n            return []\n        TwitterTweets = request.env['website.twitter.tweet']\n        tweets = TwitterTweets.search(\n                [('website_id', '=', request.website.id),\n                 ('screen_name', '=', screen_name)],\n                limit=int(limit), order=\"tweet_id desc\")\n        if len(tweets) < 12:\n            if debug:\n                return {\"error\": _(\"Twitter user @%(username)s has less than 12 favorite tweets. \"\n                                   \"Please add more or choose a different screen name.\") % \\\n                                      {'username': screen_name}}\n            else:\n                return []\n        return tweets.mapped(lambda t: json.loads(t.tweet))\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "main.py", "id": "a874ce04e0467d83d901c026b1dc9aae", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/website_twitter/controllers/main.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
{"author": "Zulko", "code": "# -*- coding: utf-8 -*-\n\"\"\"Handle retrieving media assets for testing.\"\"\"\nimport os\n\nfrom moviepy.video.io.downloader import download_webfile\n\n\ndef download_url(url, filename):\n    \"\"\"Download a file.\"\"\"\n    if not os.path.exists(filename):\n        print('Downloading {} ...'.format(filename))\n        download_webfile(url, filename)\n        print('Downloading complete.')\n\ndef download_youtube_video(youtube_id, filename):\n    \"\"\"Download a video from youtube.\"\"\"\n    \n    download_url(youtube_id, filename)\n\ndef download():\n    \"\"\"Initiate the media asset downloads.\"\"\"\n    if not os.path.exists('media'):\n        os.mkdir('media')\n\n    \n    github_prefix = 'https://github.com/earney/moviepy_media/raw/master/tests/'\n    output = 'media/{}'\n    urls = ['/images/python_logo.png', '/images/matplotlib_demo1.png',\n            '/images/afterimage.png', '/videos/big_buck_bunny_432_433.webm',\n            '/sounds/crunching.mp3', '/images/pigs_in_a_polka.gif',\n            '/videos/fire2.mp4', '/videos/big_buck_bunny_0_30.webm',\n            '/subtitles/subtitles1.srt', '/misc/traj.txt',\n            '/images/vacation_2017.jpg', '/images/python_logo_upside_down.png']\n\n    \n    for url in urls:\n        _, tail = os.path.split(url)\n        download_url(\n            url='{}/{}'.format(github_prefix, url),\n            filename=output.format(tail))\n\n    \n    download_url(\n        url='https://data.vision.ee.ethz.ch/cvl/video2gif/kAKZeIzs0Ag.mp4',\n        filename='media/video_with_failing_audio.mp4')\n\nif __name__ == \"__main__\":\n    download()", "comments": "   handle retrieving media assets testing     import os  moviepy video io downloader import download webfile   def download url(url  filename)         download file         os path exists(filename)          print( downloading         format(filename))         download webfile(url  filename)         print( downloading complete  )  def download youtube video(youtube id  filename)         download video youtube           fyi    travis ci like youtube dl     download url(youtube id  filename)  def download()         initiate media asset downloads            coding  utf 8        fyi    travis ci like youtube dl    define url prefix path media assets     loop download url strings  build path  download asset     download remaining asset  ", "content": "# -*- coding: utf-8 -*-\n\"\"\"Handle retrieving media assets for testing.\"\"\"\nimport os\n\nfrom moviepy.video.io.downloader import download_webfile\n\n\ndef download_url(url, filename):\n    \"\"\"Download a file.\"\"\"\n    if not os.path.exists(filename):\n        print('Downloading {} ...'.format(filename))\n        download_webfile(url, filename)\n        print('Downloading complete.')\n\ndef download_youtube_video(youtube_id, filename):\n    \"\"\"Download a video from youtube.\"\"\"\n    # FYI..  travis-ci doesn't like youtube-dl\n    download_url(youtube_id, filename)\n\ndef download():\n    \"\"\"Initiate the media asset downloads.\"\"\"\n    if not os.path.exists('media'):\n        os.mkdir('media')\n\n    # Define url prefix and path for all media assets.\n    github_prefix = 'https://github.com/earney/moviepy_media/raw/master/tests/'\n    output = 'media/{}'\n    urls = ['/images/python_logo.png', '/images/matplotlib_demo1.png',\n            '/images/afterimage.png', '/videos/big_buck_bunny_432_433.webm',\n            '/sounds/crunching.mp3', '/images/pigs_in_a_polka.gif',\n            '/videos/fire2.mp4', '/videos/big_buck_bunny_0_30.webm',\n            '/subtitles/subtitles1.srt', '/misc/traj.txt',\n            '/images/vacation_2017.jpg', '/images/python_logo_upside_down.png']\n\n    # Loop through download url strings, build out path, and download the asset.\n    for url in urls:\n        _, tail = os.path.split(url)\n        download_url(\n            url='{}/{}'.format(github_prefix, url),\n            filename=output.format(tail))\n\n    # Download remaining asset.\n    download_url(\n        url='https://data.vision.ee.ethz.ch/cvl/video2gif/kAKZeIzs0Ag.mp4',\n        filename='media/video_with_failing_audio.mp4')\n\nif __name__ == \"__main__\":\n    download()", "description": "Video editing with Python", "file_name": "download_media.py", "id": "06f6451170f55c925ebcb14ef9ba877c", "language": "Python", "project_name": "moviepy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/Zulko-moviepy/Zulko-moviepy-6cbd4f3/tests/download_media.py", "save_time": "", "source": "", "update_at": "2018-03-18T10:21:24Z", "url": "https://github.com/Zulko/moviepy", "wiki": true}
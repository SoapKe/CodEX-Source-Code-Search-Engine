{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GameInformerIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?gameinformer\\.com/(?:[^/]+/)*(?P<id>.+)\\.aspx'\n    _TEST = {\n        'url': 'http://www.gameinformer.com/b/features/archive/2015/09/26/replay-animal-crossing.aspx',\n        'md5': '292f26da1ab4beb4c9099f1304d2b071',\n        'info_dict': {\n            'id': '4515472681001',\n            'ext': 'mp4',\n            'title': 'Replay - Animal Crossing',\n            'description': 'md5:2e211891b215c85d061adc7a4dd2d930',\n            'timestamp': 1443457610,\n            'upload_date': '20150928',\n            'uploader_id': '694940074001',\n        },\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/694940074001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(\n            url, display_id, headers=self.geo_verification_headers())\n        brightcove_id = self._search_regex(\n            [r'<[^>]+\\bid=[\"\\']bc_(\\d+)', r\"getVideo\\('[^']+video_id=(\\d+)\"],\n            webpage, 'brightcove id')\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id, 'BrightcoveNew',\n            brightcove_id)\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\n\n\nclass GameInformerIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?gameinformer\\.com/(?:[^/]+/)*(?P<id>.+)\\.aspx'\n    _TEST = {\n        'url': 'http://www.gameinformer.com/b/features/archive/2015/09/26/replay-animal-crossing.aspx',\n        'md5': '292f26da1ab4beb4c9099f1304d2b071',\n        'info_dict': {\n            'id': '4515472681001',\n            'ext': 'mp4',\n            'title': 'Replay - Animal Crossing',\n            'description': 'md5:2e211891b215c85d061adc7a4dd2d930',\n            'timestamp': 1443457610,\n            'upload_date': '20150928',\n            'uploader_id': '694940074001',\n        },\n    }\n    BRIGHTCOVE_URL_TEMPLATE = 'http://players.brightcove.net/694940074001/default_default/index.html?videoId=%s'\n\n    def _real_extract(self, url):\n        display_id = self._match_id(url)\n        webpage = self._download_webpage(\n            url, display_id, headers=self.geo_verification_headers())\n        brightcove_id = self._search_regex(\n            [r'<[^>]+\\bid=[\"\\']bc_(\\d+)', r\"getVideo\\('[^']+video_id=(\\d+)\"],\n            webpage, 'brightcove id')\n        return self.url_result(\n            self.BRIGHTCOVE_URL_TEMPLATE % brightcove_id, 'BrightcoveNew',\n            brightcove_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "gameinformer.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/gameinformer.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
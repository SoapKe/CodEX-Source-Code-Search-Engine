{"author": "jwilder", "code": "import os\nimport docker\nimport logging\nimport pytest\n\n\n@pytest.yield_fixture(scope=\"module\")\ndef nginx_tmpl():\n    \n    script_dir = os.path.dirname(__file__)\n    logging.info(\"extracting nginx.tmpl from jwilder/nginx-proxy:test\")\n    docker_client = docker.from_env()\n    print(docker_client.containers.run(\n        image='jwilder/nginx-proxy:test',\n        remove=True,\n        volumes=['{current_dir}:{current_dir}'.format(current_dir=script_dir)],\n        entrypoint='sh',\n        command='-xc \"cp /app/nginx.tmpl {current_dir} && chmod 777 {current_dir}/nginx.tmpl\"'.format(\n            current_dir=script_dir),\n        stderr=True))\n    yield\n    logging.info(\"removing nginx.tmpl\")\n    os.remove(os.path.join(script_dir, \"nginx.tmpl\"))\n\n\ndef test_unknown_virtual_host_is_503(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://unknown.nginx.container.docker/\")\n    assert r.status_code == 503\n\n\ndef test_forwards_to_whoami(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://whoami.nginx.container.docker/\")\n    assert r.status_code == 200\n    whoami_container = docker_compose.containers.get(\"whoami\")\n    assert r.text == \"I'm %s\\n\" % whoami_container.id[:12]\n", "comments": "        pytest fixture extracts nginx config template     jwilder nginx proxy test image         ", "content": "import os\nimport docker\nimport logging\nimport pytest\n\n\n@pytest.yield_fixture(scope=\"module\")\ndef nginx_tmpl():\n    \"\"\"\n    pytest fixture which extracts the the nginx config template from\n    the jwilder/nginx-proxy:test image\n    \"\"\"\n    script_dir = os.path.dirname(__file__)\n    logging.info(\"extracting nginx.tmpl from jwilder/nginx-proxy:test\")\n    docker_client = docker.from_env()\n    print(docker_client.containers.run(\n        image='jwilder/nginx-proxy:test',\n        remove=True,\n        volumes=['{current_dir}:{current_dir}'.format(current_dir=script_dir)],\n        entrypoint='sh',\n        command='-xc \"cp /app/nginx.tmpl {current_dir} && chmod 777 {current_dir}/nginx.tmpl\"'.format(\n            current_dir=script_dir),\n        stderr=True))\n    yield\n    logging.info(\"removing nginx.tmpl\")\n    os.remove(os.path.join(script_dir, \"nginx.tmpl\"))\n\n\ndef test_unknown_virtual_host_is_503(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://unknown.nginx.container.docker/\")\n    assert r.status_code == 503\n\n\ndef test_forwards_to_whoami(nginx_tmpl, docker_compose, nginxproxy):\n    r = nginxproxy.get(\"http://whoami.nginx.container.docker/\")\n    assert r.status_code == 200\n    whoami_container = docker_compose.containers.get(\"whoami\")\n    assert r.text == \"I'm %s\\n\" % whoami_container.id[:12]\n", "description": "Automated nginx proxy for Docker containers using docker-gen", "file_name": "test_dockergen_v2.py", "id": "30cfb19dc54d6e85261d4dc503c6131b", "language": "Python", "project_name": "nginx-proxy", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/jwilder-nginx-proxy/jwilder-nginx-proxy-000a447/test/test_dockergen/test_dockergen_v2.py", "save_time": "", "source": "", "update_at": "2018-03-18T12:25:07Z", "url": "https://github.com/jwilder/nginx-proxy", "wiki": true}
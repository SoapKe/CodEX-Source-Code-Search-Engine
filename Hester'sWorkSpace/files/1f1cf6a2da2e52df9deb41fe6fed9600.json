{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    unified_strdate\n)\n\n\nclass JoveIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?jove\\.com/video/(?P<id>[0-9]+)'\n    _CHAPTERS_URL = 'http://www.jove.com/video-chapters?videoid={video_id:}'\n    _TESTS = [\n        {\n            'url': 'http://www.jove.com/video/2744/electrode-positioning-montage-transcranial-direct-current',\n            'md5': '93723888d82dbd6ba8b3d7d0cd65dd2b',\n            'info_dict': {\n                'id': '2744',\n                'ext': 'mp4',\n                'title': 'Electrode Positioning and Montage in Transcranial Direct Current Stimulation',\n                'description': 'md5:015dd4509649c0908bc27f049e0262c6',\n                'thumbnail': r're:^https?://.*\\.png$',\n                'upload_date': '20110523',\n            }\n        },\n        {\n            'url': 'http://www.jove.com/video/51796/culturing-caenorhabditis-elegans-axenic-liquid-media-creation',\n            'md5': '914aeb356f416811d911996434811beb',\n            'info_dict': {\n                'id': '51796',\n                'ext': 'mp4',\n                'title': 'Culturing Caenorhabditis elegans in Axenic Liquid Media and Creation of Transgenic Worms by Microparticle Bombardment',\n                'description': 'md5:35ff029261900583970c4023b70f1dc9',\n                'thumbnail': r're:^https?://.*\\.png$',\n                'upload_date': '20140802',\n            }\n        },\n\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        chapters_id = self._html_search_regex(\n            r'/video-chapters\\?videoid=([0-9]+)', webpage, 'chapters id')\n\n        chapters_xml = self._download_xml(\n            self._CHAPTERS_URL.format(video_id=chapters_id),\n            video_id, note='Downloading chapters XML',\n            errnote='Failed to download chapters XML')\n\n        video_url = chapters_xml.attrib.get('video')\n        if not video_url:\n            raise ExtractorError('Failed to get the video URL')\n\n        title = self._html_search_meta('citation_title', webpage, 'title')\n        thumbnail = self._og_search_thumbnail(webpage)\n        description = self._html_search_regex(\n            r'<div id=\"section_body_summary\"><p class=\"jove_content\">(.+?)</p>',\n            webpage, 'description', fatal=False)\n        publish_date = unified_strdate(self._html_search_meta(\n            'citation_publication_date', webpage, 'publish date', fatal=False))\n        comment_count = int(self._html_search_regex(\n            r'<meta name=\"num_comments\" content=\"(\\d+) Comments?\"',\n            webpage, 'comment count', fatal=False))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'description': description,\n            'upload_date': publish_date,\n            'comment_count': comment_count,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    unified_strdate\n)\n\n\nclass JoveIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?jove\\.com/video/(?P<id>[0-9]+)'\n    _CHAPTERS_URL = 'http://www.jove.com/video-chapters?videoid={video_id:}'\n    _TESTS = [\n        {\n            'url': 'http://www.jove.com/video/2744/electrode-positioning-montage-transcranial-direct-current',\n            'md5': '93723888d82dbd6ba8b3d7d0cd65dd2b',\n            'info_dict': {\n                'id': '2744',\n                'ext': 'mp4',\n                'title': 'Electrode Positioning and Montage in Transcranial Direct Current Stimulation',\n                'description': 'md5:015dd4509649c0908bc27f049e0262c6',\n                'thumbnail': r're:^https?://.*\\.png$',\n                'upload_date': '20110523',\n            }\n        },\n        {\n            'url': 'http://www.jove.com/video/51796/culturing-caenorhabditis-elegans-axenic-liquid-media-creation',\n            'md5': '914aeb356f416811d911996434811beb',\n            'info_dict': {\n                'id': '51796',\n                'ext': 'mp4',\n                'title': 'Culturing Caenorhabditis elegans in Axenic Liquid Media and Creation of Transgenic Worms by Microparticle Bombardment',\n                'description': 'md5:35ff029261900583970c4023b70f1dc9',\n                'thumbnail': r're:^https?://.*\\.png$',\n                'upload_date': '20140802',\n            }\n        },\n\n    ]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        chapters_id = self._html_search_regex(\n            r'/video-chapters\\?videoid=([0-9]+)', webpage, 'chapters id')\n\n        chapters_xml = self._download_xml(\n            self._CHAPTERS_URL.format(video_id=chapters_id),\n            video_id, note='Downloading chapters XML',\n            errnote='Failed to download chapters XML')\n\n        video_url = chapters_xml.attrib.get('video')\n        if not video_url:\n            raise ExtractorError('Failed to get the video URL')\n\n        title = self._html_search_meta('citation_title', webpage, 'title')\n        thumbnail = self._og_search_thumbnail(webpage)\n        description = self._html_search_regex(\n            r'<div id=\"section_body_summary\"><p class=\"jove_content\">(.+?)</p>',\n            webpage, 'description', fatal=False)\n        publish_date = unified_strdate(self._html_search_meta(\n            'citation_publication_date', webpage, 'publish date', fatal=False))\n        comment_count = int(self._html_search_regex(\n            r'<meta name=\"num_comments\" content=\"(\\d+) Comments?\"',\n            webpage, 'comment count', fatal=False))\n\n        return {\n            'id': video_id,\n            'title': title,\n            'url': video_url,\n            'thumbnail': thumbnail,\n            'description': description,\n            'upload_date': publish_date,\n            'comment_count': comment_count,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "jove.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/jove.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Simon Dodsley (simon@purestorage.com)\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = r'''\n---\nmodule: purefa_host\nversion_added: '2.4'\nshort_description: Manage hosts on Pure Storage FlashArrays\ndescription:\n- Create, delete or modify hosts on Pure Storage FlashArrays.\nauthor:\n- Simon Dodsley (@sdodsley)\noptions:\n  host:\n    description:\n    - The name of the host.\n    required: true\n  state:\n    description:\n    - Define whether the host should exist or not.\n    - When removing host all connected volumes will be disconnected.\n    default: present\n    choices: [ absent, present ]\n  protocol:\n    description:\n    - Defines the host connection protocol for volumes.\n    default: iscsi\n    choices: [ fc, iscsi ]\n  wwns:\n    description:\n    - List of wwns of the host if protocol is fc.\n  iqn:\n    description:\n    - List of IQNs of the host if protocol is iscsi.\n  volume:\n    description:\n    - Volume name to map to the host.\nextends_documentation_fragment:\n- purestorage.fa\n'''\n\nEXAMPLES = r'''\n- name: Create new new host\n  purefa_host:\n    host: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete host\n  purefa_host:\n    host: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Make sure host bar is available with wwn ports\n  purefa_host:\n    host: bar\n    protocol: fc\n    wwns:\n    - 00:00:00:00:00:00:00\n    - 11:11:11:11:11:11:11\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Make sure host bar is available with iSCSI ports\n  purefa_host:\n    host: bar\n    protocol: iscsi\n    iqn:\n    - iqn.1994-05.com.redhat:7d366003913\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Map host foo to volume bar\n  purefa_host:\n    host: foo\n    volume: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n'''\n\nRETURN = r'''\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.pure import get_system, purefa_argument_spec\n\n\ntry:\n    from purestorage import purestorage\n    HAS_PURESTORAGE = True\nexcept ImportError:\n    HAS_PURESTORAGE = False\n\n\ndef get_host(module, array):\n\n    host = None\n\n    for h in array.list_hosts():\n        if h[\"name\"] == module.params['host']:\n            host = h\n            break\n\n    return host\n\n\ndef make_host(module, array):\n\n    changed = True\n\n    if not module.check_mode:\n        host = array.create_host(module.params['host'])\n        if module.params['protocol'] == 'iscsi':\n            if module.params['iqn']:\n                array.set_host(module.params['host'], addiqnlist=module.params['iqn'])\n        if module.params['protocol'] == 'fc':\n            if module.params['wwns']:\n                array.set_host(module.params['host'], addwwnlist=module.params['wwns'])\n        if module.params['volume']:\n            array.connect_host(module.params['host'], module.params['volume'])\n    module.exit_json(changed=changed)\n\n\ndef update_host(module, array):\n    changed = False\n    host = module.params['host']\n    module.exit_json(changed=changed)\n\n\ndef delete_host(module, array):\n    changed = True\n    if not module.check_mode:\n        for vol in array.list_host_connections(module.params['host']):\n            array.disconnect_host(module.params['host'], vol[\"vol\"])\n        array.delete_host(module.params['host'])\n    module.exit_json(changed=changed)\n\n\ndef main():\n    argument_spec = purefa_argument_spec()\n    argument_spec.update(dict(\n        host=dict(type='str', required=True),\n        state=dict(type='str', default='present', choices=['absent', 'present']),\n        protocol=dict(type='str', default='iscsi', choices=['fc', 'iscsi']),\n        iqn=dict(type='list'),\n        wwns=dict(type='list'),\n        volume=dict(type='str'),\n    ))\n\n    module = AnsibleModule(argument_spec, supports_check_mode=True)\n\n    if not HAS_PURESTORAGE:\n        module.fail_json(msg='purestorage sdk is required for this module in host')\n\n    state = module.params['state']\n    protocol = module.params['protocol']\n    array = get_system(module)\n    host = get_host(module, array)\n\n    if module.params['volume']:\n        try:\n            array.get_volume(module.params['volume'])\n        except:\n            module.fail_json(msg='Volume {} not found'.format(module.params['volume']))\n\n    if host and state == 'present':\n        update_host(module, array)\n    elif host and state == 'absent':\n        delete_host(module, array)\n    elif host is None and state == 'absent':\n        module.exit_json(changed=False)\n    else:\n        make_host(module, array)\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "        module  purefa host version added   2 4  short description  manage hosts pure storage flasharrays description    create  delete modify hosts pure storage flasharrays  author    simon dodsley ( sdodsley) options    host      description        the name host      required  true   state      description        define whether host exist        when removing host connected volumes disconnected      default  present     choices    absent  present     protocol      description        defines host connection protocol volumes      default  iscsi     choices    fc  iscsi     wwns      description        list wwns host protocol fc    iqn      description        list iqns host protocol iscsi    volume      description        volume name map host  extends documentation fragment    purestorage fa      examples   r      name  create new new host   purefa host      host  foo     fa url  10 10 10 2     api token  e31060a7 21fc e277 6240 25983c6c4592    name  delete host   purefa host      host  foo     fa url  10 10 10 2     api token  e31060a7 21fc e277 6240 25983c6c4592     state  absent    name  make sure host bar available wwn ports   purefa host      host  bar     protocol  fc     wwns        00 00 00 00 00 00 00       11 11 11 11 11 11 11     fa url  10 10 10 2     api token  e31060a7 21fc e277 6240 25983c6c4592    name  make sure host bar available iscsi ports   purefa host      host  bar     protocol  iscsi     iqn        iqn 1994 05 com redhat 7d366003913     fa url  10 10 10 2     api token  e31060a7 21fc e277 6240 25983c6c4592    name  map host foo volume bar   purefa host      host  foo     volume  bar     fa url  10 10 10 2     api token  e31060a7 21fc e277 6240 25983c6c4592      return   r            usr bin python        coding  utf 8        (c) 2017  simon dodsley (simon purestorage com)    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2017, Simon Dodsley (simon@purestorage.com)\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\nDOCUMENTATION = r'''\n---\nmodule: purefa_host\nversion_added: '2.4'\nshort_description: Manage hosts on Pure Storage FlashArrays\ndescription:\n- Create, delete or modify hosts on Pure Storage FlashArrays.\nauthor:\n- Simon Dodsley (@sdodsley)\noptions:\n  host:\n    description:\n    - The name of the host.\n    required: true\n  state:\n    description:\n    - Define whether the host should exist or not.\n    - When removing host all connected volumes will be disconnected.\n    default: present\n    choices: [ absent, present ]\n  protocol:\n    description:\n    - Defines the host connection protocol for volumes.\n    default: iscsi\n    choices: [ fc, iscsi ]\n  wwns:\n    description:\n    - List of wwns of the host if protocol is fc.\n  iqn:\n    description:\n    - List of IQNs of the host if protocol is iscsi.\n  volume:\n    description:\n    - Volume name to map to the host.\nextends_documentation_fragment:\n- purestorage.fa\n'''\n\nEXAMPLES = r'''\n- name: Create new new host\n  purefa_host:\n    host: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Delete host\n  purefa_host:\n    host: foo\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n    state: absent\n\n- name: Make sure host bar is available with wwn ports\n  purefa_host:\n    host: bar\n    protocol: fc\n    wwns:\n    - 00:00:00:00:00:00:00\n    - 11:11:11:11:11:11:11\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Make sure host bar is available with iSCSI ports\n  purefa_host:\n    host: bar\n    protocol: iscsi\n    iqn:\n    - iqn.1994-05.com.redhat:7d366003913\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n\n- name: Map host foo to volume bar\n  purefa_host:\n    host: foo\n    volume: bar\n    fa_url: 10.10.10.2\n    api_token: e31060a7-21fc-e277-6240-25983c6c4592\n'''\n\nRETURN = r'''\n'''\n\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.pure import get_system, purefa_argument_spec\n\n\ntry:\n    from purestorage import purestorage\n    HAS_PURESTORAGE = True\nexcept ImportError:\n    HAS_PURESTORAGE = False\n\n\ndef get_host(module, array):\n\n    host = None\n\n    for h in array.list_hosts():\n        if h[\"name\"] == module.params['host']:\n            host = h\n            break\n\n    return host\n\n\ndef make_host(module, array):\n\n    changed = True\n\n    if not module.check_mode:\n        host = array.create_host(module.params['host'])\n        if module.params['protocol'] == 'iscsi':\n            if module.params['iqn']:\n                array.set_host(module.params['host'], addiqnlist=module.params['iqn'])\n        if module.params['protocol'] == 'fc':\n            if module.params['wwns']:\n                array.set_host(module.params['host'], addwwnlist=module.params['wwns'])\n        if module.params['volume']:\n            array.connect_host(module.params['host'], module.params['volume'])\n    module.exit_json(changed=changed)\n\n\ndef update_host(module, array):\n    changed = False\n    host = module.params['host']\n    module.exit_json(changed=changed)\n\n\ndef delete_host(module, array):\n    changed = True\n    if not module.check_mode:\n        for vol in array.list_host_connections(module.params['host']):\n            array.disconnect_host(module.params['host'], vol[\"vol\"])\n        array.delete_host(module.params['host'])\n    module.exit_json(changed=changed)\n\n\ndef main():\n    argument_spec = purefa_argument_spec()\n    argument_spec.update(dict(\n        host=dict(type='str', required=True),\n        state=dict(type='str', default='present', choices=['absent', 'present']),\n        protocol=dict(type='str', default='iscsi', choices=['fc', 'iscsi']),\n        iqn=dict(type='list'),\n        wwns=dict(type='list'),\n        volume=dict(type='str'),\n    ))\n\n    module = AnsibleModule(argument_spec, supports_check_mode=True)\n\n    if not HAS_PURESTORAGE:\n        module.fail_json(msg='purestorage sdk is required for this module in host')\n\n    state = module.params['state']\n    protocol = module.params['protocol']\n    array = get_system(module)\n    host = get_host(module, array)\n\n    if module.params['volume']:\n        try:\n            array.get_volume(module.params['volume'])\n        except:\n            module.fail_json(msg='Volume {} not found'.format(module.params['volume']))\n\n    if host and state == 'present':\n        update_host(module, array)\n    elif host and state == 'absent':\n        delete_host(module, array)\n    elif host is None and state == 'absent':\n        module.exit_json(changed=False)\n    else:\n        make_host(module, array)\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "purefa_host.py", "id": "ecd390c8c610745ad3648edb1b316f62", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/storage/purestorage/purefa_host.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
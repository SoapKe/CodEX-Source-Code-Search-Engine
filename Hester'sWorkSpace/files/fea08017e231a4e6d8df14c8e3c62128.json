{"author": "odoo", "code": "# -*- coding: utf-8 -*-\n\nfrom odoo.tests import common\n\n\nclass TestStockCommon(common.TransactionCase):\n\n    def setUp(self):\n        super(TestStockCommon, self).setUp()\n\n        self.ProductObj = self.env['product.product']\n        self.UomObj = self.env['product.uom']\n        self.PartnerObj = self.env['res.partner']\n        self.ModelDataObj = self.env['ir.model.data']\n        self.StockPackObj = self.env['stock.move.line']\n        self.StockQuantObj = self.env['stock.quant']\n        self.PickingObj = self.env['stock.picking']\n        self.MoveObj = self.env['stock.move']\n        self.InvObj = self.env['stock.inventory']\n        self.InvLineObj = self.env['stock.inventory.line']\n        self.LotObj = self.env['stock.production.lot']\n\n        \n        self.partner_agrolite_id = self.ModelDataObj.xmlid_to_res_id('base.res_partner_2')\n        self.partner_delta_id = self.ModelDataObj.xmlid_to_res_id('base.res_partner_4')\n        self.picking_type_in = self.ModelDataObj.xmlid_to_res_id('stock.picking_type_in')\n        self.picking_type_out = self.ModelDataObj.xmlid_to_res_id('stock.picking_type_out')\n        self.supplier_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_suppliers')\n        self.stock_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_stock')\n        self.pack_location = self.ModelDataObj.xmlid_to_res_id('stock.location_pack_zone')\n        self.output_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_output')\n        self.customer_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_customers')\n        self.categ_unit = self.ModelDataObj.xmlid_to_res_id('product.product_uom_categ_unit')\n        self.categ_kgm = self.ModelDataObj.xmlid_to_res_id('product.product_uom_categ_kgm')\n\n        \n        self.productA = self.ProductObj.create({'name': 'Product A', 'type': 'product'})\n        self.productB = self.ProductObj.create({'name': 'Product B', 'type': 'product'})\n        self.productC = self.ProductObj.create({'name': 'Product C', 'type': 'product'})\n        self.productD = self.ProductObj.create({'name': 'Product D', 'type': 'product'})\n        self.productE = self.ProductObj.create({'name': 'Product E', 'type': 'product'})\n\n        \n        self.uom_kg = self.UomObj.create({\n            'name': 'Test-KG',\n            'category_id': self.categ_kgm,\n            'factor_inv': 1,\n            'factor': 1,\n            'uom_type': 'reference',\n            'rounding': 0.000001})\n        self.uom_tone = self.UomObj.create({\n            'name': 'Test-Tone',\n            'category_id': self.categ_kgm,\n            'uom_type': 'bigger',\n            'factor_inv': 1000.0,\n            'rounding': 0.001})\n        self.uom_gm = self.UomObj.create({\n            'name': 'Test-G',\n            'category_id': self.categ_kgm,\n            'uom_type': 'smaller',\n            'factor': 1000.0,\n            'rounding': 0.001})\n        self.uom_mg = self.UomObj.create({\n            'name': 'Test-MG',\n            'category_id': self.categ_kgm,\n            'uom_type': 'smaller',\n            'factor': 100000.0,\n            'rounding': 0.001})\n        \n        self.uom_unit = self.UomObj.create({\n            'name': 'Test-Unit',\n            'category_id': self.categ_unit,\n            'factor': 1,\n            'uom_type': 'reference',\n            'rounding': 1.0})\n        self.uom_dozen = self.UomObj.create({\n            'name': 'Test-DozenA',\n            'category_id': self.categ_unit,\n            'factor_inv': 12,\n            'uom_type': 'bigger',\n            'rounding': 0.001})\n        self.uom_sdozen = self.UomObj.create({\n            'name': 'Test-SDozenA',\n            'category_id': self.categ_unit,\n            'factor_inv': 144,\n            'uom_type': 'bigger',\n            'rounding': 0.001})\n        self.uom_sdozen_round = self.UomObj.create({\n            'name': 'Test-SDozenA Round',\n            'category_id': self.categ_unit,\n            'factor_inv': 144,\n            'uom_type': 'bigger',\n            'rounding': 1.0})\n\n        \n        self.DozA = self.ProductObj.create({'name': 'Dozon-A', 'type': 'product', 'uom_id': self.uom_dozen.id, 'uom_po_id': self.uom_dozen.id})\n        self.SDozA = self.ProductObj.create({'name': 'SuperDozon-A', 'type': 'product', 'uom_id': self.uom_sdozen.id, 'uom_po_id': self.uom_sdozen.id})\n        self.SDozARound = self.ProductObj.create({'name': 'SuperDozenRound-A', 'type': 'product', 'uom_id': self.uom_sdozen_round.id, 'uom_po_id': self.uom_sdozen_round.id})\n        self.UnitA = self.ProductObj.create({'name': 'Unit-A', 'type': 'product'})\n        self.kgB = self.ProductObj.create({'name': 'kg-B', 'type': 'product', 'uom_id': self.uom_kg.id, 'uom_po_id': self.uom_kg.id})\n        self.gB = self.ProductObj.create({'name': 'g-B', 'type': 'product', 'uom_id': self.uom_gm.id, 'uom_po_id': self.uom_gm.id})\n", "comments": "      coding  utf 8        model data    product created a  b  c  d    configure unit measure     check unit    product different unit measure  ", "content": "# -*- coding: utf-8 -*-\n\nfrom odoo.tests import common\n\n\nclass TestStockCommon(common.TransactionCase):\n\n    def setUp(self):\n        super(TestStockCommon, self).setUp()\n\n        self.ProductObj = self.env['product.product']\n        self.UomObj = self.env['product.uom']\n        self.PartnerObj = self.env['res.partner']\n        self.ModelDataObj = self.env['ir.model.data']\n        self.StockPackObj = self.env['stock.move.line']\n        self.StockQuantObj = self.env['stock.quant']\n        self.PickingObj = self.env['stock.picking']\n        self.MoveObj = self.env['stock.move']\n        self.InvObj = self.env['stock.inventory']\n        self.InvLineObj = self.env['stock.inventory.line']\n        self.LotObj = self.env['stock.production.lot']\n\n        # Model Data\n        self.partner_agrolite_id = self.ModelDataObj.xmlid_to_res_id('base.res_partner_2')\n        self.partner_delta_id = self.ModelDataObj.xmlid_to_res_id('base.res_partner_4')\n        self.picking_type_in = self.ModelDataObj.xmlid_to_res_id('stock.picking_type_in')\n        self.picking_type_out = self.ModelDataObj.xmlid_to_res_id('stock.picking_type_out')\n        self.supplier_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_suppliers')\n        self.stock_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_stock')\n        self.pack_location = self.ModelDataObj.xmlid_to_res_id('stock.location_pack_zone')\n        self.output_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_output')\n        self.customer_location = self.ModelDataObj.xmlid_to_res_id('stock.stock_location_customers')\n        self.categ_unit = self.ModelDataObj.xmlid_to_res_id('product.product_uom_categ_unit')\n        self.categ_kgm = self.ModelDataObj.xmlid_to_res_id('product.product_uom_categ_kgm')\n\n        # Product Created A, B, C, D\n        self.productA = self.ProductObj.create({'name': 'Product A', 'type': 'product'})\n        self.productB = self.ProductObj.create({'name': 'Product B', 'type': 'product'})\n        self.productC = self.ProductObj.create({'name': 'Product C', 'type': 'product'})\n        self.productD = self.ProductObj.create({'name': 'Product D', 'type': 'product'})\n        self.productE = self.ProductObj.create({'name': 'Product E', 'type': 'product'})\n\n        # Configure unit of measure.\n        self.uom_kg = self.UomObj.create({\n            'name': 'Test-KG',\n            'category_id': self.categ_kgm,\n            'factor_inv': 1,\n            'factor': 1,\n            'uom_type': 'reference',\n            'rounding': 0.000001})\n        self.uom_tone = self.UomObj.create({\n            'name': 'Test-Tone',\n            'category_id': self.categ_kgm,\n            'uom_type': 'bigger',\n            'factor_inv': 1000.0,\n            'rounding': 0.001})\n        self.uom_gm = self.UomObj.create({\n            'name': 'Test-G',\n            'category_id': self.categ_kgm,\n            'uom_type': 'smaller',\n            'factor': 1000.0,\n            'rounding': 0.001})\n        self.uom_mg = self.UomObj.create({\n            'name': 'Test-MG',\n            'category_id': self.categ_kgm,\n            'uom_type': 'smaller',\n            'factor': 100000.0,\n            'rounding': 0.001})\n        # Check Unit\n        self.uom_unit = self.UomObj.create({\n            'name': 'Test-Unit',\n            'category_id': self.categ_unit,\n            'factor': 1,\n            'uom_type': 'reference',\n            'rounding': 1.0})\n        self.uom_dozen = self.UomObj.create({\n            'name': 'Test-DozenA',\n            'category_id': self.categ_unit,\n            'factor_inv': 12,\n            'uom_type': 'bigger',\n            'rounding': 0.001})\n        self.uom_sdozen = self.UomObj.create({\n            'name': 'Test-SDozenA',\n            'category_id': self.categ_unit,\n            'factor_inv': 144,\n            'uom_type': 'bigger',\n            'rounding': 0.001})\n        self.uom_sdozen_round = self.UomObj.create({\n            'name': 'Test-SDozenA Round',\n            'category_id': self.categ_unit,\n            'factor_inv': 144,\n            'uom_type': 'bigger',\n            'rounding': 1.0})\n\n        # Product for different unit of measure.\n        self.DozA = self.ProductObj.create({'name': 'Dozon-A', 'type': 'product', 'uom_id': self.uom_dozen.id, 'uom_po_id': self.uom_dozen.id})\n        self.SDozA = self.ProductObj.create({'name': 'SuperDozon-A', 'type': 'product', 'uom_id': self.uom_sdozen.id, 'uom_po_id': self.uom_sdozen.id})\n        self.SDozARound = self.ProductObj.create({'name': 'SuperDozenRound-A', 'type': 'product', 'uom_id': self.uom_sdozen_round.id, 'uom_po_id': self.uom_sdozen_round.id})\n        self.UnitA = self.ProductObj.create({'name': 'Unit-A', 'type': 'product'})\n        self.kgB = self.ProductObj.create({'name': 'kg-B', 'type': 'product', 'uom_id': self.uom_kg.id, 'uom_po_id': self.uom_kg.id})\n        self.gB = self.ProductObj.create({'name': 'g-B', 'type': 'product', 'uom_id': self.uom_gm.id, 'uom_po_id': self.uom_gm.id})\n", "description": "Odoo. Open Source Apps To Grow Your Business.", "file_name": "common.py", "id": "fea08017e231a4e6d8df14c8e3c62128", "language": "Python", "project_name": "odoo", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/odoo-odoo/odoo-odoo-b25250f/addons/stock/tests/common.py", "save_time": "", "source": "", "update_at": "2018-03-18T08:30:22Z", "url": "https://github.com/odoo/odoo", "wiki": true}
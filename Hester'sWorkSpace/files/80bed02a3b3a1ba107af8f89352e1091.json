{"author": "mailpile", "code": "\nimport os\nimport re\nimport subprocess\n\nos.chdir(os.path.join(os.path.dirname(__file__), '..'))\n\nEMAIL_MAPPER = {\n    '<smari@immi.is>': ('Smari McCarthy', '<smari@mailpile.is>'),\n    '<smari@mailpile.is>': ('Smari McCarthy', '<smari@mailpile.is>'),\n    '<git@pagekite.net>': ('Bjarni R. Einarsson', '<bre@mailpile.is>'),\n    '<bre@klaki.net>': ('Bjarni R. Einarsson', '<bre@mailpile.is>'),\n    '<hi@brennannovak.com>': ('Brennan Novak', '<bnvk@mailpile.is>'),\n    '<hi@bnvk.me>': ('Brennan Novak', '<bnvk@mailpile.is>'),\n    '<alexandre@alexandreviau.net>': ('Alexandre Viau', '<alexandre@alexandreviau.net>'),\n}\n\nauthors = {}\ntranslators = {}\n\n\ngit_log = subprocess.Popen(['git', 'log'], stdout=subprocess.PIPE)\nfor line in git_log.stdout:\n    if line.startswith('Author: '):\n        author, email = line[8:].strip().rsplit(' ', 1)\n        author, email = EMAIL_MAPPER.get(email, (author, email))\n        if email.endswith('@mailpile.is>'):\n            continue\n        info = authors.get(author, [email, 0])\n        info[1] += 1\n        authors[author] = info\ngit_log.wait()\nauthors = [(c, n, e) for n, (e, c) in authors.iteritems()]\n\n\nfor lang in os.listdir('shared-data/locale'):\n    po = 'shared-data/locale/%s/LC_MESSAGES/mailpile.po' % lang\n    tr = translators[lang] = ['', []]\n    try:\n        with open(po, 'r') as fd:\n            for line in fd:\n                if not line.strip():\n                    break    \n                elif line.startswith('#') and '@' in line:\n                    name = line[2:].strip().split(',')[0]\n                    if name not in tr[1]:\n                        tr[1].append(name)\n                elif line.startswith('\"Language-Team: '):\n                    tr[0] = line.split(': ')[1].split(' (')[0]   \n    except:\n        pass\n\ncode = 'shared-data/default-theme/html/page/release-notes/credits-code.html'\ni18n = 'shared-data/default-theme/html/page/release-notes/credits-i18n.html'\n\n\n\nthreshold = 0.01 * sum(c for c, n, e in authors)\nwith open(code, 'w') as fd:\n    authors.sort(key=lambda a: a[1])\n    fd.write('\\n'.join('<li class=\"commits-%s\">%s</li>' % (a[0], a[1])\n                       for a in authors if a[0] >= threshold))\n\nwith open(i18n, 'w') as fd:\n    email = re.compile(r'\\s+<[^>]+>')\n    first = True\n    langs = translators.keys()\n    langs.sort(key=lambda l: translators[l][0].lower())\n    for lang in langs:\n        language, tlist = translators[lang]\n        tlist.sort(key=lambda n: n.lower())\n        if language:\n            if not first:\n                fd.write('</ul>\\n')\n            fd.write('<li class=\"language\"><b>%s</b></li><ul>\\n' % language)\n            fd.write(''.join('  <li>%s</li>\\n' % re.sub(email, '', n)\n                             for n in tlist))\n            first = False\n        elif translators[lang][1]:\n            print 'wtf: %s' % translators[lang]\n    if not first:\n        fd.write('</ul>\\n')\n\nos.system('ls -l %s %s' % (code, i18n))\n", "comments": "   usr bin env python2 7    get coders git log    get translators  po files    our threshold inclusion coders list    1  total    commit count  ", "content": "#!/usr/bin/env python2.7\nimport os\nimport re\nimport subprocess\n\nos.chdir(os.path.join(os.path.dirname(__file__), '..'))\n\nEMAIL_MAPPER = {\n    '<smari@immi.is>': ('Smari McCarthy', '<smari@mailpile.is>'),\n    '<smari@mailpile.is>': ('Smari McCarthy', '<smari@mailpile.is>'),\n    '<git@pagekite.net>': ('Bjarni R. Einarsson', '<bre@mailpile.is>'),\n    '<bre@klaki.net>': ('Bjarni R. Einarsson', '<bre@mailpile.is>'),\n    '<hi@brennannovak.com>': ('Brennan Novak', '<bnvk@mailpile.is>'),\n    '<hi@bnvk.me>': ('Brennan Novak', '<bnvk@mailpile.is>'),\n    '<alexandre@alexandreviau.net>': ('Alexandre Viau', '<alexandre@alexandreviau.net>'),\n}\n\nauthors = {}\ntranslators = {}\n\n# Get coders from git log\ngit_log = subprocess.Popen(['git', 'log'], stdout=subprocess.PIPE)\nfor line in git_log.stdout:\n    if line.startswith('Author: '):\n        author, email = line[8:].strip().rsplit(' ', 1)\n        author, email = EMAIL_MAPPER.get(email, (author, email))\n        if email.endswith('@mailpile.is>'):\n            continue\n        info = authors.get(author, [email, 0])\n        info[1] += 1\n        authors[author] = info\ngit_log.wait()\nauthors = [(c, n, e) for n, (e, c) in authors.iteritems()]\n\n# Get translators from .po files\nfor lang in os.listdir('shared-data/locale'):\n    po = 'shared-data/locale/%s/LC_MESSAGES/mailpile.po' % lang\n    tr = translators[lang] = ['', []]\n    try:\n        with open(po, 'r') as fd:\n            for line in fd:\n                if not line.strip():\n                    break    \n                elif line.startswith('#') and '@' in line:\n                    name = line[2:].strip().split(',')[0]\n                    if name not in tr[1]:\n                        tr[1].append(name)\n                elif line.startswith('\"Language-Team: '):\n                    tr[0] = line.split(': ')[1].split(' (')[0]   \n    except:\n        pass\n\ncode = 'shared-data/default-theme/html/page/release-notes/credits-code.html'\ni18n = 'shared-data/default-theme/html/page/release-notes/credits-i18n.html'\n\n# Our threshold for inclusion on the coders list is >= 1% of the total\n# commit count.\nthreshold = 0.01 * sum(c for c, n, e in authors)\nwith open(code, 'w') as fd:\n    authors.sort(key=lambda a: a[1])\n    fd.write('\\n'.join('<li class=\"commits-%s\">%s</li>' % (a[0], a[1])\n                       for a in authors if a[0] >= threshold))\n\nwith open(i18n, 'w') as fd:\n    email = re.compile(r'\\s+<[^>]+>')\n    first = True\n    langs = translators.keys()\n    langs.sort(key=lambda l: translators[l][0].lower())\n    for lang in langs:\n        language, tlist = translators[lang]\n        tlist.sort(key=lambda n: n.lower())\n        if language:\n            if not first:\n                fd.write('</ul>\\n')\n            fd.write('<li class=\"language\"><b>%s</b></li><ul>\\n' % language)\n            fd.write(''.join('  <li>%s</li>\\n' % re.sub(email, '', n)\n                             for n in tlist))\n            first = False\n        elif translators[lang][1]:\n            print 'wtf: %s' % translators[lang]\n    if not first:\n        fd.write('</ul>\\n')\n\nos.system('ls -l %s %s' % (code, i18n))\n", "description": "A free & open modern, fast email client with user-friendly encryption and privacy features", "file_name": "mk-credits.py", "id": "80bed02a3b3a1ba107af8f89352e1091", "language": "Python", "project_name": "Mailpile", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/mailpile-Mailpile/mailpile-Mailpile-8ebc5fe/scripts/mk-credits.py", "save_time": "", "source": "", "update_at": "2018-03-17T23:54:52Z", "url": "https://github.com/mailpile/Mailpile", "wiki": true}
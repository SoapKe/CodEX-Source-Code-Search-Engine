{"author": "nvbn", "code": "import pytest\nfrom io import BytesIO\nfrom thefuck.rules.react_native_command_unrecognized import match, \\\n    get_new_command\nfrom thefuck.types import Command\n\noutput = \"Unrecognized command '{}'\".format\n\nstdout = b\n\n\n@pytest.mark.parametrize('command', [\n    Command('react-native star', output('star')),\n    Command('react-native android-logs', output('android-logs'))])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('gradle star', output('star')),\n    Command('react-native start', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, result', [\n    (Command('react-native star', output('star')),\n     'react-native start'),\n    (Command('react-native logsandroid -f', output('logsandroid')),\n     'react-native log-android -f')])\ndef test_get_new_command(mocker, command, result):\n    patch = mocker.patch(\n        'thefuck.rules.react_native_command_unrecognized.Popen')\n    patch.return_value.stdout = BytesIO(stdout)\n    assert get_new_command(command)[0] == result\n", "comments": "\nScanning 615 folders for symlinks in /home/nvbn/work/zcho/BookkaWebView/node_modules (6ms)\n\n  Usage: react-native [options] [command]\n\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n\n  Commands:\n\n    start [options]                    starts the webserver\n    run-ios [options]                  builds your app and starts it on iOS simulator\n    run-android [options]              builds your app and starts it on a connected Android emulator or device\n    new-library [options]              generates a native library bridge\n    bundle [options]                   builds the javascript bundle for offline use\n    unbundle [options]                 builds javascript as \"unbundle\" for offline use\n    eject [options]                    Re-create the iOS and Android folders and native code\n    link [options] [packageName]       links all native dependencies (updates native build files)\n    unlink [options] <packageName>     unlink native dependency\n    install [options] <packageName>    install and link native dependencies\n    uninstall [options] <packageName>  uninstall and unlink native dependencies\n    upgrade [options]                  upgrade your app's template files to the latest version; run this after updating the react-native version in your package.json and running npm install\n    log-android [options]              starts adb logcat\n    log-ios [options]                  starts iOS device syslog tail\n\n\n\n", "content": "import pytest\nfrom io import BytesIO\nfrom thefuck.rules.react_native_command_unrecognized import match, \\\n    get_new_command\nfrom thefuck.types import Command\n\noutput = \"Unrecognized command '{}'\".format\n\nstdout = b'''\nScanning 615 folders for symlinks in /home/nvbn/work/zcho/BookkaWebView/node_modules (6ms)\n\n  Usage: react-native [options] [command]\n\n\n  Options:\n\n    -V, --version  output the version number\n    -h, --help     output usage information\n\n\n  Commands:\n\n    start [options]                    starts the webserver\n    run-ios [options]                  builds your app and starts it on iOS simulator\n    run-android [options]              builds your app and starts it on a connected Android emulator or device\n    new-library [options]              generates a native library bridge\n    bundle [options]                   builds the javascript bundle for offline use\n    unbundle [options]                 builds javascript as \"unbundle\" for offline use\n    eject [options]                    Re-create the iOS and Android folders and native code\n    link [options] [packageName]       links all native dependencies (updates native build files)\n    unlink [options] <packageName>     unlink native dependency\n    install [options] <packageName>    install and link native dependencies\n    uninstall [options] <packageName>  uninstall and unlink native dependencies\n    upgrade [options]                  upgrade your app's template files to the latest version; run this after updating the react-native version in your package.json and running npm install\n    log-android [options]              starts adb logcat\n    log-ios [options]                  starts iOS device syslog tail\n'''\n\n\n@pytest.mark.parametrize('command', [\n    Command('react-native star', output('star')),\n    Command('react-native android-logs', output('android-logs'))])\ndef test_match(command):\n    assert match(command)\n\n\n@pytest.mark.parametrize('command', [\n    Command('gradle star', output('star')),\n    Command('react-native start', '')])\ndef test_not_match(command):\n    assert not match(command)\n\n\n@pytest.mark.parametrize('command, result', [\n    (Command('react-native star', output('star')),\n     'react-native start'),\n    (Command('react-native logsandroid -f', output('logsandroid')),\n     'react-native log-android -f')])\ndef test_get_new_command(mocker, command, result):\n    patch = mocker.patch(\n        'thefuck.rules.react_native_command_unrecognized.Popen')\n    patch.return_value.stdout = BytesIO(stdout)\n    assert get_new_command(command)[0] == result\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_react_native_command_unrecognized.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_react_native_command_unrecognized.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
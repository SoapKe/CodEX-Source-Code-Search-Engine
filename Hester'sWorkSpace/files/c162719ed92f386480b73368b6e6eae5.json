{"author": "nvbn", "code": "import pytest\nfrom mock import Mock\nfrom thefuck.entrypoints.fix_command import _get_raw_command\n\n\nclass TestGetRawCommand(object):\n    def test_from_force_command_argument(self):\n        known_args = Mock(force_command=['git', 'brunch'])\n        assert _get_raw_command(known_args) == ['git', 'brunch']\n\n    def test_from_command_argument(self, os_environ):\n        os_environ['TF_HISTORY'] = None\n        known_args = Mock(force_command=None,\n                          command=['sl'])\n        assert _get_raw_command(known_args) == ['sl']\n\n    @pytest.mark.parametrize('history, result', [\n        ('git br', 'git br'),\n        ('git br\\nfcuk', 'git br'),\n        ('git br\\nfcuk\\nls', 'ls'),\n        ('git br\\nfcuk\\nls\\nfuk', 'ls')])\n    def test_from_history(self, os_environ, history, result):\n        os_environ['TF_HISTORY'] = history\n        known_args = Mock(force_command=None,\n                          command=None)\n        assert _get_raw_command(known_args) == [result]\n", "comments": "", "content": "import pytest\nfrom mock import Mock\nfrom thefuck.entrypoints.fix_command import _get_raw_command\n\n\nclass TestGetRawCommand(object):\n    def test_from_force_command_argument(self):\n        known_args = Mock(force_command=['git', 'brunch'])\n        assert _get_raw_command(known_args) == ['git', 'brunch']\n\n    def test_from_command_argument(self, os_environ):\n        os_environ['TF_HISTORY'] = None\n        known_args = Mock(force_command=None,\n                          command=['sl'])\n        assert _get_raw_command(known_args) == ['sl']\n\n    @pytest.mark.parametrize('history, result', [\n        ('git br', 'git br'),\n        ('git br\\nfcuk', 'git br'),\n        ('git br\\nfcuk\\nls', 'ls'),\n        ('git br\\nfcuk\\nls\\nfuk', 'ls')])\n    def test_from_history(self, os_environ, history, result):\n        os_environ['TF_HISTORY'] = history\n        known_args = Mock(force_command=None,\n                          command=None)\n        assert _get_raw_command(known_args) == [result]\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_fix_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/entrypoints/test_fix_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
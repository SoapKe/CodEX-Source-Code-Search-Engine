{"author": "django", "code": "from django.db import models\n\n\nclass Building(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"Building: %s\" % self.name\n\n\nclass Device(models.Model):\n    building = models.ForeignKey('Building', models.CASCADE)\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"device '%s' in building %s\" % (self.name, self.building)\n\n\nclass Port(models.Model):\n    device = models.ForeignKey('Device', models.CASCADE)\n    port_number = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"%s/%s\" % (self.device.name, self.port_number)\n\n\nclass Connection(models.Model):\n    start = models.ForeignKey(\n        Port,\n        models.CASCADE,\n        related_name='connection_start',\n        unique=True,\n    )\n    end = models.ForeignKey(\n        Port,\n        models.CASCADE,\n        related_name='connection_end',\n        unique=True,\n    )\n\n    def __str__(self):\n        return \"%s to %s\" % (self.start, self.end)\n\n\n\n\n\nclass TUser(models.Model):\n    name = models.CharField(max_length=200)\n\n\nclass Person(models.Model):\n    user = models.ForeignKey(TUser, models.CASCADE, unique=True)\n\n\nclass Organizer(models.Model):\n    person = models.ForeignKey(Person, models.CASCADE)\n\n\nclass Student(models.Model):\n    person = models.ForeignKey(Person, models.CASCADE)\n\n\nclass Class(models.Model):\n    org = models.ForeignKey(Organizer, models.CASCADE)\n\n\nclass Enrollment(models.Model):\n    std = models.ForeignKey(Student, models.CASCADE)\n    cls = models.ForeignKey(Class, models.CASCADE)\n\n\n\n\nclass Country(models.Model):\n    name = models.CharField(max_length=50)\n\n\nclass State(models.Model):\n    name = models.CharField(max_length=50)\n    country = models.ForeignKey(Country, models.CASCADE)\n\n\nclass ClientStatus(models.Model):\n    name = models.CharField(max_length=50)\n\n\nclass Client(models.Model):\n    name = models.CharField(max_length=50)\n    state = models.ForeignKey(State, models.SET_NULL, null=True)\n    status = models.ForeignKey(ClientStatus, models.CASCADE)\n\n\nclass SpecialClient(Client):\n    value = models.IntegerField()\n\n\n\n\nclass Parent(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return self.name\n\n\nclass Child(Parent):\n    value = models.IntegerField()\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=10)\n    child = models.ForeignKey(Child, models.SET_NULL, null=True)\n\n    def __str__(self):\n        return self.name\n\n\n\n\nclass Fowl(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return self.name\n\n\nclass Hen(Fowl):\n    pass\n\n\nclass Chick(Fowl):\n    mother = models.ForeignKey(Hen, models.CASCADE)\n\n\nclass Base(models.Model):\n    name = models.CharField(max_length=10)\n    lots_of_text = models.TextField()\n\n    class Meta:\n        abstract = True\n\n\nclass A(Base):\n    a_field = models.CharField(max_length=10)\n\n\nclass B(Base):\n    b_field = models.CharField(max_length=10)\n\n\nclass C(Base):\n    c_a = models.ForeignKey(A, models.CASCADE)\n    c_b = models.ForeignKey(B, models.CASCADE)\n    is_published = models.BooleanField(default=False)\n", "comments": "  another non tree hierarchy exercises code paths similar    example  slightly different configuration     models testing bug  8036     some model inheritance exercises    models testing bug  19870  ", "content": "from django.db import models\n\n\nclass Building(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"Building: %s\" % self.name\n\n\nclass Device(models.Model):\n    building = models.ForeignKey('Building', models.CASCADE)\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"device '%s' in building %s\" % (self.name, self.building)\n\n\nclass Port(models.Model):\n    device = models.ForeignKey('Device', models.CASCADE)\n    port_number = models.CharField(max_length=10)\n\n    def __str__(self):\n        return \"%s/%s\" % (self.device.name, self.port_number)\n\n\nclass Connection(models.Model):\n    start = models.ForeignKey(\n        Port,\n        models.CASCADE,\n        related_name='connection_start',\n        unique=True,\n    )\n    end = models.ForeignKey(\n        Port,\n        models.CASCADE,\n        related_name='connection_end',\n        unique=True,\n    )\n\n    def __str__(self):\n        return \"%s to %s\" % (self.start, self.end)\n\n# Another non-tree hierarchy that exercises code paths similar to the above\n# example, but in a slightly different configuration.\n\n\nclass TUser(models.Model):\n    name = models.CharField(max_length=200)\n\n\nclass Person(models.Model):\n    user = models.ForeignKey(TUser, models.CASCADE, unique=True)\n\n\nclass Organizer(models.Model):\n    person = models.ForeignKey(Person, models.CASCADE)\n\n\nclass Student(models.Model):\n    person = models.ForeignKey(Person, models.CASCADE)\n\n\nclass Class(models.Model):\n    org = models.ForeignKey(Organizer, models.CASCADE)\n\n\nclass Enrollment(models.Model):\n    std = models.ForeignKey(Student, models.CASCADE)\n    cls = models.ForeignKey(Class, models.CASCADE)\n\n# Models for testing bug #8036.\n\n\nclass Country(models.Model):\n    name = models.CharField(max_length=50)\n\n\nclass State(models.Model):\n    name = models.CharField(max_length=50)\n    country = models.ForeignKey(Country, models.CASCADE)\n\n\nclass ClientStatus(models.Model):\n    name = models.CharField(max_length=50)\n\n\nclass Client(models.Model):\n    name = models.CharField(max_length=50)\n    state = models.ForeignKey(State, models.SET_NULL, null=True)\n    status = models.ForeignKey(ClientStatus, models.CASCADE)\n\n\nclass SpecialClient(Client):\n    value = models.IntegerField()\n\n# Some model inheritance exercises\n\n\nclass Parent(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return self.name\n\n\nclass Child(Parent):\n    value = models.IntegerField()\n\n\nclass Item(models.Model):\n    name = models.CharField(max_length=10)\n    child = models.ForeignKey(Child, models.SET_NULL, null=True)\n\n    def __str__(self):\n        return self.name\n\n# Models for testing bug #19870.\n\n\nclass Fowl(models.Model):\n    name = models.CharField(max_length=10)\n\n    def __str__(self):\n        return self.name\n\n\nclass Hen(Fowl):\n    pass\n\n\nclass Chick(Fowl):\n    mother = models.ForeignKey(Hen, models.CASCADE)\n\n\nclass Base(models.Model):\n    name = models.CharField(max_length=10)\n    lots_of_text = models.TextField()\n\n    class Meta:\n        abstract = True\n\n\nclass A(Base):\n    a_field = models.CharField(max_length=10)\n\n\nclass B(Base):\n    b_field = models.CharField(max_length=10)\n\n\nclass C(Base):\n    c_a = models.ForeignKey(A, models.CASCADE)\n    c_b = models.ForeignKey(B, models.CASCADE)\n    is_published = models.BooleanField(default=False)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "models.py", "id": "bc6a255cfaf66fbcb661e13ed36be844", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/select_related_regress/models.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
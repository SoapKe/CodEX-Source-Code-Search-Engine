{"author": "aws", "code": "\n\n\n Licensed under the Apache License, Version 2.0 (the \"License\"). You\n may not use this file except in compliance with the License. A copy of\n the License is located at\n\n     http://aws.amazon.com/apache2.0/\n\n or in the \"license\" file accompanying this file. This file is\n distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n ANY KIND, either express or implied. See the License for the specific\n language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\n\nclass TestAddOptionGroup(BaseAWSCommandParamsTest):\n    maxDiff = None\n     This tests the customization where modify-option-group\n     was split into two commands add-option-group and\n     remove-option-group.  This class is testing add-option-gruop\n\n    prefix = 'rds add-option-to-option-group '\n\n    def test_add_option(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options {\"OptionName\":\"TDE\"}')\n        cmdline = self.prefix + args\n        result = {'OptionsToInclude': [{'OptionName': 'TDE'}],\n                  'OptionGroupName': 'myoptiongroup2'}\n        self.assert_params_for_cmd(cmdline, result)\n\n    def test_option_to_remove_is_not_allowed(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options-to-remove foo')\n        cmdline = self.prefix + args\n        self.assert_params_for_cmd(\n            cmdline, expected_rc=255,\n            stderr_contains='Unknown options: --options-to-remove')\n\n\nclass TestRemoveOptionGroup(BaseAWSCommandParamsTest):\n\n    prefix = 'rds remove-option-from-option-group '\n\n    def test_remove_options(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options TDE')\n        cmdline = self.prefix + args\n        result = {'OptionsToRemove': ['TDE'],\n                  'OptionGroupName': 'myoptiongroup2'}\n        self.assert_params_for_cmd(cmdline, result)\n\n    def test_option_to_add_is_not_allowed(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options-to-include {\"OptionName\":\"TDE\"}')\n        cmdline = self.prefix + args\n        self.assert_params_for_cmd(\n            cmdline, expected_rc=255,\n            stderr_contains='Unknown options: --options-to-include')\n", "comments": "   usr bin env python    copyright 2013 amazon com  inc  affiliates  all rights reserved        licensed apache license  version 2 0 (the  license )  you    may use file except compliance license  a copy    license located           http   aws amazon com apache2 0         license  file accompanying file  this file    distributed  as is  basis  without warranties or conditions of    any kind  either express implied  see license specific    language governing permissions limitations license     this tests customization modify option group    split two commands add option group    remove option group   this class testing add option gruop ", "content": "#!/usr/bin/env python\n# Copyright 2013 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\"). You\n# may not use this file except in compliance with the License. A copy of\n# the License is located at\n#\n#     http://aws.amazon.com/apache2.0/\n#\n# or in the \"license\" file accompanying this file. This file is\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific\n# language governing permissions and limitations under the License.\nfrom awscli.testutils import BaseAWSCommandParamsTest\n\n\nclass TestAddOptionGroup(BaseAWSCommandParamsTest):\n    maxDiff = None\n    # This tests the customization where modify-option-group\n    # was split into two commands add-option-group and\n    # remove-option-group.  This class is testing add-option-gruop\n\n    prefix = 'rds add-option-to-option-group '\n\n    def test_add_option(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options {\"OptionName\":\"TDE\"}')\n        cmdline = self.prefix + args\n        result = {'OptionsToInclude': [{'OptionName': 'TDE'}],\n                  'OptionGroupName': 'myoptiongroup2'}\n        self.assert_params_for_cmd(cmdline, result)\n\n    def test_option_to_remove_is_not_allowed(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options-to-remove foo')\n        cmdline = self.prefix + args\n        self.assert_params_for_cmd(\n            cmdline, expected_rc=255,\n            stderr_contains='Unknown options: --options-to-remove')\n\n\nclass TestRemoveOptionGroup(BaseAWSCommandParamsTest):\n\n    prefix = 'rds remove-option-from-option-group '\n\n    def test_remove_options(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options TDE')\n        cmdline = self.prefix + args\n        result = {'OptionsToRemove': ['TDE'],\n                  'OptionGroupName': 'myoptiongroup2'}\n        self.assert_params_for_cmd(cmdline, result)\n\n    def test_option_to_add_is_not_allowed(self):\n        args = ('--option-group-name myoptiongroup2 '\n                '--options-to-include {\"OptionName\":\"TDE\"}')\n        cmdline = self.prefix + args\n        self.assert_params_for_cmd(\n            cmdline, expected_rc=255,\n            stderr_contains='Unknown options: --options-to-include')\n", "description": "Universal Command Line Interface for Amazon Web Services", "file_name": "test_modify_option_group.py", "id": "7568a75cd6e173cc38e7fd13a2103ed1", "language": "Python", "project_name": "aws-cli", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/aws-aws-cli/aws-aws-cli-d705c60/tests/functional/rds/test_modify_option_group.py", "save_time": "", "source": "", "update_at": "2018-03-18T15:33:26Z", "url": "https://github.com/aws/aws-cli", "wiki": false}
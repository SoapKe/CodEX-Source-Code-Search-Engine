{"author": "tgalal", "code": "from .notification_groups import GroupsNotificationProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nclass AddGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    \n    def __init__(self, _id, _from, timestamp, notify, participant, offline, participants):\n        super(AddGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant, offline)\n        self.setParticipants(participants)\n\n    def setParticipants(self, participants):\n        assert type(participants) is list, \"Must be a list of jids, got %s instead.\" % type(participants)\n        self.participants = participants\n\n    def getParticipants(self):\n        return self.participants\n\n    def __str__(self):\n        out = super(AddGroupsNotificationProtocolEntity, self).__str__()\n        out += \"Participants: %s\\n\" % \" \".join(self.getParticipants())\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(AddGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        addNode = ProtocolTreeNode(\"add\")\n        participants = []\n        for jid in self.getParticipants():\n            pnode = ProtocolTreeNode(\"participant\", {\"jid\": jid})\n            participants.append(pnode)\n\n        addNode.addChildren(participants)\n        node.addChild(addNode)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        addNode = node.getChild(\"add\")\n        participants = []\n        for p in addNode.getAllChildren(\"participant\"):\n            participants.append(p[\"jid\"])\n\n        return AddGroupsNotificationProtocolEntity(\n            node[\"id\"], node[\"from\"], node[\"t\"], node[\"notify\"], node[\"participant\"], node[\"offline\"],\n            participants\n        )", "comments": "     notification participant    participant jiid       timestamp       group jid    type  w gp2  id    id    notify  whatsapp    add   participant jid    jid 1       participant    add    notification          ", "content": "from .notification_groups import GroupsNotificationProtocolEntity\nfrom yowsup.structs import ProtocolTreeNode\nclass AddGroupsNotificationProtocolEntity(GroupsNotificationProtocolEntity):\n    '''\n<notification participant=\"{{participant_jiid}}\" t=\"{{TIMESTAMP}}\" from=\"{{group_jid}}\" type=\"w:gp2\" id=\"{{id}}\" notify=\"WhatsApp\">\n<add>\n<participant jid=\"{{JID_1}}\">\n</participant>\n</add>\n</notification>\n    '''\n    def __init__(self, _id, _from, timestamp, notify, participant, offline, participants):\n        super(AddGroupsNotificationProtocolEntity, self).__init__(_id, _from, timestamp, notify, participant, offline)\n        self.setParticipants(participants)\n\n    def setParticipants(self, participants):\n        assert type(participants) is list, \"Must be a list of jids, got %s instead.\" % type(participants)\n        self.participants = participants\n\n    def getParticipants(self):\n        return self.participants\n\n    def __str__(self):\n        out = super(AddGroupsNotificationProtocolEntity, self).__str__()\n        out += \"Participants: %s\\n\" % \" \".join(self.getParticipants())\n        return out\n\n    def toProtocolTreeNode(self):\n        node = super(AddGroupsNotificationProtocolEntity, self).toProtocolTreeNode()\n        addNode = ProtocolTreeNode(\"add\")\n        participants = []\n        for jid in self.getParticipants():\n            pnode = ProtocolTreeNode(\"participant\", {\"jid\": jid})\n            participants.append(pnode)\n\n        addNode.addChildren(participants)\n        node.addChild(addNode)\n\n        return node\n\n    @staticmethod\n    def fromProtocolTreeNode(node):\n        addNode = node.getChild(\"add\")\n        participants = []\n        for p in addNode.getAllChildren(\"participant\"):\n            participants.append(p[\"jid\"])\n\n        return AddGroupsNotificationProtocolEntity(\n            node[\"id\"], node[\"from\"], node[\"t\"], node[\"notify\"], node[\"participant\"], node[\"offline\"],\n            participants\n        )", "description": "The python WhatsApp library", "file_name": "notification_groups_add.py", "id": "b004319435d36647d3aab225f0ef1ae1", "language": "Python", "project_name": "yowsup", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/tgalal-yowsup/tgalal-yowsup-03795cc/yowsup/layers/protocol_groups/protocolentities/notification_groups_add.py", "save_time": "", "source": "", "update_at": "2018-03-18T13:01:40Z", "url": "https://github.com/tgalal/yowsup", "wiki": true}
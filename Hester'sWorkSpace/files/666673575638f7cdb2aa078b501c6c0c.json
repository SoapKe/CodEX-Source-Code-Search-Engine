{"author": "nvbn", "code": "import pytest\nfrom thefuck.rules.composer_not_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef composer_not_command():\n    \n    return (\n        '\\n'\n        '\\n'\n        '                                    \\n'\n        '  [InvalidArgumentException]        \\n'\n        '  Command \"udpate\" is not defined.  \\n'\n        '  Did you mean this?                \\n'\n        '      update                        \\n'\n        '                                    \\n'\n        '\\n'\n        '\\n'\n    )\n\n\n@pytest.fixture\ndef composer_not_command_one_of_this():\n    \n    return (\n        '\\n'\n        '\\n'\n        '                                   \\n'\n        '  [InvalidArgumentException]       \\n'\n        '  Command \"pdate\" is not defined.  \\n'\n        '  Did you mean one of these?       \\n'\n        '      selfupdate                   \\n'\n        '      self-update                  \\n'\n        '      update                       \\n'\n        '                                   \\n'\n        '\\n'\n        '\\n'\n    )\n\n\ndef test_match(composer_not_command, composer_not_command_one_of_this):\n    assert match(Command('composer udpate',\n                         composer_not_command))\n    assert match(Command('composer pdate',\n                         composer_not_command_one_of_this))\n    assert not match(Command('ls update', composer_not_command))\n\n\ndef test_get_new_command(composer_not_command, composer_not_command_one_of_this):\n    assert (get_new_command(Command('composer udpate',\n                                    composer_not_command))\n            == 'composer update')\n    assert (get_new_command(Command('composer pdate',\n                                    composer_not_command_one_of_this))\n            == 'composer selfupdate')\n", "comments": "# that weird spacing is part of the actual command output\n# that weird spacing is part of the actual command output\n", "content": "import pytest\nfrom thefuck.rules.composer_not_command import match, get_new_command\nfrom thefuck.types import Command\n\n\n@pytest.fixture\ndef composer_not_command():\n    # that weird spacing is part of the actual command output\n    return (\n        '\\n'\n        '\\n'\n        '                                    \\n'\n        '  [InvalidArgumentException]        \\n'\n        '  Command \"udpate\" is not defined.  \\n'\n        '  Did you mean this?                \\n'\n        '      update                        \\n'\n        '                                    \\n'\n        '\\n'\n        '\\n'\n    )\n\n\n@pytest.fixture\ndef composer_not_command_one_of_this():\n    # that weird spacing is part of the actual command output\n    return (\n        '\\n'\n        '\\n'\n        '                                   \\n'\n        '  [InvalidArgumentException]       \\n'\n        '  Command \"pdate\" is not defined.  \\n'\n        '  Did you mean one of these?       \\n'\n        '      selfupdate                   \\n'\n        '      self-update                  \\n'\n        '      update                       \\n'\n        '                                   \\n'\n        '\\n'\n        '\\n'\n    )\n\n\ndef test_match(composer_not_command, composer_not_command_one_of_this):\n    assert match(Command('composer udpate',\n                         composer_not_command))\n    assert match(Command('composer pdate',\n                         composer_not_command_one_of_this))\n    assert not match(Command('ls update', composer_not_command))\n\n\ndef test_get_new_command(composer_not_command, composer_not_command_one_of_this):\n    assert (get_new_command(Command('composer udpate',\n                                    composer_not_command))\n            == 'composer update')\n    assert (get_new_command(Command('composer pdate',\n                                    composer_not_command_one_of_this))\n            == 'composer selfupdate')\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "test_composer_not_command.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/tests/rules/test_composer_not_command.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
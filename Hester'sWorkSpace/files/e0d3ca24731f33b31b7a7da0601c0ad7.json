{"author": "getsentry", "code": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass ProjectSavedSearchesSettingsTest(AcceptanceTestCase):\n    def setUp(self):\n        super(ProjectSavedSearchesSettingsTest, self).setUp()\n        self.user = self.create_user('foo@example.com')\n        self.org = self.create_organization(\n            name='Rowdy Tiger',\n            owner=None,\n        )\n        self.team = self.create_team(organization=self.org, name='Mariachi Band')\n        self.project = self.create_project(\n            organization=self.org,\n            teams=[self.team],\n            name='Bengal',\n        )\n        self.create_member(\n            user=self.user,\n            organization=self.org,\n            role='owner',\n            teams=[self.team],\n        )\n\n        self.login_as(self.user)\n\n    def test_saved_searches(self):\n        path = '/{}/{}/settings/saved-searches/'.format(self.org.slug, self.project.slug)\n        self.browser.get(path)\n        self.browser.wait_until_not('.loading-indicator')\n        self.browser.snapshot('project settings - saved searches')\n", "comments": "", "content": "from __future__ import absolute_import\n\nfrom sentry.testutils import AcceptanceTestCase\n\n\nclass ProjectSavedSearchesSettingsTest(AcceptanceTestCase):\n    def setUp(self):\n        super(ProjectSavedSearchesSettingsTest, self).setUp()\n        self.user = self.create_user('foo@example.com')\n        self.org = self.create_organization(\n            name='Rowdy Tiger',\n            owner=None,\n        )\n        self.team = self.create_team(organization=self.org, name='Mariachi Band')\n        self.project = self.create_project(\n            organization=self.org,\n            teams=[self.team],\n            name='Bengal',\n        )\n        self.create_member(\n            user=self.user,\n            organization=self.org,\n            role='owner',\n            teams=[self.team],\n        )\n\n        self.login_as(self.user)\n\n    def test_saved_searches(self):\n        path = '/{}/{}/settings/saved-searches/'.format(self.org.slug, self.project.slug)\n        self.browser.get(path)\n        self.browser.wait_until_not('.loading-indicator')\n        self.browser.snapshot('project settings - saved searches')\n", "description": "Sentry is a cross-platform crash reporting and aggregation platform.", "file_name": "test_project_saved_searches_settings.py", "id": "e0d3ca24731f33b31b7a7da0601c0ad7", "language": "Python", "project_name": "sentry", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/getsentry-sentry/getsentry-sentry-6a9c7e2/tests/acceptance/test_project_saved_searches_settings.py", "save_time": "", "source": "", "update_at": "2018-03-14T01:23:24Z", "url": "https://github.com/getsentry/sentry", "wiki": false}
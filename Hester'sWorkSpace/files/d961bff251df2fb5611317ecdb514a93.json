{"author": "django", "code": "from django.shortcuts import render, render_to_response\n\n\ndef render_to_response_view(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_to_response_view_with_multiple_templates(request):\n    return render_to_response([\n        'shortcuts/no_such_template.html',\n        'shortcuts/render_test.html',\n    ], {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_to_response_view_with_content_type(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, content_type='application/x-rendertest')\n\n\ndef render_to_response_view_with_status(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, status=403)\n\n\ndef render_to_response_view_with_using(request):\n    using = request.GET.get('using')\n    return render_to_response('shortcuts/using.html', using=using)\n\n\ndef context_processor(request):\n    return {'bar': 'context processor output'}\n\n\ndef render_view(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_view_with_multiple_templates(request):\n    return render(request, [\n        'shortcuts/no_such_template.html',\n        'shortcuts/render_test.html',\n    ], {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_view_with_content_type(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, content_type='application/x-rendertest')\n\n\ndef render_view_with_status(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, status=403)\n\n\ndef render_view_with_using(request):\n    using = request.GET.get('using')\n    return render(request, 'shortcuts/using.html', using=using)\n", "comments": "", "content": "from django.shortcuts import render, render_to_response\n\n\ndef render_to_response_view(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_to_response_view_with_multiple_templates(request):\n    return render_to_response([\n        'shortcuts/no_such_template.html',\n        'shortcuts/render_test.html',\n    ], {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_to_response_view_with_content_type(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, content_type='application/x-rendertest')\n\n\ndef render_to_response_view_with_status(request):\n    return render_to_response('shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, status=403)\n\n\ndef render_to_response_view_with_using(request):\n    using = request.GET.get('using')\n    return render_to_response('shortcuts/using.html', using=using)\n\n\ndef context_processor(request):\n    return {'bar': 'context processor output'}\n\n\ndef render_view(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_view_with_multiple_templates(request):\n    return render(request, [\n        'shortcuts/no_such_template.html',\n        'shortcuts/render_test.html',\n    ], {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    })\n\n\ndef render_view_with_content_type(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, content_type='application/x-rendertest')\n\n\ndef render_view_with_status(request):\n    return render(request, 'shortcuts/render_test.html', {\n        'foo': 'FOO',\n        'bar': 'BAR',\n    }, status=403)\n\n\ndef render_view_with_using(request):\n    using = request.GET.get('using')\n    return render(request, 'shortcuts/using.html', using=using)\n", "description": "The Web framework for perfectionists with deadlines.", "file_name": "views.py", "id": "d961bff251df2fb5611317ecdb514a93", "language": "Python", "project_name": "django", "quality": "", "save_path": "/home/ubuntu/test_files/clean/network_test/django-django/django-django-acfc650/tests/shortcuts/views.py", "save_time": "", "source": "", "update_at": "2018-03-14T02:00:36Z", "url": "https://github.com/django/django", "wiki": false}
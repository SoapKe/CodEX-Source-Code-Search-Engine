{"author": "ansible", "code": "\n Copyright: Ansible Project\n GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.onyx import onyx_mlag_ipl\nfrom units.modules.utils import set_module_args\nfrom .onyx_module import TestOnyxModule, load_fixture\n\n\nclass TestOnyxMlagIplModule(TestOnyxModule):\n\n    module = onyx_mlag_ipl\n\n    def setUp(self):\n        super(TestOnyxMlagIplModule, self).setUp()\n        self._mlag_enabled = True\n        self.mock_get_config = patch.object(\n            onyx_mlag_ipl.OnyxMlagIplModule,\n            \"_show_mlag_data\")\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch(\n            'ansible.module_utils.network.onyx.onyx.load_config')\n        self.load_config = self.mock_load_config.start()\n\n    def tearDown(self):\n        super(TestOnyxMlagIplModule, self).tearDown()\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None, transport='cli'):\n        if self._mlag_enabled:\n            config_file = 'onyx_mlag_ipl_show.cfg'\n            self.get_config.return_value = load_fixture(config_file)\n        else:\n            self.get_config.return_value = None\n        self.load_config.return_value = None\n\n    def test_no_ipl_no_change(self):\n        self._mlag_enabled = False\n        set_module_args(dict(name=\"Po1\", state='absent'))\n        self.execute_module(changed=False)\n\n    def test_ipl_no_change(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.2'))\n        self.execute_module(changed=False)\n\n    def test_ipl_add(self):\n        self._mlag_enabled = False\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.2'))\n        commands = ['interface port-channel 1 ipl 1',\n                    'interface vlan 1002 ipl 1 peer-address 10.2.2.2']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_add_peer(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.4'))\n        commands = ['interface vlan 1002 ipl 1 peer-address 10.2.2.4']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_remove(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='absent'))\n        commands = ['interface port-channel 1 no ipl 1']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_change_vlan(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1003',\n                             peer_address='10.2.2.4'))\n        commands = ['interface vlan 1002 no ipl 1',\n                    'interface vlan 1003 ipl 1 peer-address 10.2.2.4']\n        self.execute_module(changed=True, commands=commands)\n", "comments": "     copyright  ansible project    gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt)    make coding python3 ish ", "content": "#\n# Copyright: Ansible Project\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch\nfrom ansible.modules.network.onyx import onyx_mlag_ipl\nfrom units.modules.utils import set_module_args\nfrom .onyx_module import TestOnyxModule, load_fixture\n\n\nclass TestOnyxMlagIplModule(TestOnyxModule):\n\n    module = onyx_mlag_ipl\n\n    def setUp(self):\n        super(TestOnyxMlagIplModule, self).setUp()\n        self._mlag_enabled = True\n        self.mock_get_config = patch.object(\n            onyx_mlag_ipl.OnyxMlagIplModule,\n            \"_show_mlag_data\")\n        self.get_config = self.mock_get_config.start()\n\n        self.mock_load_config = patch(\n            'ansible.module_utils.network.onyx.onyx.load_config')\n        self.load_config = self.mock_load_config.start()\n\n    def tearDown(self):\n        super(TestOnyxMlagIplModule, self).tearDown()\n        self.mock_get_config.stop()\n        self.mock_load_config.stop()\n\n    def load_fixtures(self, commands=None, transport='cli'):\n        if self._mlag_enabled:\n            config_file = 'onyx_mlag_ipl_show.cfg'\n            self.get_config.return_value = load_fixture(config_file)\n        else:\n            self.get_config.return_value = None\n        self.load_config.return_value = None\n\n    def test_no_ipl_no_change(self):\n        self._mlag_enabled = False\n        set_module_args(dict(name=\"Po1\", state='absent'))\n        self.execute_module(changed=False)\n\n    def test_ipl_no_change(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.2'))\n        self.execute_module(changed=False)\n\n    def test_ipl_add(self):\n        self._mlag_enabled = False\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.2'))\n        commands = ['interface port-channel 1 ipl 1',\n                    'interface vlan 1002 ipl 1 peer-address 10.2.2.2']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_add_peer(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1002',\n                             peer_address='10.2.2.4'))\n        commands = ['interface vlan 1002 ipl 1 peer-address 10.2.2.4']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_remove(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='absent'))\n        commands = ['interface port-channel 1 no ipl 1']\n        self.execute_module(changed=True, commands=commands)\n\n    def test_ipl_change_vlan(self):\n        self._mlag_enabled = True\n        set_module_args(dict(name=\"Po1\", state='present',\n                             vlan_interface='Vlan 1003',\n                             peer_address='10.2.2.4'))\n        commands = ['interface vlan 1002 no ipl 1',\n                    'interface vlan 1003 ipl 1 peer-address 10.2.2.4']\n        self.execute_module(changed=True, commands=commands)\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_onyx_mlag_ipl.py", "id": "4798f324beb96ee729a4c9a940de49d3", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/onyx/test_onyx_mlag_ipl.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
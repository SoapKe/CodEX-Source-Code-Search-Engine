{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass SprutoBaseIE(InfoExtractor):\n    def _extract_spruto(self, spruto, video_id):\n        playlist = spruto['playlist'][0]\n        title = playlist['title']\n        video_id = playlist.get('videoId') or video_id\n        thumbnail = playlist.get('posterUrl') or playlist.get('thumbnailUrl')\n        duration = int_or_none(playlist.get('duration'))\n\n        formats = [{\n            'url': f['url'],\n        } for f in playlist['video']]\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats,\n        }\n\n\nclass VimpleIE(SprutoBaseIE):\n    IE_DESC = 'Vimple - one-click video hosting'\n    _VALID_URL = r'https?://(?:player\\.vimple\\.(?:ru|co)/iframe|vimple\\.(?:ru|co))/(?P<id>[\\da-f-]{32,36})'\n    _TESTS = [{\n        'url': 'http://vimple.ru/c0f6b1687dcd4000a97ebe70068039cf',\n        'md5': '2e750a330ed211d3fd41821c6ad9a279',\n        'info_dict': {\n            'id': 'c0f6b168-7dcd-4000-a97e-be70068039cf',\n            'ext': 'mp4',\n            'title': 'Sunset',\n            'duration': 20,\n            'thumbnail': r're:https?://.*?\\.jpg',\n        },\n    }, {\n        'url': 'http://player.vimple.ru/iframe/52e1beec-1314-4a83-aeac-c61562eadbf9',\n        'only_matching': True,\n    }, {\n        'url': 'http://vimple.co/04506a053f124483b8fb05ed73899f19',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'http://player.vimple.ru/iframe/%s' % video_id, video_id)\n\n        spruto = self._parse_json(\n            self._search_regex(\n                r'sprutoData\\s*:\\s*({.+?}),\\r\\n', webpage, 'spruto data'),\n            video_id)\n\n        return self._extract_spruto(spruto, video_id)\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import int_or_none\n\n\nclass SprutoBaseIE(InfoExtractor):\n    def _extract_spruto(self, spruto, video_id):\n        playlist = spruto['playlist'][0]\n        title = playlist['title']\n        video_id = playlist.get('videoId') or video_id\n        thumbnail = playlist.get('posterUrl') or playlist.get('thumbnailUrl')\n        duration = int_or_none(playlist.get('duration'))\n\n        formats = [{\n            'url': f['url'],\n        } for f in playlist['video']]\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'thumbnail': thumbnail,\n            'duration': duration,\n            'formats': formats,\n        }\n\n\nclass VimpleIE(SprutoBaseIE):\n    IE_DESC = 'Vimple - one-click video hosting'\n    _VALID_URL = r'https?://(?:player\\.vimple\\.(?:ru|co)/iframe|vimple\\.(?:ru|co))/(?P<id>[\\da-f-]{32,36})'\n    _TESTS = [{\n        'url': 'http://vimple.ru/c0f6b1687dcd4000a97ebe70068039cf',\n        'md5': '2e750a330ed211d3fd41821c6ad9a279',\n        'info_dict': {\n            'id': 'c0f6b168-7dcd-4000-a97e-be70068039cf',\n            'ext': 'mp4',\n            'title': 'Sunset',\n            'duration': 20,\n            'thumbnail': r're:https?://.*?\\.jpg',\n        },\n    }, {\n        'url': 'http://player.vimple.ru/iframe/52e1beec-1314-4a83-aeac-c61562eadbf9',\n        'only_matching': True,\n    }, {\n        'url': 'http://vimple.co/04506a053f124483b8fb05ed73899f19',\n        'only_matching': True,\n    }]\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(\n            'http://player.vimple.ru/iframe/%s' % video_id, video_id)\n\n        spruto = self._parse_json(\n            self._search_regex(\n                r'sprutoData\\s*:\\s*({.+?}),\\r\\n', webpage, 'spruto data'),\n            video_id)\n\n        return self._extract_spruto(spruto, video_id)\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "vimple.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/vimple.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
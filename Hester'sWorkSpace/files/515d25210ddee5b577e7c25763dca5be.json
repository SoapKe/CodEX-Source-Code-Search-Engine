{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    qualities,\n    xpath_text,\n)\n\n\nclass TurboIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?turbo\\.fr/videos-voiture/(?P<id>[0-9]+)-'\n    _API_URL = 'http://www.turbo.fr/api/tv/xml.php?player_generique=player_generique&id={0:}'\n    _TEST = {\n        'url': 'http://www.turbo.fr/videos-voiture/454443-turbo-du-07-09-2014-renault-twingo-3-bentley-continental-gt-speed-ces-guide-achat-dacia.html',\n        'md5': '33f4b91099b36b5d5a91f84b5bcba600',\n        'info_dict': {\n            'id': '454443',\n            'ext': 'mp4',\n            'duration': 3715,\n            'title': 'Turbo du 07/09/2014 : Renault Twingo 3, Bentley Continental GT Speed, CES, Guide Achat Dacia... ',\n            'description': 'Turbo du 07/09/2014 : Renault Twingo 3, Bentley Continental GT Speed, CES, Guide Achat Dacia...',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        playlist = self._download_xml(self._API_URL.format(video_id), video_id)\n        item = playlist.find('./channel/item')\n        if item is None:\n            raise ExtractorError('Playlist item was not found', expected=True)\n\n        title = xpath_text(item, './title', 'title')\n        duration = int_or_none(xpath_text(item, './durate', 'duration'))\n        thumbnail = xpath_text(item, './visuel_clip', 'thumbnail')\n        description = self._html_search_meta('description', webpage)\n\n        formats = []\n        get_quality = qualities(['3g', 'sd', 'hq'])\n        for child in item:\n            m = re.search(r'url_video_(?P<quality>.+)', child.tag)\n            if m:\n                quality = compat_str(m.group('quality'))\n                formats.append({\n                    'format_id': quality,\n                    'url': child.text,\n                    'quality': get_quality(quality),\n                })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'duration': duration,\n            'thumbnail': thumbnail,\n            'description': description,\n            'formats': formats,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_str\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    qualities,\n    xpath_text,\n)\n\n\nclass TurboIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?turbo\\.fr/videos-voiture/(?P<id>[0-9]+)-'\n    _API_URL = 'http://www.turbo.fr/api/tv/xml.php?player_generique=player_generique&id={0:}'\n    _TEST = {\n        'url': 'http://www.turbo.fr/videos-voiture/454443-turbo-du-07-09-2014-renault-twingo-3-bentley-continental-gt-speed-ces-guide-achat-dacia.html',\n        'md5': '33f4b91099b36b5d5a91f84b5bcba600',\n        'info_dict': {\n            'id': '454443',\n            'ext': 'mp4',\n            'duration': 3715,\n            'title': 'Turbo du 07/09/2014 : Renault Twingo 3, Bentley Continental GT Speed, CES, Guide Achat Dacia... ',\n            'description': 'Turbo du 07/09/2014 : Renault Twingo 3, Bentley Continental GT Speed, CES, Guide Achat Dacia...',\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n\n        webpage = self._download_webpage(url, video_id)\n\n        playlist = self._download_xml(self._API_URL.format(video_id), video_id)\n        item = playlist.find('./channel/item')\n        if item is None:\n            raise ExtractorError('Playlist item was not found', expected=True)\n\n        title = xpath_text(item, './title', 'title')\n        duration = int_or_none(xpath_text(item, './durate', 'duration'))\n        thumbnail = xpath_text(item, './visuel_clip', 'thumbnail')\n        description = self._html_search_meta('description', webpage)\n\n        formats = []\n        get_quality = qualities(['3g', 'sd', 'hq'])\n        for child in item:\n            m = re.search(r'url_video_(?P<quality>.+)', child.tag)\n            if m:\n                quality = compat_str(m.group('quality'))\n                formats.append({\n                    'format_id': quality,\n                    'url': child.text,\n                    'quality': get_quality(quality),\n                })\n        self._sort_formats(formats)\n\n        return {\n            'id': video_id,\n            'title': title,\n            'duration': duration,\n            'thumbnail': thumbnail,\n            'description': description,\n            'formats': formats,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "turbo.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/turbo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
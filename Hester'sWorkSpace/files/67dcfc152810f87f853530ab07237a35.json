{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    parse_duration,\n)\n\n\nclass HornBunnyIE(InfoExtractor):\n    _VALID_URL = r'http?://(?:www\\.)?hornbunny\\.com/videos/(?P<title_dash>[a-z-]+)-(?P<id>\\d+)\\.html'\n    _TEST = {\n        'url': 'http://hornbunny.com/videos/panty-slut-jerk-off-instruction-5227.html',\n        'md5': 'e20fd862d1894b67564c96f180f43924',\n        'info_dict': {\n            'id': '5227',\n            'ext': 'mp4',\n            'title': 'panty slut jerk off instruction',\n            'duration': 550,\n            'age_limit': 18,\n            'view_count': int,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._og_search_title(webpage)\n        info_dict = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        duration = parse_duration(self._search_regex(\n            r'<strong>Runtime:</strong>\\s*([0-9:]+)</div>',\n            webpage, 'duration', fatal=False))\n        view_count = int_or_none(self._search_regex(\n            r'<strong>Views:</strong>\\s*(\\d+)</div>',\n            webpage, 'view count', fatal=False))\n\n        info_dict.update({\n            'id': video_id,\n            'title': title,\n            'duration': duration,\n            'view_count': view_count,\n            'age_limit': 18,\n        })\n\n        return info_dict\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    parse_duration,\n)\n\n\nclass HornBunnyIE(InfoExtractor):\n    _VALID_URL = r'http?://(?:www\\.)?hornbunny\\.com/videos/(?P<title_dash>[a-z-]+)-(?P<id>\\d+)\\.html'\n    _TEST = {\n        'url': 'http://hornbunny.com/videos/panty-slut-jerk-off-instruction-5227.html',\n        'md5': 'e20fd862d1894b67564c96f180f43924',\n        'info_dict': {\n            'id': '5227',\n            'ext': 'mp4',\n            'title': 'panty slut jerk off instruction',\n            'duration': 550,\n            'age_limit': 18,\n            'view_count': int,\n            'thumbnail': r're:^https?://.*\\.jpg$',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n        title = self._og_search_title(webpage)\n        info_dict = self._parse_html5_media_entries(url, webpage, video_id)[0]\n\n        duration = parse_duration(self._search_regex(\n            r'<strong>Runtime:</strong>\\s*([0-9:]+)</div>',\n            webpage, 'duration', fatal=False))\n        view_count = int_or_none(self._search_regex(\n            r'<strong>Views:</strong>\\s*(\\d+)</div>',\n            webpage, 'view count', fatal=False))\n\n        info_dict.update({\n            'id': video_id,\n            'title': title,\n            'duration': duration,\n            'view_count': view_count,\n            'age_limit': 18,\n        })\n\n        return info_dict\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "hornbunny.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/hornbunny.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
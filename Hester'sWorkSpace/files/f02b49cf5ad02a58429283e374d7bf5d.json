{"author": "rg3", "code": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_unquote\n\n\nclass XBefIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?xbef\\.com/video/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://xbef.com/video/5119-glamourous-lesbians-smoking-drinking-and-fucking',\n        'md5': 'a478b565baff61634a98f5e5338be995',\n        'info_dict': {\n            'id': '5119',\n            'ext': 'mp4',\n            'title': 'md5:7358a9faef8b7b57acda7c04816f170e',\n            'age_limit': 18,\n            'thumbnail': r're:^http://.*\\.jpg',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<h1[^>]*>(.*?)</h1>', webpage, 'title')\n\n        config_url_enc = self._download_webpage(\n            'http://xbef.com/Main/GetVideoURLEncoded/%s' % video_id, video_id,\n            note='Retrieving config URL')\n        config_url = compat_urllib_parse_unquote(config_url_enc)\n        config = self._download_xml(\n            config_url, video_id, note='Retrieving config')\n\n        video_url = config.find('./file').text\n        thumbnail = config.find('./image').text\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'age_limit': 18,\n        }\n", "comments": "", "content": "from __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..compat import compat_urllib_parse_unquote\n\n\nclass XBefIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?xbef\\.com/video/(?P<id>[0-9]+)'\n    _TEST = {\n        'url': 'http://xbef.com/video/5119-glamourous-lesbians-smoking-drinking-and-fucking',\n        'md5': 'a478b565baff61634a98f5e5338be995',\n        'info_dict': {\n            'id': '5119',\n            'ext': 'mp4',\n            'title': 'md5:7358a9faef8b7b57acda7c04816f170e',\n            'age_limit': 18,\n            'thumbnail': r're:^http://.*\\.jpg',\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n        webpage = self._download_webpage(url, video_id)\n\n        title = self._html_search_regex(\n            r'<h1[^>]*>(.*?)</h1>', webpage, 'title')\n\n        config_url_enc = self._download_webpage(\n            'http://xbef.com/Main/GetVideoURLEncoded/%s' % video_id, video_id,\n            note='Retrieving config URL')\n        config_url = compat_urllib_parse_unquote(config_url_enc)\n        config = self._download_xml(\n            config_url, video_id, note='Retrieving config')\n\n        video_url = config.find('./file').text\n        thumbnail = config.find('./image').text\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': title,\n            'thumbnail': thumbnail,\n            'age_limit': 18,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "xbef.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/xbef.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "ansible", "code": "\n# -*- coding: utf-8 -*-\n\n# (c) 2015, Billy Kimble <basslines@gmail.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = \"\"\"\nmodule: hall\nshort_description: Send notification to Hall\ndescription:\n    - \"The C(hall) module connects to the U(https://hall.com) messaging API and allows you to deliver notication messages to rooms.\"\nversion_added: \"2.0\"\nauthor: Billy Kimble (@bkimble) <basslines@gmail.com>\noptions:\n  room_token:\n    description:\n      - \"Room token provided to you by setting up the Ansible room integation on U(https://hall.com)\"\n    required: true\n  msg:\n    description:\n      - The message you wish to deliver as a notification\n    required: true\n  title:\n    description:\n      - The title of the message\n    required: true\n  picture:\n    description:\n      - >\n        The full URL to the image you wish to use for the Icon of the message. Defaults to\n        U(http://cdn2.hubspot.net/hub/330046/file-769078210-png/Official_Logos/ansible_logo_black_square_small.png?t=1421076128627)\n    required: false\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Send Hall notifiation\n  hall:\n    room_token: <hall room integration token>\n    title: Nginx\n    msg: 'Created virtual host file on {{ inventory_hostname }}'\n  delegate_to: loclahost\n\n- name: Send Hall notification if EC2 servers were created.\n  hall:\n    room_token: <hall room integration token>\n    title: Server Creation\n    msg: 'Created instance {{ item.id }} of type {{ item.instance_type }}.\\\\nInstance can be reached at {{ item.public_ip }} in the {{ item.region }} region.'\n  delegate_to: loclahost\n  when: ec2.instances|\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.urls import fetch_url\n\n\nHALL_API_ENDPOINT = 'https://hall.com/api/1/services/generic/%s'\n\n\ndef send_request_to_hall(module, room_token, payload):\n    headers = {'Content-Type': 'application/json'}\n    payload = module.jsonify(payload)\n    api_endpoint = HALL_API_ENDPOINT % (room_token)\n    response, info = fetch_url(module, api_endpoint, data=payload, headers=headers)\n    if info['status'] != 200:\n        secure_url = HALL_API_ENDPOINT % ('[redacted]')\n        module.fail_json(msg=\" failed to send %s to %s: %s\" % (payload, secure_url, info['msg']))\n\n\ndef main():\n    module = AnsibleModule(\n        argument_spec=dict(\n            room_token=dict(type='str', required=True),\n            msg=dict(type='str', required=True),\n            title=dict(type='str', required=True),\n            picture=dict(type='str',\n                         default='http://cdn2.hubspot.net/hub/330046/file-769078210-png/Official_Logos/ansible_logo_black_square_small.png?t=1421076128627'),\n        )\n    )\n\n    room_token = module.params['room_token']\n    message = module.params['msg']\n    title = module.params['title']\n    picture = module.params['picture']\n    payload = {'title': title, 'message': message, 'picture': picture}\n    send_request_to_hall(module, room_token, payload)\n    module.exit_json(msg=\"OK\")\n\n\nif __name__ == '__main__':\n    main()\n", "comments": "    module  hall short description  send notification hall description         the c(hall) module connects u(https   hall com) messaging api allows deliver notication messages rooms   version added   2 0  author  billy kimble ( bkimble)  basslines gmail com  options    room token      description           room token provided setting ansible room integation u(https   hall com)      required  true   msg      description          the message wish deliver notification     required  true   title      description          the title message     required  true   picture      description                    the full url image wish use icon message  defaults         u(http   cdn2 hubspot net hub 330046 file 769078210 png official logos ansible logo black square small png 1421076128627)     required  false      examples         name  send hall notifiation   hall      room token   hall room integration token      title  nginx     msg   created virtual host file    inventory hostname       delegate  loclahost    name  send hall notification ec2 servers created    hall      room token   hall room integration token      title  server creation     msg   created instance    item id    type    item instance type      ninstance reached    item public ip       item region    region     delegate  loclahost    ec2 instances length   0   items      ec2 instances             usr bin python        coding  utf 8        (c) 2015  billy kimble  basslines gmail com     gnu general public license v3 0  (see copying https   www gnu org licenses gpl 3 0 txt) ", "content": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n# (c) 2015, Billy Kimble <basslines@gmail.com>\n# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)\n\nfrom __future__ import absolute_import, division, print_function\n__metaclass__ = type\n\n\nANSIBLE_METADATA = {'metadata_version': '1.1',\n                    'status': ['preview'],\n                    'supported_by': 'community'}\n\n\nDOCUMENTATION = \"\"\"\nmodule: hall\nshort_description: Send notification to Hall\ndescription:\n    - \"The C(hall) module connects to the U(https://hall.com) messaging API and allows you to deliver notication messages to rooms.\"\nversion_added: \"2.0\"\nauthor: Billy Kimble (@bkimble) <basslines@gmail.com>\noptions:\n  room_token:\n    description:\n      - \"Room token provided to you by setting up the Ansible room integation on U(https://hall.com)\"\n    required: true\n  msg:\n    description:\n      - The message you wish to deliver as a notification\n    required: true\n  title:\n    description:\n      - The title of the message\n    required: true\n  picture:\n    description:\n      - >\n        The full URL to the image you wish to use for the Icon of the message. Defaults to\n        U(http://cdn2.hubspot.net/hub/330046/file-769078210-png/Official_Logos/ansible_logo_black_square_small.png?t=1421076128627)\n    required: false\n\"\"\"\n\nEXAMPLES = \"\"\"\n- name: Send Hall notifiation\n  hall:\n    room_token: <hall room integration token>\n    title: Nginx\n    msg: 'Created virtual host file on {{ inventory_hostname }}'\n  delegate_to: loclahost\n\n- name: Send Hall notification if EC2 servers were created.\n  hall:\n    room_token: <hall room integration token>\n    title: Server Creation\n    msg: 'Created instance {{ item.id }} of type {{ item.instance_type }}.\\\\nInstance can be reached at {{ item.public_ip }} in the {{ item.region }} region.'\n  delegate_to: loclahost\n  when: ec2.instances|length > 0\n  with_items: '{{ ec2.instances }}'\n\"\"\"\nfrom ansible.module_utils.basic import AnsibleModule\nfrom ansible.module_utils.urls import fetch_url\n\n\nHALL_API_ENDPOINT = 'https://hall.com/api/1/services/generic/%s'\n\n\ndef send_request_to_hall(module, room_token, payload):\n    headers = {'Content-Type': 'application/json'}\n    payload = module.jsonify(payload)\n    api_endpoint = HALL_API_ENDPOINT % (room_token)\n    response, info = fetch_url(module, api_endpoint, data=payload, headers=headers)\n    if info['status'] != 200:\n        secure_url = HALL_API_ENDPOINT % ('[redacted]')\n        module.fail_json(msg=\" failed to send %s to %s: %s\" % (payload, secure_url, info['msg']))\n\n\ndef main():\n    module = AnsibleModule(\n        argument_spec=dict(\n            room_token=dict(type='str', required=True),\n            msg=dict(type='str', required=True),\n            title=dict(type='str', required=True),\n            picture=dict(type='str',\n                         default='http://cdn2.hubspot.net/hub/330046/file-769078210-png/Official_Logos/ansible_logo_black_square_small.png?t=1421076128627'),\n        )\n    )\n\n    room_token = module.params['room_token']\n    message = module.params['msg']\n    title = module.params['title']\n    picture = module.params['picture']\n    payload = {'title': title, 'message': message, 'picture': picture}\n    send_request_to_hall(module, room_token, payload)\n    module.exit_json(msg=\"OK\")\n\n\nif __name__ == '__main__':\n    main()\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "hall.py", "id": "87a6df768ecfe6b150b21246578b3cb5", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/lib/ansible/modules/notification/hall.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
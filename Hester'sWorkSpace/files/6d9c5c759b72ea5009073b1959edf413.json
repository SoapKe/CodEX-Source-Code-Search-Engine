{"author": "nvbn", "code": "patterns = ['permission denied',\n            'eacces',\n            'pkg: insufficient privileges',\n            'you cannot perform this operation unless you are root',\n            'non-root users cannot',\n            'operation not permitted',\n            'root privilege',\n            'this command has to be run under the root user.',\n            'this operation requires root.',\n            'requested operation requires superuser privilege',\n            'must be run as root',\n            'must run as root',\n            'must be superuser',\n            'must be root',\n            'need to be root',\n            'need root',\n            'needs to be run as root',\n            'only root can ',\n            'you don\\'t have access to the history db.',\n            'authentication is required',\n            'edspermissionerror',\n            'you don\\'t have write permissions',\n            'use `sudo`',\n            'SudoRequiredError',\n            'error: insufficient privileges']\n\n\ndef match(command):\n    if command.script_parts and '&&' not in command.script_parts and command.script_parts[0] == 'sudo':\n        return False\n\n    for pattern in patterns:\n        if pattern in command.output.lower():\n            return True\n    return False\n\n\ndef get_new_command(command):\n    if '&&' in command.script:\n        return u'sudo sh -c \"{}\"'.format(\" \".join([part for part in command.script_parts if part != \"sudo\"]))\n    elif '>' in command.script:\n        return u'sudo sh -c \"{}\"'.format(command.script.replace('\"', '\\\\\"'))\n    else:\n        return u'sudo {}'.format(command.script)\n", "comments": "", "content": "patterns = ['permission denied',\n            'eacces',\n            'pkg: insufficient privileges',\n            'you cannot perform this operation unless you are root',\n            'non-root users cannot',\n            'operation not permitted',\n            'root privilege',\n            'this command has to be run under the root user.',\n            'this operation requires root.',\n            'requested operation requires superuser privilege',\n            'must be run as root',\n            'must run as root',\n            'must be superuser',\n            'must be root',\n            'need to be root',\n            'need root',\n            'needs to be run as root',\n            'only root can ',\n            'you don\\'t have access to the history db.',\n            'authentication is required',\n            'edspermissionerror',\n            'you don\\'t have write permissions',\n            'use `sudo`',\n            'SudoRequiredError',\n            'error: insufficient privileges']\n\n\ndef match(command):\n    if command.script_parts and '&&' not in command.script_parts and command.script_parts[0] == 'sudo':\n        return False\n\n    for pattern in patterns:\n        if pattern in command.output.lower():\n            return True\n    return False\n\n\ndef get_new_command(command):\n    if '&&' in command.script:\n        return u'sudo sh -c \"{}\"'.format(\" \".join([part for part in command.script_parts if part != \"sudo\"]))\n    elif '>' in command.script:\n        return u'sudo sh -c \"{}\"'.format(command.script.replace('\"', '\\\\\"'))\n    else:\n        return u'sudo {}'.format(command.script)\n", "description": "Magnificent app which corrects your previous console command.", "file_name": "sudo.py", "language": "Python", "project_name": "thefuck", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/nvbn_thefuck/nvbn-thefuck-284d49d/thefuck/rules/sudo.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:34:29Z", "url": "https://github.com/nvbn/thefuck", "wiki": true}
{"author": "ansible", "code": " (c) 2018 Red Hat Inc.\n\n This file is part of Ansible\n\n Ansible is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Ansible is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch, MagicMock\nfrom units.modules.utils import set_module_args\nfrom .junos_module import TestJunosModule\njnpr_mock = MagicMock()\nscp_mock = MagicMock()\n\nmodules = {\n    'jnpr': jnpr_mock,\n    'jnpr.junos': jnpr_mock.junos,\n    'jnpr.junos.utils': jnpr_mock.junos.utils,\n    'jnpr.junos.utils.scp': jnpr_mock.junos.utils.scp,\n    'jnpr.junos.exception': jnpr_mock.junos.execption\n}\nmodule_patcher = patch.dict('sys.modules', modules)\nmodule_patcher.start()\n\njnpr_mock.junos.utils.scp.SCP().__enter__.return_value = scp_mock\n\nfrom ansible.modules.network.junos import junos_scp\n\n\nclass TestJunosCommandModule(TestJunosModule):\n\n    module = junos_scp\n\n    def setUp(self):\n        super(TestJunosCommandModule, self).setUp()\n\n    def tearDown(self):\n        super(TestJunosCommandModule, self).tearDown()\n\n    def test_junos_scp_src(self):\n        set_module_args(dict(src='test.txt'))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.put.call_args\n        self.assertEqual(args[0], 'test.txt')\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_src_fail(self):\n        scp_mock.put.side_effect = OSError(\"[Errno 2] No such file or directory: 'text.txt'\")\n        set_module_args(dict(src='test.txt'))\n        result = self.execute_module(changed=True, failed=True)\n        self.assertEqual(result['msg'], \"[Errno 2] No such file or directory: 'text.txt'\")\n\n    def test_junos_scp_remote_src(self):\n        set_module_args(dict(src='test.txt', remote_src=True))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.get.call_args\n        self.assertEqual(args[0], 'test.txt')\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_all(self):\n        set_module_args(dict(src='test', remote_src=True, dest=\"tmp\", recursive=True))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.get.call_args\n        self.assertEqual(args[0], 'test')\n        self.assertEqual(kwargs['local_path'], 'tmp')\n        self.assertEqual(kwargs['recursive'], True)\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_device_param(self):\n        set_module_args(dict(src='test.txt',\n                             provider={'username': 'unit', 'host': 'test', 'ssh_keyfile': 'path',\n                                       'password': 'test', 'port': 234}))\n        self.execute_module(changed=True)\n        args, kwargs = jnpr_mock.junos.Device.call_args\n\n        self.assertEqual(args[0], 'test')\n        self.assertEqual(kwargs['passwd'], 'test')\n        self.assertEqual(kwargs['ssh_private_key_file'], 'path')\n        self.assertEqual(kwargs['port'], 234)\n        self.assertEqual(kwargs['user'], 'unit')\n", "comments": "  (c) 2018 red hat inc        this file part ansible       ansible free software  redistribute modify    terms gnu general public license published    free software foundation  either version 3 license     (at option) later version        ansible distributed hope useful     without any warranty  without even implied warranty    merchantability fitness for a particular purpose   see    gnu general public license details        you received copy gnu general public license    along ansible   if  see  http   www gnu org licenses       make coding python3 ish ", "content": "# (c) 2018 Red Hat Inc.\n#\n# This file is part of Ansible\n#\n# Ansible is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# Ansible is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.\n\n# Make coding more python3-ish\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.compat.tests.mock import patch, MagicMock\nfrom units.modules.utils import set_module_args\nfrom .junos_module import TestJunosModule\njnpr_mock = MagicMock()\nscp_mock = MagicMock()\n\nmodules = {\n    'jnpr': jnpr_mock,\n    'jnpr.junos': jnpr_mock.junos,\n    'jnpr.junos.utils': jnpr_mock.junos.utils,\n    'jnpr.junos.utils.scp': jnpr_mock.junos.utils.scp,\n    'jnpr.junos.exception': jnpr_mock.junos.execption\n}\nmodule_patcher = patch.dict('sys.modules', modules)\nmodule_patcher.start()\n\njnpr_mock.junos.utils.scp.SCP().__enter__.return_value = scp_mock\n\nfrom ansible.modules.network.junos import junos_scp\n\n\nclass TestJunosCommandModule(TestJunosModule):\n\n    module = junos_scp\n\n    def setUp(self):\n        super(TestJunosCommandModule, self).setUp()\n\n    def tearDown(self):\n        super(TestJunosCommandModule, self).tearDown()\n\n    def test_junos_scp_src(self):\n        set_module_args(dict(src='test.txt'))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.put.call_args\n        self.assertEqual(args[0], 'test.txt')\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_src_fail(self):\n        scp_mock.put.side_effect = OSError(\"[Errno 2] No such file or directory: 'text.txt'\")\n        set_module_args(dict(src='test.txt'))\n        result = self.execute_module(changed=True, failed=True)\n        self.assertEqual(result['msg'], \"[Errno 2] No such file or directory: 'text.txt'\")\n\n    def test_junos_scp_remote_src(self):\n        set_module_args(dict(src='test.txt', remote_src=True))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.get.call_args\n        self.assertEqual(args[0], 'test.txt')\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_all(self):\n        set_module_args(dict(src='test', remote_src=True, dest=\"tmp\", recursive=True))\n        result = self.execute_module(changed=True)\n        args, kwargs = scp_mock.get.call_args\n        self.assertEqual(args[0], 'test')\n        self.assertEqual(kwargs['local_path'], 'tmp')\n        self.assertEqual(kwargs['recursive'], True)\n        self.assertEqual(result['changed'], True)\n\n    def test_junos_scp_device_param(self):\n        set_module_args(dict(src='test.txt',\n                             provider={'username': 'unit', 'host': 'test', 'ssh_keyfile': 'path',\n                                       'password': 'test', 'port': 234}))\n        self.execute_module(changed=True)\n        args, kwargs = jnpr_mock.junos.Device.call_args\n\n        self.assertEqual(args[0], 'test')\n        self.assertEqual(kwargs['passwd'], 'test')\n        self.assertEqual(kwargs['ssh_private_key_file'], 'path')\n        self.assertEqual(kwargs['port'], 234)\n        self.assertEqual(kwargs['user'], 'unit')\n", "description": "Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. Avoid writing scripts or custom code to deploy and update your applications\u2014 automate in a language that approaches plain English, using SSH, with no agents to install on remote systems.", "file_name": "test_junos_scp.py", "id": "90dbd75bda449c3f1c0d0bfb8011d99c", "language": "Python", "project_name": "ansible", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/ansible-ansible/ansible-ansible-d30554b/test/units/modules/network/junos/test_junos_scp.py", "save_time": "", "source": "", "update_at": "2018-03-18T14:08:28Z", "url": "https://github.com/ansible/ansible", "wiki": false}
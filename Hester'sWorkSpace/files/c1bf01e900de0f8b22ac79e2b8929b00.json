{"author": "rg3", "code": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    js_to_json,\n)\n\n\nclass PornHdIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?pornhd\\.com/(?:[a-z]{2,4}/)?videos/(?P<id>\\d+)(?:/(?P<display_id>.+))?'\n    _TESTS = [{\n        'url': 'http://www.pornhd.com/videos/9864/selfie-restroom-masturbation-fun-with-chubby-cutie-hd-porn-video',\n        'md5': 'c8b964b1f0a4b5f7f28ae3a5c9f86ad5',\n        'info_dict': {\n            'id': '9864',\n            'display_id': 'selfie-restroom-masturbation-fun-with-chubby-cutie-hd-porn-video',\n            'ext': 'mp4',\n            'title': 'Restroom selfie masturbation',\n            'description': 'md5:3748420395e03e31ac96857a8f125b2b',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n            'age_limit': 18,\n        }\n    }, {\n        \n        'url': 'http://www.pornhd.com/videos/1962/sierra-day-gets-his-cum-all-over-herself-hd-porn-video',\n        'md5': '956b8ca569f7f4d8ec563e2c41598441',\n        'info_dict': {\n            'id': '1962',\n            'display_id': 'sierra-day-gets-his-cum-all-over-herself-hd-porn-video',\n            'ext': 'mp4',\n            'title': 'Sierra loves doing laundry',\n            'description': 'md5:8ff0523848ac2b8f9b065ba781ccf294',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n            'age_limit': 18,\n        },\n        'skip': 'Not available anymore',\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id or video_id)\n\n        title = self._html_search_regex(\n            [r'<span[^>]+class=[\"\\']video-name[\"\\'][^>]*>([^<]+)',\n             r'<title>(.+?) - .*?[Pp]ornHD.*?</title>'], webpage, 'title')\n\n        sources = self._parse_json(js_to_json(self._search_regex(\n            r\"(?s)sources'?\\s*[:=]\\s*(\\{.+?\\})\",\n            webpage, 'sources', default='{}')), video_id)\n\n        if not sources:\n            message = self._html_search_regex(\n                r'(?s)<(div|p)[^>]+class=\"no-video\"[^>]*>(?P<value>.+?)</\\1',\n                webpage, 'error message', group='value')\n            raise ExtractorError('%s said: %s' % (self.IE_NAME, message), expected=True)\n\n        formats = []\n        for format_id, video_url in sources.items():\n            if not video_url:\n                continue\n            height = int_or_none(self._search_regex(\n                r'^(\\d+)[pP]', format_id, 'height', default=None))\n            formats.append({\n                'url': video_url,\n                'format_id': format_id,\n                'height': height,\n            })\n        self._sort_formats(formats)\n\n        description = self._html_search_regex(\n            r'<(div|p)[^>]+class=\"description\"[^>]*>(?P<value>[^<]+)</\\1',\n            webpage, 'description', fatal=False, group='value')\n        view_count = int_or_none(self._html_search_regex(\n            r'(\\d+) views\\s*<', webpage, 'view count', fatal=False))\n        thumbnail = self._search_regex(\n            r\"poster'?\\s*:\\s*([\\\"'])(?P<url>(?:(?!\\1).)+)\\1\", webpage,\n            'thumbnail', fatal=False, group='url')\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'view_count': view_count,\n            'formats': formats,\n            'age_limit': 18,\n        }\n", "comments": "# removed video\n", "content": "from __future__ import unicode_literals\n\nimport re\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    ExtractorError,\n    int_or_none,\n    js_to_json,\n)\n\n\nclass PornHdIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?pornhd\\.com/(?:[a-z]{2,4}/)?videos/(?P<id>\\d+)(?:/(?P<display_id>.+))?'\n    _TESTS = [{\n        'url': 'http://www.pornhd.com/videos/9864/selfie-restroom-masturbation-fun-with-chubby-cutie-hd-porn-video',\n        'md5': 'c8b964b1f0a4b5f7f28ae3a5c9f86ad5',\n        'info_dict': {\n            'id': '9864',\n            'display_id': 'selfie-restroom-masturbation-fun-with-chubby-cutie-hd-porn-video',\n            'ext': 'mp4',\n            'title': 'Restroom selfie masturbation',\n            'description': 'md5:3748420395e03e31ac96857a8f125b2b',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n            'age_limit': 18,\n        }\n    }, {\n        # removed video\n        'url': 'http://www.pornhd.com/videos/1962/sierra-day-gets-his-cum-all-over-herself-hd-porn-video',\n        'md5': '956b8ca569f7f4d8ec563e2c41598441',\n        'info_dict': {\n            'id': '1962',\n            'display_id': 'sierra-day-gets-his-cum-all-over-herself-hd-porn-video',\n            'ext': 'mp4',\n            'title': 'Sierra loves doing laundry',\n            'description': 'md5:8ff0523848ac2b8f9b065ba781ccf294',\n            'thumbnail': r're:^https?://.*\\.jpg',\n            'view_count': int,\n            'age_limit': 18,\n        },\n        'skip': 'Not available anymore',\n    }]\n\n    def _real_extract(self, url):\n        mobj = re.match(self._VALID_URL, url)\n        video_id = mobj.group('id')\n        display_id = mobj.group('display_id')\n\n        webpage = self._download_webpage(url, display_id or video_id)\n\n        title = self._html_search_regex(\n            [r'<span[^>]+class=[\"\\']video-name[\"\\'][^>]*>([^<]+)',\n             r'<title>(.+?) - .*?[Pp]ornHD.*?</title>'], webpage, 'title')\n\n        sources = self._parse_json(js_to_json(self._search_regex(\n            r\"(?s)sources'?\\s*[:=]\\s*(\\{.+?\\})\",\n            webpage, 'sources', default='{}')), video_id)\n\n        if not sources:\n            message = self._html_search_regex(\n                r'(?s)<(div|p)[^>]+class=\"no-video\"[^>]*>(?P<value>.+?)</\\1',\n                webpage, 'error message', group='value')\n            raise ExtractorError('%s said: %s' % (self.IE_NAME, message), expected=True)\n\n        formats = []\n        for format_id, video_url in sources.items():\n            if not video_url:\n                continue\n            height = int_or_none(self._search_regex(\n                r'^(\\d+)[pP]', format_id, 'height', default=None))\n            formats.append({\n                'url': video_url,\n                'format_id': format_id,\n                'height': height,\n            })\n        self._sort_formats(formats)\n\n        description = self._html_search_regex(\n            r'<(div|p)[^>]+class=\"description\"[^>]*>(?P<value>[^<]+)</\\1',\n            webpage, 'description', fatal=False, group='value')\n        view_count = int_or_none(self._html_search_regex(\n            r'(\\d+) views\\s*<', webpage, 'view count', fatal=False))\n        thumbnail = self._search_regex(\n            r\"poster'?\\s*:\\s*([\\\"'])(?P<url>(?:(?!\\1).)+)\\1\", webpage,\n            'thumbnail', fatal=False, group='url')\n\n        return {\n            'id': video_id,\n            'display_id': display_id,\n            'title': title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'view_count': view_count,\n            'formats': formats,\n            'age_limit': 18,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "pornhd.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/pornhd.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unified_strdate,\n)\n\n\nclass JpopsukiIE(InfoExtractor):\n    IE_NAME = 'jpopsuki.tv'\n    _VALID_URL = r'https?://(?:www\\.)?jpopsuki\\.tv/(?:category/)?video/[^/]+/(?P<id>\\S+)'\n\n    _TEST = {\n        'url': 'http://www.jpopsuki.tv/video/ayumi-hamasaki---evolution/00be659d23b0b40508169cdee4545771',\n        'md5': '88018c0c1a9b1387940e90ec9e7e198e',\n        'info_dict': {\n            'id': '00be659d23b0b40508169cdee4545771',\n            'ext': 'mp4',\n            'title': 'ayumi hamasaki - evolution',\n            'description': 'Release date: 2001.01.31\\r\\n\u6d5c\u5d0e\u3042\u3086\u307f - evolution',\n            'thumbnail': 'http://www.jpopsuki.tv/cache/89722c74d2a2ebe58bcac65321c115b2.jpg',\n            'uploader': 'plama_chan',\n            'uploader_id': '404',\n            'upload_date': '20121101'\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        video_url = 'http://www.jpopsuki.tv' + self._html_search_regex(\n            r'<source src=\"(.*?)\" type', webpage, 'video url')\n\n        video_title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n        uploader = self._html_search_regex(\n            r'<li>from: <a href=\"/user/view/user/(.*?)/uid/',\n            webpage, 'video uploader', fatal=False)\n        uploader_id = self._html_search_regex(\n            r'<li>from: <a href=\"/user/view/user/\\S*?/uid/(\\d*)',\n            webpage, 'video uploader_id', fatal=False)\n        upload_date = unified_strdate(self._html_search_regex(\n            r'<li>uploaded: (.*?)</li>', webpage, 'video upload_date',\n            fatal=False))\n        view_count_str = self._html_search_regex(\n            r'<li>Hits: ([0-9]+?)</li>', webpage, 'video view_count',\n            fatal=False)\n        comment_count_str = self._html_search_regex(\n            r'<h2>([0-9]+?) comments</h2>', webpage, 'video comment_count',\n            fatal=False)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': video_title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n            'upload_date': upload_date,\n            'view_count': int_or_none(view_count_str),\n            'comment_count': int_or_none(comment_count_str),\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nfrom .common import InfoExtractor\nfrom ..utils import (\n    int_or_none,\n    unified_strdate,\n)\n\n\nclass JpopsukiIE(InfoExtractor):\n    IE_NAME = 'jpopsuki.tv'\n    _VALID_URL = r'https?://(?:www\\.)?jpopsuki\\.tv/(?:category/)?video/[^/]+/(?P<id>\\S+)'\n\n    _TEST = {\n        'url': 'http://www.jpopsuki.tv/video/ayumi-hamasaki---evolution/00be659d23b0b40508169cdee4545771',\n        'md5': '88018c0c1a9b1387940e90ec9e7e198e',\n        'info_dict': {\n            'id': '00be659d23b0b40508169cdee4545771',\n            'ext': 'mp4',\n            'title': 'ayumi hamasaki - evolution',\n            'description': 'Release date: 2001.01.31\\r\\n\u6d5c\u5d0e\u3042\u3086\u307f - evolution',\n            'thumbnail': 'http://www.jpopsuki.tv/cache/89722c74d2a2ebe58bcac65321c115b2.jpg',\n            'uploader': 'plama_chan',\n            'uploader_id': '404',\n            'upload_date': '20121101'\n        }\n    }\n\n    def _real_extract(self, url):\n        video_id = self._match_id(url)\n\n        webpage = self._download_webpage(url, video_id)\n\n        video_url = 'http://www.jpopsuki.tv' + self._html_search_regex(\n            r'<source src=\"(.*?)\" type', webpage, 'video url')\n\n        video_title = self._og_search_title(webpage)\n        description = self._og_search_description(webpage)\n        thumbnail = self._og_search_thumbnail(webpage)\n        uploader = self._html_search_regex(\n            r'<li>from: <a href=\"/user/view/user/(.*?)/uid/',\n            webpage, 'video uploader', fatal=False)\n        uploader_id = self._html_search_regex(\n            r'<li>from: <a href=\"/user/view/user/\\S*?/uid/(\\d*)',\n            webpage, 'video uploader_id', fatal=False)\n        upload_date = unified_strdate(self._html_search_regex(\n            r'<li>uploaded: (.*?)</li>', webpage, 'video upload_date',\n            fatal=False))\n        view_count_str = self._html_search_regex(\n            r'<li>Hits: ([0-9]+?)</li>', webpage, 'video view_count',\n            fatal=False)\n        comment_count_str = self._html_search_regex(\n            r'<h2>([0-9]+?) comments</h2>', webpage, 'video comment_count',\n            fatal=False)\n\n        return {\n            'id': video_id,\n            'url': video_url,\n            'title': video_title,\n            'description': description,\n            'thumbnail': thumbnail,\n            'uploader': uploader,\n            'uploader_id': uploader_id,\n            'upload_date': upload_date,\n            'view_count': int_or_none(view_count_str),\n            'comment_count': int_or_none(comment_count_str),\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "jpopsukitv.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/jpopsukitv.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}
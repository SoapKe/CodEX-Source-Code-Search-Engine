{"author": "rg3", "code": "\nfrom __future__ import unicode_literals\n\nimport datetime\n\nfrom .common import InfoExtractor\n\n\nclass NerdCubedFeedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?nerdcubed\\.co\\.uk/feed\\.json'\n    _TEST = {\n        'url': 'http://www.nerdcubed.co.uk/feed.json',\n        'info_dict': {\n            'id': 'nerdcubed-feed',\n            'title': 'nerdcubed.co.uk feed',\n        },\n        'playlist_mincount': 1300,\n    }\n\n    def _real_extract(self, url):\n        feed = self._download_json(url, url, 'Downloading NerdCubed JSON feed')\n\n        entries = [{\n            '_type': 'url',\n            'title': feed_entry['title'],\n            'uploader': feed_entry['source']['name'] if feed_entry['source'] else None,\n            'upload_date': datetime.datetime.strptime(feed_entry['date'], '%Y-%m-%d').strftime('%Y%m%d'),\n            'url': 'http://www.youtube.com/watch?v=' + feed_entry['youtube_id'],\n        } for feed_entry in feed]\n\n        return {\n            '_type': 'playlist',\n            'title': 'nerdcubed.co.uk feed',\n            'id': 'nerdcubed-feed',\n            'entries': entries,\n        }\n", "comments": "# coding: utf-8\n", "content": "# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport datetime\n\nfrom .common import InfoExtractor\n\n\nclass NerdCubedFeedIE(InfoExtractor):\n    _VALID_URL = r'https?://(?:www\\.)?nerdcubed\\.co\\.uk/feed\\.json'\n    _TEST = {\n        'url': 'http://www.nerdcubed.co.uk/feed.json',\n        'info_dict': {\n            'id': 'nerdcubed-feed',\n            'title': 'nerdcubed.co.uk feed',\n        },\n        'playlist_mincount': 1300,\n    }\n\n    def _real_extract(self, url):\n        feed = self._download_json(url, url, 'Downloading NerdCubed JSON feed')\n\n        entries = [{\n            '_type': 'url',\n            'title': feed_entry['title'],\n            'uploader': feed_entry['source']['name'] if feed_entry['source'] else None,\n            'upload_date': datetime.datetime.strptime(feed_entry['date'], '%Y-%m-%d').strftime('%Y%m%d'),\n            'url': 'http://www.youtube.com/watch?v=' + feed_entry['youtube_id'],\n        } for feed_entry in feed]\n\n        return {\n            '_type': 'playlist',\n            'title': 'nerdcubed.co.uk feed',\n            'id': 'nerdcubed-feed',\n            'entries': entries,\n        }\n", "description": "Command-line program to download videos from YouTube.com and other video sites", "file_name": "nerdcubed.py", "language": "Python", "project_name": "youtube-dl", "quality": "", "save_path": "/home/ubuntu/test_files/clean/python/rg3_youtube-dl/rg3-youtube-dl-6202f08/youtube_dl/extractor/nerdcubed.py", "save_time": "", "source": "", "update_at": "2018-03-07T09:18:39Z", "url": "https://github.com/rg3/youtube-dl", "wiki": false}